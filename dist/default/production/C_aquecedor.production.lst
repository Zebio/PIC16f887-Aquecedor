

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Sat Dec 05 21:05:37 2020

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	16F877
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bitbssCOMMON,global,bit,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text10,local,class=CODE,merge=1,delta=2,group=3
    24                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2
    36                           	psect	intentry,global,class=CODE,delta=2
    37                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    38                           	dabs	1,0x7E,2
    39  0000                     
    40                           ; Version 2.20
    41                           ; Generated 12/02/2020 GMT
    42                           ; 
    43                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    44                           ; All rights reserved.
    45                           ; 
    46                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    47                           ; 
    48                           ; Redistribution and use in source and binary forms, with or without modification, are
    49                           ; permitted provided that the following conditions are met:
    50                           ; 
    51                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    52                           ;        conditions and the following disclaimer.
    53                           ; 
    54                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    55                           ;        of conditions and the following disclaimer in the documentation and/or other
    56                           ;        materials provided with the distribution.
    57                           ; 
    58                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    59                           ;        software without specific prior written permission.
    60                           ; 
    61                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    62                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    63                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    64                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    65                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    66                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    67                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    68                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    69                           ; 
    70                           ; 
    71                           ; Code-generator required, PIC16F877 Definitions
    72                           ; 
    73                           ; SFR Addresses
    74  0000                     	;# 
    75  0001                     	;# 
    76  0002                     	;# 
    77  0003                     	;# 
    78  0004                     	;# 
    79  0005                     	;# 
    80  0006                     	;# 
    81  0007                     	;# 
    82  0008                     	;# 
    83  0009                     	;# 
    84  000A                     	;# 
    85  000B                     	;# 
    86  000C                     	;# 
    87  000D                     	;# 
    88  000E                     	;# 
    89  000E                     	;# 
    90  000F                     	;# 
    91  0010                     	;# 
    92  0011                     	;# 
    93  0012                     	;# 
    94  0013                     	;# 
    95  0014                     	;# 
    96  0015                     	;# 
    97  0015                     	;# 
    98  0016                     	;# 
    99  0017                     	;# 
   100  0018                     	;# 
   101  0019                     	;# 
   102  001A                     	;# 
   103  001B                     	;# 
   104  001B                     	;# 
   105  001C                     	;# 
   106  001D                     	;# 
   107  001E                     	;# 
   108  001F                     	;# 
   109  0081                     	;# 
   110  0085                     	;# 
   111  0086                     	;# 
   112  0087                     	;# 
   113  0088                     	;# 
   114  0089                     	;# 
   115  008C                     	;# 
   116  008D                     	;# 
   117  008E                     	;# 
   118  0091                     	;# 
   119  0092                     	;# 
   120  0093                     	;# 
   121  0094                     	;# 
   122  0098                     	;# 
   123  0099                     	;# 
   124  009E                     	;# 
   125  009F                     	;# 
   126  010C                     	;# 
   127  010D                     	;# 
   128  010E                     	;# 
   129  010F                     	;# 
   130  018C                     	;# 
   131  018D                     	;# 
   132  0000                     	;# 
   133  0001                     	;# 
   134  0002                     	;# 
   135  0003                     	;# 
   136  0004                     	;# 
   137  0005                     	;# 
   138  0006                     	;# 
   139  0007                     	;# 
   140  0008                     	;# 
   141  0009                     	;# 
   142  000A                     	;# 
   143  000B                     	;# 
   144  000C                     	;# 
   145  000D                     	;# 
   146  000E                     	;# 
   147  000E                     	;# 
   148  000F                     	;# 
   149  0010                     	;# 
   150  0011                     	;# 
   151  0012                     	;# 
   152  0013                     	;# 
   153  0014                     	;# 
   154  0015                     	;# 
   155  0015                     	;# 
   156  0016                     	;# 
   157  0017                     	;# 
   158  0018                     	;# 
   159  0019                     	;# 
   160  001A                     	;# 
   161  001B                     	;# 
   162  001B                     	;# 
   163  001C                     	;# 
   164  001D                     	;# 
   165  001E                     	;# 
   166  001F                     	;# 
   167  0081                     	;# 
   168  0085                     	;# 
   169  0086                     	;# 
   170  0087                     	;# 
   171  0088                     	;# 
   172  0089                     	;# 
   173  008C                     	;# 
   174  008D                     	;# 
   175  008E                     	;# 
   176  0091                     	;# 
   177  0092                     	;# 
   178  0093                     	;# 
   179  0094                     	;# 
   180  0098                     	;# 
   181  0099                     	;# 
   182  009E                     	;# 
   183  009F                     	;# 
   184  010C                     	;# 
   185  010D                     	;# 
   186  010E                     	;# 
   187  010F                     	;# 
   188  018C                     	;# 
   189  018D                     	;# 
   190                           
   191                           	psect	strings
   192  0800                     __pstrings:
   193  0800                     stringtab:
   194  0800                     __stringtab:
   195  0800                     stringcode:	
   196                           ;	String table - string pointers are 1 byte each
   197                           
   198  0800                     stringdir:
   199  0800  3008               	movlw	high stringdir
   200  0801  008A               	movwf	10
   201  0802  0804               	movf	4,w
   202  0803  0A84               	incf	4,f
   203  0804  0782               	addwf	2,f
   204  0805                     __stringbase:
   205  0805  3400               	retlw	0
   206  0806                     __end_of__stringtab:
   207  0806                     _dpowers:
   208  0806  3401               	retlw	1
   209  0807  3400               	retlw	0
   210  0808  340A               	retlw	10
   211  0809  3400               	retlw	0
   212  080A  3464               	retlw	100
   213  080B  3400               	retlw	0
   214  080C  34E8               	retlw	232
   215  080D  3403               	retlw	3
   216  080E  3410               	retlw	16
   217  080F  3427               	retlw	39
   218  0810                     __end_of_dpowers:
   219  0007                     _PORTCbits	set	7
   220  001E                     _ADRESH	set	30
   221  001F                     _ADCON0	set	31
   222  000B                     _INTCON	set	11
   223  0001                     _TMR0	set	1
   224  000B                     _INTCONbits	set	11
   225  0006                     _PORTBbits	set	6
   226  001F                     _ADCON0bits	set	31
   227  0008                     _PORTDbits	set	8
   228  009F                     _ADCON1	set	159
   229  0089                     _TRISE	set	137
   230  0088                     _TRISD	set	136
   231  0087                     _TRISC	set	135
   232  0086                     _TRISB	set	134
   233  0085                     _TRISA	set	133
   234  0081                     _OPTION_REG	set	129
   235  0445                     _TRISD5	set	1093
   236  0444                     _TRISD4	set	1092
   237  0443                     _TRISD3	set	1091
   238  0442                     _TRISD2	set	1090
   239  0441                     _TRISD1	set	1089
   240  0440                     _TRISD0	set	1088
   241  0810                     STR_1:
   242  0810  3448               	retlw	72	;'H'
   243  0811  346F               	retlw	111	;'o'
   244  0812  342E               	retlw	46	;'.'
   245  0813  343A               	retlw	58	;':'
   246  0814  3420               	retlw	32	;' '
   247  0815  3425               	retlw	37	;'%'
   248  0816  3430               	retlw	48	;'0'
   249  0817  3432               	retlw	50	;'2'
   250  0818  3464               	retlw	100	;'d'
   251  0819  343A               	retlw	58	;':'
   252  081A  3425               	retlw	37	;'%'
   253  081B  3430               	retlw	48	;'0'
   254  081C  3432               	retlw	50	;'2'
   255  081D  3464               	retlw	100	;'d'
   256  081E  343A               	retlw	58	;':'
   257  081F  3425               	retlw	37	;'%'
   258  0820  3430               	retlw	48	;'0'
   259  0821  3432               	retlw	50	;'2'
   260  0822  3464               	retlw	100	;'d'
   261  0823  3420               	retlw	32	;' '
   262  0824  3420               	retlw	32	;' '
   263  0825  3420               	retlw	32	;' '
   264  0826  3400               	retlw	0
   265  0827                     STR_5:
   266  0827  3420               	retlw	32	;' '
   267  0828  3420               	retlw	32	;' '
   268  0829  3420               	retlw	32	;' '
   269  082A  3420               	retlw	32	;' '
   270  082B  3420               	retlw	32	;' '
   271  082C  3425               	retlw	37	;'%'
   272  082D  3430               	retlw	48	;'0'
   273  082E  3432               	retlw	50	;'2'
   274  082F  3464               	retlw	100	;'d'
   275  0830  343A               	retlw	58	;':'
   276  0831  3425               	retlw	37	;'%'
   277  0832  3430               	retlw	48	;'0'
   278  0833  3432               	retlw	50	;'2'
   279  0834  3464               	retlw	100	;'d'
   280  0835  3420               	retlw	32	;' '
   281  0836  3420               	retlw	32	;' '
   282  0837  3420               	retlw	32	;' '
   283  0838  3420               	retlw	32	;' '
   284  0839  3420               	retlw	32	;' '
   285  083A  3400               	retlw	0
   286  083B                     STR_3:
   287  083B  3454               	retlw	84	;'T'
   288  083C  3465               	retlw	101	;'e'
   289  083D  346D               	retlw	109	;'m'
   290  083E  3470               	retlw	112	;'p'
   291  083F  342E               	retlw	46	;'.'
   292  0840  3420               	retlw	32	;' '
   293  0841  3444               	retlw	68	;'D'
   294  0842  3465               	retlw	101	;'e'
   295  0843  3473               	retlw	115	;'s'
   296  0844  343A               	retlw	58	;':'
   297  0845  3420               	retlw	32	;' '
   298  0846  3425               	retlw	37	;'%'
   299  0847  3430               	retlw	48	;'0'
   300  0848  3432               	retlw	50	;'2'
   301  0849  3464               	retlw	100	;'d'
   302  084A  34DF               	retlw	-33
   303  084B  3463               	retlw	99	;'c'
   304  084C  3420               	retlw	32	;' '
   305  084D  3420               	retlw	32	;' '
   306  084E  3400               	retlw	0
   307  084F                     STR_4:
   308  084F  3448               	retlw	72	;'H'
   309  0850  346F               	retlw	111	;'o'
   310  0851  3472               	retlw	114	;'r'
   311  0852  3461               	retlw	97	;'a'
   312  0853  3472               	retlw	114	;'r'
   313  0854  3469               	retlw	105	;'i'
   314  0855  346F               	retlw	111	;'o'
   315  0856  3420               	retlw	32	;' '
   316  0857  3441               	retlw	65	;'A'
   317  0858  3474               	retlw	116	;'t'
   318  0859  3475               	retlw	117	;'u'
   319  085A  3461               	retlw	97	;'a'
   320  085B  346C               	retlw	108	;'l'
   321  085C  343A               	retlw	58	;':'
   322  085D  3400               	retlw	0
   323  085E                     STR_6:
   324  085E  3453               	retlw	83	;'S'
   325  085F  3474               	retlw	116	;'t'
   326  0860  3461               	retlw	97	;'a'
   327  0861  3472               	retlw	114	;'r'
   328  0862  3474               	retlw	116	;'t'
   329  0863  3420               	retlw	32	;' '
   330  0864  3474               	retlw	116	;'t'
   331  0865  3469               	retlw	105	;'i'
   332  0866  346D               	retlw	109	;'m'
   333  0867  3465               	retlw	101	;'e'
   334  0868  343A               	retlw	58	;':'
   335  0869  3400               	retlw	0
   336  086A                     STR_2:
   337  086A  3454               	retlw	84	;'T'
   338  086B  3465               	retlw	101	;'e'
   339  086C  342E               	retlw	46	;'.'
   340  086D  343A               	retlw	58	;':'
   341  086E  3420               	retlw	32	;' '
   342  086F  3425               	retlw	37	;'%'
   343  0870  3430               	retlw	48	;'0'
   344  0871  3432               	retlw	50	;'2'
   345  0872  3464               	retlw	100	;'d'
   346  0873  34DF               	retlw	-33
   347  0874  3463               	retlw	99	;'c'
   348  0875  3400               	retlw	0
   349  0876                     STR_8:
   350  0876  3453               	retlw	83	;'S'
   351  0877  3474               	retlw	116	;'t'
   352  0878  346F               	retlw	111	;'o'
   353  0879  3470               	retlw	112	;'p'
   354  087A  3420               	retlw	32	;' '
   355  087B  3474               	retlw	116	;'t'
   356  087C  3469               	retlw	105	;'i'
   357  087D  346D               	retlw	109	;'m'
   358  087E  3465               	retlw	101	;'e'
   359  087F  343A               	retlw	58	;':'
   360  0880  3400               	retlw	0
   361  0827                     
   362                           	psect	cinit
   363  0013                     start_initialization:	
   364                           ; #config settings
   365                           
   366  0013                     __initialization:
   367                           
   368                           ; Clear objects allocated to BITCOMMON
   369  0013  01FA               	clrf	(__pbitbssCOMMON/(0+8))& (0+127)
   370                           
   371                           ; Clear objects allocated to COMMON
   372  0014  01F8               	clrf	__pbssCOMMON& (0+127)
   373  0015  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   374                           
   375                           ; Clear objects allocated to BANK0
   376  0016  1383               	bcf	3,7	;select IRP bank0
   377  0017  305D               	movlw	low __pbssBANK0
   378  0018  0084               	movwf	4
   379  0019  3065               	movlw	low (__pbssBANK0+8)
   380  001A  120A  158A  21AD  120A  118A  	fcall	clear_ram0
   381                           
   382                           ; Clear objects allocated to BANK1
   383  001F  30A0               	movlw	low __pbssBANK1
   384  0020  0084               	movwf	4
   385  0021  30B0               	movlw	low (__pbssBANK1+16)
   386  0022  120A  158A  21AD  120A  118A  	fcall	clear_ram0
   387  0027                     end_of_initialization:	
   388                           ;End of C runtime variable initialization code
   389                           
   390  0027                     __end_of__initialization:
   391  0027  0183               	clrf	3
   392  0028  120A  158A  2E1C   	ljmp	_main	;jump to C main() function
   393                           
   394                           	psect	bitbssCOMMON
   395  03D0                     __pbitbssCOMMON:
   396  03D0                     _RS:
   397  03D0                     	ds	1
   398                           
   399                           	psect	bssCOMMON
   400  0078                     __pbssCOMMON:
   401  0078                     _TMR0_aux:
   402  0078                     	ds	2
   403                           
   404                           	psect	bssBANK0
   405  005D                     __pbssBANK0:
   406  005D                     _Temperatura:
   407  005D                     	ds	2
   408  005F                     _Horas:
   409  005F                     	ds	2
   410  0061                     _Minutos:
   411  0061                     	ds	2
   412  0063                     _Segundos:
   413  0063                     	ds	2
   414                           
   415                           	psect	bssBANK1
   416  00A0                     __pbssBANK1:
   417  00A0                     _LCD_Cstring:
   418  00A0                     	ds	16
   419                           
   420                           	psect	clrtext
   421  09AD                     clear_ram0:	
   422                           ;	Called with FSR containing the base address, and
   423                           ;	W with the last address+1
   424                           
   425  09AD  0064               	clrwdt	;clear the watchdog before getting into this loop
   426  09AE                     clrloop0:
   427  09AE  0180               	clrf	0	;clear RAM location pointed to by FSR
   428  09AF  0A84               	incf	4,f	;increment pointer
   429  09B0  0604               	xorwf	4,w	;XOR with final address
   430  09B1  1903               	btfsc	3,2	;have we reached the end yet?
   431  09B2  3400               	retlw	0	;all done for this memory range, return
   432  09B3  0604               	xorwf	4,w	;XOR again to restore value
   433  09B4  29AE               	goto	clrloop0	;do the next byte
   434                           
   435                           	psect	cstackCOMMON
   436  0070                     __pcstackCOMMON:
   437  0070                     ?_isdigit:
   438  0070                     ?_LCD_Write_Nibble:	
   439                           ; 1 bit 
   440                           
   441  0070                     ?_LCD_Cmd:	
   442                           ; 1 bytes @ 0x0
   443                           
   444  0070                     ?_LCD_Print:	
   445                           ; 1 bytes @ 0x0
   446                           
   447  0070                     ?_LCD_Begin:	
   448                           ; 1 bytes @ 0x0
   449                           
   450  0070                     ?_atualiza_ADC:	
   451                           ; 1 bytes @ 0x0
   452                           
   453  0070                     ?_imprime_tela_main:	
   454                           ; 1 bytes @ 0x0
   455                           
   456  0070                     ?_imprime_tela_ajuste2:	
   457                           ; 1 bytes @ 0x0
   458                           
   459  0070                     ?_my_isr_routine:	
   460                           ; 1 bytes @ 0x0
   461                           
   462  0070                     ??_my_isr_routine:	
   463                           ; 1 bytes @ 0x0
   464                           
   465  0070                     ?_main:	
   466                           ; 1 bytes @ 0x0
   467                           
   468                           
   469                           ; 1 bytes @ 0x0
   470  0070                     	ds	3
   471  0073                     ??_isdigit:
   472  0073                     ??_LCD_Write_Nibble:	
   473                           ; 1 bytes @ 0x3
   474                           
   475  0073                     ??_atualiza_ADC:	
   476                           ; 1 bytes @ 0x3
   477                           
   478  0073                     ??_controle_aquecedor:	
   479                           ; 1 bytes @ 0x3
   480                           
   481  0073                     ?___wmul:	
   482                           ; 1 bytes @ 0x3
   483                           
   484  0073                     ?___lwdiv:	
   485                           ; 2 bytes @ 0x3
   486                           
   487  0073                     ?___xxtofl:	
   488                           ; 2 bytes @ 0x3
   489                           
   490  0073                     _isdigit$762:	
   491                           ; 4 bytes @ 0x3
   492                           
   493  0073                     ___wmul@multiplier:	
   494                           ; 1 bytes @ 0x3
   495                           
   496  0073                     ___lwdiv@divisor:	
   497                           ; 2 bytes @ 0x3
   498                           
   499  0073                     ___xxtofl@val:	
   500                           ; 2 bytes @ 0x3
   501                           
   502                           
   503                           ; 4 bytes @ 0x3
   504  0073                     	ds	1
   505  0074                     isdigit@c:
   506                           
   507                           ; 1 bytes @ 0x4
   508  0074                     	ds	1
   509  0075                     LCD_Write_Nibble@n:
   510  0075                     ___wmul@multiplicand:	
   511                           ; 1 bytes @ 0x5
   512                           
   513  0075                     ___lwdiv@dividend:	
   514                           ; 2 bytes @ 0x5
   515                           
   516                           
   517                           ; 2 bytes @ 0x5
   518  0075                     	ds	1
   519  0076                     ??_LCD_Cmd:
   520  0076                     ??_LCD_Print:	
   521                           ; 1 bytes @ 0x6
   522                           
   523                           
   524                           ; 1 bytes @ 0x6
   525  0076                     	ds	1
   526  0077                     ??___wmul:
   527  0077                     ??___lwdiv:	
   528                           ; 1 bytes @ 0x7
   529                           
   530                           
   531                           ; 1 bytes @ 0x7
   532  0077                     	ds	1
   533                           
   534                           	psect	cstackBANK0
   535  0020                     __pcstackBANK0:
   536  0020                     ??___xxtofl:
   537  0020                     ?_controle_aquecedor:	
   538                           ; 1 bytes @ 0x0
   539                           
   540  0020                     LCD_Cmd@Command:	
   541                           ; 2 bytes @ 0x0
   542                           
   543  0020                     LCD_Print@i:	
   544                           ; 1 bytes @ 0x0
   545                           
   546  0020                     ___lwdiv@counter:	
   547                           ; 1 bytes @ 0x0
   548                           
   549  0020                     controle_aquecedor@temp:	
   550                           ; 1 bytes @ 0x0
   551                           
   552  0020                     ___wmul@product:	
   553                           ; 2 bytes @ 0x0
   554                           
   555                           
   556                           ; 2 bytes @ 0x0
   557  0020                     	ds	1
   558  0021                     ?_LCD_Goto:
   559  0021                     ??_LCD_Begin:	
   560                           ; 1 bytes @ 0x1
   561                           
   562  0021                     LCD_Goto@row:	
   563                           ; 1 bytes @ 0x1
   564                           
   565  0021                     LCD_Print@LCD_Str:	
   566                           ; 1 bytes @ 0x1
   567                           
   568  0021                     ___lwdiv@quotient:	
   569                           ; 1 bytes @ 0x1
   570                           
   571                           
   572                           ; 2 bytes @ 0x1
   573  0021                     	ds	1
   574  0022                     ??_LCD_Goto:
   575  0022                     controle_aquecedor@hora_min:	
   576                           ; 1 bytes @ 0x2
   577                           
   578                           
   579                           ; 2 bytes @ 0x2
   580  0022                     	ds	1
   581  0023                     ?___lwmod:
   582  0023                     ___lwmod@divisor:	
   583                           ; 2 bytes @ 0x3
   584                           
   585                           
   586                           ; 2 bytes @ 0x3
   587  0023                     	ds	1
   588  0024                     LCD_Goto@col:
   589  0024                     ___xxtofl@sign:	
   590                           ; 1 bytes @ 0x4
   591                           
   592  0024                     controle_aquecedor@min_min:	
   593                           ; 1 bytes @ 0x4
   594                           
   595                           
   596                           ; 2 bytes @ 0x4
   597  0024                     	ds	1
   598  0025                     ___xxtofl@exp:
   599  0025                     ___lwmod@dividend:	
   600                           ; 1 bytes @ 0x5
   601                           
   602                           
   603                           ; 2 bytes @ 0x5
   604  0025                     	ds	1
   605  0026                     controle_aquecedor@hora_max:
   606  0026                     ___xxtofl@arg:	
   607                           ; 2 bytes @ 0x6
   608                           
   609                           
   610                           ; 4 bytes @ 0x6
   611  0026                     	ds	1
   612  0027                     ??___lwmod:
   613                           
   614                           ; 1 bytes @ 0x7
   615  0027                     	ds	1
   616  0028                     ___lwmod@counter:
   617  0028                     controle_aquecedor@min_max:	
   618                           ; 1 bytes @ 0x8
   619                           
   620                           
   621                           ; 2 bytes @ 0x8
   622  0028                     	ds	1
   623  0029                     ?_sprintf:
   624  0029                     sprintf@f:	
   625                           ; 2 bytes @ 0x9
   626                           
   627                           
   628                           ; 1 bytes @ 0x9
   629  0029                     	ds	1
   630  002A                     ?___fldiv:
   631  002A                     ___fldiv@a:	
   632                           ; 4 bytes @ 0xA
   633                           
   634                           
   635                           ; 4 bytes @ 0xA
   636  002A                     	ds	4
   637  002E                     ___fldiv@b:
   638                           
   639                           ; 4 bytes @ 0xE
   640  002E                     	ds	2
   641  0030                     ??_sprintf:
   642                           
   643                           ; 1 bytes @ 0x10
   644  0030                     	ds	2
   645  0032                     ??___fldiv:
   646                           
   647                           ; 1 bytes @ 0x12
   648  0032                     	ds	1
   649  0033                     sprintf@ap:
   650                           
   651                           ; 1 bytes @ 0x13
   652  0033                     	ds	1
   653  0034                     sprintf@prec:
   654                           
   655                           ; 1 bytes @ 0x14
   656  0034                     	ds	1
   657  0035                     sprintf@val:
   658                           
   659                           ; 2 bytes @ 0x15
   660  0035                     	ds	2
   661  0037                     sprintf@flag:
   662  0037                     ___fldiv@rem:	
   663                           ; 1 bytes @ 0x17
   664                           
   665                           
   666                           ; 4 bytes @ 0x17
   667  0037                     	ds	1
   668  0038                     sprintf@width:
   669                           
   670                           ; 2 bytes @ 0x18
   671  0038                     	ds	2
   672  003A                     sprintf@c:
   673                           
   674                           ; 1 bytes @ 0x1A
   675  003A                     	ds	1
   676  003B                     sprintf@sp:
   677  003B                     ___fldiv@sign:	
   678                           ; 1 bytes @ 0x1B
   679                           
   680                           
   681                           ; 1 bytes @ 0x1B
   682  003B                     	ds	1
   683  003C                     ??_imprime_tela_main:
   684  003C                     ?_imprime_tela_ajuste1:	
   685                           ; 1 bytes @ 0x1C
   686                           
   687  003C                     ??_imprime_tela_ajuste2:	
   688                           ; 1 bytes @ 0x1C
   689                           
   690  003C                     ?_imprime_tela_ajuste3:	
   691                           ; 1 bytes @ 0x1C
   692                           
   693  003C                     ?_imprime_tela_ajuste4:	
   694                           ; 1 bytes @ 0x1C
   695                           
   696  003C                     imprime_tela_ajuste1@temp:	
   697                           ; 1 bytes @ 0x1C
   698                           
   699  003C                     imprime_tela_ajuste3@horas_min:	
   700                           ; 2 bytes @ 0x1C
   701                           
   702  003C                     imprime_tela_ajuste4@horas_max:	
   703                           ; 2 bytes @ 0x1C
   704                           
   705  003C                     ___fldiv@new_exp:	
   706                           ; 2 bytes @ 0x1C
   707                           
   708                           
   709                           ; 2 bytes @ 0x1C
   710  003C                     	ds	2
   711  003E                     ??_imprime_tela_ajuste1:
   712  003E                     imprime_tela_ajuste3@minutos_min:	
   713                           ; 1 bytes @ 0x1E
   714                           
   715  003E                     imprime_tela_ajuste4@minutos_max:	
   716                           ; 2 bytes @ 0x1E
   717                           
   718  003E                     ___fldiv@grs:	
   719                           ; 2 bytes @ 0x1E
   720                           
   721                           
   722                           ; 4 bytes @ 0x1E
   723  003E                     	ds	2
   724  0040                     ??_imprime_tela_ajuste3:
   725  0040                     ??_imprime_tela_ajuste4:	
   726                           ; 1 bytes @ 0x20
   727                           
   728                           
   729                           ; 1 bytes @ 0x20
   730  0040                     	ds	1
   731  0041                     ?_ajustes:
   732  0041                     ajustes@hora_min:	
   733                           ; 1 bytes @ 0x21
   734                           
   735                           
   736                           ; 1 bytes @ 0x21
   737  0041                     	ds	1
   738  0042                     ajustes@min_min:
   739  0042                     ___fldiv@bexp:	
   740                           ; 1 bytes @ 0x22
   741                           
   742                           
   743                           ; 1 bytes @ 0x22
   744  0042                     	ds	1
   745  0043                     ajustes@hora_max:
   746  0043                     ___fldiv@aexp:	
   747                           ; 1 bytes @ 0x23
   748                           
   749                           
   750                           ; 1 bytes @ 0x23
   751  0043                     	ds	1
   752  0044                     ?___fltol:
   753  0044                     ajustes@min_max:	
   754                           ; 4 bytes @ 0x24
   755                           
   756  0044                     ___fltol@f1:	
   757                           ; 1 bytes @ 0x24
   758                           
   759                           
   760                           ; 4 bytes @ 0x24
   761  0044                     	ds	1
   762  0045                     ??_ajustes:
   763                           
   764                           ; 1 bytes @ 0x25
   765  0045                     	ds	3
   766  0048                     ??___fltol:
   767                           
   768                           ; 1 bytes @ 0x28
   769  0048                     	ds	1
   770  0049                     ajustes@temp:
   771                           
   772                           ; 1 bytes @ 0x29
   773  0049                     	ds	4
   774  004D                     ___fltol@sign1:
   775                           
   776                           ; 1 bytes @ 0x2D
   777  004D                     	ds	1
   778  004E                     ___fltol@exp1:
   779                           
   780                           ; 1 bytes @ 0x2E
   781  004E                     	ds	1
   782  004F                     ??_main:
   783                           
   784                           ; 1 bytes @ 0x2F
   785  004F                     	ds	4
   786  0053                     main@hora_min:
   787                           
   788                           ; 2 bytes @ 0x33
   789  0053                     	ds	2
   790  0055                     main@min_min:
   791                           
   792                           ; 2 bytes @ 0x35
   793  0055                     	ds	2
   794  0057                     main@hora_max:
   795                           
   796                           ; 2 bytes @ 0x37
   797  0057                     	ds	2
   798  0059                     main@min_max:
   799                           
   800                           ; 2 bytes @ 0x39
   801  0059                     	ds	2
   802  005B                     main@temp:
   803                           
   804                           ; 2 bytes @ 0x3B
   805  005B                     	ds	2
   806                           
   807                           	psect	maintext
   808  0E1C                     __pmaintext:	
   809 ;;
   810 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   811 ;;
   812 ;; *************** function _main *****************
   813 ;; Defined at:
   814 ;;		line 338 in file "main.c"
   815 ;; Parameters:    Size  Location     Type
   816 ;;		None
   817 ;; Auto vars:     Size  Location     Type
   818 ;;  temp            2   59[BANK0 ] int 
   819 ;;  min_max         2   57[BANK0 ] int 
   820 ;;  hora_max        2   55[BANK0 ] int 
   821 ;;  min_min         2   53[BANK0 ] int 
   822 ;;  hora_min        2   51[BANK0 ] int 
   823 ;; Return value:  Size  Location     Type
   824 ;;                  1    wreg      void 
   825 ;; Registers used:
   826 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   827 ;; Tracked objects:
   828 ;;		On entry : B00/0
   829 ;;		On exit  : 0/0
   830 ;;		Unchanged: 0/0
   831 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   832 ;;      Params:         0       0       0       0       0
   833 ;;      Locals:         0      10       0       0       0
   834 ;;      Temps:          0       4       0       0       0
   835 ;;      Totals:         0      14       0       0       0
   836 ;;Total ram usage:       14 bytes
   837 ;; Hardware stack levels required when called:    6
   838 ;; This function calls:
   839 ;;		_LCD_Begin
   840 ;;		___fldiv
   841 ;;		___fltol
   842 ;;		___xxtofl
   843 ;;		_ajustes
   844 ;;		_atualiza_ADC
   845 ;;		_controle_aquecedor
   846 ;;		_imprime_tela_main
   847 ;; This function is called by:
   848 ;;		Startup code after reset
   849 ;; This function uses a non-reentrant model
   850 ;;
   851                           
   852                           
   853                           ;psect for function _main
   854  0E1C                     _main:
   855  0E1C                     l3180:	
   856                           ;incstack = 0
   857                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   858                           
   859                           
   860                           ;main.c: 340:     OPTION_REG =0b01010101;
   861  0E1C  3055               	movlw	85
   862  0E1D  1683               	bsf	3,5	;RP0=1, select bank1
   863  0E1E  1303               	bcf	3,6	;RP1=0, select bank1
   864  0E1F  0081               	movwf	1	;volatile
   865                           
   866                           ;main.c: 341:     INTCON =0b10100000;
   867  0E20  30A0               	movlw	160
   868  0E21  008B               	movwf	11	;volatile
   869                           
   870                           ;main.c: 342:     TRISA =0b00000001;
   871  0E22  3001               	movlw	1
   872  0E23  0085               	movwf	5	;volatile
   873                           
   874                           ;main.c: 343:     TRISB =0b00110011;
   875  0E24  3033               	movlw	51
   876  0E25  0086               	movwf	6	;volatile
   877  0E26                     l3182:
   878                           
   879                           ;main.c: 344:     TRISC =0b00000000;
   880  0E26  0187               	clrf	7	;volatile
   881  0E27                     l3184:
   882                           
   883                           ;main.c: 345:     TRISD =0b00000000;
   884  0E27  0188               	clrf	8	;volatile
   885  0E28                     l3186:
   886                           
   887                           ;main.c: 346:     TRISE =0b00000000;
   888  0E28  0189               	clrf	9	;volatile
   889  0E29                     l3188:
   890                           
   891                           ;main.c: 347:     ADCON0 =0b00000001;
   892  0E29  3001               	movlw	1
   893  0E2A  1283               	bcf	3,5	;RP0=0, select bank0
   894  0E2B  1303               	bcf	3,6	;RP1=0, select bank0
   895  0E2C  009F               	movwf	31	;volatile
   896  0E2D                     l3190:
   897                           
   898                           ;main.c: 348:     ADCON1 =0b00001110;
   899  0E2D  300E               	movlw	14
   900  0E2E  1683               	bsf	3,5	;RP0=1, select bank1
   901  0E2F  1303               	bcf	3,6	;RP1=0, select bank1
   902  0E30  009F               	movwf	31	;volatile
   903  0E31                     l3192:
   904                           
   905                           ;main.c: 350:     LCD_Begin();
   906  0E31  120A  158A  2578  120A  158A  	fcall	_LCD_Begin
   907  0E36                     l3194:
   908                           
   909                           ;main.c: 352:     int temp =0;
   910  0E36  1283               	bcf	3,5	;RP0=0, select bank0
   911  0E37  1303               	bcf	3,6	;RP1=0, select bank0
   912  0E38  01DB               	clrf	main@temp
   913  0E39  01DC               	clrf	main@temp+1
   914  0E3A                     l3196:
   915                           
   916                           ;main.c: 353:     int hora_min =0;
   917  0E3A  01D3               	clrf	main@hora_min
   918  0E3B  01D4               	clrf	main@hora_min+1
   919  0E3C                     l3198:
   920                           
   921                           ;main.c: 354:     int min_min =0;
   922  0E3C  01D5               	clrf	main@min_min
   923  0E3D  01D6               	clrf	main@min_min+1
   924  0E3E                     l3200:
   925                           
   926                           ;main.c: 355:     int hora_max =0;
   927  0E3E  01D7               	clrf	main@hora_max
   928  0E3F  01D8               	clrf	main@hora_max+1
   929  0E40                     l3202:
   930                           
   931                           ;main.c: 356:     int min_max =0;
   932  0E40  01D9               	clrf	main@min_max
   933  0E41  01DA               	clrf	main@min_max+1
   934  0E42                     l3204:
   935                           
   936                           ;main.c: 358:     {;main.c: 359:         atualiza_ADC();
   937  0E42  120A  158A  21B5  120A  158A  	fcall	_atualiza_ADC
   938  0E47                     l3206:
   939                           
   940                           ;main.c: 360:         Temperatura=(int)ADRESH/2.56;
   941  0E47  1283               	bcf	3,5	;RP0=0, select bank0
   942  0E48  1303               	bcf	3,6	;RP1=0, select bank0
   943  0E49  081E               	movf	30,w	;volatile
   944  0E4A  00CF               	movwf	??_main
   945  0E4B  01D0               	clrf	??_main+1
   946  0E4C  01D1               	clrf	??_main+2
   947  0E4D  01D2               	clrf	??_main+3
   948  0E4E  0852               	movf	??_main+3,w
   949  0E4F  00F6               	movwf	___xxtofl@val+3
   950  0E50  0851               	movf	??_main+2,w
   951  0E51  00F5               	movwf	___xxtofl@val+2
   952  0E52  0850               	movf	??_main+1,w
   953  0E53  00F4               	movwf	___xxtofl@val+1
   954  0E54  084F               	movf	??_main,w
   955  0E55  00F3               	movwf	___xxtofl@val
   956  0E56  3001               	movlw	1
   957  0E57  120A  118A  2721  120A  158A  	fcall	___xxtofl
   958  0E5C  0876               	movf	?___xxtofl+3,w
   959  0E5D  1283               	bcf	3,5	;RP0=0, select bank0
   960  0E5E  1303               	bcf	3,6	;RP1=0, select bank0
   961  0E5F  00B1               	movwf	___fldiv@b+3
   962  0E60  0875               	movf	?___xxtofl+2,w
   963  0E61  00B0               	movwf	___fldiv@b+2
   964  0E62  0874               	movf	?___xxtofl+1,w
   965  0E63  00AF               	movwf	___fldiv@b+1
   966  0E64  0873               	movf	?___xxtofl,w
   967  0E65  00AE               	movwf	___fldiv@b
   968  0E66  3040               	movlw	64
   969  0E67  00AD               	movwf	___fldiv@a+3
   970  0E68  3023               	movlw	35
   971  0E69  00AC               	movwf	___fldiv@a+2
   972  0E6A  30D7               	movlw	215
   973  0E6B  00AB               	movwf	___fldiv@a+1
   974  0E6C  300A               	movlw	10
   975  0E6D  00AA               	movwf	___fldiv@a
   976  0E6E  120A  118A  2370  120A  158A  	fcall	___fldiv
   977  0E73  1283               	bcf	3,5	;RP0=0, select bank0
   978  0E74  1303               	bcf	3,6	;RP1=0, select bank0
   979  0E75  082D               	movf	?___fldiv+3,w
   980  0E76  00C7               	movwf	___fltol@f1+3
   981  0E77  082C               	movf	?___fldiv+2,w
   982  0E78  00C6               	movwf	___fltol@f1+2
   983  0E79  082B               	movf	?___fldiv+1,w
   984  0E7A  00C5               	movwf	___fltol@f1+1
   985  0E7B  082A               	movf	?___fldiv,w
   986  0E7C  00C4               	movwf	___fltol@f1
   987  0E7D  120A  158A  24FC  120A  158A  	fcall	___fltol
   988  0E82  1283               	bcf	3,5	;RP0=0, select bank0
   989  0E83  1303               	bcf	3,6	;RP1=0, select bank0
   990  0E84  0845               	movf	?___fltol+1,w
   991  0E85  00DE               	movwf	_Temperatura+1
   992  0E86  0844               	movf	?___fltol,w
   993  0E87  00DD               	movwf	_Temperatura
   994  0E88                     l3208:
   995                           
   996                           ;main.c: 361:         imprime_tela_main();
   997  0E88  120A  158A  23EE  120A  158A  	fcall	_imprime_tela_main
   998  0E8D                     l3210:
   999                           
  1000                           ;main.c: 362:         if(PORTBbits.RB0==0)
  1001  0E8D  1283               	bcf	3,5	;RP0=0, select bank0
  1002  0E8E  1303               	bcf	3,6	;RP1=0, select bank0
  1003  0E8F  1806               	btfsc	6,0	;volatile
  1004  0E90  2E92               	goto	u3711
  1005  0E91  2E93               	goto	u3710
  1006  0E92                     u3711:
  1007  0E92  2EA9               	goto	l3214
  1008  0E93                     u3710:
  1009  0E93                     l3212:
  1010                           
  1011                           ;main.c: 363:             ajustes(&temp,&hora_min,&min_min,&hora_max,&min_max);
  1012  0E93  3053               	movlw	(low (main@hora_min| 0))& (0+255)
  1013  0E94  00CF               	movwf	??_main
  1014  0E95  084F               	movf	??_main,w
  1015  0E96  00C1               	movwf	ajustes@hora_min
  1016  0E97  3055               	movlw	(low (main@min_min| 0))& (0+255)
  1017  0E98  00D0               	movwf	??_main+1
  1018  0E99  0850               	movf	??_main+1,w
  1019  0E9A  00C2               	movwf	ajustes@min_min
  1020  0E9B  3057               	movlw	(low (main@hora_max| 0))& (0+255)
  1021  0E9C  00D1               	movwf	??_main+2
  1022  0E9D  0851               	movf	??_main+2,w
  1023  0E9E  00C3               	movwf	ajustes@hora_max
  1024  0E9F  3059               	movlw	(low (main@min_max| 0))& (0+255)
  1025  0EA0  00D2               	movwf	??_main+3
  1026  0EA1  0852               	movf	??_main+3,w
  1027  0EA2  00C4               	movwf	ajustes@min_max
  1028  0EA3  305B               	movlw	(low (main@temp| 0))& (0+255)
  1029  0EA4  120A  118A  202B  120A  158A  	fcall	_ajustes
  1030  0EA9                     l3214:
  1031                           
  1032                           ;main.c: 365:         if(PORTBbits.RB4==0&&PORTBbits.RB5==0)
  1033  0EA9  1283               	bcf	3,5	;RP0=0, select bank0
  1034  0EAA  1303               	bcf	3,6	;RP1=0, select bank0
  1035  0EAB  1A06               	btfsc	6,4	;volatile
  1036  0EAC  2EAE               	goto	u3721
  1037  0EAD  2EAF               	goto	u3720
  1038  0EAE                     u3721:
  1039  0EAE  2F07               	goto	l200
  1040  0EAF                     u3720:
  1041  0EAF                     l3216:
  1042  0EAF  1A86               	btfsc	6,5	;volatile
  1043  0EB0  2EB2               	goto	u3731
  1044  0EB1  2EB3               	goto	u3730
  1045  0EB2                     u3731:
  1046  0EB2  2F07               	goto	l200
  1047  0EB3                     u3730:
  1048  0EB3                     l3218:
  1049                           
  1050                           ;main.c: 366:         {;main.c: 367:             if (Temperatura<(temp-5))
  1051  0EB3  085B               	movf	main@temp,w
  1052  0EB4  3EFB               	addlw	251
  1053  0EB5  00CF               	movwf	??_main
  1054  0EB6  085C               	movf	main@temp+1,w
  1055  0EB7  1803               	skipnc
  1056  0EB8  3E01               	addlw	1
  1057  0EB9  3EFF               	addlw	255
  1058  0EBA  00D0               	movwf	??_main+1
  1059  0EBB  085E               	movf	_Temperatura+1,w
  1060  0EBC  3A80               	xorlw	128
  1061  0EBD  00D1               	movwf	??_main+2
  1062  0EBE  0850               	movf	??_main+1,w
  1063  0EBF  3A80               	xorlw	128
  1064  0EC0  0251               	subwf	??_main+2,w
  1065  0EC1  1D03               	skipz
  1066  0EC2  2EC5               	goto	u3745
  1067  0EC3  084F               	movf	??_main,w
  1068  0EC4  025D               	subwf	_Temperatura,w
  1069  0EC5                     u3745:
  1070  0EC5  1803               	skipnc
  1071  0EC6  2EC8               	goto	u3741
  1072  0EC7  2EC9               	goto	u3740
  1073  0EC8                     u3741:
  1074  0EC8  2EEB               	goto	l3222
  1075  0EC9                     u3740:
  1076  0EC9                     l3220:
  1077                           
  1078                           ;main.c: 368:                 PORTCbits.RC0 = controle_aquecedor(temp,hora_min,min_min,h
      +                          ora_max,min_max);
  1079  0EC9  1283               	bcf	3,5	;RP0=0, select bank0
  1080  0ECA  1303               	bcf	3,6	;RP1=0, select bank0
  1081  0ECB  085C               	movf	main@temp+1,w
  1082  0ECC  00A1               	movwf	controle_aquecedor@temp+1
  1083  0ECD  085B               	movf	main@temp,w
  1084  0ECE  00A0               	movwf	controle_aquecedor@temp
  1085  0ECF  0854               	movf	main@hora_min+1,w
  1086  0ED0  00A3               	movwf	controle_aquecedor@hora_min+1
  1087  0ED1  0853               	movf	main@hora_min,w
  1088  0ED2  00A2               	movwf	controle_aquecedor@hora_min
  1089  0ED3  0856               	movf	main@min_min+1,w
  1090  0ED4  00A5               	movwf	controle_aquecedor@min_min+1
  1091  0ED5  0855               	movf	main@min_min,w
  1092  0ED6  00A4               	movwf	controle_aquecedor@min_min
  1093  0ED7  0858               	movf	main@hora_max+1,w
  1094  0ED8  00A7               	movwf	controle_aquecedor@hora_max+1
  1095  0ED9  0857               	movf	main@hora_max,w
  1096  0EDA  00A6               	movwf	controle_aquecedor@hora_max
  1097  0EDB  085A               	movf	main@min_max+1,w
  1098  0EDC  00A9               	movwf	controle_aquecedor@min_max+1
  1099  0EDD  0859               	movf	main@min_max,w
  1100  0EDE  00A8               	movwf	controle_aquecedor@min_max
  1101  0EDF  120A  158A  270C  120A  158A  	fcall	_controle_aquecedor
  1102  0EE4  1283               	bcf	3,5	;RP0=0, select bank0
  1103  0EE5  1303               	bcf	3,6	;RP1=0, select bank0
  1104  0EE6  0807               	movf	7,w	;volatile
  1105  0EE7  0620               	xorwf	?_controle_aquecedor,w
  1106  0EE8  39FE               	andlw	-2
  1107  0EE9  0620               	xorwf	?_controle_aquecedor,w
  1108  0EEA  0087               	movwf	7	;volatile
  1109  0EEB                     l3222:
  1110                           
  1111                           ;main.c: 369:             if (Temperatura>(temp+5))
  1112  0EEB  1283               	bcf	3,5	;RP0=0, select bank0
  1113  0EEC  1303               	bcf	3,6	;RP1=0, select bank0
  1114  0EED  085B               	movf	main@temp,w
  1115  0EEE  3E05               	addlw	5
  1116  0EEF  00CF               	movwf	??_main
  1117  0EF0  085C               	movf	main@temp+1,w
  1118  0EF1  1803               	skipnc
  1119  0EF2  3E01               	addlw	1
  1120  0EF3  3E00               	addlw	0
  1121  0EF4  00D0               	movwf	??_main+1
  1122  0EF5  0850               	movf	??_main+1,w
  1123  0EF6  3A80               	xorlw	128
  1124  0EF7  00D1               	movwf	??_main+2
  1125  0EF8  085E               	movf	_Temperatura+1,w
  1126  0EF9  3A80               	xorlw	128
  1127  0EFA  0251               	subwf	??_main+2,w
  1128  0EFB  1D03               	skipz
  1129  0EFC  2EFF               	goto	u3755
  1130  0EFD  085D               	movf	_Temperatura,w
  1131  0EFE  024F               	subwf	??_main,w
  1132  0EFF                     u3755:
  1133  0EFF  1803               	skipnc
  1134  0F00  2F02               	goto	u3751
  1135  0F01  2F03               	goto	u3750
  1136  0F02                     u3751:
  1137  0F02  2E42               	goto	l3204
  1138  0F03                     u3750:
  1139  0F03                     l3224:
  1140                           
  1141                           ;main.c: 370:                 PORTCbits.RC0 = 0;
  1142  0F03  1283               	bcf	3,5	;RP0=0, select bank0
  1143  0F04  1303               	bcf	3,6	;RP1=0, select bank0
  1144  0F05  1007               	bcf	7,0	;volatile
  1145  0F06  2E42               	goto	l3204
  1146  0F07                     l200:	
  1147                           ;main.c: 372:         else
  1148                           
  1149                           
  1150                           ;main.c: 373:             PORTCbits.RC0=0;
  1151  0F07  1007               	bcf	7,0	;volatile
  1152  0F08  2E42               	goto	l3204
  1153  0F09  120A  118A  2810   	ljmp	start
  1154  0F0C                     __end_of_main:
  1155                           
  1156                           	psect	text1
  1157  0BEE                     __ptext1:	
  1158 ;; *************** function _imprime_tela_main *****************
  1159 ;; Defined at:
  1160 ;;		line 74 in file "main.c"
  1161 ;; Parameters:    Size  Location     Type
  1162 ;;		None
  1163 ;; Auto vars:     Size  Location     Type
  1164 ;;		None
  1165 ;; Return value:  Size  Location     Type
  1166 ;;                  1    wreg      void 
  1167 ;; Registers used:
  1168 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1169 ;; Tracked objects:
  1170 ;;		On entry : 0/0
  1171 ;;		On exit  : 0/0
  1172 ;;		Unchanged: 0/0
  1173 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1174 ;;      Params:         0       0       0       0       0
  1175 ;;      Locals:         0       0       0       0       0
  1176 ;;      Temps:          0       1       0       0       0
  1177 ;;      Totals:         0       1       0       0       0
  1178 ;;Total ram usage:        1 bytes
  1179 ;; Hardware stack levels used:    1
  1180 ;; Hardware stack levels required when called:    4
  1181 ;; This function calls:
  1182 ;;		_LCD_Goto
  1183 ;;		_LCD_Print
  1184 ;;		_sprintf
  1185 ;; This function is called by:
  1186 ;;		_main
  1187 ;; This function uses a non-reentrant model
  1188 ;;
  1189                           
  1190                           
  1191                           ;psect for function _imprime_tela_main
  1192  0BEE                     _imprime_tela_main:
  1193  0BEE                     l2988:	
  1194                           ;incstack = 0
  1195                           ; Regs used in _imprime_tela_main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1196                           
  1197                           
  1198                           ;main.c: 76:     LCD_Goto(1, 1);
  1199  0BEE  1283               	bcf	3,5	;RP0=0, select bank0
  1200  0BEF  1303               	bcf	3,6	;RP1=0, select bank0
  1201  0BF0  01A1               	clrf	LCD_Goto@row
  1202  0BF1  0AA1               	incf	LCD_Goto@row,f
  1203  0BF2  3001               	movlw	1
  1204  0BF3  120A  158A  2232  120A  158A  	fcall	_LCD_Goto
  1205  0BF8                     l2990:
  1206                           
  1207                           ;main.c: 77:     sprintf(LCD_Cstring,"Ho.: %02d:%02d:%02d   ",Horas,Minutos,Segundos);
  1208  0BF8  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1209  0BF9  1283               	bcf	3,5	;RP0=0, select bank0
  1210  0BFA  1303               	bcf	3,6	;RP1=0, select bank0
  1211  0BFB  00BC               	movwf	??_imprime_tela_main
  1212  0BFC  083C               	movf	??_imprime_tela_main,w
  1213  0BFD  00A9               	movwf	sprintf@f
  1214  0BFE  0860               	movf	_Horas+1,w
  1215  0BFF  00AB               	movwf	?_sprintf+2
  1216  0C00  085F               	movf	_Horas,w
  1217  0C01  00AA               	movwf	?_sprintf+1
  1218  0C02  0862               	movf	_Minutos+1,w
  1219  0C03  00AD               	movwf	?_sprintf+4
  1220  0C04  0861               	movf	_Minutos,w
  1221  0C05  00AC               	movwf	?_sprintf+3
  1222  0C06  0864               	movf	_Segundos+1,w
  1223  0C07  00AF               	movwf	?_sprintf+6
  1224  0C08  0863               	movf	_Segundos,w
  1225  0C09  00AE               	movwf	?_sprintf+5
  1226  0C0A  30A0               	movlw	(low (_LCD_Cstring| 0))& (0+255)
  1227  0C0B  120A  118A  254D  120A  158A  	fcall	_sprintf
  1228  0C10                     l2992:
  1229                           
  1230                           ;main.c: 78:     LCD_Print(LCD_Cstring);
  1231  0C10  30A0               	movlw	(low (_LCD_Cstring| 0))& (0+255)
  1232  0C11  120A  158A  226A  120A  158A  	fcall	_LCD_Print
  1233  0C16                     l2994:
  1234                           
  1235                           ;main.c: 80:     LCD_Goto(1, 2);
  1236  0C16  3002               	movlw	2
  1237  0C17  1283               	bcf	3,5	;RP0=0, select bank0
  1238  0C18  1303               	bcf	3,6	;RP1=0, select bank0
  1239  0C19  00BC               	movwf	??_imprime_tela_main
  1240  0C1A  083C               	movf	??_imprime_tela_main,w
  1241  0C1B  00A1               	movwf	LCD_Goto@row
  1242  0C1C  3001               	movlw	1
  1243  0C1D  120A  158A  2232  120A  158A  	fcall	_LCD_Goto
  1244  0C22                     l2996:
  1245                           
  1246                           ;main.c: 81:     sprintf(LCD_Cstring,"Te.: %02d\337c",Temperatura);
  1247  0C22  3065               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1248  0C23  1283               	bcf	3,5	;RP0=0, select bank0
  1249  0C24  1303               	bcf	3,6	;RP1=0, select bank0
  1250  0C25  00BC               	movwf	??_imprime_tela_main
  1251  0C26  083C               	movf	??_imprime_tela_main,w
  1252  0C27  00A9               	movwf	sprintf@f
  1253  0C28  085E               	movf	_Temperatura+1,w
  1254  0C29  00AB               	movwf	?_sprintf+2
  1255  0C2A  085D               	movf	_Temperatura,w
  1256  0C2B  00AA               	movwf	?_sprintf+1
  1257  0C2C  30A0               	movlw	(low (_LCD_Cstring| 0))& (0+255)
  1258  0C2D  120A  118A  254D  120A  158A  	fcall	_sprintf
  1259                           
  1260                           ;main.c: 82:     LCD_Print(LCD_Cstring);
  1261  0C32  30A0               	movlw	(low (_LCD_Cstring| 0))& (0+255)
  1262  0C33  120A  158A  226A  120A  158A  	fcall	_LCD_Print
  1263  0C38                     l101:
  1264  0C38  0008               	return
  1265  0C39                     __end_of_imprime_tela_main:
  1266                           
  1267                           	psect	text2
  1268  0F0C                     __ptext2:	
  1269 ;; *************** function _controle_aquecedor *****************
  1270 ;; Defined at:
  1271 ;;		line 235 in file "main.c"
  1272 ;; Parameters:    Size  Location     Type
  1273 ;;  temp            2    0[BANK0 ] int 
  1274 ;;  hora_min        2    2[BANK0 ] int 
  1275 ;;  min_min         2    4[BANK0 ] int 
  1276 ;;  hora_max        2    6[BANK0 ] int 
  1277 ;;  min_max         2    8[BANK0 ] int 
  1278 ;; Auto vars:     Size  Location     Type
  1279 ;;		None
  1280 ;; Return value:  Size  Location     Type
  1281 ;;                  2    0[BANK0 ] int 
  1282 ;; Registers used:
  1283 ;;		wreg, status,2
  1284 ;; Tracked objects:
  1285 ;;		On entry : 0/0
  1286 ;;		On exit  : 0/0
  1287 ;;		Unchanged: 0/0
  1288 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1289 ;;      Params:         0      10       0       0       0
  1290 ;;      Locals:         0       0       0       0       0
  1291 ;;      Temps:          1       0       0       0       0
  1292 ;;      Totals:         1      10       0       0       0
  1293 ;;Total ram usage:       11 bytes
  1294 ;; Hardware stack levels used:    1
  1295 ;; Hardware stack levels required when called:    1
  1296 ;; This function calls:
  1297 ;;		Nothing
  1298 ;; This function is called by:
  1299 ;;		_main
  1300 ;; This function uses a non-reentrant model
  1301 ;;
  1302                           
  1303                           
  1304                           ;psect for function _controle_aquecedor
  1305  0F0C                     _controle_aquecedor:
  1306  0F0C                     l2240:	
  1307                           ;incstack = 0
  1308                           ; Regs used in _controle_aquecedor: [wreg+status,2]
  1309                           
  1310                           
  1311                           ;main.c: 235: int controle_aquecedor(int temp,int hora_min,int min_min,int hora_max,int 
      +                          min_max);main.c: 236: {;main.c: 237:         if(hora_min<hora_max)
  1312  0F0C  1283               	bcf	3,5	;RP0=0, select bank0
  1313  0F0D  1303               	bcf	3,6	;RP1=0, select bank0
  1314  0F0E  0823               	movf	controle_aquecedor@hora_min+1,w
  1315  0F0F  3A80               	xorlw	128
  1316  0F10  00F3               	movwf	??_controle_aquecedor
  1317  0F11  0827               	movf	controle_aquecedor@hora_max+1,w
  1318  0F12  3A80               	xorlw	128
  1319  0F13  0273               	subwf	??_controle_aquecedor,w
  1320  0F14  1D03               	skipz
  1321  0F15  2F18               	goto	u2175
  1322  0F16  0826               	movf	controle_aquecedor@hora_max,w
  1323  0F17  0222               	subwf	controle_aquecedor@hora_min,w
  1324  0F18                     u2175:
  1325  0F18  1803               	skipnc
  1326  0F19  2F1B               	goto	u2171
  1327  0F1A  2F1C               	goto	u2170
  1328  0F1B                     u2171:
  1329  0F1B  2FA9               	goto	l2304
  1330  0F1C                     u2170:
  1331  0F1C                     l2242:
  1332                           
  1333                           ;main.c: 238:         {;main.c: 239:             if(Horas>hora_min)
  1334  0F1C  1283               	bcf	3,5	;RP0=0, select bank0
  1335  0F1D  1303               	bcf	3,6	;RP1=0, select bank0
  1336  0F1E  0823               	movf	controle_aquecedor@hora_min+1,w
  1337  0F1F  3A80               	xorlw	128
  1338  0F20  00F3               	movwf	??_controle_aquecedor
  1339  0F21  0860               	movf	_Horas+1,w
  1340  0F22  3A80               	xorlw	128
  1341  0F23  0273               	subwf	??_controle_aquecedor,w
  1342  0F24  1D03               	skipz
  1343  0F25  2F28               	goto	u2185
  1344  0F26  085F               	movf	_Horas,w
  1345  0F27  0222               	subwf	controle_aquecedor@hora_min,w
  1346  0F28                     u2185:
  1347  0F28  1803               	skipnc
  1348  0F29  2F2B               	goto	u2181
  1349  0F2A  2F2C               	goto	u2180
  1350  0F2B                     u2181:
  1351  0F2B  2F63               	goto	l2270
  1352  0F2C                     u2180:
  1353  0F2C                     l2244:
  1354                           
  1355                           ;main.c: 240:             {;main.c: 241:                 if(Horas<hora_max)
  1356  0F2C  1283               	bcf	3,5	;RP0=0, select bank0
  1357  0F2D  1303               	bcf	3,6	;RP1=0, select bank0
  1358  0F2E  0860               	movf	_Horas+1,w
  1359  0F2F  3A80               	xorlw	128
  1360  0F30  00F3               	movwf	??_controle_aquecedor
  1361  0F31  0827               	movf	controle_aquecedor@hora_max+1,w
  1362  0F32  3A80               	xorlw	128
  1363  0F33  0273               	subwf	??_controle_aquecedor,w
  1364  0F34  1D03               	skipz
  1365  0F35  2F38               	goto	u2195
  1366  0F36  0826               	movf	controle_aquecedor@hora_max,w
  1367  0F37  025F               	subwf	_Horas,w
  1368  0F38                     u2195:
  1369  0F38  1803               	skipnc
  1370  0F39  2F3B               	goto	u2191
  1371  0F3A  2F3C               	goto	u2190
  1372  0F3B                     u2191:
  1373  0F3B  2F43               	goto	l2252
  1374  0F3C                     u2190:
  1375  0F3C                     l2246:
  1376                           
  1377                           ;main.c: 242:                     return 1;
  1378  0F3C  3001               	movlw	1
  1379  0F3D  1283               	bcf	3,5	;RP0=0, select bank0
  1380  0F3E  1303               	bcf	3,6	;RP1=0, select bank0
  1381  0F3F  00A0               	movwf	?_controle_aquecedor
  1382  0F40  3000               	movlw	0
  1383  0F41  00A1               	movwf	?_controle_aquecedor+1
  1384  0F42  2FFF               	goto	l157
  1385  0F43                     l2252:
  1386  0F43  1283               	bcf	3,5	;RP0=0, select bank0
  1387  0F44  1303               	bcf	3,6	;RP1=0, select bank0
  1388  0F45  0827               	movf	controle_aquecedor@hora_max+1,w
  1389  0F46  0660               	xorwf	_Horas+1,w
  1390  0F47  1D03               	skipz
  1391  0F48  2F4B               	goto	u2205
  1392  0F49  0826               	movf	controle_aquecedor@hora_max,w
  1393  0F4A  065F               	xorwf	_Horas,w
  1394  0F4B                     u2205:
  1395  0F4B  1D03               	skipz
  1396  0F4C  2F4E               	goto	u2201
  1397  0F4D  2F4F               	goto	u2200
  1398  0F4E                     u2201:
  1399  0F4E  2F5E               	goto	l2260
  1400  0F4F                     u2200:
  1401  0F4F                     l2254:
  1402                           
  1403                           ;main.c: 244:                 {;main.c: 245:                     if (Minutos<min_max)
  1404  0F4F  0862               	movf	_Minutos+1,w
  1405  0F50  3A80               	xorlw	128
  1406  0F51  00F3               	movwf	??_controle_aquecedor
  1407  0F52  0829               	movf	controle_aquecedor@min_max+1,w
  1408  0F53  3A80               	xorlw	128
  1409  0F54  0273               	subwf	??_controle_aquecedor,w
  1410  0F55  1D03               	skipz
  1411  0F56  2F59               	goto	u2215
  1412  0F57  0828               	movf	controle_aquecedor@min_max,w
  1413  0F58  0261               	subwf	_Minutos,w
  1414  0F59                     u2215:
  1415  0F59  1803               	skipnc
  1416  0F5A  2F5C               	goto	u2211
  1417  0F5B  2F5D               	goto	u2210
  1418  0F5C                     u2211:
  1419  0F5C  2F5E               	goto	l2260
  1420  0F5D                     u2210:
  1421  0F5D  2F3C               	goto	l2246
  1422  0F5E                     l2260:
  1423                           
  1424                           ;main.c: 247:                     return 0;
  1425  0F5E  1283               	bcf	3,5	;RP0=0, select bank0
  1426  0F5F  1303               	bcf	3,6	;RP1=0, select bank0
  1427  0F60  01A0               	clrf	?_controle_aquecedor
  1428  0F61  01A1               	clrf	?_controle_aquecedor+1
  1429  0F62  2FFF               	goto	l157
  1430  0F63                     l2270:
  1431  0F63  1283               	bcf	3,5	;RP0=0, select bank0
  1432  0F64  1303               	bcf	3,6	;RP1=0, select bank0
  1433  0F65  0823               	movf	controle_aquecedor@hora_min+1,w
  1434  0F66  0660               	xorwf	_Horas+1,w
  1435  0F67  1D03               	skipz
  1436  0F68  2F6B               	goto	u2225
  1437  0F69  0822               	movf	controle_aquecedor@hora_min,w
  1438  0F6A  065F               	xorwf	_Horas,w
  1439  0F6B                     u2225:
  1440  0F6B  1D03               	skipz
  1441  0F6C  2F6E               	goto	u2221
  1442  0F6D  2F6F               	goto	u2220
  1443  0F6E                     u2221:
  1444  0F6E  2F5E               	goto	l2260
  1445  0F6F                     u2220:
  1446  0F6F                     l2272:
  1447                           
  1448                           ;main.c: 254:             {;main.c: 255:                 if (Minutos>min_min)
  1449  0F6F  0825               	movf	controle_aquecedor@min_min+1,w
  1450  0F70  3A80               	xorlw	128
  1451  0F71  00F3               	movwf	??_controle_aquecedor
  1452  0F72  0862               	movf	_Minutos+1,w
  1453  0F73  3A80               	xorlw	128
  1454  0F74  0273               	subwf	??_controle_aquecedor,w
  1455  0F75  1D03               	skipz
  1456  0F76  2F79               	goto	u2235
  1457  0F77  0861               	movf	_Minutos,w
  1458  0F78  0224               	subwf	controle_aquecedor@min_min,w
  1459  0F79                     u2235:
  1460  0F79  1803               	skipnc
  1461  0F7A  2F7C               	goto	u2231
  1462  0F7B  2F7D               	goto	u2230
  1463  0F7C                     u2231:
  1464  0F7C  2FFF               	goto	l157
  1465  0F7D                     u2230:
  1466  0F7D                     l2274:
  1467                           
  1468                           ;main.c: 256:                 {;main.c: 257:                 if(Horas<hora_max)
  1469  0F7D  1283               	bcf	3,5	;RP0=0, select bank0
  1470  0F7E  1303               	bcf	3,6	;RP1=0, select bank0
  1471  0F7F  0860               	movf	_Horas+1,w
  1472  0F80  3A80               	xorlw	128
  1473  0F81  00F3               	movwf	??_controle_aquecedor
  1474  0F82  0827               	movf	controle_aquecedor@hora_max+1,w
  1475  0F83  3A80               	xorlw	128
  1476  0F84  0273               	subwf	??_controle_aquecedor,w
  1477  0F85  1D03               	skipz
  1478  0F86  2F89               	goto	u2245
  1479  0F87  0826               	movf	controle_aquecedor@hora_max,w
  1480  0F88  025F               	subwf	_Horas,w
  1481  0F89                     u2245:
  1482  0F89  1803               	skipnc
  1483  0F8A  2F8C               	goto	u2241
  1484  0F8B  2F8D               	goto	u2240
  1485  0F8C                     u2241:
  1486  0F8C  2F8E               	goto	l2282
  1487  0F8D                     u2240:
  1488  0F8D  2F3C               	goto	l2246
  1489  0F8E                     l2282:
  1490  0F8E  1283               	bcf	3,5	;RP0=0, select bank0
  1491  0F8F  1303               	bcf	3,6	;RP1=0, select bank0
  1492  0F90  0827               	movf	controle_aquecedor@hora_max+1,w
  1493  0F91  0660               	xorwf	_Horas+1,w
  1494  0F92  1D03               	skipz
  1495  0F93  2F96               	goto	u2255
  1496  0F94  0826               	movf	controle_aquecedor@hora_max,w
  1497  0F95  065F               	xorwf	_Horas,w
  1498  0F96                     u2255:
  1499  0F96  1D03               	skipz
  1500  0F97  2F99               	goto	u2251
  1501  0F98  2F9A               	goto	u2250
  1502  0F99                     u2251:
  1503  0F99  2F5E               	goto	l2260
  1504  0F9A                     u2250:
  1505  0F9A                     l2284:
  1506                           
  1507                           ;main.c: 260:                 {;main.c: 261:                     if (Minutos<min_max)
  1508  0F9A  0862               	movf	_Minutos+1,w
  1509  0F9B  3A80               	xorlw	128
  1510  0F9C  00F3               	movwf	??_controle_aquecedor
  1511  0F9D  0829               	movf	controle_aquecedor@min_max+1,w
  1512  0F9E  3A80               	xorlw	128
  1513  0F9F  0273               	subwf	??_controle_aquecedor,w
  1514  0FA0  1D03               	skipz
  1515  0FA1  2FA4               	goto	u2265
  1516  0FA2  0828               	movf	controle_aquecedor@min_max,w
  1517  0FA3  0261               	subwf	_Minutos,w
  1518  0FA4                     u2265:
  1519  0FA4  1803               	skipnc
  1520  0FA5  2FA7               	goto	u2261
  1521  0FA6  2FA8               	goto	u2260
  1522  0FA7                     u2261:
  1523  0FA7  2F5E               	goto	l2260
  1524  0FA8                     u2260:
  1525  0FA8  2F3C               	goto	l2246
  1526  0FA9                     l2304:
  1527                           
  1528                           ;main.c: 275:         {;main.c: 276:             if (Horas>hora_min)
  1529  0FA9  1283               	bcf	3,5	;RP0=0, select bank0
  1530  0FAA  1303               	bcf	3,6	;RP1=0, select bank0
  1531  0FAB  0823               	movf	controle_aquecedor@hora_min+1,w
  1532  0FAC  3A80               	xorlw	128
  1533  0FAD  00F3               	movwf	??_controle_aquecedor
  1534  0FAE  0860               	movf	_Horas+1,w
  1535  0FAF  3A80               	xorlw	128
  1536  0FB0  0273               	subwf	??_controle_aquecedor,w
  1537  0FB1  1D03               	skipz
  1538  0FB2  2FB5               	goto	u2275
  1539  0FB3  085F               	movf	_Horas,w
  1540  0FB4  0222               	subwf	controle_aquecedor@hora_min,w
  1541  0FB5                     u2275:
  1542  0FB5  1803               	skipnc
  1543  0FB6  2FB8               	goto	u2271
  1544  0FB7  2FB9               	goto	u2270
  1545  0FB8                     u2271:
  1546  0FB8  2FBA               	goto	l2312
  1547  0FB9                     u2270:
  1548  0FB9  2F3C               	goto	l2246
  1549  0FBA                     l2312:
  1550  0FBA  1283               	bcf	3,5	;RP0=0, select bank0
  1551  0FBB  1303               	bcf	3,6	;RP1=0, select bank0
  1552  0FBC  0823               	movf	controle_aquecedor@hora_min+1,w
  1553  0FBD  0660               	xorwf	_Horas+1,w
  1554  0FBE  1D03               	skipz
  1555  0FBF  2FC2               	goto	u2285
  1556  0FC0  0822               	movf	controle_aquecedor@hora_min,w
  1557  0FC1  065F               	xorwf	_Horas,w
  1558  0FC2                     u2285:
  1559  0FC2  1D03               	skipz
  1560  0FC3  2FC5               	goto	u2281
  1561  0FC4  2FC6               	goto	u2280
  1562  0FC5                     u2281:
  1563  0FC5  2FD5               	goto	l2326
  1564  0FC6                     u2280:
  1565  0FC6                     l2314:
  1566                           
  1567                           ;main.c: 279:             {;main.c: 280:                 if (Minutos>min_min)
  1568  0FC6  0825               	movf	controle_aquecedor@min_min+1,w
  1569  0FC7  3A80               	xorlw	128
  1570  0FC8  00F3               	movwf	??_controle_aquecedor
  1571  0FC9  0862               	movf	_Minutos+1,w
  1572  0FCA  3A80               	xorlw	128
  1573  0FCB  0273               	subwf	??_controle_aquecedor,w
  1574  0FCC  1D03               	skipz
  1575  0FCD  2FD0               	goto	u2295
  1576  0FCE  0861               	movf	_Minutos,w
  1577  0FCF  0224               	subwf	controle_aquecedor@min_min,w
  1578  0FD0                     u2295:
  1579  0FD0  1803               	skipnc
  1580  0FD1  2FD3               	goto	u2291
  1581  0FD2  2FD4               	goto	u2290
  1582  0FD3                     u2291:
  1583  0FD3  2F5E               	goto	l2260
  1584  0FD4                     u2290:
  1585  0FD4  2F3C               	goto	l2246
  1586  0FD5                     l2326:
  1587                           
  1588                           ;main.c: 286:                 if(Horas<hora_max)
  1589  0FD5  0860               	movf	_Horas+1,w
  1590  0FD6  3A80               	xorlw	128
  1591  0FD7  00F3               	movwf	??_controle_aquecedor
  1592  0FD8  0827               	movf	controle_aquecedor@hora_max+1,w
  1593  0FD9  3A80               	xorlw	128
  1594  0FDA  0273               	subwf	??_controle_aquecedor,w
  1595  0FDB  1D03               	skipz
  1596  0FDC  2FDF               	goto	u2305
  1597  0FDD  0826               	movf	controle_aquecedor@hora_max,w
  1598  0FDE  025F               	subwf	_Horas,w
  1599  0FDF                     u2305:
  1600  0FDF  1803               	skipnc
  1601  0FE0  2FE2               	goto	u2301
  1602  0FE1  2FE3               	goto	u2300
  1603  0FE2                     u2301:
  1604  0FE2  2FE4               	goto	l2334
  1605  0FE3                     u2300:
  1606  0FE3  2F3C               	goto	l2246
  1607  0FE4                     l2334:
  1608  0FE4  1283               	bcf	3,5	;RP0=0, select bank0
  1609  0FE5  1303               	bcf	3,6	;RP1=0, select bank0
  1610  0FE6  0827               	movf	controle_aquecedor@hora_max+1,w
  1611  0FE7  0660               	xorwf	_Horas+1,w
  1612  0FE8  1D03               	skipz
  1613  0FE9  2FEC               	goto	u2315
  1614  0FEA  0826               	movf	controle_aquecedor@hora_max,w
  1615  0FEB  065F               	xorwf	_Horas,w
  1616  0FEC                     u2315:
  1617  0FEC  1D03               	skipz
  1618  0FED  2FEF               	goto	u2311
  1619  0FEE  2FF0               	goto	u2310
  1620  0FEF                     u2311:
  1621  0FEF  2F5E               	goto	l2260
  1622  0FF0                     u2310:
  1623  0FF0                     l2336:
  1624                           
  1625                           ;main.c: 289:                 {;main.c: 290:                     if (Minutos<min_min)
  1626  0FF0  0862               	movf	_Minutos+1,w
  1627  0FF1  3A80               	xorlw	128
  1628  0FF2  00F3               	movwf	??_controle_aquecedor
  1629  0FF3  0825               	movf	controle_aquecedor@min_min+1,w
  1630  0FF4  3A80               	xorlw	128
  1631  0FF5  0273               	subwf	??_controle_aquecedor,w
  1632  0FF6  1D03               	skipz
  1633  0FF7  2FFA               	goto	u2325
  1634  0FF8  0824               	movf	controle_aquecedor@min_min,w
  1635  0FF9  0261               	subwf	_Minutos,w
  1636  0FFA                     u2325:
  1637  0FFA  1803               	skipnc
  1638  0FFB  2FFD               	goto	u2321
  1639  0FFC  2FFE               	goto	u2320
  1640  0FFD                     u2321:
  1641  0FFD  2F5E               	goto	l2260
  1642  0FFE                     u2320:
  1643  0FFE  2F3C               	goto	l2246
  1644  0FFF                     l157:
  1645  0FFF  0008               	return
  1646  1000                     __end_of_controle_aquecedor:
  1647                           
  1648                           	psect	text3
  1649  09B5                     __ptext3:	
  1650 ;; *************** function _atualiza_ADC *****************
  1651 ;; Defined at:
  1652 ;;		line 66 in file "main.c"
  1653 ;; Parameters:    Size  Location     Type
  1654 ;;		None
  1655 ;; Auto vars:     Size  Location     Type
  1656 ;;		None
  1657 ;; Return value:  Size  Location     Type
  1658 ;;                  1    wreg      void 
  1659 ;; Registers used:
  1660 ;;		wreg
  1661 ;; Tracked objects:
  1662 ;;		On entry : 0/0
  1663 ;;		On exit  : 0/0
  1664 ;;		Unchanged: 0/0
  1665 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1666 ;;      Params:         0       0       0       0       0
  1667 ;;      Locals:         0       0       0       0       0
  1668 ;;      Temps:          1       0       0       0       0
  1669 ;;      Totals:         1       0       0       0       0
  1670 ;;Total ram usage:        1 bytes
  1671 ;; Hardware stack levels used:    1
  1672 ;; Hardware stack levels required when called:    1
  1673 ;; This function calls:
  1674 ;;		Nothing
  1675 ;; This function is called by:
  1676 ;;		_main
  1677 ;; This function uses a non-reentrant model
  1678 ;;
  1679                           
  1680                           
  1681                           ;psect for function _atualiza_ADC
  1682  09B5                     _atualiza_ADC:
  1683  09B5                     l2090:	
  1684                           ;incstack = 0
  1685                           ; Regs used in _atualiza_ADC: [wreg]
  1686                           
  1687                           
  1688                           ;main.c: 68:     ADCON0bits.GO_nDONE=1;
  1689  09B5  1283               	bcf	3,5	;RP0=0, select bank0
  1690  09B6  1303               	bcf	3,6	;RP1=0, select bank0
  1691  09B7  151F               	bsf	31,2	;volatile
  1692                           
  1693                           ;main.c: 69:     while(ADCON0bits.GO_nDONE)
  1694  09B8  29BD               	goto	l2094
  1695  09B9                     l2092:
  1696                           
  1697                           ;main.c: 70:         _delay((unsigned long)((10)*(4000000/4000000.0)));
  1698  09B9  3003               	movlw	3
  1699  09BA  00F3               	movwf	??_atualiza_ADC
  1700  09BB                     u3767:
  1701  09BB  0BF3               	decfsz	??_atualiza_ADC,f
  1702  09BC  29BB               	goto	u3767
  1703  09BD                     l2094:
  1704                           
  1705                           ;main.c: 69:     while(ADCON0bits.GO_nDONE)
  1706  09BD  1283               	bcf	3,5	;RP0=0, select bank0
  1707  09BE  1303               	bcf	3,6	;RP1=0, select bank0
  1708  09BF  191F               	btfsc	31,2	;volatile
  1709  09C0  29C2               	goto	u1951
  1710  09C1  29C3               	goto	u1950
  1711  09C2                     u1951:
  1712  09C2  29B9               	goto	l2092
  1713  09C3                     u1950:
  1714  09C3                     l98:
  1715  09C3  0008               	return
  1716  09C4                     __end_of_atualiza_ADC:
  1717                           
  1718                           	psect	text4
  1719  002B                     __ptext4:	
  1720 ;; *************** function _ajustes *****************
  1721 ;; Defined at:
  1722 ;;		line 131 in file "main.c"
  1723 ;; Parameters:    Size  Location     Type
  1724 ;;  temp            1    wreg     PTR int 
  1725 ;;		 -> main@temp(2), 
  1726 ;;  hora_min        1   33[BANK0 ] PTR int 
  1727 ;;		 -> main@hora_min(2), 
  1728 ;;  min_min         1   34[BANK0 ] PTR int 
  1729 ;;		 -> main@min_min(2), 
  1730 ;;  hora_max        1   35[BANK0 ] PTR int 
  1731 ;;		 -> main@hora_max(2), 
  1732 ;;  min_max         1   36[BANK0 ] PTR int 
  1733 ;;		 -> main@min_max(2), 
  1734 ;; Auto vars:     Size  Location     Type
  1735 ;;  temp            1   41[BANK0 ] PTR int 
  1736 ;;		 -> main@temp(2), 
  1737 ;; Return value:  Size  Location     Type
  1738 ;;                  1    wreg      void 
  1739 ;; Registers used:
  1740 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1741 ;; Tracked objects:
  1742 ;;		On entry : 0/0
  1743 ;;		On exit  : 0/0
  1744 ;;		Unchanged: 0/0
  1745 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1746 ;;      Params:         0       4       0       0       0
  1747 ;;      Locals:         0       1       0       0       0
  1748 ;;      Temps:          0       4       0       0       0
  1749 ;;      Totals:         0       9       0       0       0
  1750 ;;Total ram usage:        9 bytes
  1751 ;; Hardware stack levels used:    1
  1752 ;; Hardware stack levels required when called:    5
  1753 ;; This function calls:
  1754 ;;		_LCD_Cmd
  1755 ;;		_imprime_tela_ajuste1
  1756 ;;		_imprime_tela_ajuste2
  1757 ;;		_imprime_tela_ajuste3
  1758 ;;		_imprime_tela_ajuste4
  1759 ;; This function is called by:
  1760 ;;		_main
  1761 ;; This function uses a non-reentrant model
  1762 ;;
  1763                           
  1764                           
  1765                           ;psect for function _ajustes
  1766  002B                     _ajustes:
  1767                           
  1768                           ;incstack = 0
  1769                           ; Regs used in _ajustes: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1770                           ;ajustes@temp stored from wreg
  1771  002B  1283               	bcf	3,5	;RP0=0, select bank0
  1772  002C  1303               	bcf	3,6	;RP1=0, select bank0
  1773  002D  00C9               	movwf	ajustes@temp
  1774  002E                     l2998:
  1775                           
  1776                           ;main.c: 131: void ajustes(int *temp,int *hora_min,int *min_min,int *hora_max,int *min_m
      +                          ax);main.c: 132: {;main.c: 133:       LCD_Cmd(0x01);
  1777  002E  3001               	movlw	1
  1778  002F  120A  158A  2201  120A  118A  	fcall	_LCD_Cmd
  1779  0034                     l3000:
  1780                           
  1781                           ;main.c: 134:       imprime_tela_ajuste1(*temp);
  1782  0034  1283               	bcf	3,5	;RP0=0, select bank0
  1783  0035  1303               	bcf	3,6	;RP1=0, select bank0
  1784  0036  0849               	movf	ajustes@temp,w
  1785  0037  0084               	movwf	4
  1786  0038  1383               	bcf	3,7	;select IRP bank0
  1787  0039  0800               	movf	0,w
  1788  003A  00BC               	movwf	imprime_tela_ajuste1@temp
  1789  003B  0A84               	incf	4,f
  1790  003C  0800               	movf	0,w
  1791  003D  00BD               	movwf	imprime_tela_ajuste1@temp+1
  1792  003E  120A  118A  27DD  120A  118A  	fcall	_imprime_tela_ajuste1
  1793  0043                     l3002:
  1794                           
  1795                           ;main.c: 135:       _delay((unsigned long)((200)*(4000000/4000.0)));
  1796  0043  3002               	movlw	2
  1797  0044  1283               	bcf	3,5	;RP0=0, select bank0
  1798  0045  1303               	bcf	3,6	;RP1=0, select bank0
  1799  0046  00C7               	movwf	??_ajustes+2
  1800  0047  3004               	movlw	4
  1801  0048  00C6               	movwf	??_ajustes+1
  1802  0049  30B9               	movlw	185
  1803  004A  00C5               	movwf	??_ajustes
  1804  004B                     u3777:
  1805  004B  0BC5               	decfsz	??_ajustes,f
  1806  004C  284B               	goto	u3777
  1807  004D  0BC6               	decfsz	??_ajustes+1,f
  1808  004E  284B               	goto	u3777
  1809  004F  0BC7               	decfsz	??_ajustes+2,f
  1810  0050  284B               	goto	u3777
  1811  0051  2852               	nop2
  1812                           
  1813                           ;main.c: 137:       while(PORTBbits.RB0!=0)
  1814  0052  28AB               	goto	l3016
  1815  0053                     l3004:
  1816                           
  1817                           ;main.c: 138:       {;main.c: 139:           _delay((unsigned long)((200)*(4000000/4000.
      +                          0)));
  1818  0053  3002               	movlw	2
  1819  0054  1283               	bcf	3,5	;RP0=0, select bank0
  1820  0055  1303               	bcf	3,6	;RP1=0, select bank0
  1821  0056  00C7               	movwf	??_ajustes+2
  1822  0057  3004               	movlw	4
  1823  0058  00C6               	movwf	??_ajustes+1
  1824  0059  30B9               	movlw	185
  1825  005A  00C5               	movwf	??_ajustes
  1826  005B                     u3787:
  1827  005B  0BC5               	decfsz	??_ajustes,f
  1828  005C  285B               	goto	u3787
  1829  005D  0BC6               	decfsz	??_ajustes+1,f
  1830  005E  285B               	goto	u3787
  1831  005F  0BC7               	decfsz	??_ajustes+2,f
  1832  0060  285B               	goto	u3787
  1833  0061  2862               	nop2
  1834  0062                     l3006:
  1835                           
  1836                           ;main.c: 140:           imprime_tela_ajuste1(*temp);
  1837  0062  1283               	bcf	3,5	;RP0=0, select bank0
  1838  0063  1303               	bcf	3,6	;RP1=0, select bank0
  1839  0064  0849               	movf	ajustes@temp,w
  1840  0065  0084               	movwf	4
  1841  0066  1383               	bcf	3,7	;select IRP bank0
  1842  0067  0800               	movf	0,w
  1843  0068  00BC               	movwf	imprime_tela_ajuste1@temp
  1844  0069  0A84               	incf	4,f
  1845  006A  0800               	movf	0,w
  1846  006B  00BD               	movwf	imprime_tela_ajuste1@temp+1
  1847  006C  120A  118A  27DD  120A  118A  	fcall	_imprime_tela_ajuste1
  1848  0071                     l3008:
  1849                           
  1850                           ;main.c: 141:           if(PORTBbits.RB1==0)
  1851  0071  1283               	bcf	3,5	;RP0=0, select bank0
  1852  0072  1303               	bcf	3,6	;RP1=0, select bank0
  1853  0073  1886               	btfsc	6,1	;volatile
  1854  0074  2876               	goto	u3351
  1855  0075  2877               	goto	u3350
  1856  0076                     u3351:
  1857  0076  288E               	goto	l3012
  1858  0077                     u3350:
  1859  0077                     l3010:
  1860                           
  1861                           ;main.c: 142:           {;main.c: 143:               *temp=*temp+1;
  1862  0077  0849               	movf	ajustes@temp,w
  1863  0078  0084               	movwf	4
  1864  0079  1383               	bcf	3,7	;select IRP bank0
  1865  007A  0800               	movf	0,w
  1866  007B  00C5               	movwf	??_ajustes
  1867  007C  0A84               	incf	4,f
  1868  007D  0800               	movf	0,w
  1869  007E  00C6               	movwf	??_ajustes+1
  1870  007F  0845               	movf	??_ajustes,w
  1871  0080  3E01               	addlw	1
  1872  0081  00C7               	movwf	??_ajustes+2
  1873  0082  0846               	movf	??_ajustes+1,w
  1874  0083  1803               	skipnc
  1875  0084  3E01               	addlw	1
  1876  0085  3E00               	addlw	0
  1877  0086  00C8               	movwf	??_ajustes+3
  1878  0087  0849               	movf	ajustes@temp,w
  1879  0088  0084               	movwf	4
  1880  0089  0847               	movf	??_ajustes+2,w
  1881  008A  0080               	movwf	0
  1882  008B  0A84               	incf	4,f
  1883  008C  0848               	movf	??_ajustes+3,w
  1884  008D  0080               	movwf	0
  1885  008E                     l3012:
  1886                           
  1887                           ;main.c: 145:           if (*temp>99)
  1888  008E  0849               	movf	ajustes@temp,w
  1889  008F  0084               	movwf	4
  1890  0090  1383               	bcf	3,7	;select IRP bank0
  1891  0091  0800               	movf	0,w
  1892  0092  00C5               	movwf	??_ajustes
  1893  0093  0A84               	incf	4,f
  1894  0094  0800               	movf	0,w
  1895  0095  00C6               	movwf	??_ajustes+1
  1896  0096  0846               	movf	??_ajustes+1,w
  1897  0097  3A80               	xorlw	128
  1898  0098  00FF               	movwf	btemp+1
  1899  0099  3080               	movlw	128
  1900  009A  027F               	subwf	btemp+1,w
  1901  009B  1D03               	skipz
  1902  009C  289F               	goto	u3365
  1903  009D  3064               	movlw	100
  1904  009E  0245               	subwf	??_ajustes,w
  1905  009F                     u3365:
  1906  009F  1C03               	skipc
  1907  00A0  28A2               	goto	u3361
  1908  00A1  28A3               	goto	u3360
  1909  00A2                     u3361:
  1910  00A2  28AB               	goto	l3016
  1911  00A3                     u3360:
  1912  00A3                     l3014:
  1913                           
  1914                           ;main.c: 146:               *temp=0;
  1915  00A3  1283               	bcf	3,5	;RP0=0, select bank0
  1916  00A4  1303               	bcf	3,6	;RP1=0, select bank0
  1917  00A5  0849               	movf	ajustes@temp,w
  1918  00A6  0084               	movwf	4
  1919  00A7  1383               	bcf	3,7	;select IRP bank0
  1920  00A8  0180               	clrf	0
  1921  00A9  0A84               	incf	4,f
  1922  00AA  0180               	clrf	0
  1923  00AB                     l3016:
  1924                           
  1925                           ;main.c: 137:       while(PORTBbits.RB0!=0)
  1926  00AB  1283               	bcf	3,5	;RP0=0, select bank0
  1927  00AC  1303               	bcf	3,6	;RP1=0, select bank0
  1928  00AD  1806               	btfsc	6,0	;volatile
  1929  00AE  28B0               	goto	u3371
  1930  00AF  28B1               	goto	u3370
  1931  00B0                     u3371:
  1932  00B0  2853               	goto	l3004
  1933  00B1                     u3370:
  1934  00B1                     l3018:
  1935                           
  1936                           ;main.c: 148:       LCD_Cmd(0x01);
  1937  00B1  3001               	movlw	1
  1938  00B2  120A  158A  2201  120A  118A  	fcall	_LCD_Cmd
  1939  00B7                     l3020:
  1940                           
  1941                           ;main.c: 149:       imprime_tela_ajuste2();
  1942  00B7  120A  158A  22DF  120A  118A  	fcall	_imprime_tela_ajuste2
  1943  00BC                     l3022:
  1944                           
  1945                           ;main.c: 150:       _delay((unsigned long)((200)*(4000000/4000.0)));
  1946  00BC  3002               	movlw	2
  1947  00BD  1283               	bcf	3,5	;RP0=0, select bank0
  1948  00BE  1303               	bcf	3,6	;RP1=0, select bank0
  1949  00BF  00C7               	movwf	??_ajustes+2
  1950  00C0  3004               	movlw	4
  1951  00C1  00C6               	movwf	??_ajustes+1
  1952  00C2  30B9               	movlw	185
  1953  00C3  00C5               	movwf	??_ajustes
  1954  00C4                     u3797:
  1955  00C4  0BC5               	decfsz	??_ajustes,f
  1956  00C5  28C4               	goto	u3797
  1957  00C6  0BC6               	decfsz	??_ajustes+1,f
  1958  00C7  28C4               	goto	u3797
  1959  00C8  0BC7               	decfsz	??_ajustes+2,f
  1960  00C9  28C4               	goto	u3797
  1961  00CA  28CB               	nop2
  1962                           
  1963                           ;main.c: 151:       while(PORTBbits.RB0!=0)
  1964  00CB  28FF               	goto	l3036
  1965  00CC                     l3024:
  1966                           
  1967                           ;main.c: 152:       {;main.c: 153:           _delay((unsigned long)((200)*(4000000/4000.
      +                          0)));
  1968  00CC  3002               	movlw	2
  1969  00CD  1283               	bcf	3,5	;RP0=0, select bank0
  1970  00CE  1303               	bcf	3,6	;RP1=0, select bank0
  1971  00CF  00C7               	movwf	??_ajustes+2
  1972  00D0  3004               	movlw	4
  1973  00D1  00C6               	movwf	??_ajustes+1
  1974  00D2  30B9               	movlw	185
  1975  00D3  00C5               	movwf	??_ajustes
  1976  00D4                     u3807:
  1977  00D4  0BC5               	decfsz	??_ajustes,f
  1978  00D5  28D4               	goto	u3807
  1979  00D6  0BC6               	decfsz	??_ajustes+1,f
  1980  00D7  28D4               	goto	u3807
  1981  00D8  0BC7               	decfsz	??_ajustes+2,f
  1982  00D9  28D4               	goto	u3807
  1983  00DA  28DB               	nop2
  1984  00DB                     l3026:
  1985                           
  1986                           ;main.c: 154:           imprime_tela_ajuste2();
  1987  00DB  120A  158A  22DF  120A  118A  	fcall	_imprime_tela_ajuste2
  1988  00E0                     l3028:
  1989                           
  1990                           ;main.c: 155:           if(PORTBbits.RB1==0)
  1991  00E0  1283               	bcf	3,5	;RP0=0, select bank0
  1992  00E1  1303               	bcf	3,6	;RP1=0, select bank0
  1993  00E2  1886               	btfsc	6,1	;volatile
  1994  00E3  28E5               	goto	u3381
  1995  00E4  28E6               	goto	u3380
  1996  00E5                     u3381:
  1997  00E5  28EE               	goto	l3032
  1998  00E6                     u3380:
  1999  00E6                     l3030:
  2000                           
  2001                           ;main.c: 156:           {;main.c: 157:               Horas=Horas+1;
  2002  00E6  085F               	movf	_Horas,w
  2003  00E7  3E01               	addlw	1
  2004  00E8  00DF               	movwf	_Horas
  2005  00E9  0860               	movf	_Horas+1,w
  2006  00EA  1803               	skipnc
  2007  00EB  3E01               	addlw	1
  2008  00EC  3E00               	addlw	0
  2009  00ED  00E0               	movwf	_Horas+1
  2010  00EE                     l3032:
  2011                           
  2012                           ;main.c: 159:           if (Horas>23)
  2013  00EE  0860               	movf	_Horas+1,w
  2014  00EF  3A80               	xorlw	128
  2015  00F0  00FF               	movwf	btemp+1
  2016  00F1  3080               	movlw	128
  2017  00F2  027F               	subwf	btemp+1,w
  2018  00F3  1D03               	skipz
  2019  00F4  28F7               	goto	u3395
  2020  00F5  3018               	movlw	24
  2021  00F6  025F               	subwf	_Horas,w
  2022  00F7                     u3395:
  2023  00F7  1C03               	skipc
  2024  00F8  28FA               	goto	u3391
  2025  00F9  28FB               	goto	u3390
  2026  00FA                     u3391:
  2027  00FA  28FF               	goto	l3036
  2028  00FB                     u3390:
  2029  00FB                     l3034:
  2030                           
  2031                           ;main.c: 160:               Horas=0;
  2032  00FB  1283               	bcf	3,5	;RP0=0, select bank0
  2033  00FC  1303               	bcf	3,6	;RP1=0, select bank0
  2034  00FD  01DF               	clrf	_Horas
  2035  00FE  01E0               	clrf	_Horas+1
  2036  00FF                     l3036:
  2037                           
  2038                           ;main.c: 151:       while(PORTBbits.RB0!=0)
  2039  00FF  1283               	bcf	3,5	;RP0=0, select bank0
  2040  0100  1303               	bcf	3,6	;RP1=0, select bank0
  2041  0101  1806               	btfsc	6,0	;volatile
  2042  0102  2904               	goto	u3401
  2043  0103  2905               	goto	u3400
  2044  0104                     u3401:
  2045  0104  28CC               	goto	l3024
  2046  0105                     u3400:
  2047  0105                     l3038:
  2048                           
  2049                           ;main.c: 162:       _delay((unsigned long)((200)*(4000000/4000.0)));
  2050  0105  3002               	movlw	2
  2051  0106  1283               	bcf	3,5	;RP0=0, select bank0
  2052  0107  1303               	bcf	3,6	;RP1=0, select bank0
  2053  0108  00C7               	movwf	??_ajustes+2
  2054  0109  3004               	movlw	4
  2055  010A  00C6               	movwf	??_ajustes+1
  2056  010B  30B9               	movlw	185
  2057  010C  00C5               	movwf	??_ajustes
  2058  010D                     u3817:
  2059  010D  0BC5               	decfsz	??_ajustes,f
  2060  010E  290D               	goto	u3817
  2061  010F  0BC6               	decfsz	??_ajustes+1,f
  2062  0110  290D               	goto	u3817
  2063  0111  0BC7               	decfsz	??_ajustes+2,f
  2064  0112  290D               	goto	u3817
  2065  0113  2914               	nop2
  2066                           
  2067                           ;main.c: 163:       while(PORTBbits.RB0!=0)
  2068  0114  2948               	goto	l3052
  2069  0115                     l3040:
  2070                           
  2071                           ;main.c: 164:       {;main.c: 165:           _delay((unsigned long)((200)*(4000000/4000.
      +                          0)));
  2072  0115  3002               	movlw	2
  2073  0116  1283               	bcf	3,5	;RP0=0, select bank0
  2074  0117  1303               	bcf	3,6	;RP1=0, select bank0
  2075  0118  00C7               	movwf	??_ajustes+2
  2076  0119  3004               	movlw	4
  2077  011A  00C6               	movwf	??_ajustes+1
  2078  011B  30B9               	movlw	185
  2079  011C  00C5               	movwf	??_ajustes
  2080  011D                     u3827:
  2081  011D  0BC5               	decfsz	??_ajustes,f
  2082  011E  291D               	goto	u3827
  2083  011F  0BC6               	decfsz	??_ajustes+1,f
  2084  0120  291D               	goto	u3827
  2085  0121  0BC7               	decfsz	??_ajustes+2,f
  2086  0122  291D               	goto	u3827
  2087  0123  2924               	nop2
  2088  0124                     l3042:
  2089                           
  2090                           ;main.c: 166:           imprime_tela_ajuste2();
  2091  0124  120A  158A  22DF  120A  118A  	fcall	_imprime_tela_ajuste2
  2092  0129                     l3044:
  2093                           
  2094                           ;main.c: 167:           if(PORTBbits.RB1==0)
  2095  0129  1283               	bcf	3,5	;RP0=0, select bank0
  2096  012A  1303               	bcf	3,6	;RP1=0, select bank0
  2097  012B  1886               	btfsc	6,1	;volatile
  2098  012C  292E               	goto	u3411
  2099  012D  292F               	goto	u3410
  2100  012E                     u3411:
  2101  012E  2937               	goto	l3048
  2102  012F                     u3410:
  2103  012F                     l3046:
  2104                           
  2105                           ;main.c: 168:           {;main.c: 169:               Minutos=Minutos+1;
  2106  012F  0861               	movf	_Minutos,w
  2107  0130  3E01               	addlw	1
  2108  0131  00E1               	movwf	_Minutos
  2109  0132  0862               	movf	_Minutos+1,w
  2110  0133  1803               	skipnc
  2111  0134  3E01               	addlw	1
  2112  0135  3E00               	addlw	0
  2113  0136  00E2               	movwf	_Minutos+1
  2114  0137                     l3048:
  2115                           
  2116                           ;main.c: 171:           if (Minutos>59)
  2117  0137  0862               	movf	_Minutos+1,w
  2118  0138  3A80               	xorlw	128
  2119  0139  00FF               	movwf	btemp+1
  2120  013A  3080               	movlw	128
  2121  013B  027F               	subwf	btemp+1,w
  2122  013C  1D03               	skipz
  2123  013D  2940               	goto	u3425
  2124  013E  303C               	movlw	60
  2125  013F  0261               	subwf	_Minutos,w
  2126  0140                     u3425:
  2127  0140  1C03               	skipc
  2128  0141  2943               	goto	u3421
  2129  0142  2944               	goto	u3420
  2130  0143                     u3421:
  2131  0143  2948               	goto	l3052
  2132  0144                     u3420:
  2133  0144                     l3050:
  2134                           
  2135                           ;main.c: 172:               Minutos=0;
  2136  0144  1283               	bcf	3,5	;RP0=0, select bank0
  2137  0145  1303               	bcf	3,6	;RP1=0, select bank0
  2138  0146  01E1               	clrf	_Minutos
  2139  0147  01E2               	clrf	_Minutos+1
  2140  0148                     l3052:
  2141                           
  2142                           ;main.c: 163:       while(PORTBbits.RB0!=0)
  2143  0148  1283               	bcf	3,5	;RP0=0, select bank0
  2144  0149  1303               	bcf	3,6	;RP1=0, select bank0
  2145  014A  1806               	btfsc	6,0	;volatile
  2146  014B  294D               	goto	u3431
  2147  014C  294E               	goto	u3430
  2148  014D                     u3431:
  2149  014D  2915               	goto	l3040
  2150  014E                     u3430:
  2151  014E                     l3054:
  2152                           
  2153                           ;main.c: 174:       LCD_Cmd(0x01);
  2154  014E  3001               	movlw	1
  2155  014F  120A  158A  2201  120A  118A  	fcall	_LCD_Cmd
  2156  0154                     l3056:
  2157                           
  2158                           ;main.c: 175:       imprime_tela_ajuste3(*hora_min,*min_min);
  2159  0154  1283               	bcf	3,5	;RP0=0, select bank0
  2160  0155  1303               	bcf	3,6	;RP1=0, select bank0
  2161  0156  0841               	movf	ajustes@hora_min,w
  2162  0157  0084               	movwf	4
  2163  0158  1383               	bcf	3,7	;select IRP bank0
  2164  0159  0800               	movf	0,w
  2165  015A  00BC               	movwf	imprime_tela_ajuste3@horas_min
  2166  015B  0A84               	incf	4,f
  2167  015C  0800               	movf	0,w
  2168  015D  00BD               	movwf	imprime_tela_ajuste3@horas_min+1
  2169  015E  0842               	movf	ajustes@min_min,w
  2170  015F  0084               	movwf	4
  2171  0160  0800               	movf	0,w
  2172  0161  00BE               	movwf	imprime_tela_ajuste3@minutos_min
  2173  0162  0A84               	incf	4,f
  2174  0163  0800               	movf	0,w
  2175  0164  00BF               	movwf	imprime_tela_ajuste3@minutos_min+1
  2176  0165  120A  158A  2322  120A  118A  	fcall	_imprime_tela_ajuste3
  2177  016A                     l3058:
  2178                           
  2179                           ;main.c: 176:       _delay((unsigned long)((200)*(4000000/4000.0)));
  2180  016A  3002               	movlw	2
  2181  016B  1283               	bcf	3,5	;RP0=0, select bank0
  2182  016C  1303               	bcf	3,6	;RP1=0, select bank0
  2183  016D  00C7               	movwf	??_ajustes+2
  2184  016E  3004               	movlw	4
  2185  016F  00C6               	movwf	??_ajustes+1
  2186  0170  30B9               	movlw	185
  2187  0171  00C5               	movwf	??_ajustes
  2188  0172                     u3837:
  2189  0172  0BC5               	decfsz	??_ajustes,f
  2190  0173  2972               	goto	u3837
  2191  0174  0BC6               	decfsz	??_ajustes+1,f
  2192  0175  2972               	goto	u3837
  2193  0176  0BC7               	decfsz	??_ajustes+2,f
  2194  0177  2972               	goto	u3837
  2195  0178  2979               	nop2
  2196                           
  2197                           ;main.c: 177:       while(PORTBbits.RB0!=0)
  2198  0179  29D9               	goto	l3072
  2199  017A                     l3060:
  2200                           
  2201                           ;main.c: 178:       {;main.c: 179:           _delay((unsigned long)((200)*(4000000/4000.
      +                          0)));
  2202  017A  3002               	movlw	2
  2203  017B  1283               	bcf	3,5	;RP0=0, select bank0
  2204  017C  1303               	bcf	3,6	;RP1=0, select bank0
  2205  017D  00C7               	movwf	??_ajustes+2
  2206  017E  3004               	movlw	4
  2207  017F  00C6               	movwf	??_ajustes+1
  2208  0180  30B9               	movlw	185
  2209  0181  00C5               	movwf	??_ajustes
  2210  0182                     u3847:
  2211  0182  0BC5               	decfsz	??_ajustes,f
  2212  0183  2982               	goto	u3847
  2213  0184  0BC6               	decfsz	??_ajustes+1,f
  2214  0185  2982               	goto	u3847
  2215  0186  0BC7               	decfsz	??_ajustes+2,f
  2216  0187  2982               	goto	u3847
  2217  0188  2989               	nop2
  2218  0189                     l3062:
  2219                           
  2220                           ;main.c: 180:           imprime_tela_ajuste3(*hora_min,*min_min);
  2221  0189  1283               	bcf	3,5	;RP0=0, select bank0
  2222  018A  1303               	bcf	3,6	;RP1=0, select bank0
  2223  018B  0841               	movf	ajustes@hora_min,w
  2224  018C  0084               	movwf	4
  2225  018D  1383               	bcf	3,7	;select IRP bank0
  2226  018E  0800               	movf	0,w
  2227  018F  00BC               	movwf	imprime_tela_ajuste3@horas_min
  2228  0190  0A84               	incf	4,f
  2229  0191  0800               	movf	0,w
  2230  0192  00BD               	movwf	imprime_tela_ajuste3@horas_min+1
  2231  0193  0842               	movf	ajustes@min_min,w
  2232  0194  0084               	movwf	4
  2233  0195  0800               	movf	0,w
  2234  0196  00BE               	movwf	imprime_tela_ajuste3@minutos_min
  2235  0197  0A84               	incf	4,f
  2236  0198  0800               	movf	0,w
  2237  0199  00BF               	movwf	imprime_tela_ajuste3@minutos_min+1
  2238  019A  120A  158A  2322  120A  118A  	fcall	_imprime_tela_ajuste3
  2239  019F                     l3064:
  2240                           
  2241                           ;main.c: 181:           if(PORTBbits.RB1==0)
  2242  019F  1283               	bcf	3,5	;RP0=0, select bank0
  2243  01A0  1303               	bcf	3,6	;RP1=0, select bank0
  2244  01A1  1886               	btfsc	6,1	;volatile
  2245  01A2  29A4               	goto	u3441
  2246  01A3  29A5               	goto	u3440
  2247  01A4                     u3441:
  2248  01A4  29BC               	goto	l3068
  2249  01A5                     u3440:
  2250  01A5                     l3066:
  2251                           
  2252                           ;main.c: 182:           {;main.c: 183:               *hora_min=*hora_min+1;
  2253  01A5  0841               	movf	ajustes@hora_min,w
  2254  01A6  0084               	movwf	4
  2255  01A7  1383               	bcf	3,7	;select IRP bank0
  2256  01A8  0800               	movf	0,w
  2257  01A9  00C5               	movwf	??_ajustes
  2258  01AA  0A84               	incf	4,f
  2259  01AB  0800               	movf	0,w
  2260  01AC  00C6               	movwf	??_ajustes+1
  2261  01AD  0845               	movf	??_ajustes,w
  2262  01AE  3E01               	addlw	1
  2263  01AF  00C7               	movwf	??_ajustes+2
  2264  01B0  0846               	movf	??_ajustes+1,w
  2265  01B1  1803               	skipnc
  2266  01B2  3E01               	addlw	1
  2267  01B3  3E00               	addlw	0
  2268  01B4  00C8               	movwf	??_ajustes+3
  2269  01B5  0841               	movf	ajustes@hora_min,w
  2270  01B6  0084               	movwf	4
  2271  01B7  0847               	movf	??_ajustes+2,w
  2272  01B8  0080               	movwf	0
  2273  01B9  0A84               	incf	4,f
  2274  01BA  0848               	movf	??_ajustes+3,w
  2275  01BB  0080               	movwf	0
  2276  01BC                     l3068:
  2277                           
  2278                           ;main.c: 185:           if (*hora_min>23)
  2279  01BC  0841               	movf	ajustes@hora_min,w
  2280  01BD  0084               	movwf	4
  2281  01BE  1383               	bcf	3,7	;select IRP bank0
  2282  01BF  0800               	movf	0,w
  2283  01C0  00C5               	movwf	??_ajustes
  2284  01C1  0A84               	incf	4,f
  2285  01C2  0800               	movf	0,w
  2286  01C3  00C6               	movwf	??_ajustes+1
  2287  01C4  0846               	movf	??_ajustes+1,w
  2288  01C5  3A80               	xorlw	128
  2289  01C6  00FF               	movwf	btemp+1
  2290  01C7  3080               	movlw	128
  2291  01C8  027F               	subwf	btemp+1,w
  2292  01C9  1D03               	skipz
  2293  01CA  29CD               	goto	u3455
  2294  01CB  3018               	movlw	24
  2295  01CC  0245               	subwf	??_ajustes,w
  2296  01CD                     u3455:
  2297  01CD  1C03               	skipc
  2298  01CE  29D0               	goto	u3451
  2299  01CF  29D1               	goto	u3450
  2300  01D0                     u3451:
  2301  01D0  29D9               	goto	l3072
  2302  01D1                     u3450:
  2303  01D1                     l3070:
  2304                           
  2305                           ;main.c: 186:               *hora_min=0;
  2306  01D1  1283               	bcf	3,5	;RP0=0, select bank0
  2307  01D2  1303               	bcf	3,6	;RP1=0, select bank0
  2308  01D3  0841               	movf	ajustes@hora_min,w
  2309  01D4  0084               	movwf	4
  2310  01D5  1383               	bcf	3,7	;select IRP bank0
  2311  01D6  0180               	clrf	0
  2312  01D7  0A84               	incf	4,f
  2313  01D8  0180               	clrf	0
  2314  01D9                     l3072:
  2315                           
  2316                           ;main.c: 177:       while(PORTBbits.RB0!=0)
  2317  01D9  1283               	bcf	3,5	;RP0=0, select bank0
  2318  01DA  1303               	bcf	3,6	;RP1=0, select bank0
  2319  01DB  1806               	btfsc	6,0	;volatile
  2320  01DC  29DE               	goto	u3461
  2321  01DD  29DF               	goto	u3460
  2322  01DE                     u3461:
  2323  01DE  297A               	goto	l3060
  2324  01DF                     u3460:
  2325  01DF                     l3074:
  2326                           
  2327                           ;main.c: 188:       _delay((unsigned long)((200)*(4000000/4000.0)));
  2328  01DF  3002               	movlw	2
  2329  01E0  1283               	bcf	3,5	;RP0=0, select bank0
  2330  01E1  1303               	bcf	3,6	;RP1=0, select bank0
  2331  01E2  00C7               	movwf	??_ajustes+2
  2332  01E3  3004               	movlw	4
  2333  01E4  00C6               	movwf	??_ajustes+1
  2334  01E5  30B9               	movlw	185
  2335  01E6  00C5               	movwf	??_ajustes
  2336  01E7                     u3857:
  2337  01E7  0BC5               	decfsz	??_ajustes,f
  2338  01E8  29E7               	goto	u3857
  2339  01E9  0BC6               	decfsz	??_ajustes+1,f
  2340  01EA  29E7               	goto	u3857
  2341  01EB  0BC7               	decfsz	??_ajustes+2,f
  2342  01EC  29E7               	goto	u3857
  2343  01ED  29EE               	nop2
  2344                           
  2345                           ;main.c: 189:       while(PORTBbits.RB0!=0)
  2346  01EE  2A4E               	goto	l3088
  2347  01EF                     l3076:
  2348                           
  2349                           ;main.c: 190:       {;main.c: 191:           _delay((unsigned long)((200)*(4000000/4000.
      +                          0)));
  2350  01EF  3002               	movlw	2
  2351  01F0  1283               	bcf	3,5	;RP0=0, select bank0
  2352  01F1  1303               	bcf	3,6	;RP1=0, select bank0
  2353  01F2  00C7               	movwf	??_ajustes+2
  2354  01F3  3004               	movlw	4
  2355  01F4  00C6               	movwf	??_ajustes+1
  2356  01F5  30B9               	movlw	185
  2357  01F6  00C5               	movwf	??_ajustes
  2358  01F7                     u3867:
  2359  01F7  0BC5               	decfsz	??_ajustes,f
  2360  01F8  29F7               	goto	u3867
  2361  01F9  0BC6               	decfsz	??_ajustes+1,f
  2362  01FA  29F7               	goto	u3867
  2363  01FB  0BC7               	decfsz	??_ajustes+2,f
  2364  01FC  29F7               	goto	u3867
  2365  01FD  29FE               	nop2
  2366  01FE                     l3078:
  2367                           
  2368                           ;main.c: 192:           imprime_tela_ajuste3(*hora_min,*min_min);
  2369  01FE  1283               	bcf	3,5	;RP0=0, select bank0
  2370  01FF  1303               	bcf	3,6	;RP1=0, select bank0
  2371  0200  0841               	movf	ajustes@hora_min,w
  2372  0201  0084               	movwf	4
  2373  0202  1383               	bcf	3,7	;select IRP bank0
  2374  0203  0800               	movf	0,w
  2375  0204  00BC               	movwf	imprime_tela_ajuste3@horas_min
  2376  0205  0A84               	incf	4,f
  2377  0206  0800               	movf	0,w
  2378  0207  00BD               	movwf	imprime_tela_ajuste3@horas_min+1
  2379  0208  0842               	movf	ajustes@min_min,w
  2380  0209  0084               	movwf	4
  2381  020A  0800               	movf	0,w
  2382  020B  00BE               	movwf	imprime_tela_ajuste3@minutos_min
  2383  020C  0A84               	incf	4,f
  2384  020D  0800               	movf	0,w
  2385  020E  00BF               	movwf	imprime_tela_ajuste3@minutos_min+1
  2386  020F  120A  158A  2322  120A  118A  	fcall	_imprime_tela_ajuste3
  2387  0214                     l3080:
  2388                           
  2389                           ;main.c: 193:           if(PORTBbits.RB1==0)
  2390  0214  1283               	bcf	3,5	;RP0=0, select bank0
  2391  0215  1303               	bcf	3,6	;RP1=0, select bank0
  2392  0216  1886               	btfsc	6,1	;volatile
  2393  0217  2A19               	goto	u3471
  2394  0218  2A1A               	goto	u3470
  2395  0219                     u3471:
  2396  0219  2A31               	goto	l3084
  2397  021A                     u3470:
  2398  021A                     l3082:
  2399                           
  2400                           ;main.c: 194:           {;main.c: 195:               *min_min=*min_min+1;
  2401  021A  0842               	movf	ajustes@min_min,w
  2402  021B  0084               	movwf	4
  2403  021C  1383               	bcf	3,7	;select IRP bank0
  2404  021D  0800               	movf	0,w
  2405  021E  00C5               	movwf	??_ajustes
  2406  021F  0A84               	incf	4,f
  2407  0220  0800               	movf	0,w
  2408  0221  00C6               	movwf	??_ajustes+1
  2409  0222  0845               	movf	??_ajustes,w
  2410  0223  3E01               	addlw	1
  2411  0224  00C7               	movwf	??_ajustes+2
  2412  0225  0846               	movf	??_ajustes+1,w
  2413  0226  1803               	skipnc
  2414  0227  3E01               	addlw	1
  2415  0228  3E00               	addlw	0
  2416  0229  00C8               	movwf	??_ajustes+3
  2417  022A  0842               	movf	ajustes@min_min,w
  2418  022B  0084               	movwf	4
  2419  022C  0847               	movf	??_ajustes+2,w
  2420  022D  0080               	movwf	0
  2421  022E  0A84               	incf	4,f
  2422  022F  0848               	movf	??_ajustes+3,w
  2423  0230  0080               	movwf	0
  2424  0231                     l3084:
  2425                           
  2426                           ;main.c: 197:           if (*min_min>59)
  2427  0231  0842               	movf	ajustes@min_min,w
  2428  0232  0084               	movwf	4
  2429  0233  1383               	bcf	3,7	;select IRP bank0
  2430  0234  0800               	movf	0,w
  2431  0235  00C5               	movwf	??_ajustes
  2432  0236  0A84               	incf	4,f
  2433  0237  0800               	movf	0,w
  2434  0238  00C6               	movwf	??_ajustes+1
  2435  0239  0846               	movf	??_ajustes+1,w
  2436  023A  3A80               	xorlw	128
  2437  023B  00FF               	movwf	btemp+1
  2438  023C  3080               	movlw	128
  2439  023D  027F               	subwf	btemp+1,w
  2440  023E  1D03               	skipz
  2441  023F  2A42               	goto	u3485
  2442  0240  303C               	movlw	60
  2443  0241  0245               	subwf	??_ajustes,w
  2444  0242                     u3485:
  2445  0242  1C03               	skipc
  2446  0243  2A45               	goto	u3481
  2447  0244  2A46               	goto	u3480
  2448  0245                     u3481:
  2449  0245  2A4E               	goto	l3088
  2450  0246                     u3480:
  2451  0246                     l3086:
  2452                           
  2453                           ;main.c: 198:               *min_min=0;
  2454  0246  1283               	bcf	3,5	;RP0=0, select bank0
  2455  0247  1303               	bcf	3,6	;RP1=0, select bank0
  2456  0248  0842               	movf	ajustes@min_min,w
  2457  0249  0084               	movwf	4
  2458  024A  1383               	bcf	3,7	;select IRP bank0
  2459  024B  0180               	clrf	0
  2460  024C  0A84               	incf	4,f
  2461  024D  0180               	clrf	0
  2462  024E                     l3088:
  2463                           
  2464                           ;main.c: 189:       while(PORTBbits.RB0!=0)
  2465  024E  1283               	bcf	3,5	;RP0=0, select bank0
  2466  024F  1303               	bcf	3,6	;RP1=0, select bank0
  2467  0250  1806               	btfsc	6,0	;volatile
  2468  0251  2A53               	goto	u3491
  2469  0252  2A54               	goto	u3490
  2470  0253                     u3491:
  2471  0253  29EF               	goto	l3076
  2472  0254                     u3490:
  2473  0254                     l3090:
  2474                           
  2475                           ;main.c: 200:       LCD_Cmd(0x01);
  2476  0254  3001               	movlw	1
  2477  0255  120A  158A  2201  120A  118A  	fcall	_LCD_Cmd
  2478  025A                     l3092:
  2479                           
  2480                           ;main.c: 201:       imprime_tela_ajuste4(*hora_max,*min_max);
  2481  025A  1283               	bcf	3,5	;RP0=0, select bank0
  2482  025B  1303               	bcf	3,6	;RP1=0, select bank0
  2483  025C  0843               	movf	ajustes@hora_max,w
  2484  025D  0084               	movwf	4
  2485  025E  1383               	bcf	3,7	;select IRP bank0
  2486  025F  0800               	movf	0,w
  2487  0260  00BC               	movwf	imprime_tela_ajuste4@horas_max
  2488  0261  0A84               	incf	4,f
  2489  0262  0800               	movf	0,w
  2490  0263  00BD               	movwf	imprime_tela_ajuste4@horas_max+1
  2491  0264  0844               	movf	ajustes@min_max,w
  2492  0265  0084               	movwf	4
  2493  0266  0800               	movf	0,w
  2494  0267  00BE               	movwf	imprime_tela_ajuste4@minutos_max
  2495  0268  0A84               	incf	4,f
  2496  0269  0800               	movf	0,w
  2497  026A  00BF               	movwf	imprime_tela_ajuste4@minutos_max+1
  2498  026B  120A  158A  2365  120A  118A  	fcall	_imprime_tela_ajuste4
  2499  0270                     l3094:
  2500                           
  2501                           ;main.c: 202:       _delay((unsigned long)((200)*(4000000/4000.0)));
  2502  0270  3002               	movlw	2
  2503  0271  1283               	bcf	3,5	;RP0=0, select bank0
  2504  0272  1303               	bcf	3,6	;RP1=0, select bank0
  2505  0273  00C7               	movwf	??_ajustes+2
  2506  0274  3004               	movlw	4
  2507  0275  00C6               	movwf	??_ajustes+1
  2508  0276  30B9               	movlw	185
  2509  0277  00C5               	movwf	??_ajustes
  2510  0278                     u3877:
  2511  0278  0BC5               	decfsz	??_ajustes,f
  2512  0279  2A78               	goto	u3877
  2513  027A  0BC6               	decfsz	??_ajustes+1,f
  2514  027B  2A78               	goto	u3877
  2515  027C  0BC7               	decfsz	??_ajustes+2,f
  2516  027D  2A78               	goto	u3877
  2517  027E  2A7F               	nop2
  2518                           
  2519                           ;main.c: 203:       while(PORTBbits.RB0!=0)
  2520  027F  2ADF               	goto	l3108
  2521  0280                     l3096:
  2522                           
  2523                           ;main.c: 204:       {;main.c: 205:           _delay((unsigned long)((200)*(4000000/4000.
      +                          0)));
  2524  0280  3002               	movlw	2
  2525  0281  1283               	bcf	3,5	;RP0=0, select bank0
  2526  0282  1303               	bcf	3,6	;RP1=0, select bank0
  2527  0283  00C7               	movwf	??_ajustes+2
  2528  0284  3004               	movlw	4
  2529  0285  00C6               	movwf	??_ajustes+1
  2530  0286  30B9               	movlw	185
  2531  0287  00C5               	movwf	??_ajustes
  2532  0288                     u3887:
  2533  0288  0BC5               	decfsz	??_ajustes,f
  2534  0289  2A88               	goto	u3887
  2535  028A  0BC6               	decfsz	??_ajustes+1,f
  2536  028B  2A88               	goto	u3887
  2537  028C  0BC7               	decfsz	??_ajustes+2,f
  2538  028D  2A88               	goto	u3887
  2539  028E  2A8F               	nop2
  2540  028F                     l3098:
  2541                           
  2542                           ;main.c: 206:           imprime_tela_ajuste4(*hora_max,*min_max);
  2543  028F  1283               	bcf	3,5	;RP0=0, select bank0
  2544  0290  1303               	bcf	3,6	;RP1=0, select bank0
  2545  0291  0843               	movf	ajustes@hora_max,w
  2546  0292  0084               	movwf	4
  2547  0293  1383               	bcf	3,7	;select IRP bank0
  2548  0294  0800               	movf	0,w
  2549  0295  00BC               	movwf	imprime_tela_ajuste4@horas_max
  2550  0296  0A84               	incf	4,f
  2551  0297  0800               	movf	0,w
  2552  0298  00BD               	movwf	imprime_tela_ajuste4@horas_max+1
  2553  0299  0844               	movf	ajustes@min_max,w
  2554  029A  0084               	movwf	4
  2555  029B  0800               	movf	0,w
  2556  029C  00BE               	movwf	imprime_tela_ajuste4@minutos_max
  2557  029D  0A84               	incf	4,f
  2558  029E  0800               	movf	0,w
  2559  029F  00BF               	movwf	imprime_tela_ajuste4@minutos_max+1
  2560  02A0  120A  158A  2365  120A  118A  	fcall	_imprime_tela_ajuste4
  2561  02A5                     l3100:
  2562                           
  2563                           ;main.c: 207:           if(PORTBbits.RB1==0)
  2564  02A5  1283               	bcf	3,5	;RP0=0, select bank0
  2565  02A6  1303               	bcf	3,6	;RP1=0, select bank0
  2566  02A7  1886               	btfsc	6,1	;volatile
  2567  02A8  2AAA               	goto	u3501
  2568  02A9  2AAB               	goto	u3500
  2569  02AA                     u3501:
  2570  02AA  2AC2               	goto	l3104
  2571  02AB                     u3500:
  2572  02AB                     l3102:
  2573                           
  2574                           ;main.c: 208:           {;main.c: 209:               *hora_max=*hora_max+1;
  2575  02AB  0843               	movf	ajustes@hora_max,w
  2576  02AC  0084               	movwf	4
  2577  02AD  1383               	bcf	3,7	;select IRP bank0
  2578  02AE  0800               	movf	0,w
  2579  02AF  00C5               	movwf	??_ajustes
  2580  02B0  0A84               	incf	4,f
  2581  02B1  0800               	movf	0,w
  2582  02B2  00C6               	movwf	??_ajustes+1
  2583  02B3  0845               	movf	??_ajustes,w
  2584  02B4  3E01               	addlw	1
  2585  02B5  00C7               	movwf	??_ajustes+2
  2586  02B6  0846               	movf	??_ajustes+1,w
  2587  02B7  1803               	skipnc
  2588  02B8  3E01               	addlw	1
  2589  02B9  3E00               	addlw	0
  2590  02BA  00C8               	movwf	??_ajustes+3
  2591  02BB  0843               	movf	ajustes@hora_max,w
  2592  02BC  0084               	movwf	4
  2593  02BD  0847               	movf	??_ajustes+2,w
  2594  02BE  0080               	movwf	0
  2595  02BF  0A84               	incf	4,f
  2596  02C0  0848               	movf	??_ajustes+3,w
  2597  02C1  0080               	movwf	0
  2598  02C2                     l3104:
  2599                           
  2600                           ;main.c: 211:           if (*hora_max>23)
  2601  02C2  0843               	movf	ajustes@hora_max,w
  2602  02C3  0084               	movwf	4
  2603  02C4  1383               	bcf	3,7	;select IRP bank0
  2604  02C5  0800               	movf	0,w
  2605  02C6  00C5               	movwf	??_ajustes
  2606  02C7  0A84               	incf	4,f
  2607  02C8  0800               	movf	0,w
  2608  02C9  00C6               	movwf	??_ajustes+1
  2609  02CA  0846               	movf	??_ajustes+1,w
  2610  02CB  3A80               	xorlw	128
  2611  02CC  00FF               	movwf	btemp+1
  2612  02CD  3080               	movlw	128
  2613  02CE  027F               	subwf	btemp+1,w
  2614  02CF  1D03               	skipz
  2615  02D0  2AD3               	goto	u3515
  2616  02D1  3018               	movlw	24
  2617  02D2  0245               	subwf	??_ajustes,w
  2618  02D3                     u3515:
  2619  02D3  1C03               	skipc
  2620  02D4  2AD6               	goto	u3511
  2621  02D5  2AD7               	goto	u3510
  2622  02D6                     u3511:
  2623  02D6  2ADF               	goto	l3108
  2624  02D7                     u3510:
  2625  02D7                     l3106:
  2626                           
  2627                           ;main.c: 212:               *hora_max=0;
  2628  02D7  1283               	bcf	3,5	;RP0=0, select bank0
  2629  02D8  1303               	bcf	3,6	;RP1=0, select bank0
  2630  02D9  0843               	movf	ajustes@hora_max,w
  2631  02DA  0084               	movwf	4
  2632  02DB  1383               	bcf	3,7	;select IRP bank0
  2633  02DC  0180               	clrf	0
  2634  02DD  0A84               	incf	4,f
  2635  02DE  0180               	clrf	0
  2636  02DF                     l3108:
  2637                           
  2638                           ;main.c: 203:       while(PORTBbits.RB0!=0)
  2639  02DF  1283               	bcf	3,5	;RP0=0, select bank0
  2640  02E0  1303               	bcf	3,6	;RP1=0, select bank0
  2641  02E1  1806               	btfsc	6,0	;volatile
  2642  02E2  2AE4               	goto	u3521
  2643  02E3  2AE5               	goto	u3520
  2644  02E4                     u3521:
  2645  02E4  2A80               	goto	l3096
  2646  02E5                     u3520:
  2647  02E5                     l3110:
  2648                           
  2649                           ;main.c: 214:       _delay((unsigned long)((200)*(4000000/4000.0)));
  2650  02E5  3002               	movlw	2
  2651  02E6  1283               	bcf	3,5	;RP0=0, select bank0
  2652  02E7  1303               	bcf	3,6	;RP1=0, select bank0
  2653  02E8  00C7               	movwf	??_ajustes+2
  2654  02E9  3004               	movlw	4
  2655  02EA  00C6               	movwf	??_ajustes+1
  2656  02EB  30B9               	movlw	185
  2657  02EC  00C5               	movwf	??_ajustes
  2658  02ED                     u3897:
  2659  02ED  0BC5               	decfsz	??_ajustes,f
  2660  02EE  2AED               	goto	u3897
  2661  02EF  0BC6               	decfsz	??_ajustes+1,f
  2662  02F0  2AED               	goto	u3897
  2663  02F1  0BC7               	decfsz	??_ajustes+2,f
  2664  02F2  2AED               	goto	u3897
  2665  02F3  2AF4               	nop2
  2666                           
  2667                           ;main.c: 215:       while(PORTBbits.RB0!=0)
  2668  02F4  2B54               	goto	l3124
  2669  02F5                     l3112:
  2670                           
  2671                           ;main.c: 216:       {;main.c: 217:           _delay((unsigned long)((200)*(4000000/4000.
      +                          0)));
  2672  02F5  3002               	movlw	2
  2673  02F6  1283               	bcf	3,5	;RP0=0, select bank0
  2674  02F7  1303               	bcf	3,6	;RP1=0, select bank0
  2675  02F8  00C7               	movwf	??_ajustes+2
  2676  02F9  3004               	movlw	4
  2677  02FA  00C6               	movwf	??_ajustes+1
  2678  02FB  30B9               	movlw	185
  2679  02FC  00C5               	movwf	??_ajustes
  2680  02FD                     u3907:
  2681  02FD  0BC5               	decfsz	??_ajustes,f
  2682  02FE  2AFD               	goto	u3907
  2683  02FF  0BC6               	decfsz	??_ajustes+1,f
  2684  0300  2AFD               	goto	u3907
  2685  0301  0BC7               	decfsz	??_ajustes+2,f
  2686  0302  2AFD               	goto	u3907
  2687  0303  2B04               	nop2
  2688  0304                     l3114:
  2689                           
  2690                           ;main.c: 218:           imprime_tela_ajuste4(*hora_max,*min_max);
  2691  0304  1283               	bcf	3,5	;RP0=0, select bank0
  2692  0305  1303               	bcf	3,6	;RP1=0, select bank0
  2693  0306  0843               	movf	ajustes@hora_max,w
  2694  0307  0084               	movwf	4
  2695  0308  1383               	bcf	3,7	;select IRP bank0
  2696  0309  0800               	movf	0,w
  2697  030A  00BC               	movwf	imprime_tela_ajuste4@horas_max
  2698  030B  0A84               	incf	4,f
  2699  030C  0800               	movf	0,w
  2700  030D  00BD               	movwf	imprime_tela_ajuste4@horas_max+1
  2701  030E  0844               	movf	ajustes@min_max,w
  2702  030F  0084               	movwf	4
  2703  0310  0800               	movf	0,w
  2704  0311  00BE               	movwf	imprime_tela_ajuste4@minutos_max
  2705  0312  0A84               	incf	4,f
  2706  0313  0800               	movf	0,w
  2707  0314  00BF               	movwf	imprime_tela_ajuste4@minutos_max+1
  2708  0315  120A  158A  2365  120A  118A  	fcall	_imprime_tela_ajuste4
  2709  031A                     l3116:
  2710                           
  2711                           ;main.c: 219:           if(PORTBbits.RB1==0)
  2712  031A  1283               	bcf	3,5	;RP0=0, select bank0
  2713  031B  1303               	bcf	3,6	;RP1=0, select bank0
  2714  031C  1886               	btfsc	6,1	;volatile
  2715  031D  2B1F               	goto	u3531
  2716  031E  2B20               	goto	u3530
  2717  031F                     u3531:
  2718  031F  2B37               	goto	l3120
  2719  0320                     u3530:
  2720  0320                     l3118:
  2721                           
  2722                           ;main.c: 220:           {;main.c: 221:               *min_max=*min_max+1;
  2723  0320  0844               	movf	ajustes@min_max,w
  2724  0321  0084               	movwf	4
  2725  0322  1383               	bcf	3,7	;select IRP bank0
  2726  0323  0800               	movf	0,w
  2727  0324  00C5               	movwf	??_ajustes
  2728  0325  0A84               	incf	4,f
  2729  0326  0800               	movf	0,w
  2730  0327  00C6               	movwf	??_ajustes+1
  2731  0328  0845               	movf	??_ajustes,w
  2732  0329  3E01               	addlw	1
  2733  032A  00C7               	movwf	??_ajustes+2
  2734  032B  0846               	movf	??_ajustes+1,w
  2735  032C  1803               	skipnc
  2736  032D  3E01               	addlw	1
  2737  032E  3E00               	addlw	0
  2738  032F  00C8               	movwf	??_ajustes+3
  2739  0330  0844               	movf	ajustes@min_max,w
  2740  0331  0084               	movwf	4
  2741  0332  0847               	movf	??_ajustes+2,w
  2742  0333  0080               	movwf	0
  2743  0334  0A84               	incf	4,f
  2744  0335  0848               	movf	??_ajustes+3,w
  2745  0336  0080               	movwf	0
  2746  0337                     l3120:
  2747                           
  2748                           ;main.c: 223:           if (*min_max>59)
  2749  0337  0844               	movf	ajustes@min_max,w
  2750  0338  0084               	movwf	4
  2751  0339  1383               	bcf	3,7	;select IRP bank0
  2752  033A  0800               	movf	0,w
  2753  033B  00C5               	movwf	??_ajustes
  2754  033C  0A84               	incf	4,f
  2755  033D  0800               	movf	0,w
  2756  033E  00C6               	movwf	??_ajustes+1
  2757  033F  0846               	movf	??_ajustes+1,w
  2758  0340  3A80               	xorlw	128
  2759  0341  00FF               	movwf	btemp+1
  2760  0342  3080               	movlw	128
  2761  0343  027F               	subwf	btemp+1,w
  2762  0344  1D03               	skipz
  2763  0345  2B48               	goto	u3545
  2764  0346  303C               	movlw	60
  2765  0347  0245               	subwf	??_ajustes,w
  2766  0348                     u3545:
  2767  0348  1C03               	skipc
  2768  0349  2B4B               	goto	u3541
  2769  034A  2B4C               	goto	u3540
  2770  034B                     u3541:
  2771  034B  2B54               	goto	l3124
  2772  034C                     u3540:
  2773  034C                     l3122:
  2774                           
  2775                           ;main.c: 224:               *min_max=0;
  2776  034C  1283               	bcf	3,5	;RP0=0, select bank0
  2777  034D  1303               	bcf	3,6	;RP1=0, select bank0
  2778  034E  0844               	movf	ajustes@min_max,w
  2779  034F  0084               	movwf	4
  2780  0350  1383               	bcf	3,7	;select IRP bank0
  2781  0351  0180               	clrf	0
  2782  0352  0A84               	incf	4,f
  2783  0353  0180               	clrf	0
  2784  0354                     l3124:
  2785                           
  2786                           ;main.c: 215:       while(PORTBbits.RB0!=0)
  2787  0354  1283               	bcf	3,5	;RP0=0, select bank0
  2788  0355  1303               	bcf	3,6	;RP1=0, select bank0
  2789  0356  1806               	btfsc	6,0	;volatile
  2790  0357  2B59               	goto	u3551
  2791  0358  2B5A               	goto	u3550
  2792  0359                     u3551:
  2793  0359  2AF5               	goto	l3112
  2794  035A                     u3550:
  2795  035A                     l3126:
  2796                           
  2797                           ;main.c: 226:       _delay((unsigned long)((200)*(4000000/4000.0)));
  2798  035A  3002               	movlw	2
  2799  035B  1283               	bcf	3,5	;RP0=0, select bank0
  2800  035C  1303               	bcf	3,6	;RP1=0, select bank0
  2801  035D  00C7               	movwf	??_ajustes+2
  2802  035E  3004               	movlw	4
  2803  035F  00C6               	movwf	??_ajustes+1
  2804  0360  30B9               	movlw	185
  2805  0361  00C5               	movwf	??_ajustes
  2806  0362                     u3917:
  2807  0362  0BC5               	decfsz	??_ajustes,f
  2808  0363  2B62               	goto	u3917
  2809  0364  0BC6               	decfsz	??_ajustes+1,f
  2810  0365  2B62               	goto	u3917
  2811  0366  0BC7               	decfsz	??_ajustes+2,f
  2812  0367  2B62               	goto	u3917
  2813  0368  2B69               	nop2
  2814  0369                     l3128:
  2815                           
  2816                           ;main.c: 228:       LCD_Cmd(0x01);
  2817  0369  3001               	movlw	1
  2818  036A  120A  158A  2201  120A  118A  	fcall	_LCD_Cmd
  2819  036F                     l151:
  2820  036F  0008               	return
  2821  0370                     __end_of_ajustes:
  2822                           
  2823                           	psect	text5
  2824  0B65                     __ptext5:	
  2825 ;; *************** function _imprime_tela_ajuste4 *****************
  2826 ;; Defined at:
  2827 ;;		line 119 in file "main.c"
  2828 ;; Parameters:    Size  Location     Type
  2829 ;;  horas_max       2   28[BANK0 ] int 
  2830 ;;  minutos_max     2   30[BANK0 ] int 
  2831 ;; Auto vars:     Size  Location     Type
  2832 ;;		None
  2833 ;; Return value:  Size  Location     Type
  2834 ;;                  1    wreg      void 
  2835 ;; Registers used:
  2836 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2837 ;; Tracked objects:
  2838 ;;		On entry : 0/0
  2839 ;;		On exit  : 0/0
  2840 ;;		Unchanged: 0/0
  2841 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2842 ;;      Params:         0       4       0       0       0
  2843 ;;      Locals:         0       0       0       0       0
  2844 ;;      Temps:          0       1       0       0       0
  2845 ;;      Totals:         0       5       0       0       0
  2846 ;;Total ram usage:        5 bytes
  2847 ;; Hardware stack levels used:    1
  2848 ;; Hardware stack levels required when called:    4
  2849 ;; This function calls:
  2850 ;;		_LCD_Goto
  2851 ;;		_LCD_Print
  2852 ;;		_sprintf
  2853 ;; This function is called by:
  2854 ;;		_ajustes
  2855 ;; This function uses a non-reentrant model
  2856 ;;
  2857                           
  2858                           
  2859                           ;psect for function _imprime_tela_ajuste4
  2860  0B65                     _imprime_tela_ajuste4:
  2861  0B65                     l2952:	
  2862                           ;incstack = 0
  2863                           ; Regs used in _imprime_tela_ajuste4: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstac
      +                          k]
  2864                           
  2865                           
  2866                           ;main.c: 119: void imprime_tela_ajuste4(int horas_max,int minutos_max);main.c: 120: {;ma
      +                          in.c: 121:    LCD_Goto(1, 1);
  2867  0B65  1283               	bcf	3,5	;RP0=0, select bank0
  2868  0B66  1303               	bcf	3,6	;RP1=0, select bank0
  2869  0B67  01A1               	clrf	LCD_Goto@row
  2870  0B68  0AA1               	incf	LCD_Goto@row,f
  2871  0B69  3001               	movlw	1
  2872  0B6A  120A  158A  2232  120A  158A  	fcall	_LCD_Goto
  2873  0B6F                     l2954:
  2874                           
  2875                           ;main.c: 122:    sprintf(LCD_Cstring,"Stop time:");
  2876  0B6F  3071               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  2877  0B70  1283               	bcf	3,5	;RP0=0, select bank0
  2878  0B71  1303               	bcf	3,6	;RP1=0, select bank0
  2879  0B72  00C0               	movwf	??_imprime_tela_ajuste4
  2880  0B73  0840               	movf	??_imprime_tela_ajuste4,w
  2881  0B74  00A9               	movwf	sprintf@f
  2882  0B75  30A0               	movlw	(low (_LCD_Cstring| 0))& (0+255)
  2883  0B76  120A  118A  254D  120A  158A  	fcall	_sprintf
  2884  0B7B                     l2956:
  2885                           
  2886                           ;main.c: 123:    LCD_Print(LCD_Cstring);
  2887  0B7B  30A0               	movlw	(low (_LCD_Cstring| 0))& (0+255)
  2888  0B7C  120A  158A  226A  120A  158A  	fcall	_LCD_Print
  2889  0B81                     l2958:
  2890                           
  2891                           ;main.c: 125:       LCD_Goto(1, 2);
  2892  0B81  3002               	movlw	2
  2893  0B82  1283               	bcf	3,5	;RP0=0, select bank0
  2894  0B83  1303               	bcf	3,6	;RP1=0, select bank0
  2895  0B84  00C0               	movwf	??_imprime_tela_ajuste4
  2896  0B85  0840               	movf	??_imprime_tela_ajuste4,w
  2897  0B86  00A1               	movwf	LCD_Goto@row
  2898  0B87  3001               	movlw	1
  2899  0B88  120A  158A  2232  120A  158A  	fcall	_LCD_Goto
  2900  0B8D                     l2960:
  2901                           
  2902                           ;main.c: 126:    sprintf(LCD_Cstring,"     %02d:%02d     ",horas_max,minutos_max);
  2903  0B8D  3022               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  2904  0B8E  1283               	bcf	3,5	;RP0=0, select bank0
  2905  0B8F  1303               	bcf	3,6	;RP1=0, select bank0
  2906  0B90  00C0               	movwf	??_imprime_tela_ajuste4
  2907  0B91  0840               	movf	??_imprime_tela_ajuste4,w
  2908  0B92  00A9               	movwf	sprintf@f
  2909  0B93  083D               	movf	imprime_tela_ajuste4@horas_max+1,w
  2910  0B94  00AB               	movwf	?_sprintf+2
  2911  0B95  083C               	movf	imprime_tela_ajuste4@horas_max,w
  2912  0B96  00AA               	movwf	?_sprintf+1
  2913  0B97  083F               	movf	imprime_tela_ajuste4@minutos_max+1,w
  2914  0B98  00AD               	movwf	?_sprintf+4
  2915  0B99  083E               	movf	imprime_tela_ajuste4@minutos_max,w
  2916  0B9A  00AC               	movwf	?_sprintf+3
  2917  0B9B  30A0               	movlw	(low (_LCD_Cstring| 0))& (0+255)
  2918  0B9C  120A  118A  254D  120A  158A  	fcall	_sprintf
  2919                           
  2920                           ;main.c: 127:    LCD_Print(LCD_Cstring);
  2921  0BA1  30A0               	movlw	(low (_LCD_Cstring| 0))& (0+255)
  2922  0BA2  120A  158A  226A  120A  158A  	fcall	_LCD_Print
  2923  0BA7                     l113:
  2924  0BA7  0008               	return
  2925  0BA8                     __end_of_imprime_tela_ajuste4:
  2926                           
  2927                           	psect	text6
  2928  0B22                     __ptext6:	
  2929 ;; *************** function _imprime_tela_ajuste3 *****************
  2930 ;; Defined at:
  2931 ;;		line 108 in file "main.c"
  2932 ;; Parameters:    Size  Location     Type
  2933 ;;  horas_min       2   28[BANK0 ] int 
  2934 ;;  minutos_min     2   30[BANK0 ] int 
  2935 ;; Auto vars:     Size  Location     Type
  2936 ;;		None
  2937 ;; Return value:  Size  Location     Type
  2938 ;;                  1    wreg      void 
  2939 ;; Registers used:
  2940 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2941 ;; Tracked objects:
  2942 ;;		On entry : 0/0
  2943 ;;		On exit  : 0/0
  2944 ;;		Unchanged: 0/0
  2945 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2946 ;;      Params:         0       4       0       0       0
  2947 ;;      Locals:         0       0       0       0       0
  2948 ;;      Temps:          0       1       0       0       0
  2949 ;;      Totals:         0       5       0       0       0
  2950 ;;Total ram usage:        5 bytes
  2951 ;; Hardware stack levels used:    1
  2952 ;; Hardware stack levels required when called:    4
  2953 ;; This function calls:
  2954 ;;		_LCD_Goto
  2955 ;;		_LCD_Print
  2956 ;;		_sprintf
  2957 ;; This function is called by:
  2958 ;;		_ajustes
  2959 ;; This function uses a non-reentrant model
  2960 ;;
  2961                           
  2962                           
  2963                           ;psect for function _imprime_tela_ajuste3
  2964  0B22                     _imprime_tela_ajuste3:
  2965  0B22                     l2942:	
  2966                           ;incstack = 0
  2967                           ; Regs used in _imprime_tela_ajuste3: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstac
      +                          k]
  2968                           
  2969                           
  2970                           ;main.c: 108: void imprime_tela_ajuste3(int horas_min,int minutos_min);main.c: 109: {;ma
      +                          in.c: 110:    LCD_Goto(1, 1);
  2971  0B22  1283               	bcf	3,5	;RP0=0, select bank0
  2972  0B23  1303               	bcf	3,6	;RP1=0, select bank0
  2973  0B24  01A1               	clrf	LCD_Goto@row
  2974  0B25  0AA1               	incf	LCD_Goto@row,f
  2975  0B26  3001               	movlw	1
  2976  0B27  120A  158A  2232  120A  158A  	fcall	_LCD_Goto
  2977  0B2C                     l2944:
  2978                           
  2979                           ;main.c: 111:    sprintf(LCD_Cstring,"Start time:");
  2980  0B2C  3059               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  2981  0B2D  1283               	bcf	3,5	;RP0=0, select bank0
  2982  0B2E  1303               	bcf	3,6	;RP1=0, select bank0
  2983  0B2F  00C0               	movwf	??_imprime_tela_ajuste3
  2984  0B30  0840               	movf	??_imprime_tela_ajuste3,w
  2985  0B31  00A9               	movwf	sprintf@f
  2986  0B32  30A0               	movlw	(low (_LCD_Cstring| 0))& (0+255)
  2987  0B33  120A  118A  254D  120A  158A  	fcall	_sprintf
  2988  0B38                     l2946:
  2989                           
  2990                           ;main.c: 112:    LCD_Print(LCD_Cstring);
  2991  0B38  30A0               	movlw	(low (_LCD_Cstring| 0))& (0+255)
  2992  0B39  120A  158A  226A  120A  158A  	fcall	_LCD_Print
  2993  0B3E                     l2948:
  2994                           
  2995                           ;main.c: 114:       LCD_Goto(1, 2);
  2996  0B3E  3002               	movlw	2
  2997  0B3F  1283               	bcf	3,5	;RP0=0, select bank0
  2998  0B40  1303               	bcf	3,6	;RP1=0, select bank0
  2999  0B41  00C0               	movwf	??_imprime_tela_ajuste3
  3000  0B42  0840               	movf	??_imprime_tela_ajuste3,w
  3001  0B43  00A1               	movwf	LCD_Goto@row
  3002  0B44  3001               	movlw	1
  3003  0B45  120A  158A  2232  120A  158A  	fcall	_LCD_Goto
  3004  0B4A                     l2950:
  3005                           
  3006                           ;main.c: 115:    sprintf(LCD_Cstring,"     %02d:%02d     ",horas_min,minutos_min);
  3007  0B4A  3022               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  3008  0B4B  1283               	bcf	3,5	;RP0=0, select bank0
  3009  0B4C  1303               	bcf	3,6	;RP1=0, select bank0
  3010  0B4D  00C0               	movwf	??_imprime_tela_ajuste3
  3011  0B4E  0840               	movf	??_imprime_tela_ajuste3,w
  3012  0B4F  00A9               	movwf	sprintf@f
  3013  0B50  083D               	movf	imprime_tela_ajuste3@horas_min+1,w
  3014  0B51  00AB               	movwf	?_sprintf+2
  3015  0B52  083C               	movf	imprime_tela_ajuste3@horas_min,w
  3016  0B53  00AA               	movwf	?_sprintf+1
  3017  0B54  083F               	movf	imprime_tela_ajuste3@minutos_min+1,w
  3018  0B55  00AD               	movwf	?_sprintf+4
  3019  0B56  083E               	movf	imprime_tela_ajuste3@minutos_min,w
  3020  0B57  00AC               	movwf	?_sprintf+3
  3021  0B58  30A0               	movlw	(low (_LCD_Cstring| 0))& (0+255)
  3022  0B59  120A  118A  254D  120A  158A  	fcall	_sprintf
  3023                           
  3024                           ;main.c: 116:    LCD_Print(LCD_Cstring);
  3025  0B5E  30A0               	movlw	(low (_LCD_Cstring| 0))& (0+255)
  3026  0B5F  120A  158A  226A  120A  158A  	fcall	_LCD_Print
  3027  0B64                     l110:
  3028  0B64  0008               	return
  3029  0B65                     __end_of_imprime_tela_ajuste3:
  3030                           
  3031                           	psect	text7
  3032  0ADF                     __ptext7:	
  3033 ;; *************** function _imprime_tela_ajuste2 *****************
  3034 ;; Defined at:
  3035 ;;		line 94 in file "main.c"
  3036 ;; Parameters:    Size  Location     Type
  3037 ;;		None
  3038 ;; Auto vars:     Size  Location     Type
  3039 ;;		None
  3040 ;; Return value:  Size  Location     Type
  3041 ;;                  1    wreg      void 
  3042 ;; Registers used:
  3043 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3044 ;; Tracked objects:
  3045 ;;		On entry : 0/0
  3046 ;;		On exit  : 0/0
  3047 ;;		Unchanged: 0/0
  3048 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3049 ;;      Params:         0       0       0       0       0
  3050 ;;      Locals:         0       0       0       0       0
  3051 ;;      Temps:          0       1       0       0       0
  3052 ;;      Totals:         0       1       0       0       0
  3053 ;;Total ram usage:        1 bytes
  3054 ;; Hardware stack levels used:    1
  3055 ;; Hardware stack levels required when called:    4
  3056 ;; This function calls:
  3057 ;;		_LCD_Goto
  3058 ;;		_LCD_Print
  3059 ;;		_sprintf
  3060 ;; This function is called by:
  3061 ;;		_ajustes
  3062 ;; This function uses a non-reentrant model
  3063 ;;
  3064                           
  3065                           
  3066                           ;psect for function _imprime_tela_ajuste2
  3067  0ADF                     _imprime_tela_ajuste2:
  3068  0ADF                     l2932:	
  3069                           ;incstack = 0
  3070                           ; Regs used in _imprime_tela_ajuste2: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstac
      +                          k]
  3071                           
  3072                           
  3073                           ;main.c: 97:    LCD_Goto(1, 1);
  3074  0ADF  1283               	bcf	3,5	;RP0=0, select bank0
  3075  0AE0  1303               	bcf	3,6	;RP1=0, select bank0
  3076  0AE1  01A1               	clrf	LCD_Goto@row
  3077  0AE2  0AA1               	incf	LCD_Goto@row,f
  3078  0AE3  3001               	movlw	1
  3079  0AE4  120A  158A  2232  120A  158A  	fcall	_LCD_Goto
  3080  0AE9                     l2934:
  3081                           
  3082                           ;main.c: 98:    sprintf(LCD_Cstring,"Horario Atual:");
  3083  0AE9  304A               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  3084  0AEA  1283               	bcf	3,5	;RP0=0, select bank0
  3085  0AEB  1303               	bcf	3,6	;RP1=0, select bank0
  3086  0AEC  00BC               	movwf	??_imprime_tela_ajuste2
  3087  0AED  083C               	movf	??_imprime_tela_ajuste2,w
  3088  0AEE  00A9               	movwf	sprintf@f
  3089  0AEF  30A0               	movlw	(low (_LCD_Cstring| 0))& (0+255)
  3090  0AF0  120A  118A  254D  120A  158A  	fcall	_sprintf
  3091  0AF5                     l2936:
  3092                           
  3093                           ;main.c: 99:    LCD_Print(LCD_Cstring);
  3094  0AF5  30A0               	movlw	(low (_LCD_Cstring| 0))& (0+255)
  3095  0AF6  120A  158A  226A  120A  158A  	fcall	_LCD_Print
  3096  0AFB                     l2938:
  3097                           
  3098                           ;main.c: 101:    LCD_Goto(1, 2);
  3099  0AFB  3002               	movlw	2
  3100  0AFC  1283               	bcf	3,5	;RP0=0, select bank0
  3101  0AFD  1303               	bcf	3,6	;RP1=0, select bank0
  3102  0AFE  00BC               	movwf	??_imprime_tela_ajuste2
  3103  0AFF  083C               	movf	??_imprime_tela_ajuste2,w
  3104  0B00  00A1               	movwf	LCD_Goto@row
  3105  0B01  3001               	movlw	1
  3106  0B02  120A  158A  2232  120A  158A  	fcall	_LCD_Goto
  3107  0B07                     l2940:
  3108                           
  3109                           ;main.c: 102:    sprintf(LCD_Cstring,"     %02d:%02d     ",Horas,Minutos);
  3110  0B07  3022               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  3111  0B08  1283               	bcf	3,5	;RP0=0, select bank0
  3112  0B09  1303               	bcf	3,6	;RP1=0, select bank0
  3113  0B0A  00BC               	movwf	??_imprime_tela_ajuste2
  3114  0B0B  083C               	movf	??_imprime_tela_ajuste2,w
  3115  0B0C  00A9               	movwf	sprintf@f
  3116  0B0D  0860               	movf	_Horas+1,w
  3117  0B0E  00AB               	movwf	?_sprintf+2
  3118  0B0F  085F               	movf	_Horas,w
  3119  0B10  00AA               	movwf	?_sprintf+1
  3120  0B11  0862               	movf	_Minutos+1,w
  3121  0B12  00AD               	movwf	?_sprintf+4
  3122  0B13  0861               	movf	_Minutos,w
  3123  0B14  00AC               	movwf	?_sprintf+3
  3124  0B15  30A0               	movlw	(low (_LCD_Cstring| 0))& (0+255)
  3125  0B16  120A  118A  254D  120A  158A  	fcall	_sprintf
  3126                           
  3127                           ;main.c: 103:    LCD_Print(LCD_Cstring);
  3128  0B1B  30A0               	movlw	(low (_LCD_Cstring| 0))& (0+255)
  3129  0B1C  120A  158A  226A  120A  158A  	fcall	_LCD_Print
  3130  0B21                     l107:
  3131  0B21  0008               	return
  3132  0B22                     __end_of_imprime_tela_ajuste2:
  3133                           
  3134                           	psect	text8
  3135  07DD                     __ptext8:	
  3136 ;; *************** function _imprime_tela_ajuste1 *****************
  3137 ;; Defined at:
  3138 ;;		line 86 in file "main.c"
  3139 ;; Parameters:    Size  Location     Type
  3140 ;;  temp            2   28[BANK0 ] int 
  3141 ;; Auto vars:     Size  Location     Type
  3142 ;;		None
  3143 ;; Return value:  Size  Location     Type
  3144 ;;                  1    wreg      void 
  3145 ;; Registers used:
  3146 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3147 ;; Tracked objects:
  3148 ;;		On entry : 0/0
  3149 ;;		On exit  : 0/0
  3150 ;;		Unchanged: 0/0
  3151 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3152 ;;      Params:         0       2       0       0       0
  3153 ;;      Locals:         0       0       0       0       0
  3154 ;;      Temps:          0       1       0       0       0
  3155 ;;      Totals:         0       3       0       0       0
  3156 ;;Total ram usage:        3 bytes
  3157 ;; Hardware stack levels used:    1
  3158 ;; Hardware stack levels required when called:    4
  3159 ;; This function calls:
  3160 ;;		_LCD_Goto
  3161 ;;		_LCD_Print
  3162 ;;		_sprintf
  3163 ;; This function is called by:
  3164 ;;		_ajustes
  3165 ;; This function uses a non-reentrant model
  3166 ;;
  3167                           
  3168                           
  3169                           ;psect for function _imprime_tela_ajuste1
  3170  07DD                     _imprime_tela_ajuste1:
  3171  07DD                     l2926:	
  3172                           ;incstack = 0
  3173                           ; Regs used in _imprime_tela_ajuste1: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstac
      +                          k]
  3174                           
  3175                           
  3176                           ;main.c: 86: void imprime_tela_ajuste1(int temp);main.c: 87: {;main.c: 88:    LCD_Goto(1
      +                          , 1);
  3177  07DD  1283               	bcf	3,5	;RP0=0, select bank0
  3178  07DE  1303               	bcf	3,6	;RP1=0, select bank0
  3179  07DF  01A1               	clrf	LCD_Goto@row
  3180  07E0  0AA1               	incf	LCD_Goto@row,f
  3181  07E1  3001               	movlw	1
  3182  07E2  120A  158A  2232  120A  118A  	fcall	_LCD_Goto
  3183  07E7                     l2928:
  3184                           
  3185                           ;main.c: 89:    sprintf(LCD_Cstring,"Temp. Des: %02d\337c  ",temp);
  3186  07E7  3036               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  3187  07E8  1283               	bcf	3,5	;RP0=0, select bank0
  3188  07E9  1303               	bcf	3,6	;RP1=0, select bank0
  3189  07EA  00BE               	movwf	??_imprime_tela_ajuste1
  3190  07EB  083E               	movf	??_imprime_tela_ajuste1,w
  3191  07EC  00A9               	movwf	sprintf@f
  3192  07ED  083D               	movf	imprime_tela_ajuste1@temp+1,w
  3193  07EE  00AB               	movwf	?_sprintf+2
  3194  07EF  083C               	movf	imprime_tela_ajuste1@temp,w
  3195  07F0  00AA               	movwf	?_sprintf+1
  3196  07F1  30A0               	movlw	(low (_LCD_Cstring| 0))& (0+255)
  3197  07F2  120A  118A  254D  120A  118A  	fcall	_sprintf
  3198  07F7                     l2930:
  3199                           
  3200                           ;main.c: 90:    LCD_Print(LCD_Cstring);
  3201  07F7  30A0               	movlw	(low (_LCD_Cstring| 0))& (0+255)
  3202  07F8  120A  158A  226A  120A  118A  	fcall	_LCD_Print
  3203  07FD                     l104:
  3204  07FD  0008               	return
  3205  07FE                     __end_of_imprime_tela_ajuste1:
  3206                           
  3207                           	psect	text9
  3208  054D                     __ptext9:	
  3209 ;; *************** function _sprintf *****************
  3210 ;; Defined at:
  3211 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c"
  3212 ;; Parameters:    Size  Location     Type
  3213 ;;  sp              1    wreg     PTR unsigned char 
  3214 ;;		 -> LCD_Cstring(16), 
  3215 ;;  f               1    9[BANK0 ] PTR const unsigned char 
  3216 ;;		 -> STR_9(20), STR_8(11), STR_7(20), STR_6(12), 
  3217 ;;		 -> STR_5(20), STR_4(15), STR_3(20), STR_2(12), 
  3218 ;;		 -> STR_1(23), 
  3219 ;; Auto vars:     Size  Location     Type
  3220 ;;  sp              1   27[BANK0 ] PTR unsigned char 
  3221 ;;		 -> LCD_Cstring(16), 
  3222 ;;  tmpval          4    0        struct .
  3223 ;;  width           2   24[BANK0 ] int 
  3224 ;;  val             2   21[BANK0 ] unsigned int 
  3225 ;;  cp              2    0        PTR const unsigned char 
  3226 ;;  len             2    0        unsigned int 
  3227 ;;  c               1   26[BANK0 ] unsigned char 
  3228 ;;  flag            1   23[BANK0 ] unsigned char 
  3229 ;;  prec            1   20[BANK0 ] char 
  3230 ;;  ap              1   19[BANK0 ] PTR void [1]
  3231 ;;		 -> ?_sprintf(2), 
  3232 ;; Return value:  Size  Location     Type
  3233 ;;                  2    9[BANK0 ] int 
  3234 ;; Registers used:
  3235 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3236 ;; Tracked objects:
  3237 ;;		On entry : 0/0
  3238 ;;		On exit  : 0/0
  3239 ;;		Unchanged: 0/0
  3240 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3241 ;;      Params:         0       7       0       0       0
  3242 ;;      Locals:         0       9       0       0       0
  3243 ;;      Temps:          0       3       0       0       0
  3244 ;;      Totals:         0      19       0       0       0
  3245 ;;Total ram usage:       19 bytes
  3246 ;; Hardware stack levels used:    1
  3247 ;; Hardware stack levels required when called:    2
  3248 ;; This function calls:
  3249 ;;		___lwdiv
  3250 ;;		___lwmod
  3251 ;;		___wmul
  3252 ;;		_isdigit
  3253 ;; This function is called by:
  3254 ;;		_imprime_tela_main
  3255 ;;		_imprime_tela_ajuste1
  3256 ;;		_imprime_tela_ajuste2
  3257 ;;		_imprime_tela_ajuste3
  3258 ;;		_imprime_tela_ajuste4
  3259 ;; This function uses a non-reentrant model
  3260 ;;
  3261                           
  3262                           
  3263                           ;psect for function _sprintf
  3264  054D                     _sprintf:
  3265                           
  3266                           ;incstack = 0
  3267                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3268                           ;sprintf@sp stored from wreg
  3269  054D  1283               	bcf	3,5	;RP0=0, select bank0
  3270  054E  1303               	bcf	3,6	;RP1=0, select bank0
  3271  054F  00BB               	movwf	sprintf@sp
  3272  0550                     l2808:
  3273                           
  3274                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 521:  
      +                          signed char prec;
  3275  0550  302A               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  3276  0551  00B0               	movwf	??_sprintf
  3277  0552  0830               	movf	??_sprintf,w
  3278  0553  00B3               	movwf	sprintf@ap
  3279                           
  3280                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  3281  0554  2F0A               	goto	l2912
  3282  0555                     l2810:
  3283                           
  3284                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  3285  0555  3025               	movlw	37
  3286  0556  063A               	xorwf	sprintf@c,w
  3287  0557  1903               	btfsc	3,2
  3288  0558  2D5A               	goto	u3171
  3289  0559  2D5B               	goto	u3170
  3290  055A                     u3171:
  3291  055A  2D67               	goto	l2816
  3292  055B                     u3170:
  3293  055B                     l2812:
  3294                           
  3295                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  3296  055B  083A               	movf	sprintf@c,w
  3297  055C  00B0               	movwf	??_sprintf
  3298  055D  083B               	movf	sprintf@sp,w
  3299  055E  0084               	movwf	4
  3300  055F  0830               	movf	??_sprintf,w
  3301  0560  1383               	bcf	3,7	;select IRP bank0
  3302  0561  0080               	movwf	0
  3303  0562                     l2814:
  3304  0562  3001               	movlw	1
  3305  0563  00B0               	movwf	??_sprintf
  3306  0564  0830               	movf	??_sprintf,w
  3307  0565  07BB               	addwf	sprintf@sp,f
  3308                           
  3309                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 559:    continue;
  3310  0566  2F0A               	goto	l2912
  3311  0567                     l2816:
  3312                           
  3313                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 563:   width = 0;
  3314  0567  01B8               	clrf	sprintf@width
  3315  0568  01B9               	clrf	sprintf@width+1
  3316                           
  3317                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  3318  0569  01B7               	clrf	sprintf@flag
  3319  056A  2D70               	goto	l2822
  3320  056B                     l304:	
  3321                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 596:    case '0':
  3322                           
  3323                           
  3324                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 597:     flag |= 
      +                          0x04;
  3325  056B  1537               	bsf	sprintf@flag,2
  3326  056C                     l2818:
  3327                           
  3328                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 598:     f++;
  3329  056C  3001               	movlw	1
  3330  056D  00B0               	movwf	??_sprintf
  3331  056E  0830               	movf	??_sprintf,w
  3332  056F  07A9               	addwf	sprintf@f,f
  3333  0570                     l2822:	
  3334                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 599:     continue
      +                          ;
  3335                           
  3336  0570  0829               	movf	sprintf@f,w
  3337  0571  0084               	movwf	4
  3338  0572  120A  158A  2000  120A  118A  	fcall	stringdir
  3339  0577  00B0               	movwf	??_sprintf
  3340  0578  01B1               	clrf	??_sprintf+1
  3341                           
  3342                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3343                           ; Switch size 1, requested type "simple"
  3344                           ; Number of cases is 1, Range of values is 0 to 0
  3345                           ; switch strategies available:
  3346                           ; Name         Instructions Cycles
  3347                           ; simple_byte            4     3 (average)
  3348                           ; direct_byte           11     8 (fixed)
  3349                           ; jumptable            260     6 (fixed)
  3350                           ;	Chosen strategy is simple_byte
  3351  0579  0831               	movf	??_sprintf+1,w
  3352  057A  3A00               	xorlw	0	; case 0
  3353  057B  1903               	skipnz
  3354  057C  2D7E               	goto	l3296
  3355  057D  2D83               	goto	l2824
  3356  057E                     l3296:
  3357                           
  3358                           ; Switch size 1, requested type "simple"
  3359                           ; Number of cases is 1, Range of values is 48 to 48
  3360                           ; switch strategies available:
  3361                           ; Name         Instructions Cycles
  3362                           ; simple_byte            4     3 (average)
  3363                           ; direct_byte           14    11 (fixed)
  3364                           ; jumptable            263     9 (fixed)
  3365                           ;	Chosen strategy is simple_byte
  3366  057E  0830               	movf	??_sprintf,w
  3367  057F  3A30               	xorlw	48	; case 48
  3368  0580  1903               	skipnz
  3369  0581  2D6B               	goto	l304
  3370  0582  2D83               	goto	l2824
  3371  0583                     l2824:
  3372                           
  3373                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 614:   if(isdigit
      +                          ((unsigned)*f)) {
  3374  0583  0829               	movf	sprintf@f,w
  3375  0584  0084               	movwf	4
  3376  0585  120A  158A  2000  120A  118A  	fcall	stringdir
  3377  058A  120A  158A  21C4  120A  118A  	fcall	_isdigit
  3378  058F  1C03               	btfss	3,0
  3379  0590  2D92               	goto	u3181
  3380  0591  2D93               	goto	u3180
  3381  0592                     u3181:
  3382  0592  2DD3               	goto	l2838
  3383  0593                     u3180:
  3384  0593                     l2826:
  3385                           
  3386                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 615:    width = 0
      +                          ;
  3387  0593  1283               	bcf	3,5	;RP0=0, select bank0
  3388  0594  1303               	bcf	3,6	;RP1=0, select bank0
  3389  0595  01B8               	clrf	sprintf@width
  3390  0596  01B9               	clrf	sprintf@width+1
  3391  0597                     l2828:
  3392                           
  3393                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 617:     width *=
      +                           10;
  3394  0597  300A               	movlw	10
  3395  0598  00F3               	movwf	___wmul@multiplier
  3396  0599  3000               	movlw	0
  3397  059A  00F4               	movwf	___wmul@multiplier+1
  3398  059B  1283               	bcf	3,5	;RP0=0, select bank0
  3399  059C  1303               	bcf	3,6	;RP1=0, select bank0
  3400  059D  0839               	movf	sprintf@width+1,w
  3401  059E  00F6               	movwf	___wmul@multiplicand+1
  3402  059F  0838               	movf	sprintf@width,w
  3403  05A0  00F5               	movwf	___wmul@multiplicand
  3404  05A1  120A  158A  21D6  120A  118A  	fcall	___wmul
  3405  05A6  0874               	movf	?___wmul+1,w
  3406  05A7  1283               	bcf	3,5	;RP0=0, select bank0
  3407  05A8  1303               	bcf	3,6	;RP1=0, select bank0
  3408  05A9  00B9               	movwf	sprintf@width+1
  3409  05AA  0873               	movf	?___wmul,w
  3410  05AB  00B8               	movwf	sprintf@width
  3411  05AC                     l2830:
  3412                           
  3413                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 618:        width
      +                           += *f++ - '0';
  3414  05AC  0829               	movf	sprintf@f,w
  3415  05AD  0084               	movwf	4
  3416  05AE  120A  158A  2000  120A  118A  	fcall	stringdir
  3417  05B3  3ED0               	addlw	208
  3418  05B4  00B0               	movwf	??_sprintf
  3419  05B5  30FF               	movlw	255
  3420  05B6  1803               	skipnc
  3421  05B7  3000               	movlw	0
  3422  05B8  00B1               	movwf	??_sprintf+1
  3423  05B9  0830               	movf	??_sprintf,w
  3424  05BA  07B8               	addwf	sprintf@width,f
  3425  05BB  1803               	skipnc
  3426  05BC  0AB9               	incf	sprintf@width+1,f
  3427  05BD  0831               	movf	??_sprintf+1,w
  3428  05BE  07B9               	addwf	sprintf@width+1,f
  3429  05BF                     l2832:
  3430  05BF  3001               	movlw	1
  3431  05C0  00B0               	movwf	??_sprintf
  3432  05C1  0830               	movf	??_sprintf,w
  3433  05C2  07A9               	addwf	sprintf@f,f
  3434  05C3                     l2834:
  3435                           
  3436                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 619:    } while(i
      +                          sdigit((unsigned)*f));
  3437  05C3  0829               	movf	sprintf@f,w
  3438  05C4  0084               	movwf	4
  3439  05C5  120A  158A  2000  120A  118A  	fcall	stringdir
  3440  05CA  120A  158A  21C4  120A  118A  	fcall	_isdigit
  3441  05CF  1803               	btfsc	3,0
  3442  05D0  2DD2               	goto	u3191
  3443  05D1  2DD3               	goto	u3190
  3444  05D2                     u3191:
  3445  05D2  2D97               	goto	l2828
  3446  05D3                     u3190:
  3447  05D3                     l2838:
  3448  05D3  3001               	movlw	1
  3449  05D4  1283               	bcf	3,5	;RP0=0, select bank0
  3450  05D5  1303               	bcf	3,6	;RP1=0, select bank0
  3451  05D6  07A9               	addwf	sprintf@f,f
  3452  05D7  30FF               	movlw	-1
  3453  05D8  0729               	addwf	sprintf@f,w
  3454  05D9  0084               	movwf	4
  3455  05DA  120A  158A  2000  120A  118A  	fcall	stringdir
  3456  05DF  00BA               	movwf	sprintf@c
  3457  05E0  00B0               	movwf	??_sprintf
  3458  05E1  01B1               	clrf	??_sprintf+1
  3459                           
  3460                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3461                           ; Switch size 1, requested type "simple"
  3462                           ; Number of cases is 1, Range of values is 0 to 0
  3463                           ; switch strategies available:
  3464                           ; Name         Instructions Cycles
  3465                           ; simple_byte            4     3 (average)
  3466                           ; direct_byte           11     8 (fixed)
  3467                           ; jumptable            260     6 (fixed)
  3468                           ;	Chosen strategy is simple_byte
  3469  05E2  0831               	movf	??_sprintf+1,w
  3470  05E3  3A00               	xorlw	0	; case 0
  3471  05E4  1903               	skipnz
  3472  05E5  2DE7               	goto	l3298
  3473  05E6  2F0A               	goto	l2912
  3474  05E7                     l3298:
  3475                           
  3476                           ; Switch size 1, requested type "simple"
  3477                           ; Number of cases is 3, Range of values is 0 to 105
  3478                           ; switch strategies available:
  3479                           ; Name         Instructions Cycles
  3480                           ; simple_byte           10     6 (average)
  3481                           ; jumptable            260     6 (fixed)
  3482                           ;	Chosen strategy is simple_byte
  3483  05E7  0830               	movf	??_sprintf,w
  3484  05E8  3A00               	xorlw	0	; case 0
  3485  05E9  1903               	skipnz
  3486  05EA  2F1C               	goto	l2914
  3487  05EB  3A64               	xorlw	100	; case 100
  3488  05EC  1903               	skipnz
  3489  05ED  2DF2               	goto	l2840
  3490  05EE  3A0D               	xorlw	13	; case 105
  3491  05EF  1903               	skipnz
  3492  05F0  2DF2               	goto	l2840
  3493  05F1  2F0A               	goto	l2912
  3494  05F2                     l2840:
  3495                           
  3496                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  3497  05F2  0833               	movf	sprintf@ap,w
  3498  05F3  0084               	movwf	4
  3499  05F4  1383               	bcf	3,7	;select IRP bank0
  3500  05F5  0800               	movf	0,w
  3501  05F6  00B5               	movwf	sprintf@val
  3502  05F7  0A84               	incf	4,f
  3503  05F8  0800               	movf	0,w
  3504  05F9  00B6               	movwf	sprintf@val+1
  3505  05FA                     l2842:
  3506  05FA  3002               	movlw	2
  3507  05FB  00B0               	movwf	??_sprintf
  3508  05FC  0830               	movf	??_sprintf,w
  3509  05FD  07B3               	addwf	sprintf@ap,f
  3510  05FE                     l2844:
  3511                           
  3512                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  3513  05FE  1FB6               	btfss	sprintf@val+1,7
  3514  05FF  2E01               	goto	u3201
  3515  0600  2E02               	goto	u3200
  3516  0601                     u3201:
  3517  0601  2E0B               	goto	l2850
  3518  0602                     u3200:
  3519  0602                     l2846:
  3520                           
  3521                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  3522  0602  3003               	movlw	3
  3523  0603  00B0               	movwf	??_sprintf
  3524  0604  0830               	movf	??_sprintf,w
  3525  0605  04B7               	iorwf	sprintf@flag,f
  3526  0606                     l2848:
  3527                           
  3528                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  3529  0606  09B5               	comf	sprintf@val,f
  3530  0607  09B6               	comf	sprintf@val+1,f
  3531  0608  0AB5               	incf	sprintf@val,f
  3532  0609  1903               	skipnz
  3533  060A  0AB6               	incf	sprintf@val+1,f
  3534  060B                     l2850:
  3535                           
  3536                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  3537  060B  01BA               	clrf	sprintf@c
  3538  060C  0ABA               	incf	sprintf@c,f
  3539  060D                     l2856:
  3540                           
  3541                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  3542  060D  083A               	movf	sprintf@c,w
  3543  060E  00B0               	movwf	??_sprintf
  3544  060F  0730               	addwf	??_sprintf,w
  3545  0610  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3546  0611  0084               	movwf	4
  3547  0612  120A  158A  2000  120A  118A  	fcall	stringdir
  3548  0617  00B1               	movwf	??_sprintf+1
  3549  0618  120A  158A  2000  120A  118A  	fcall	stringdir
  3550  061D  00B2               	movwf	??_sprintf+2
  3551  061E  0832               	movf	??_sprintf+2,w
  3552  061F  0236               	subwf	sprintf@val+1,w
  3553  0620  1D03               	skipz
  3554  0621  2E24               	goto	u3215
  3555  0622  0831               	movf	??_sprintf+1,w
  3556  0623  0235               	subwf	sprintf@val,w
  3557  0624                     u3215:
  3558  0624  1803               	skipnc
  3559  0625  2E27               	goto	u3211
  3560  0626  2E28               	goto	u3210
  3561  0627                     u3211:
  3562  0627  2E29               	goto	l2860
  3563  0628                     u3210:
  3564  0628  2E33               	goto	l2862
  3565  0629                     l2860:
  3566  0629  3001               	movlw	1
  3567  062A  00B0               	movwf	??_sprintf
  3568  062B  0830               	movf	??_sprintf,w
  3569  062C  07BA               	addwf	sprintf@c,f
  3570  062D  3005               	movlw	5
  3571  062E  063A               	xorwf	sprintf@c,w
  3572  062F  1D03               	btfss	3,2
  3573  0630  2E32               	goto	u3221
  3574  0631  2E33               	goto	u3220
  3575  0632                     u3221:
  3576  0632  2E0D               	goto	l2856
  3577  0633                     u3220:
  3578  0633                     l2862:
  3579                           
  3580                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 1371:   if(width 
      +                          && flag & 0x03)
  3581  0633  0838               	movf	sprintf@width,w
  3582  0634  0439               	iorwf	sprintf@width+1,w
  3583  0635  1903               	btfsc	3,2
  3584  0636  2E38               	goto	u3231
  3585  0637  2E39               	goto	u3230
  3586  0638                     u3231:
  3587  0638  2E45               	goto	l322
  3588  0639                     u3230:
  3589  0639                     l2864:
  3590  0639  0837               	movf	sprintf@flag,w
  3591  063A  3903               	andlw	3
  3592  063B  1903               	btfsc	3,2
  3593  063C  2E3E               	goto	u3241
  3594  063D  2E3F               	goto	u3240
  3595  063E                     u3241:
  3596  063E  2E45               	goto	l322
  3597  063F                     u3240:
  3598  063F                     l2866:
  3599                           
  3600                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 1372:    width--;
  3601  063F  30FF               	movlw	255
  3602  0640  07B8               	addwf	sprintf@width,f
  3603  0641  1803               	skipnc
  3604  0642  0AB9               	incf	sprintf@width+1,f
  3605  0643  30FF               	movlw	255
  3606  0644  07B9               	addwf	sprintf@width+1,f
  3607  0645                     l322:
  3608                           
  3609                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 1407:   if(width 
      +                          > c)
  3610  0645  0839               	movf	sprintf@width+1,w
  3611  0646  3A80               	xorlw	128
  3612  0647  3C80               	sublw	128
  3613  0648  1D03               	skipz
  3614  0649  2E4C               	goto	u3255
  3615  064A  0838               	movf	sprintf@width,w
  3616  064B  023A               	subwf	sprintf@c,w
  3617  064C                     u3255:
  3618  064C  1803               	skipnc
  3619  064D  2E4F               	goto	u3251
  3620  064E  2E50               	goto	u3250
  3621  064F                     u3251:
  3622  064F  2E5C               	goto	l2870
  3623  0650                     u3250:
  3624  0650                     l2868:
  3625                           
  3626                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 1408:    width -=
      +                           c;
  3627  0650  1283               	bcf	3,5	;RP0=0, select bank0
  3628  0651  1303               	bcf	3,6	;RP1=0, select bank0
  3629  0652  083A               	movf	sprintf@c,w
  3630  0653  00B0               	movwf	??_sprintf
  3631  0654  01B1               	clrf	??_sprintf+1
  3632  0655  0830               	movf	??_sprintf,w
  3633  0656  02B8               	subwf	sprintf@width,f
  3634  0657  0831               	movf	??_sprintf+1,w
  3635  0658  1C03               	skipc
  3636  0659  03B9               	decf	sprintf@width+1,f
  3637  065A  02B9               	subwf	sprintf@width+1,f
  3638  065B  2E60               	goto	l2872
  3639  065C                     l2870:
  3640                           
  3641                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 1410:    width = 
      +                          0;
  3642  065C  1283               	bcf	3,5	;RP0=0, select bank0
  3643  065D  1303               	bcf	3,6	;RP1=0, select bank0
  3644  065E  01B8               	clrf	sprintf@width
  3645  065F  01B9               	clrf	sprintf@width+1
  3646  0660                     l2872:
  3647                           
  3648                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 1413:   if(flag &
      +                           0x04) {
  3649  0660  1D37               	btfss	sprintf@flag,2
  3650  0661  2E63               	goto	u3261
  3651  0662  2E64               	goto	u3260
  3652  0663                     u3261:
  3653  0663  2E93               	goto	l2888
  3654  0664                     u3260:
  3655  0664                     l2874:
  3656                           
  3657                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 1418:    if(flag 
      +                          & 0x03)
  3658  0664  0837               	movf	sprintf@flag,w
  3659  0665  3903               	andlw	3
  3660  0666  1903               	btfsc	3,2
  3661  0667  2E69               	goto	u3271
  3662  0668  2E6A               	goto	u3270
  3663  0669                     u3271:
  3664  0669  2E75               	goto	l2880
  3665  066A                     u3270:
  3666  066A                     l2876:
  3667                           
  3668                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 1419:     ((*sp++
      +                           = ('-')));
  3669  066A  302D               	movlw	45
  3670  066B  00B0               	movwf	??_sprintf
  3671  066C  083B               	movf	sprintf@sp,w
  3672  066D  0084               	movwf	4
  3673  066E  0830               	movf	??_sprintf,w
  3674  066F  1383               	bcf	3,7	;select IRP bank0
  3675  0670  0080               	movwf	0
  3676  0671                     l2878:
  3677  0671  3001               	movlw	1
  3678  0672  00B0               	movwf	??_sprintf
  3679  0673  0830               	movf	??_sprintf,w
  3680  0674  07BB               	addwf	sprintf@sp,f
  3681  0675                     l2880:
  3682                           
  3683                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 1441:    if(width
      +                          )
  3684  0675  0838               	movf	sprintf@width,w
  3685  0676  0439               	iorwf	sprintf@width+1,w
  3686  0677  1903               	btfsc	3,2
  3687  0678  2E7A               	goto	u3281
  3688  0679  2E7B               	goto	u3280
  3689  067A                     u3281:
  3690  067A  2EC1               	goto	l2902
  3691  067B                     u3280:
  3692  067B                     l2882:
  3693                           
  3694                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 1443:      ((*sp+
      +                          + = ('0')));
  3695  067B  3030               	movlw	48
  3696  067C  00B0               	movwf	??_sprintf
  3697  067D  083B               	movf	sprintf@sp,w
  3698  067E  0084               	movwf	4
  3699  067F  0830               	movf	??_sprintf,w
  3700  0680  1383               	bcf	3,7	;select IRP bank0
  3701  0681  0080               	movwf	0
  3702  0682                     l2884:
  3703  0682  3001               	movlw	1
  3704  0683  00B0               	movwf	??_sprintf
  3705  0684  0830               	movf	??_sprintf,w
  3706  0685  07BB               	addwf	sprintf@sp,f
  3707  0686                     l2886:
  3708  0686  30FF               	movlw	255
  3709  0687  07B8               	addwf	sprintf@width,f
  3710  0688  1803               	skipnc
  3711  0689  0AB9               	incf	sprintf@width+1,f
  3712  068A  30FF               	movlw	255
  3713  068B  07B9               	addwf	sprintf@width+1,f
  3714  068C  0838               	movf	sprintf@width,w
  3715  068D  0439               	iorwf	sprintf@width+1,w
  3716  068E  1D03               	btfss	3,2
  3717  068F  2E91               	goto	u3291
  3718  0690  2E92               	goto	u3290
  3719  0691                     u3291:
  3720  0691  2E7B               	goto	l2882
  3721  0692                     u3290:
  3722  0692  2EC1               	goto	l2902
  3723  0693                     l2888:
  3724                           
  3725                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 1450:    if(width
  3726  0693  0838               	movf	sprintf@width,w
  3727  0694  0439               	iorwf	sprintf@width+1,w
  3728  0695  1903               	btfsc	3,2
  3729  0696  2E98               	goto	u3301
  3730  0697  2E99               	goto	u3300
  3731  0698                     u3301:
  3732  0698  2EB0               	goto	l2896
  3733  0699                     u3300:
  3734  0699                     l2890:
  3735                           
  3736                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 1456:      ((*sp+
      +                          + = (' ')));
  3737  0699  3020               	movlw	32
  3738  069A  00B0               	movwf	??_sprintf
  3739  069B  083B               	movf	sprintf@sp,w
  3740  069C  0084               	movwf	4
  3741  069D  0830               	movf	??_sprintf,w
  3742  069E  1383               	bcf	3,7	;select IRP bank0
  3743  069F  0080               	movwf	0
  3744  06A0                     l2892:
  3745  06A0  3001               	movlw	1
  3746  06A1  00B0               	movwf	??_sprintf
  3747  06A2  0830               	movf	??_sprintf,w
  3748  06A3  07BB               	addwf	sprintf@sp,f
  3749  06A4                     l2894:
  3750  06A4  30FF               	movlw	255
  3751  06A5  07B8               	addwf	sprintf@width,f
  3752  06A6  1803               	skipnc
  3753  06A7  0AB9               	incf	sprintf@width+1,f
  3754  06A8  30FF               	movlw	255
  3755  06A9  07B9               	addwf	sprintf@width+1,f
  3756  06AA  0838               	movf	sprintf@width,w
  3757  06AB  0439               	iorwf	sprintf@width+1,w
  3758  06AC  1D03               	btfss	3,2
  3759  06AD  2EAF               	goto	u3311
  3760  06AE  2EB0               	goto	u3310
  3761  06AF                     u3311:
  3762  06AF  2E99               	goto	l2890
  3763  06B0                     u3310:
  3764  06B0                     l2896:
  3765                           
  3766                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 1464:    if(flag 
      +                          & 0x03)
  3767  06B0  0837               	movf	sprintf@flag,w
  3768  06B1  3903               	andlw	3
  3769  06B2  1903               	btfsc	3,2
  3770  06B3  2EB5               	goto	u3321
  3771  06B4  2EB6               	goto	u3320
  3772  06B5                     u3321:
  3773  06B5  2EC1               	goto	l2902
  3774  06B6                     u3320:
  3775  06B6                     l2898:
  3776                           
  3777                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  3778  06B6  302D               	movlw	45
  3779  06B7  00B0               	movwf	??_sprintf
  3780  06B8  083B               	movf	sprintf@sp,w
  3781  06B9  0084               	movwf	4
  3782  06BA  0830               	movf	??_sprintf,w
  3783  06BB  1383               	bcf	3,7	;select IRP bank0
  3784  06BC  0080               	movwf	0
  3785  06BD                     l2900:
  3786  06BD  3001               	movlw	1
  3787  06BE  00B0               	movwf	??_sprintf
  3788  06BF  0830               	movf	??_sprintf,w
  3789  06C0  07BB               	addwf	sprintf@sp,f
  3790  06C1                     l2902:
  3791                           
  3792                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  3793  06C1  083A               	movf	sprintf@c,w
  3794  06C2  00B0               	movwf	??_sprintf
  3795  06C3  0830               	movf	??_sprintf,w
  3796  06C4  00B4               	movwf	sprintf@prec
  3797                           
  3798                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  3799  06C5  2F01               	goto	l2910
  3800  06C6                     l2904:
  3801                           
  3802                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  3803  06C6  300A               	movlw	10
  3804  06C7  00A3               	movwf	___lwmod@divisor
  3805  06C8  3000               	movlw	0
  3806  06C9  00A4               	movwf	___lwmod@divisor+1
  3807  06CA  0834               	movf	sprintf@prec,w
  3808  06CB  00B0               	movwf	??_sprintf
  3809  06CC  0730               	addwf	??_sprintf,w
  3810  06CD  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3811  06CE  0084               	movwf	4
  3812  06CF  120A  158A  2000  120A  118A  	fcall	stringdir
  3813  06D4  00F3               	movwf	___lwdiv@divisor
  3814  06D5  120A  158A  2000  120A  118A  	fcall	stringdir
  3815  06DA  00F4               	movwf	___lwdiv@divisor+1
  3816  06DB  0836               	movf	sprintf@val+1,w
  3817  06DC  00F6               	movwf	___lwdiv@dividend+1
  3818  06DD  0835               	movf	sprintf@val,w
  3819  06DE  00F5               	movwf	___lwdiv@dividend
  3820  06DF  120A  158A  23A8  120A  118A  	fcall	___lwdiv
  3821  06E4  0874               	movf	?___lwdiv+1,w
  3822  06E5  1283               	bcf	3,5	;RP0=0, select bank0
  3823  06E6  1303               	bcf	3,6	;RP1=0, select bank0
  3824  06E7  00A6               	movwf	___lwmod@dividend+1
  3825  06E8  0873               	movf	?___lwdiv,w
  3826  06E9  00A5               	movwf	___lwmod@dividend
  3827  06EA  120A  158A  22A3  120A  118A  	fcall	___lwmod
  3828  06EF  1283               	bcf	3,5	;RP0=0, select bank0
  3829  06F0  1303               	bcf	3,6	;RP1=0, select bank0
  3830  06F1  0823               	movf	?___lwmod,w
  3831  06F2  3E30               	addlw	48
  3832  06F3  00B1               	movwf	??_sprintf+1
  3833  06F4  0831               	movf	??_sprintf+1,w
  3834  06F5  00BA               	movwf	sprintf@c
  3835  06F6                     l2906:
  3836                           
  3837                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  3838  06F6  083A               	movf	sprintf@c,w
  3839  06F7  00B0               	movwf	??_sprintf
  3840  06F8  083B               	movf	sprintf@sp,w
  3841  06F9  0084               	movwf	4
  3842  06FA  0830               	movf	??_sprintf,w
  3843  06FB  1383               	bcf	3,7	;select IRP bank0
  3844  06FC  0080               	movwf	0
  3845  06FD                     l2908:
  3846  06FD  3001               	movlw	1
  3847  06FE  00B0               	movwf	??_sprintf
  3848  06FF  0830               	movf	??_sprintf,w
  3849  0700  07BB               	addwf	sprintf@sp,f
  3850  0701                     l2910:
  3851                           
  3852                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  3853  0701  30FF               	movlw	255
  3854  0702  00B0               	movwf	??_sprintf
  3855  0703  0830               	movf	??_sprintf,w
  3856  0704  07B4               	addwf	sprintf@prec,f
  3857  0705  0A34               	incf	sprintf@prec,w
  3858  0706  1D03               	btfss	3,2
  3859  0707  2F09               	goto	u3331
  3860  0708  2F0A               	goto	u3330
  3861  0709                     u3331:
  3862  0709  2EC6               	goto	l2904
  3863  070A                     u3330:
  3864  070A                     l2912:
  3865                           
  3866                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  3867  070A  3001               	movlw	1
  3868  070B  07A9               	addwf	sprintf@f,f
  3869  070C  30FF               	movlw	-1
  3870  070D  0729               	addwf	sprintf@f,w
  3871  070E  0084               	movwf	4
  3872  070F  120A  158A  2000  120A  118A  	fcall	stringdir
  3873  0714  00B0               	movwf	??_sprintf
  3874  0715  0830               	movf	??_sprintf,w
  3875  0716  00BA               	movwf	sprintf@c
  3876  0717  083A               	movf	sprintf@c,w
  3877  0718  1D03               	btfss	3,2
  3878  0719  2F1B               	goto	u3341
  3879  071A  2F1C               	goto	u3340
  3880  071B                     u3341:
  3881  071B  2D55               	goto	l2810
  3882  071C                     u3340:
  3883  071C                     l2914:
  3884                           
  3885                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  3886  071C  083B               	movf	sprintf@sp,w
  3887  071D  0084               	movwf	4
  3888  071E  1383               	bcf	3,7	;select IRP bank0
  3889  071F  0180               	clrf	0
  3890  0720                     l339:
  3891  0720  0008               	return
  3892  0721                     __end_of_sprintf:
  3893                           
  3894                           	psect	text10
  3895  09C4                     __ptext10:	
  3896 ;; *************** function _isdigit *****************
  3897 ;; Defined at:
  3898 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\isdigit.c"
  3899 ;; Parameters:    Size  Location     Type
  3900 ;;  c               1    wreg     unsigned char 
  3901 ;; Auto vars:     Size  Location     Type
  3902 ;;  c               1    4[COMMON] unsigned char 
  3903 ;; Return value:  Size  Location     Type
  3904 ;;		None               void
  3905 ;; Registers used:
  3906 ;;		wreg, status,2, status,0
  3907 ;; Tracked objects:
  3908 ;;		On entry : 0/0
  3909 ;;		On exit  : 0/0
  3910 ;;		Unchanged: 0/0
  3911 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3912 ;;      Params:         0       0       0       0       0
  3913 ;;      Locals:         2       0       0       0       0
  3914 ;;      Temps:          0       0       0       0       0
  3915 ;;      Totals:         2       0       0       0       0
  3916 ;;Total ram usage:        2 bytes
  3917 ;; Hardware stack levels used:    1
  3918 ;; Hardware stack levels required when called:    1
  3919 ;; This function calls:
  3920 ;;		Nothing
  3921 ;; This function is called by:
  3922 ;;		_sprintf
  3923 ;; This function uses a non-reentrant model
  3924 ;;
  3925                           
  3926                           
  3927                           ;psect for function _isdigit
  3928  09C4                     _isdigit:
  3929                           
  3930                           ;incstack = 0
  3931                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  3932                           ;isdigit@c stored from wreg
  3933  09C4  00F4               	movwf	isdigit@c
  3934  09C5                     l1810:
  3935  09C5  01F3               	clrf	_isdigit$762
  3936  09C6                     l1812:
  3937  09C6  303A               	movlw	58
  3938  09C7  0274               	subwf	isdigit@c,w
  3939  09C8  1803               	skipnc
  3940  09C9  29CB               	goto	u1561
  3941  09CA  29CC               	goto	u1560
  3942  09CB                     u1561:
  3943  09CB  29D4               	goto	l1818
  3944  09CC                     u1560:
  3945  09CC                     l1814:
  3946  09CC  3030               	movlw	48
  3947  09CD  0274               	subwf	isdigit@c,w
  3948  09CE  1C03               	skipc
  3949  09CF  29D1               	goto	u1571
  3950  09D0  29D2               	goto	u1570
  3951  09D1                     u1571:
  3952  09D1  29D4               	goto	l1818
  3953  09D2                     u1570:
  3954  09D2                     l1816:
  3955  09D2  01F3               	clrf	_isdigit$762
  3956  09D3  0AF3               	incf	_isdigit$762,f
  3957  09D4                     l1818:
  3958  09D4  0C73               	rrf	_isdigit$762,w
  3959  09D5                     l796:
  3960  09D5  0008               	return
  3961  09D6                     __end_of_isdigit:
  3962                           
  3963                           	psect	text11
  3964  09D6                     __ptext11:	
  3965 ;; *************** function ___wmul *****************
  3966 ;; Defined at:
  3967 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\Umul16.c"
  3968 ;; Parameters:    Size  Location     Type
  3969 ;;  multiplier      2    3[COMMON] unsigned int 
  3970 ;;  multiplicand    2    5[COMMON] unsigned int 
  3971 ;; Auto vars:     Size  Location     Type
  3972 ;;  product         2    0[BANK0 ] unsigned int 
  3973 ;; Return value:  Size  Location     Type
  3974 ;;                  2    3[COMMON] unsigned int 
  3975 ;; Registers used:
  3976 ;;		wreg, status,2, status,0
  3977 ;; Tracked objects:
  3978 ;;		On entry : 0/0
  3979 ;;		On exit  : 0/0
  3980 ;;		Unchanged: 0/0
  3981 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3982 ;;      Params:         4       0       0       0       0
  3983 ;;      Locals:         0       2       0       0       0
  3984 ;;      Temps:          0       0       0       0       0
  3985 ;;      Totals:         4       2       0       0       0
  3986 ;;Total ram usage:        6 bytes
  3987 ;; Hardware stack levels used:    1
  3988 ;; Hardware stack levels required when called:    1
  3989 ;; This function calls:
  3990 ;;		Nothing
  3991 ;; This function is called by:
  3992 ;;		_sprintf
  3993 ;; This function uses a non-reentrant model
  3994 ;;
  3995                           
  3996                           
  3997                           ;psect for function ___wmul
  3998  09D6                     ___wmul:
  3999  09D6                     l2740:	
  4000                           ;incstack = 0
  4001                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4002                           
  4003  09D6  1283               	bcf	3,5	;RP0=0, select bank0
  4004  09D7  1303               	bcf	3,6	;RP1=0, select bank0
  4005  09D8  01A0               	clrf	___wmul@product
  4006  09D9  01A1               	clrf	___wmul@product+1
  4007  09DA                     l2742:
  4008  09DA  1C73               	btfss	___wmul@multiplier,0
  4009  09DB  29DD               	goto	u3041
  4010  09DC  29DE               	goto	u3040
  4011  09DD                     u3041:
  4012  09DD  29E6               	goto	l343
  4013  09DE                     u3040:
  4014  09DE                     l2744:
  4015  09DE  0875               	movf	___wmul@multiplicand,w
  4016  09DF  1283               	bcf	3,5	;RP0=0, select bank0
  4017  09E0  1303               	bcf	3,6	;RP1=0, select bank0
  4018  09E1  07A0               	addwf	___wmul@product,f
  4019  09E2  1803               	skipnc
  4020  09E3  0AA1               	incf	___wmul@product+1,f
  4021  09E4  0876               	movf	___wmul@multiplicand+1,w
  4022  09E5  07A1               	addwf	___wmul@product+1,f
  4023  09E6                     l343:
  4024  09E6  3001               	movlw	1
  4025  09E7                     u3055:
  4026  09E7  1003               	clrc
  4027  09E8  0DF5               	rlf	___wmul@multiplicand,f
  4028  09E9  0DF6               	rlf	___wmul@multiplicand+1,f
  4029  09EA  3EFF               	addlw	-1
  4030  09EB  1D03               	skipz
  4031  09EC  29E7               	goto	u3055
  4032  09ED                     l2746:
  4033  09ED  3001               	movlw	1
  4034  09EE                     u3065:
  4035  09EE  1003               	clrc
  4036  09EF  0CF4               	rrf	___wmul@multiplier+1,f
  4037  09F0  0CF3               	rrf	___wmul@multiplier,f
  4038  09F1  3EFF               	addlw	-1
  4039  09F2  1D03               	skipz
  4040  09F3  29EE               	goto	u3065
  4041  09F4                     l2748:
  4042  09F4  0873               	movf	___wmul@multiplier,w
  4043  09F5  0474               	iorwf	___wmul@multiplier+1,w
  4044  09F6  1D03               	btfss	3,2
  4045  09F7  29F9               	goto	u3071
  4046  09F8  29FA               	goto	u3070
  4047  09F9                     u3071:
  4048  09F9  29DA               	goto	l2742
  4049  09FA                     u3070:
  4050  09FA                     l2750:
  4051  09FA  1283               	bcf	3,5	;RP0=0, select bank0
  4052  09FB  1303               	bcf	3,6	;RP1=0, select bank0
  4053  09FC  0821               	movf	___wmul@product+1,w
  4054  09FD  00F4               	movwf	?___wmul+1
  4055  09FE  0820               	movf	___wmul@product,w
  4056  09FF  00F3               	movwf	?___wmul
  4057  0A00                     l345:
  4058  0A00  0008               	return
  4059  0A01                     __end_of___wmul:
  4060                           
  4061                           	psect	text12
  4062  0AA3                     __ptext12:	
  4063 ;; *************** function ___lwmod *****************
  4064 ;; Defined at:
  4065 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\lwmod.c"
  4066 ;; Parameters:    Size  Location     Type
  4067 ;;  divisor         2    3[BANK0 ] unsigned int 
  4068 ;;  dividend        2    5[BANK0 ] unsigned int 
  4069 ;; Auto vars:     Size  Location     Type
  4070 ;;  counter         1    8[BANK0 ] unsigned char 
  4071 ;; Return value:  Size  Location     Type
  4072 ;;                  2    3[BANK0 ] unsigned int 
  4073 ;; Registers used:
  4074 ;;		wreg, status,2, status,0
  4075 ;; Tracked objects:
  4076 ;;		On entry : 0/0
  4077 ;;		On exit  : 0/0
  4078 ;;		Unchanged: 0/0
  4079 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4080 ;;      Params:         0       4       0       0       0
  4081 ;;      Locals:         0       1       0       0       0
  4082 ;;      Temps:          0       1       0       0       0
  4083 ;;      Totals:         0       6       0       0       0
  4084 ;;Total ram usage:        6 bytes
  4085 ;; Hardware stack levels used:    1
  4086 ;; Hardware stack levels required when called:    1
  4087 ;; This function calls:
  4088 ;;		Nothing
  4089 ;; This function is called by:
  4090 ;;		_sprintf
  4091 ;; This function uses a non-reentrant model
  4092 ;;
  4093                           
  4094                           
  4095                           ;psect for function ___lwmod
  4096  0AA3                     ___lwmod:
  4097  0AA3                     l1862:	
  4098                           ;incstack = 0
  4099                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4100                           
  4101  0AA3  1283               	bcf	3,5	;RP0=0, select bank0
  4102  0AA4  1303               	bcf	3,6	;RP1=0, select bank0
  4103  0AA5  0823               	movf	___lwmod@divisor,w
  4104  0AA6  0424               	iorwf	___lwmod@divisor+1,w
  4105  0AA7  1903               	btfsc	3,2
  4106  0AA8  2AAA               	goto	u1691
  4107  0AA9  2AAB               	goto	u1690
  4108  0AAA                     u1691:
  4109  0AAA  2ADA               	goto	l1880
  4110  0AAB                     u1690:
  4111  0AAB                     l1864:
  4112  0AAB  01A8               	clrf	___lwmod@counter
  4113  0AAC  0AA8               	incf	___lwmod@counter,f
  4114  0AAD  2AB9               	goto	l1870
  4115  0AAE                     l1866:
  4116  0AAE  3001               	movlw	1
  4117  0AAF                     u1705:
  4118  0AAF  1003               	clrc
  4119  0AB0  0DA3               	rlf	___lwmod@divisor,f
  4120  0AB1  0DA4               	rlf	___lwmod@divisor+1,f
  4121  0AB2  3EFF               	addlw	-1
  4122  0AB3  1D03               	skipz
  4123  0AB4  2AAF               	goto	u1705
  4124  0AB5                     l1868:
  4125  0AB5  3001               	movlw	1
  4126  0AB6  00A7               	movwf	??___lwmod
  4127  0AB7  0827               	movf	??___lwmod,w
  4128  0AB8  07A8               	addwf	___lwmod@counter,f
  4129  0AB9                     l1870:
  4130  0AB9  1FA4               	btfss	___lwmod@divisor+1,7
  4131  0ABA  2ABC               	goto	u1711
  4132  0ABB  2ABD               	goto	u1710
  4133  0ABC                     u1711:
  4134  0ABC  2AAE               	goto	l1866
  4135  0ABD                     u1710:
  4136  0ABD                     l1872:
  4137  0ABD  0824               	movf	___lwmod@divisor+1,w
  4138  0ABE  0226               	subwf	___lwmod@dividend+1,w
  4139  0ABF  1D03               	skipz
  4140  0AC0  2AC3               	goto	u1725
  4141  0AC1  0823               	movf	___lwmod@divisor,w
  4142  0AC2  0225               	subwf	___lwmod@dividend,w
  4143  0AC3                     u1725:
  4144  0AC3  1C03               	skipc
  4145  0AC4  2AC6               	goto	u1721
  4146  0AC5  2AC7               	goto	u1720
  4147  0AC6                     u1721:
  4148  0AC6  2ACD               	goto	l1876
  4149  0AC7                     u1720:
  4150  0AC7                     l1874:
  4151  0AC7  0823               	movf	___lwmod@divisor,w
  4152  0AC8  02A5               	subwf	___lwmod@dividend,f
  4153  0AC9  0824               	movf	___lwmod@divisor+1,w
  4154  0ACA  1C03               	skipc
  4155  0ACB  03A6               	decf	___lwmod@dividend+1,f
  4156  0ACC  02A6               	subwf	___lwmod@dividend+1,f
  4157  0ACD                     l1876:
  4158  0ACD  3001               	movlw	1
  4159  0ACE                     u1735:
  4160  0ACE  1003               	clrc
  4161  0ACF  0CA4               	rrf	___lwmod@divisor+1,f
  4162  0AD0  0CA3               	rrf	___lwmod@divisor,f
  4163  0AD1  3EFF               	addlw	-1
  4164  0AD2  1D03               	skipz
  4165  0AD3  2ACE               	goto	u1735
  4166  0AD4                     l1878:
  4167  0AD4  3001               	movlw	1
  4168  0AD5  02A8               	subwf	___lwmod@counter,f
  4169  0AD6  1D03               	btfss	3,2
  4170  0AD7  2AD9               	goto	u1741
  4171  0AD8  2ADA               	goto	u1740
  4172  0AD9                     u1741:
  4173  0AD9  2ABD               	goto	l1872
  4174  0ADA                     u1740:
  4175  0ADA                     l1880:
  4176  0ADA  0826               	movf	___lwmod@dividend+1,w
  4177  0ADB  00A4               	movwf	?___lwmod+1
  4178  0ADC  0825               	movf	___lwmod@dividend,w
  4179  0ADD  00A3               	movwf	?___lwmod
  4180  0ADE                     l625:
  4181  0ADE  0008               	return
  4182  0ADF                     __end_of___lwmod:
  4183                           
  4184                           	psect	text13
  4185  0BA8                     __ptext13:	
  4186 ;; *************** function ___lwdiv *****************
  4187 ;; Defined at:
  4188 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\lwdiv.c"
  4189 ;; Parameters:    Size  Location     Type
  4190 ;;  divisor         2    3[COMMON] unsigned int 
  4191 ;;  dividend        2    5[COMMON] unsigned int 
  4192 ;; Auto vars:     Size  Location     Type
  4193 ;;  quotient        2    1[BANK0 ] unsigned int 
  4194 ;;  counter         1    0[BANK0 ] unsigned char 
  4195 ;; Return value:  Size  Location     Type
  4196 ;;                  2    3[COMMON] unsigned int 
  4197 ;; Registers used:
  4198 ;;		wreg, status,2, status,0
  4199 ;; Tracked objects:
  4200 ;;		On entry : 0/0
  4201 ;;		On exit  : 0/0
  4202 ;;		Unchanged: 0/0
  4203 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4204 ;;      Params:         4       0       0       0       0
  4205 ;;      Locals:         0       3       0       0       0
  4206 ;;      Temps:          1       0       0       0       0
  4207 ;;      Totals:         5       3       0       0       0
  4208 ;;Total ram usage:        8 bytes
  4209 ;; Hardware stack levels used:    1
  4210 ;; Hardware stack levels required when called:    1
  4211 ;; This function calls:
  4212 ;;		Nothing
  4213 ;; This function is called by:
  4214 ;;		_sprintf
  4215 ;; This function uses a non-reentrant model
  4216 ;;
  4217                           
  4218                           
  4219                           ;psect for function ___lwdiv
  4220  0BA8                     ___lwdiv:
  4221  0BA8                     l2754:	
  4222                           ;incstack = 0
  4223                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4224                           
  4225  0BA8  1283               	bcf	3,5	;RP0=0, select bank0
  4226  0BA9  1303               	bcf	3,6	;RP1=0, select bank0
  4227  0BAA  01A1               	clrf	___lwdiv@quotient
  4228  0BAB  01A2               	clrf	___lwdiv@quotient+1
  4229  0BAC                     l2756:
  4230  0BAC  0873               	movf	___lwdiv@divisor,w
  4231  0BAD  0474               	iorwf	___lwdiv@divisor+1,w
  4232  0BAE  1903               	btfsc	3,2
  4233  0BAF  2BB1               	goto	u3081
  4234  0BB0  2BB2               	goto	u3080
  4235  0BB1                     u3081:
  4236  0BB1  2BE9               	goto	l2776
  4237  0BB2                     u3080:
  4238  0BB2                     l2758:
  4239  0BB2  01A0               	clrf	___lwdiv@counter
  4240  0BB3  0AA0               	incf	___lwdiv@counter,f
  4241  0BB4  2BC0               	goto	l2764
  4242  0BB5                     l2760:
  4243  0BB5  3001               	movlw	1
  4244  0BB6                     u3095:
  4245  0BB6  1003               	clrc
  4246  0BB7  0DF3               	rlf	___lwdiv@divisor,f
  4247  0BB8  0DF4               	rlf	___lwdiv@divisor+1,f
  4248  0BB9  3EFF               	addlw	-1
  4249  0BBA  1D03               	skipz
  4250  0BBB  2BB6               	goto	u3095
  4251  0BBC                     l2762:
  4252  0BBC  3001               	movlw	1
  4253  0BBD  00F7               	movwf	??___lwdiv
  4254  0BBE  0877               	movf	??___lwdiv,w
  4255  0BBF  07A0               	addwf	___lwdiv@counter,f
  4256  0BC0                     l2764:
  4257  0BC0  1FF4               	btfss	___lwdiv@divisor+1,7
  4258  0BC1  2BC3               	goto	u3101
  4259  0BC2  2BC4               	goto	u3100
  4260  0BC3                     u3101:
  4261  0BC3  2BB5               	goto	l2760
  4262  0BC4                     u3100:
  4263  0BC4                     l2766:
  4264  0BC4  3001               	movlw	1
  4265  0BC5                     u3115:
  4266  0BC5  1003               	clrc
  4267  0BC6  0DA1               	rlf	___lwdiv@quotient,f
  4268  0BC7  0DA2               	rlf	___lwdiv@quotient+1,f
  4269  0BC8  3EFF               	addlw	-1
  4270  0BC9  1D03               	skipz
  4271  0BCA  2BC5               	goto	u3115
  4272  0BCB  0874               	movf	___lwdiv@divisor+1,w
  4273  0BCC  0276               	subwf	___lwdiv@dividend+1,w
  4274  0BCD  1D03               	skipz
  4275  0BCE  2BD1               	goto	u3125
  4276  0BCF  0873               	movf	___lwdiv@divisor,w
  4277  0BD0  0275               	subwf	___lwdiv@dividend,w
  4278  0BD1                     u3125:
  4279  0BD1  1C03               	skipc
  4280  0BD2  2BD4               	goto	u3121
  4281  0BD3  2BD5               	goto	u3120
  4282  0BD4                     u3121:
  4283  0BD4  2BDC               	goto	l2772
  4284  0BD5                     u3120:
  4285  0BD5                     l2768:
  4286  0BD5  0873               	movf	___lwdiv@divisor,w
  4287  0BD6  02F5               	subwf	___lwdiv@dividend,f
  4288  0BD7  0874               	movf	___lwdiv@divisor+1,w
  4289  0BD8  1C03               	skipc
  4290  0BD9  03F6               	decf	___lwdiv@dividend+1,f
  4291  0BDA  02F6               	subwf	___lwdiv@dividend+1,f
  4292  0BDB                     l2770:
  4293  0BDB  1421               	bsf	___lwdiv@quotient,0
  4294  0BDC                     l2772:
  4295  0BDC  3001               	movlw	1
  4296  0BDD                     u3135:
  4297  0BDD  1003               	clrc
  4298  0BDE  0CF4               	rrf	___lwdiv@divisor+1,f
  4299  0BDF  0CF3               	rrf	___lwdiv@divisor,f
  4300  0BE0  3EFF               	addlw	-1
  4301  0BE1  1D03               	skipz
  4302  0BE2  2BDD               	goto	u3135
  4303  0BE3                     l2774:
  4304  0BE3  3001               	movlw	1
  4305  0BE4  02A0               	subwf	___lwdiv@counter,f
  4306  0BE5  1D03               	btfss	3,2
  4307  0BE6  2BE8               	goto	u3141
  4308  0BE7  2BE9               	goto	u3140
  4309  0BE8                     u3141:
  4310  0BE8  2BC4               	goto	l2766
  4311  0BE9                     u3140:
  4312  0BE9                     l2776:
  4313  0BE9  0822               	movf	___lwdiv@quotient+1,w
  4314  0BEA  00F4               	movwf	?___lwdiv+1
  4315  0BEB  0821               	movf	___lwdiv@quotient,w
  4316  0BEC  00F3               	movwf	?___lwdiv
  4317  0BED                     l615:
  4318  0BED  0008               	return
  4319  0BEE                     __end_of___lwdiv:
  4320                           
  4321                           	psect	text14
  4322  0A6A                     __ptext14:	
  4323 ;; *************** function _LCD_Print *****************
  4324 ;; Defined at:
  4325 ;;		line 95 in file "./LCD_Lib.c"
  4326 ;; Parameters:    Size  Location     Type
  4327 ;;  LCD_Str         1    wreg     PTR unsigned char 
  4328 ;;		 -> LCD_Cstring(16), 
  4329 ;; Auto vars:     Size  Location     Type
  4330 ;;  LCD_Str         1    1[BANK0 ] PTR unsigned char 
  4331 ;;		 -> LCD_Cstring(16), 
  4332 ;;  i               1    0[BANK0 ] unsigned char 
  4333 ;; Return value:  Size  Location     Type
  4334 ;;                  1    wreg      void 
  4335 ;; Registers used:
  4336 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4337 ;; Tracked objects:
  4338 ;;		On entry : 0/0
  4339 ;;		On exit  : 0/0
  4340 ;;		Unchanged: 0/0
  4341 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4342 ;;      Params:         0       0       0       0       0
  4343 ;;      Locals:         0       2       0       0       0
  4344 ;;      Temps:          2       0       0       0       0
  4345 ;;      Totals:         2       2       0       0       0
  4346 ;;Total ram usage:        4 bytes
  4347 ;; Hardware stack levels used:    1
  4348 ;; Hardware stack levels required when called:    2
  4349 ;; This function calls:
  4350 ;;		_LCD_Write_Nibble
  4351 ;; This function is called by:
  4352 ;;		_imprime_tela_main
  4353 ;;		_imprime_tela_ajuste1
  4354 ;;		_imprime_tela_ajuste2
  4355 ;;		_imprime_tela_ajuste3
  4356 ;;		_imprime_tela_ajuste4
  4357 ;; This function uses a non-reentrant model
  4358 ;;
  4359                           
  4360                           
  4361                           ;psect for function _LCD_Print
  4362  0A6A                     _LCD_Print:
  4363                           
  4364                           ;incstack = 0
  4365                           ; Regs used in _LCD_Print: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4366                           ;LCD_Print@LCD_Str stored from wreg
  4367  0A6A  1283               	bcf	3,5	;RP0=0, select bank0
  4368  0A6B  1303               	bcf	3,6	;RP1=0, select bank0
  4369  0A6C  00A1               	movwf	LCD_Print@LCD_Str
  4370  0A6D                     l2798:
  4371                           
  4372                           ;./LCD_Lib.c: 95: void LCD_Print(char* LCD_Str);./LCD_Lib.c: 96: {;./LCD_Lib.c: 97:   ui
      +                          nt8_t i = 0;
  4373  0A6D  01A0               	clrf	LCD_Print@i
  4374  0A6E                     l2800:
  4375                           
  4376                           ;./LCD_Lib.c: 98:   RS = 1;
  4377  0A6E  147A               	bsf	_RS/(0+8),_RS& (0+7)
  4378                           
  4379                           ;./LCD_Lib.c: 99:   while(LCD_Str[i] != '\0')
  4380  0A6F  2A97               	goto	l2806
  4381  0A70                     l2802:
  4382                           
  4383                           ;./LCD_Lib.c: 100:   {;./LCD_Lib.c: 101:     LCD_Write_Nibble(LCD_Str[i] >> 4);
  4384  0A70  0820               	movf	LCD_Print@i,w
  4385  0A71  0721               	addwf	LCD_Print@LCD_Str,w
  4386  0A72  00F6               	movwf	??_LCD_Print
  4387  0A73  0876               	movf	??_LCD_Print,w
  4388  0A74  0084               	movwf	4
  4389  0A75  0800               	movf	0,w
  4390  0A76  00F7               	movwf	??_LCD_Print+1
  4391  0A77  3004               	movlw	4
  4392  0A78                     u3155:
  4393  0A78  1003               	clrc
  4394  0A79  0CF7               	rrf	??_LCD_Print+1,f
  4395  0A7A  3EFF               	addlw	-1
  4396  0A7B  1D03               	skipz
  4397  0A7C  2A78               	goto	u3155
  4398  0A7D  0877               	movf	??_LCD_Print+1,w
  4399  0A7E  120A  158A  2439  120A  158A  	fcall	_LCD_Write_Nibble
  4400                           
  4401                           ;./LCD_Lib.c: 102:     LCD_Write_Nibble(LCD_Str[i++] );
  4402  0A83  1283               	bcf	3,5	;RP0=0, select bank0
  4403  0A84  1303               	bcf	3,6	;RP1=0, select bank0
  4404  0A85  0820               	movf	LCD_Print@i,w
  4405  0A86  0721               	addwf	LCD_Print@LCD_Str,w
  4406  0A87  00F6               	movwf	??_LCD_Print
  4407  0A88  0876               	movf	??_LCD_Print,w
  4408  0A89  0084               	movwf	4
  4409  0A8A  1383               	bcf	3,7	;select IRP bank0
  4410  0A8B  0800               	movf	0,w
  4411  0A8C  120A  158A  2439  120A  158A  	fcall	_LCD_Write_Nibble
  4412  0A91                     l2804:
  4413  0A91  3001               	movlw	1
  4414  0A92  00F6               	movwf	??_LCD_Print
  4415  0A93  0876               	movf	??_LCD_Print,w
  4416  0A94  1283               	bcf	3,5	;RP0=0, select bank0
  4417  0A95  1303               	bcf	3,6	;RP1=0, select bank0
  4418  0A96  07A0               	addwf	LCD_Print@i,f
  4419  0A97                     l2806:
  4420                           
  4421                           ;./LCD_Lib.c: 99:   while(LCD_Str[i] != '\0')
  4422  0A97  0820               	movf	LCD_Print@i,w
  4423  0A98  0721               	addwf	LCD_Print@LCD_Str,w
  4424  0A99  00F6               	movwf	??_LCD_Print
  4425  0A9A  0876               	movf	??_LCD_Print,w
  4426  0A9B  0084               	movwf	4
  4427  0A9C  1383               	bcf	3,7	;select IRP bank0
  4428  0A9D  0800               	movf	0,w
  4429  0A9E  1D03               	btfss	3,2
  4430  0A9F  2AA1               	goto	u3161
  4431  0AA0  2AA2               	goto	u3160
  4432  0AA1                     u3161:
  4433  0AA1  2A70               	goto	l2802
  4434  0AA2                     u3160:
  4435  0AA2                     l77:
  4436  0AA2  0008               	return
  4437  0AA3                     __end_of_LCD_Print:
  4438                           
  4439                           	psect	text15
  4440  0A32                     __ptext15:	
  4441 ;; *************** function _LCD_Goto *****************
  4442 ;; Defined at:
  4443 ;;		line 69 in file "./LCD_Lib.c"
  4444 ;; Parameters:    Size  Location     Type
  4445 ;;  col             1    wreg     unsigned char 
  4446 ;;  row             1    1[BANK0 ] unsigned char 
  4447 ;; Auto vars:     Size  Location     Type
  4448 ;;  col             1    4[BANK0 ] unsigned char 
  4449 ;; Return value:  Size  Location     Type
  4450 ;;                  1    wreg      void 
  4451 ;; Registers used:
  4452 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4453 ;; Tracked objects:
  4454 ;;		On entry : 0/0
  4455 ;;		On exit  : 0/0
  4456 ;;		Unchanged: 0/0
  4457 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4458 ;;      Params:         0       1       0       0       0
  4459 ;;      Locals:         0       1       0       0       0
  4460 ;;      Temps:          0       2       0       0       0
  4461 ;;      Totals:         0       4       0       0       0
  4462 ;;Total ram usage:        4 bytes
  4463 ;; Hardware stack levels used:    1
  4464 ;; Hardware stack levels required when called:    3
  4465 ;; This function calls:
  4466 ;;		_LCD_Cmd
  4467 ;; This function is called by:
  4468 ;;		_imprime_tela_main
  4469 ;;		_imprime_tela_ajuste1
  4470 ;;		_imprime_tela_ajuste2
  4471 ;;		_imprime_tela_ajuste3
  4472 ;;		_imprime_tela_ajuste4
  4473 ;; This function uses a non-reentrant model
  4474 ;;
  4475                           
  4476                           
  4477                           ;psect for function _LCD_Goto
  4478  0A32                     _LCD_Goto:
  4479                           
  4480                           ;incstack = 0
  4481                           ; Regs used in _LCD_Goto: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4482                           ;LCD_Goto@col stored from wreg
  4483  0A32  1283               	bcf	3,5	;RP0=0, select bank0
  4484  0A33  1303               	bcf	3,6	;RP1=0, select bank0
  4485  0A34  00A4               	movwf	LCD_Goto@col
  4486  0A35                     l2780:
  4487                           
  4488                           ;./LCD_Lib.c: 69: void LCD_Goto(uint8_t col, uint8_t row);./LCD_Lib.c: 70: {;./LCD_Lib.c
      +                          : 71:   switch(row)
  4489  0A35  2A56               	goto	l2790
  4490  0A36                     l2782:
  4491                           
  4492                           ;./LCD_Lib.c: 74:       LCD_Cmd(0xC0 + col - 1);
  4493  0A36  0824               	movf	LCD_Goto@col,w
  4494  0A37  3EBF               	addlw	191
  4495  0A38  120A  158A  2201  120A  158A  	fcall	_LCD_Cmd
  4496                           
  4497                           ;./LCD_Lib.c: 75:       break;
  4498  0A3D  2A69               	goto	l68
  4499  0A3E                     l2784:
  4500                           
  4501                           ;./LCD_Lib.c: 77:       LCD_Cmd(0x94 + col - 1);
  4502  0A3E  0824               	movf	LCD_Goto@col,w
  4503  0A3F  3E93               	addlw	147
  4504  0A40  120A  158A  2201  120A  158A  	fcall	_LCD_Cmd
  4505                           
  4506                           ;./LCD_Lib.c: 78:       break;
  4507  0A45  2A69               	goto	l68
  4508  0A46                     l2786:
  4509                           
  4510                           ;./LCD_Lib.c: 80:       LCD_Cmd(0xD4 + col - 1);
  4511  0A46  0824               	movf	LCD_Goto@col,w
  4512  0A47  3ED3               	addlw	211
  4513  0A48  120A  158A  2201  120A  158A  	fcall	_LCD_Cmd
  4514                           
  4515                           ;./LCD_Lib.c: 81:     break;
  4516  0A4D  2A69               	goto	l68
  4517  0A4E                     l2788:
  4518                           
  4519                           ;./LCD_Lib.c: 83:       LCD_Cmd(0x80 + col - 1);
  4520  0A4E  0824               	movf	LCD_Goto@col,w
  4521  0A4F  3E7F               	addlw	127
  4522  0A50  120A  158A  2201  120A  158A  	fcall	_LCD_Cmd
  4523                           
  4524                           ;./LCD_Lib.c: 84:   }
  4525  0A55  2A69               	goto	l68
  4526  0A56                     l2790:
  4527  0A56  0821               	movf	LCD_Goto@row,w
  4528  0A57  00A2               	movwf	??_LCD_Goto
  4529  0A58  01A3               	clrf	??_LCD_Goto+1
  4530                           
  4531                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4532                           ; Switch size 1, requested type "simple"
  4533                           ; Number of cases is 1, Range of values is 0 to 0
  4534                           ; switch strategies available:
  4535                           ; Name         Instructions Cycles
  4536                           ; simple_byte            4     3 (average)
  4537                           ; direct_byte           11     8 (fixed)
  4538                           ; jumptable            260     6 (fixed)
  4539                           ;	Chosen strategy is simple_byte
  4540  0A59  0823               	movf	??_LCD_Goto+1,w
  4541  0A5A  3A00               	xorlw	0	; case 0
  4542  0A5B  1903               	skipnz
  4543  0A5C  2A5E               	goto	l3300
  4544  0A5D  2A4E               	goto	l2788
  4545  0A5E                     l3300:
  4546                           
  4547                           ; Switch size 1, requested type "simple"
  4548                           ; Number of cases is 3, Range of values is 2 to 4
  4549                           ; switch strategies available:
  4550                           ; Name         Instructions Cycles
  4551                           ; simple_byte           10     6 (average)
  4552                           ; direct_byte           20    11 (fixed)
  4553                           ; jumptable            263     9 (fixed)
  4554                           ;	Chosen strategy is simple_byte
  4555  0A5E  0822               	movf	??_LCD_Goto,w
  4556  0A5F  3A02               	xorlw	2	; case 2
  4557  0A60  1903               	skipnz
  4558  0A61  2A36               	goto	l2782
  4559  0A62  3A01               	xorlw	1	; case 3
  4560  0A63  1903               	skipnz
  4561  0A64  2A3E               	goto	l2784
  4562  0A65  3A07               	xorlw	7	; case 4
  4563  0A66  1903               	skipnz
  4564  0A67  2A46               	goto	l2786
  4565  0A68  2A4E               	goto	l2788
  4566  0A69                     l68:
  4567  0A69  0008               	return
  4568  0A6A                     __end_of_LCD_Goto:
  4569                           
  4570                           	psect	text16
  4571  0721                     __ptext16:	
  4572 ;; *************** function ___xxtofl *****************
  4573 ;; Defined at:
  4574 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\xxtofl.c"
  4575 ;; Parameters:    Size  Location     Type
  4576 ;;  sign            1    wreg     unsigned char 
  4577 ;;  val             4    3[COMMON] long 
  4578 ;; Auto vars:     Size  Location     Type
  4579 ;;  sign            1    4[BANK0 ] unsigned char 
  4580 ;;  arg             4    6[BANK0 ] unsigned long 
  4581 ;;  exp             1    5[BANK0 ] unsigned char 
  4582 ;; Return value:  Size  Location     Type
  4583 ;;                  4    3[COMMON] unsigned char 
  4584 ;; Registers used:
  4585 ;;		wreg, status,2, status,0
  4586 ;; Tracked objects:
  4587 ;;		On entry : 0/0
  4588 ;;		On exit  : 0/0
  4589 ;;		Unchanged: 0/0
  4590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4591 ;;      Params:         4       0       0       0       0
  4592 ;;      Locals:         0       6       0       0       0
  4593 ;;      Temps:          0       4       0       0       0
  4594 ;;      Totals:         4      10       0       0       0
  4595 ;;Total ram usage:       14 bytes
  4596 ;; Hardware stack levels used:    1
  4597 ;; Hardware stack levels required when called:    1
  4598 ;; This function calls:
  4599 ;;		Nothing
  4600 ;; This function is called by:
  4601 ;;		_main
  4602 ;; This function uses a non-reentrant model
  4603 ;;
  4604                           
  4605                           
  4606                           ;psect for function ___xxtofl
  4607  0721                     ___xxtofl:
  4608                           
  4609                           ;incstack = 0
  4610                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  4611                           ;___xxtofl@sign stored from wreg
  4612  0721  1283               	bcf	3,5	;RP0=0, select bank0
  4613  0722  1303               	bcf	3,6	;RP1=0, select bank0
  4614  0723  00A4               	movwf	___xxtofl@sign
  4615  0724                     l3132:
  4616  0724  0824               	movf	___xxtofl@sign,w
  4617  0725  1903               	btfsc	3,2
  4618  0726  2F28               	goto	u3561
  4619  0727  2F29               	goto	u3560
  4620  0728                     u3561:
  4621  0728  2F3D               	goto	l3138
  4622  0729                     u3560:
  4623  0729                     l3134:
  4624  0729  1FF6               	btfss	___xxtofl@val+3,7
  4625  072A  2F2C               	goto	u3571
  4626  072B  2F2D               	goto	u3570
  4627  072C                     u3571:
  4628  072C  2F3D               	goto	l3138
  4629  072D                     u3570:
  4630  072D                     l3136:
  4631  072D  0973               	comf	___xxtofl@val,w
  4632  072E  00A6               	movwf	___xxtofl@arg
  4633  072F  0974               	comf	___xxtofl@val+1,w
  4634  0730  00A7               	movwf	___xxtofl@arg+1
  4635  0731  0975               	comf	___xxtofl@val+2,w
  4636  0732  00A8               	movwf	___xxtofl@arg+2
  4637  0733  0976               	comf	___xxtofl@val+3,w
  4638  0734  00A9               	movwf	___xxtofl@arg+3
  4639  0735  0AA6               	incf	___xxtofl@arg,f
  4640  0736  1903               	skipnz
  4641  0737  0AA7               	incf	___xxtofl@arg+1,f
  4642  0738  1903               	skipnz
  4643  0739  0AA8               	incf	___xxtofl@arg+2,f
  4644  073A  1903               	skipnz
  4645  073B  0AA9               	incf	___xxtofl@arg+3,f
  4646  073C  2F45               	goto	l776
  4647  073D                     l3138:
  4648  073D  0876               	movf	___xxtofl@val+3,w
  4649  073E  00A9               	movwf	___xxtofl@arg+3
  4650  073F  0875               	movf	___xxtofl@val+2,w
  4651  0740  00A8               	movwf	___xxtofl@arg+2
  4652  0741  0874               	movf	___xxtofl@val+1,w
  4653  0742  00A7               	movwf	___xxtofl@arg+1
  4654  0743  0873               	movf	___xxtofl@val,w
  4655  0744  00A6               	movwf	___xxtofl@arg
  4656  0745                     l776:
  4657  0745  0876               	movf	___xxtofl@val+3,w
  4658  0746  0475               	iorwf	___xxtofl@val+2,w
  4659  0747  0474               	iorwf	___xxtofl@val+1,w
  4660  0748  0473               	iorwf	___xxtofl@val,w
  4661  0749  1D03               	skipz
  4662  074A  2F4C               	goto	u3581
  4663  074B  2F4D               	goto	u3580
  4664  074C                     u3581:
  4665  074C  2F56               	goto	l3144
  4666  074D                     u3580:
  4667  074D                     l3140:
  4668  074D  3000               	movlw	0
  4669  074E  00F6               	movwf	?___xxtofl+3
  4670  074F  3000               	movlw	0
  4671  0750  00F5               	movwf	?___xxtofl+2
  4672  0751  3000               	movlw	0
  4673  0752  00F4               	movwf	?___xxtofl+1
  4674  0753  3000               	movlw	0
  4675  0754  00F3               	movwf	?___xxtofl
  4676  0755  2FDC               	goto	l778
  4677  0756                     l3144:
  4678  0756  3096               	movlw	150
  4679  0757  00A0               	movwf	??___xxtofl
  4680  0758  0820               	movf	??___xxtofl,w
  4681  0759  00A5               	movwf	___xxtofl@exp
  4682  075A  2F68               	goto	l3148
  4683  075B                     l3146:
  4684  075B  3001               	movlw	1
  4685  075C  00A0               	movwf	??___xxtofl
  4686  075D  0820               	movf	??___xxtofl,w
  4687  075E  07A5               	addwf	___xxtofl@exp,f
  4688  075F  3001               	movlw	1
  4689  0760                     u3595:
  4690  0760  1003               	clrc
  4691  0761  0CA9               	rrf	___xxtofl@arg+3,f
  4692  0762  0CA8               	rrf	___xxtofl@arg+2,f
  4693  0763  0CA7               	rrf	___xxtofl@arg+1,f
  4694  0764  0CA6               	rrf	___xxtofl@arg,f
  4695  0765  3EFF               	addlw	-1
  4696  0766  1D03               	skipz
  4697  0767  2F60               	goto	u3595
  4698  0768                     l3148:
  4699  0768  30FE               	movlw	254
  4700  0769  0529               	andwf	___xxtofl@arg+3,w
  4701  076A  1D03               	btfss	3,2
  4702  076B  2F6D               	goto	u3601
  4703  076C  2F6E               	goto	u3600
  4704  076D                     u3601:
  4705  076D  2F5B               	goto	l3146
  4706  076E                     u3600:
  4707  076E  2F8A               	goto	l782
  4708  076F                     l3150:
  4709  076F  3001               	movlw	1
  4710  0770  00A0               	movwf	??___xxtofl
  4711  0771  0820               	movf	??___xxtofl,w
  4712  0772  07A5               	addwf	___xxtofl@exp,f
  4713  0773                     l3152:
  4714  0773  3001               	movlw	1
  4715  0774  07A6               	addwf	___xxtofl@arg,f
  4716  0775  3000               	movlw	0
  4717  0776  1803               	skipnc
  4718  0777  3001               	movlw	1
  4719  0778  07A7               	addwf	___xxtofl@arg+1,f
  4720  0779  3000               	movlw	0
  4721  077A  1803               	skipnc
  4722  077B  3001               	movlw	1
  4723  077C  07A8               	addwf	___xxtofl@arg+2,f
  4724  077D  3000               	movlw	0
  4725  077E  1803               	skipnc
  4726  077F  3001               	movlw	1
  4727  0780  07A9               	addwf	___xxtofl@arg+3,f
  4728  0781                     l3154:
  4729  0781  3001               	movlw	1
  4730  0782                     u3615:
  4731  0782  1003               	clrc
  4732  0783  0CA9               	rrf	___xxtofl@arg+3,f
  4733  0784  0CA8               	rrf	___xxtofl@arg+2,f
  4734  0785  0CA7               	rrf	___xxtofl@arg+1,f
  4735  0786  0CA6               	rrf	___xxtofl@arg,f
  4736  0787  3EFF               	addlw	-1
  4737  0788  1D03               	skipz
  4738  0789  2F82               	goto	u3615
  4739  078A                     l782:
  4740  078A  30FF               	movlw	255
  4741  078B  0529               	andwf	___xxtofl@arg+3,w
  4742  078C  1D03               	btfss	3,2
  4743  078D  2F8F               	goto	u3621
  4744  078E  2F90               	goto	u3620
  4745  078F                     u3621:
  4746  078F  2F6F               	goto	l3150
  4747  0790                     u3620:
  4748  0790  2F9C               	goto	l3158
  4749  0791                     l3156:
  4750  0791  3001               	movlw	1
  4751  0792  02A5               	subwf	___xxtofl@exp,f
  4752  0793  3001               	movlw	1
  4753  0794  00A0               	movwf	??___xxtofl
  4754  0795                     u3635:
  4755  0795  1003               	clrc
  4756  0796  0DA6               	rlf	___xxtofl@arg,f
  4757  0797  0DA7               	rlf	___xxtofl@arg+1,f
  4758  0798  0DA8               	rlf	___xxtofl@arg+2,f
  4759  0799  0DA9               	rlf	___xxtofl@arg+3,f
  4760  079A  0BA0               	decfsz	??___xxtofl,f
  4761  079B  2F95               	goto	u3635
  4762  079C                     l3158:
  4763  079C  1BA8               	btfsc	___xxtofl@arg+2,7
  4764  079D  2F9F               	goto	u3641
  4765  079E  2FA0               	goto	u3640
  4766  079F                     u3641:
  4767  079F  2FA6               	goto	l789
  4768  07A0                     u3640:
  4769  07A0                     l3160:
  4770  07A0  3002               	movlw	2
  4771  07A1  0225               	subwf	___xxtofl@exp,w
  4772  07A2  1803               	skipnc
  4773  07A3  2FA5               	goto	u3651
  4774  07A4  2FA6               	goto	u3650
  4775  07A5                     u3651:
  4776  07A5  2F91               	goto	l3156
  4777  07A6                     u3650:
  4778  07A6                     l789:
  4779  07A6  1825               	btfsc	___xxtofl@exp,0
  4780  07A7  2FA9               	goto	u3661
  4781  07A8  2FAA               	goto	u3660
  4782  07A9                     u3661:
  4783  07A9  2FB2               	goto	l790
  4784  07AA                     u3660:
  4785  07AA                     l3162:
  4786  07AA  30FF               	movlw	255
  4787  07AB  05A6               	andwf	___xxtofl@arg,f
  4788  07AC  30FF               	movlw	255
  4789  07AD  05A7               	andwf	___xxtofl@arg+1,f
  4790  07AE  307F               	movlw	127
  4791  07AF  05A8               	andwf	___xxtofl@arg+2,f
  4792  07B0  30FF               	movlw	255
  4793  07B1  05A9               	andwf	___xxtofl@arg+3,f
  4794  07B2                     l790:
  4795  07B2  1003               	clrc
  4796  07B3  0CA5               	rrf	___xxtofl@exp,f
  4797  07B4                     l3164:
  4798  07B4  0825               	movf	___xxtofl@exp,w
  4799  07B5  00A0               	movwf	??___xxtofl
  4800  07B6  01A1               	clrf	??___xxtofl+1
  4801  07B7  01A2               	clrf	??___xxtofl+2
  4802  07B8  01A3               	clrf	??___xxtofl+3
  4803  07B9  3018               	movlw	24
  4804  07BA                     u3675:
  4805  07BA  1003               	clrc
  4806  07BB  0DA0               	rlf	??___xxtofl,f
  4807  07BC  0DA1               	rlf	??___xxtofl+1,f
  4808  07BD  0DA2               	rlf	??___xxtofl+2,f
  4809  07BE  0DA3               	rlf	??___xxtofl+3,f
  4810  07BF                     u3670:
  4811  07BF  3EFF               	addlw	-1
  4812  07C0  1D03               	skipz
  4813  07C1  2FBA               	goto	u3675
  4814  07C2  0820               	movf	??___xxtofl,w
  4815  07C3  04A6               	iorwf	___xxtofl@arg,f
  4816  07C4  0821               	movf	??___xxtofl+1,w
  4817  07C5  04A7               	iorwf	___xxtofl@arg+1,f
  4818  07C6  0822               	movf	??___xxtofl+2,w
  4819  07C7  04A8               	iorwf	___xxtofl@arg+2,f
  4820  07C8  0823               	movf	??___xxtofl+3,w
  4821  07C9  04A9               	iorwf	___xxtofl@arg+3,f
  4822  07CA                     l3166:
  4823  07CA  0824               	movf	___xxtofl@sign,w
  4824  07CB  1903               	btfsc	3,2
  4825  07CC  2FCE               	goto	u3681
  4826  07CD  2FCF               	goto	u3680
  4827  07CE                     u3681:
  4828  07CE  2FD4               	goto	l3172
  4829  07CF                     u3680:
  4830  07CF                     l3168:
  4831  07CF  1FF6               	btfss	___xxtofl@val+3,7
  4832  07D0  2FD2               	goto	u3691
  4833  07D1  2FD3               	goto	u3690
  4834  07D2                     u3691:
  4835  07D2  2FD4               	goto	l3172
  4836  07D3                     u3690:
  4837  07D3                     l3170:
  4838  07D3  17A9               	bsf	___xxtofl@arg+3,7
  4839  07D4                     l3172:
  4840  07D4  0829               	movf	___xxtofl@arg+3,w
  4841  07D5  00F6               	movwf	?___xxtofl+3
  4842  07D6  0828               	movf	___xxtofl@arg+2,w
  4843  07D7  00F5               	movwf	?___xxtofl+2
  4844  07D8  0827               	movf	___xxtofl@arg+1,w
  4845  07D9  00F4               	movwf	?___xxtofl+1
  4846  07DA  0826               	movf	___xxtofl@arg,w
  4847  07DB  00F3               	movwf	?___xxtofl
  4848  07DC                     l778:
  4849  07DC  0008               	return
  4850  07DD                     __end_of___xxtofl:
  4851                           
  4852                           	psect	text17
  4853  0CFC                     __ptext17:	
  4854 ;; *************** function ___fltol *****************
  4855 ;; Defined at:
  4856 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\fltol.c"
  4857 ;; Parameters:    Size  Location     Type
  4858 ;;  f1              4   36[BANK0 ] unsigned char 
  4859 ;; Auto vars:     Size  Location     Type
  4860 ;;  exp1            1   46[BANK0 ] unsigned char 
  4861 ;;  sign1           1   45[BANK0 ] unsigned char 
  4862 ;; Return value:  Size  Location     Type
  4863 ;;                  4   36[BANK0 ] long 
  4864 ;; Registers used:
  4865 ;;		wreg, status,2, status,0
  4866 ;; Tracked objects:
  4867 ;;		On entry : 0/0
  4868 ;;		On exit  : 0/0
  4869 ;;		Unchanged: 0/0
  4870 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4871 ;;      Params:         0       4       0       0       0
  4872 ;;      Locals:         0       2       0       0       0
  4873 ;;      Temps:          0       5       0       0       0
  4874 ;;      Totals:         0      11       0       0       0
  4875 ;;Total ram usage:       11 bytes
  4876 ;; Hardware stack levels used:    1
  4877 ;; Hardware stack levels required when called:    1
  4878 ;; This function calls:
  4879 ;;		Nothing
  4880 ;; This function is called by:
  4881 ;;		_main
  4882 ;; This function uses a non-reentrant model
  4883 ;;
  4884                           
  4885                           
  4886                           ;psect for function ___fltol
  4887  0CFC                     ___fltol:
  4888  0CFC                     l2352:	
  4889                           ;incstack = 0
  4890                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  4891                           
  4892  0CFC  1003               	clrc
  4893  0CFD  1283               	bcf	3,5	;RP0=0, select bank0
  4894  0CFE  1303               	bcf	3,6	;RP1=0, select bank0
  4895  0CFF  0D46               	rlf	___fltol@f1+2,w
  4896  0D00  0D47               	rlf	___fltol@f1+3,w
  4897  0D01  00C8               	movwf	??___fltol
  4898  0D02  0848               	movf	??___fltol,w
  4899  0D03  00CE               	movwf	___fltol@exp1
  4900  0D04  084E               	movf	___fltol@exp1,w
  4901  0D05  1D03               	btfss	3,2
  4902  0D06  2D08               	goto	u2331
  4903  0D07  2D09               	goto	u2330
  4904  0D08                     u2331:
  4905  0D08  2D12               	goto	l2358
  4906  0D09                     u2330:
  4907  0D09                     l2354:
  4908  0D09  3000               	movlw	0
  4909  0D0A  00C7               	movwf	?___fltol+3
  4910  0D0B  3000               	movlw	0
  4911  0D0C  00C6               	movwf	?___fltol+2
  4912  0D0D  3000               	movlw	0
  4913  0D0E  00C5               	movwf	?___fltol+1
  4914  0D0F  3000               	movlw	0
  4915  0D10  00C4               	movwf	?___fltol
  4916  0D11  2D77               	goto	l529
  4917  0D12                     l2358:
  4918  0D12  0844               	movf	___fltol@f1,w
  4919  0D13  00C8               	movwf	??___fltol
  4920  0D14  0845               	movf	___fltol@f1+1,w
  4921  0D15  00C9               	movwf	??___fltol+1
  4922  0D16  0846               	movf	___fltol@f1+2,w
  4923  0D17  00CA               	movwf	??___fltol+2
  4924  0D18  0847               	movf	___fltol@f1+3,w
  4925  0D19  00CB               	movwf	??___fltol+3
  4926  0D1A  301F               	movlw	31
  4927  0D1B                     u2345:
  4928  0D1B  1003               	clrc
  4929  0D1C  0CCB               	rrf	??___fltol+3,f
  4930  0D1D  0CCA               	rrf	??___fltol+2,f
  4931  0D1E  0CC9               	rrf	??___fltol+1,f
  4932  0D1F  0CC8               	rrf	??___fltol,f
  4933  0D20                     u2340:
  4934  0D20  3EFF               	addlw	-1
  4935  0D21  1D03               	skipz
  4936  0D22  2D1B               	goto	u2345
  4937  0D23  0848               	movf	??___fltol,w
  4938  0D24  00CC               	movwf	??___fltol+4
  4939  0D25  084C               	movf	??___fltol+4,w
  4940  0D26  00CD               	movwf	___fltol@sign1
  4941  0D27                     l2360:
  4942  0D27  17C6               	bsf	___fltol@f1+2,7
  4943  0D28                     l2362:
  4944  0D28  30FF               	movlw	255
  4945  0D29  05C4               	andwf	___fltol@f1,f
  4946  0D2A  30FF               	movlw	255
  4947  0D2B  05C5               	andwf	___fltol@f1+1,f
  4948  0D2C  30FF               	movlw	255
  4949  0D2D  05C6               	andwf	___fltol@f1+2,f
  4950  0D2E  3000               	movlw	0
  4951  0D2F  05C7               	andwf	___fltol@f1+3,f
  4952  0D30                     l2364:
  4953  0D30  3096               	movlw	150
  4954  0D31  02CE               	subwf	___fltol@exp1,f
  4955  0D32                     l2366:
  4956  0D32  1FCE               	btfss	___fltol@exp1,7
  4957  0D33  2D35               	goto	u2351
  4958  0D34  2D36               	goto	u2350
  4959  0D35                     u2351:
  4960  0D35  2D50               	goto	l2376
  4961  0D36                     u2350:
  4962  0D36                     l2368:
  4963  0D36  084E               	movf	___fltol@exp1,w
  4964  0D37  3A80               	xorlw	128
  4965  0D38  3E97               	addlw	151
  4966  0D39  1803               	skipnc
  4967  0D3A  2D3C               	goto	u2361
  4968  0D3B  2D3D               	goto	u2360
  4969  0D3C                     u2361:
  4970  0D3C  2D3E               	goto	l2374
  4971  0D3D                     u2360:
  4972  0D3D  2D09               	goto	l2354
  4973  0D3E                     l2374:
  4974  0D3E  3001               	movlw	1
  4975  0D3F                     u2375:
  4976  0D3F  1003               	clrc
  4977  0D40  0CC7               	rrf	___fltol@f1+3,f
  4978  0D41  0CC6               	rrf	___fltol@f1+2,f
  4979  0D42  0CC5               	rrf	___fltol@f1+1,f
  4980  0D43  0CC4               	rrf	___fltol@f1,f
  4981  0D44  3EFF               	addlw	-1
  4982  0D45  1D03               	skipz
  4983  0D46  2D3F               	goto	u2375
  4984  0D47  3001               	movlw	1
  4985  0D48  00C8               	movwf	??___fltol
  4986  0D49  0848               	movf	??___fltol,w
  4987  0D4A  07CE               	addwf	___fltol@exp1,f
  4988  0D4B  1D03               	btfss	3,2
  4989  0D4C  2D4E               	goto	u2381
  4990  0D4D  2D4F               	goto	u2380
  4991  0D4E                     u2381:
  4992  0D4E  2D3E               	goto	l2374
  4993  0D4F                     u2380:
  4994  0D4F  2D67               	goto	l2384
  4995  0D50                     l2376:
  4996  0D50  3020               	movlw	32
  4997  0D51  024E               	subwf	___fltol@exp1,w
  4998  0D52  1C03               	skipc
  4999  0D53  2D55               	goto	u2391
  5000  0D54  2D56               	goto	u2390
  5001  0D55                     u2391:
  5002  0D55  2D62               	goto	l536
  5003  0D56                     u2390:
  5004  0D56  2D09               	goto	l2354
  5005  0D57                     l2382:
  5006  0D57  3001               	movlw	1
  5007  0D58  00C8               	movwf	??___fltol
  5008  0D59                     u2405:
  5009  0D59  1003               	clrc
  5010  0D5A  0DC4               	rlf	___fltol@f1,f
  5011  0D5B  0DC5               	rlf	___fltol@f1+1,f
  5012  0D5C  0DC6               	rlf	___fltol@f1+2,f
  5013  0D5D  0DC7               	rlf	___fltol@f1+3,f
  5014  0D5E  0BC8               	decfsz	??___fltol,f
  5015  0D5F  2D59               	goto	u2405
  5016  0D60  3001               	movlw	1
  5017  0D61  02CE               	subwf	___fltol@exp1,f
  5018  0D62                     l536:
  5019  0D62  084E               	movf	___fltol@exp1,w
  5020  0D63  1D03               	btfss	3,2
  5021  0D64  2D66               	goto	u2411
  5022  0D65  2D67               	goto	u2410
  5023  0D66                     u2411:
  5024  0D66  2D57               	goto	l2382
  5025  0D67                     u2410:
  5026  0D67                     l2384:
  5027  0D67  084D               	movf	___fltol@sign1,w
  5028  0D68  1903               	btfsc	3,2
  5029  0D69  2D6B               	goto	u2421
  5030  0D6A  2D6C               	goto	u2420
  5031  0D6B                     u2421:
  5032  0D6B  2D77               	goto	l539
  5033  0D6C                     u2420:
  5034  0D6C                     l2386:
  5035  0D6C  09C4               	comf	___fltol@f1,f
  5036  0D6D  09C5               	comf	___fltol@f1+1,f
  5037  0D6E  09C6               	comf	___fltol@f1+2,f
  5038  0D6F  09C7               	comf	___fltol@f1+3,f
  5039  0D70  0AC4               	incf	___fltol@f1,f
  5040  0D71  1903               	skipnz
  5041  0D72  0AC5               	incf	___fltol@f1+1,f
  5042  0D73  1903               	skipnz
  5043  0D74  0AC6               	incf	___fltol@f1+2,f
  5044  0D75  1903               	skipnz
  5045  0D76  0AC7               	incf	___fltol@f1+3,f
  5046  0D77                     l539:
  5047  0D77                     l529:
  5048  0D77  0008               	return
  5049  0D78                     __end_of___fltol:
  5050                           
  5051                           	psect	text18
  5052  0370                     __ptext18:	
  5053 ;; *************** function ___fldiv *****************
  5054 ;; Defined at:
  5055 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\sprcdiv.c"
  5056 ;; Parameters:    Size  Location     Type
  5057 ;;  a               4   10[BANK0 ] long 
  5058 ;;  b               4   14[BANK0 ] long 
  5059 ;; Auto vars:     Size  Location     Type
  5060 ;;  grs             4   30[BANK0 ] unsigned long 
  5061 ;;  rem             4   23[BANK0 ] unsigned long 
  5062 ;;  new_exp         2   28[BANK0 ] int 
  5063 ;;  aexp            1   35[BANK0 ] unsigned char 
  5064 ;;  bexp            1   34[BANK0 ] unsigned char 
  5065 ;;  sign            1   27[BANK0 ] unsigned char 
  5066 ;; Return value:  Size  Location     Type
  5067 ;;                  4   10[BANK0 ] unsigned char 
  5068 ;; Registers used:
  5069 ;;		wreg, status,2, status,0, btemp+1
  5070 ;; Tracked objects:
  5071 ;;		On entry : 0/0
  5072 ;;		On exit  : 0/0
  5073 ;;		Unchanged: 0/0
  5074 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5075 ;;      Params:         0       8       0       0       0
  5076 ;;      Locals:         0      13       0       0       0
  5077 ;;      Temps:          0       5       0       0       0
  5078 ;;      Totals:         0      26       0       0       0
  5079 ;;Total ram usage:       26 bytes
  5080 ;; Hardware stack levels used:    1
  5081 ;; Hardware stack levels required when called:    1
  5082 ;; This function calls:
  5083 ;;		Nothing
  5084 ;; This function is called by:
  5085 ;;		_main
  5086 ;; This function uses a non-reentrant model
  5087 ;;
  5088                           
  5089                           
  5090                           ;psect for function ___fldiv
  5091  0370                     ___fldiv:
  5092  0370                     l2388:	
  5093                           ;incstack = 0
  5094                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  5095                           
  5096  0370  1283               	bcf	3,5	;RP0=0, select bank0
  5097  0371  1303               	bcf	3,6	;RP1=0, select bank0
  5098  0372  0831               	movf	___fldiv@b+3,w
  5099  0373  3980               	andlw	128
  5100  0374  00B2               	movwf	??___fldiv
  5101  0375  0832               	movf	??___fldiv,w
  5102  0376  00BB               	movwf	___fldiv@sign
  5103  0377                     l2390:
  5104  0377  0831               	movf	___fldiv@b+3,w
  5105  0378  00B2               	movwf	??___fldiv
  5106  0379  0732               	addwf	??___fldiv,w
  5107  037A  00B3               	movwf	??___fldiv+1
  5108  037B  0833               	movf	??___fldiv+1,w
  5109  037C  00C2               	movwf	___fldiv@bexp
  5110  037D                     l2392:
  5111  037D  1FB0               	btfss	___fldiv@b+2,7
  5112  037E  2B80               	goto	u2431
  5113  037F  2B81               	goto	u2430
  5114  0380                     u2431:
  5115  0380  2B82               	goto	l2396
  5116  0381                     u2430:
  5117  0381                     l2394:
  5118  0381  1442               	bsf	___fldiv@bexp,0
  5119  0382                     l2396:
  5120  0382  0842               	movf	___fldiv@bexp,w
  5121  0383  1903               	btfsc	3,2
  5122  0384  2B86               	goto	u2441
  5123  0385  2B87               	goto	u2440
  5124  0386                     u2441:
  5125  0386  2B97               	goto	l2406
  5126  0387                     u2440:
  5127  0387                     l2398:
  5128  0387  0A42               	incf	___fldiv@bexp,w
  5129  0388  1D03               	btfss	3,2
  5130  0389  2B8B               	goto	u2451
  5131  038A  2B8C               	goto	u2450
  5132  038B                     u2451:
  5133  038B  2B94               	goto	l2402
  5134  038C                     u2450:
  5135  038C                     l2400:
  5136  038C  3000               	movlw	0
  5137  038D  00B1               	movwf	___fldiv@b+3
  5138  038E  3000               	movlw	0
  5139  038F  00B0               	movwf	___fldiv@b+2
  5140  0390  3000               	movlw	0
  5141  0391  00AF               	movwf	___fldiv@b+1
  5142  0392  3000               	movlw	0
  5143  0393  00AE               	movwf	___fldiv@b
  5144  0394                     l2402:
  5145  0394  17B0               	bsf	___fldiv@b+2,7
  5146  0395                     l2404:
  5147  0395  01B1               	clrf	___fldiv@b+3
  5148  0396  2B9F               	goto	l2408
  5149  0397                     l2406:
  5150  0397  3000               	movlw	0
  5151  0398  00B1               	movwf	___fldiv@b+3
  5152  0399  3000               	movlw	0
  5153  039A  00B0               	movwf	___fldiv@b+2
  5154  039B  3000               	movlw	0
  5155  039C  00AF               	movwf	___fldiv@b+1
  5156  039D  3000               	movlw	0
  5157  039E  00AE               	movwf	___fldiv@b
  5158  039F                     l2408:
  5159  039F  082D               	movf	___fldiv@a+3,w
  5160  03A0  3980               	andlw	128
  5161  03A1  00B2               	movwf	??___fldiv
  5162  03A2  0832               	movf	??___fldiv,w
  5163  03A3  06BB               	xorwf	___fldiv@sign,f
  5164  03A4                     l2410:
  5165  03A4  082D               	movf	___fldiv@a+3,w
  5166  03A5  00B2               	movwf	??___fldiv
  5167  03A6  0732               	addwf	??___fldiv,w
  5168  03A7  00B3               	movwf	??___fldiv+1
  5169  03A8  0833               	movf	??___fldiv+1,w
  5170  03A9  00C3               	movwf	___fldiv@aexp
  5171  03AA                     l2412:
  5172  03AA  1FAC               	btfss	___fldiv@a+2,7
  5173  03AB  2BAD               	goto	u2461
  5174  03AC  2BAE               	goto	u2460
  5175  03AD                     u2461:
  5176  03AD  2BAF               	goto	l2416
  5177  03AE                     u2460:
  5178  03AE                     l2414:
  5179  03AE  1443               	bsf	___fldiv@aexp,0
  5180  03AF                     l2416:
  5181  03AF  0843               	movf	___fldiv@aexp,w
  5182  03B0  1903               	btfsc	3,2
  5183  03B1  2BB3               	goto	u2471
  5184  03B2  2BB4               	goto	u2470
  5185  03B3                     u2471:
  5186  03B3  2BC4               	goto	l2426
  5187  03B4                     u2470:
  5188  03B4                     l2418:
  5189  03B4  0A43               	incf	___fldiv@aexp,w
  5190  03B5  1D03               	btfss	3,2
  5191  03B6  2BB8               	goto	u2481
  5192  03B7  2BB9               	goto	u2480
  5193  03B8                     u2481:
  5194  03B8  2BC1               	goto	l2422
  5195  03B9                     u2480:
  5196  03B9                     l2420:
  5197  03B9  3000               	movlw	0
  5198  03BA  00AD               	movwf	___fldiv@a+3
  5199  03BB  3000               	movlw	0
  5200  03BC  00AC               	movwf	___fldiv@a+2
  5201  03BD  3000               	movlw	0
  5202  03BE  00AB               	movwf	___fldiv@a+1
  5203  03BF  3000               	movlw	0
  5204  03C0  00AA               	movwf	___fldiv@a
  5205  03C1                     l2422:
  5206  03C1  17AC               	bsf	___fldiv@a+2,7
  5207  03C2                     l2424:
  5208  03C2  01AD               	clrf	___fldiv@a+3
  5209  03C3  2BCC               	goto	l692
  5210  03C4                     l2426:
  5211  03C4  3000               	movlw	0
  5212  03C5  00AD               	movwf	___fldiv@a+3
  5213  03C6  3000               	movlw	0
  5214  03C7  00AC               	movwf	___fldiv@a+2
  5215  03C8  3000               	movlw	0
  5216  03C9  00AB               	movwf	___fldiv@a+1
  5217  03CA  3000               	movlw	0
  5218  03CB  00AA               	movwf	___fldiv@a
  5219  03CC                     l692:
  5220  03CC  082D               	movf	___fldiv@a+3,w
  5221  03CD  042C               	iorwf	___fldiv@a+2,w
  5222  03CE  042B               	iorwf	___fldiv@a+1,w
  5223  03CF  042A               	iorwf	___fldiv@a,w
  5224  03D0  1D03               	skipz
  5225  03D1  2BD3               	goto	u2491
  5226  03D2  2BD4               	goto	u2490
  5227  03D3                     u2491:
  5228  03D3  2BED               	goto	l2436
  5229  03D4                     u2490:
  5230  03D4                     l2428:
  5231  03D4  3000               	movlw	0
  5232  03D5  00B1               	movwf	___fldiv@b+3
  5233  03D6  3000               	movlw	0
  5234  03D7  00B0               	movwf	___fldiv@b+2
  5235  03D8  3000               	movlw	0
  5236  03D9  00AF               	movwf	___fldiv@b+1
  5237  03DA  3000               	movlw	0
  5238  03DB  00AE               	movwf	___fldiv@b
  5239  03DC  3080               	movlw	128
  5240  03DD  04B0               	iorwf	___fldiv@b+2,f
  5241  03DE  307F               	movlw	127
  5242  03DF  04B1               	iorwf	___fldiv@b+3,f
  5243  03E0                     l2430:
  5244  03E0  083B               	movf	___fldiv@sign,w
  5245  03E1  00B2               	movwf	??___fldiv
  5246  03E2  0832               	movf	??___fldiv,w
  5247  03E3  04B1               	iorwf	___fldiv@b+3,f
  5248  03E4                     l2432:
  5249  03E4  0831               	movf	___fldiv@b+3,w
  5250  03E5  00AD               	movwf	?___fldiv+3
  5251  03E6  0830               	movf	___fldiv@b+2,w
  5252  03E7  00AC               	movwf	?___fldiv+2
  5253  03E8  082F               	movf	___fldiv@b+1,w
  5254  03E9  00AB               	movwf	?___fldiv+1
  5255  03EA  082E               	movf	___fldiv@b,w
  5256  03EB  00AA               	movwf	?___fldiv
  5257  03EC  2D4C               	goto	l694
  5258  03ED                     l2436:
  5259  03ED  0842               	movf	___fldiv@bexp,w
  5260  03EE  1D03               	btfss	3,2
  5261  03EF  2BF1               	goto	u2501
  5262  03F0  2BF2               	goto	u2500
  5263  03F1                     u2501:
  5264  03F1  2BFB               	goto	l2442
  5265  03F2                     u2500:
  5266  03F2                     l2438:
  5267  03F2  3000               	movlw	0
  5268  03F3  00AD               	movwf	?___fldiv+3
  5269  03F4  3000               	movlw	0
  5270  03F5  00AC               	movwf	?___fldiv+2
  5271  03F6  3000               	movlw	0
  5272  03F7  00AB               	movwf	?___fldiv+1
  5273  03F8  3000               	movlw	0
  5274  03F9  00AA               	movwf	?___fldiv
  5275  03FA  2D4C               	goto	l694
  5276  03FB                     l2442:
  5277  03FB  0842               	movf	___fldiv@bexp,w
  5278  03FC  00B2               	movwf	??___fldiv
  5279  03FD  01B3               	clrf	??___fldiv+1
  5280  03FE  0833               	movf	??___fldiv+1,w
  5281  03FF  00B5               	movwf	??___fldiv+3
  5282  0400  0843               	movf	___fldiv@aexp,w
  5283  0401  0232               	subwf	??___fldiv,w
  5284  0402  00B4               	movwf	??___fldiv+2
  5285  0403  1C03               	skipc
  5286  0404  03B5               	decf	??___fldiv+3,f
  5287  0405  0834               	movf	??___fldiv+2,w
  5288  0406  3E7F               	addlw	127
  5289  0407  00BC               	movwf	___fldiv@new_exp
  5290  0408  0835               	movf	??___fldiv+3,w
  5291  0409  1803               	skipnc
  5292  040A  3E01               	addlw	1
  5293  040B  3E00               	addlw	0
  5294  040C  00BD               	movwf	___fldiv@new_exp+1
  5295  040D                     l2444:
  5296  040D  0831               	movf	___fldiv@b+3,w
  5297  040E  00BA               	movwf	___fldiv@rem+3
  5298  040F  0830               	movf	___fldiv@b+2,w
  5299  0410  00B9               	movwf	___fldiv@rem+2
  5300  0411  082F               	movf	___fldiv@b+1,w
  5301  0412  00B8               	movwf	___fldiv@rem+1
  5302  0413  082E               	movf	___fldiv@b,w
  5303  0414  00B7               	movwf	___fldiv@rem
  5304  0415                     l2446:
  5305  0415  3000               	movlw	0
  5306  0416  00B1               	movwf	___fldiv@b+3
  5307  0417  3000               	movlw	0
  5308  0418  00B0               	movwf	___fldiv@b+2
  5309  0419  3000               	movlw	0
  5310  041A  00AF               	movwf	___fldiv@b+1
  5311  041B  3000               	movlw	0
  5312  041C  00AE               	movwf	___fldiv@b
  5313  041D                     l2448:
  5314  041D  3000               	movlw	0
  5315  041E  00C1               	movwf	___fldiv@grs+3
  5316  041F  3000               	movlw	0
  5317  0420  00C0               	movwf	___fldiv@grs+2
  5318  0421  3000               	movlw	0
  5319  0422  00BF               	movwf	___fldiv@grs+1
  5320  0423  3000               	movlw	0
  5321  0424  00BE               	movwf	___fldiv@grs
  5322  0425                     l2450:
  5323  0425  01C3               	clrf	___fldiv@aexp
  5324  0426  2C71               	goto	l2470
  5325  0427                     l2452:
  5326  0427  0843               	movf	___fldiv@aexp,w
  5327  0428  1903               	btfsc	3,2
  5328  0429  2C2B               	goto	u2511
  5329  042A  2C2C               	goto	u2510
  5330  042B                     u2511:
  5331  042B  2C4C               	goto	l2462
  5332  042C                     u2510:
  5333  042C                     l2454:
  5334  042C  3001               	movlw	1
  5335  042D  00B2               	movwf	??___fldiv
  5336  042E                     u2525:
  5337  042E  1003               	clrc
  5338  042F  0DB7               	rlf	___fldiv@rem,f
  5339  0430  0DB8               	rlf	___fldiv@rem+1,f
  5340  0431  0DB9               	rlf	___fldiv@rem+2,f
  5341  0432  0DBA               	rlf	___fldiv@rem+3,f
  5342  0433  0BB2               	decfsz	??___fldiv,f
  5343  0434  2C2E               	goto	u2525
  5344  0435  3001               	movlw	1
  5345  0436  00B2               	movwf	??___fldiv
  5346  0437                     u2535:
  5347  0437  1003               	clrc
  5348  0438  0DAE               	rlf	___fldiv@b,f
  5349  0439  0DAF               	rlf	___fldiv@b+1,f
  5350  043A  0DB0               	rlf	___fldiv@b+2,f
  5351  043B  0DB1               	rlf	___fldiv@b+3,f
  5352  043C  0BB2               	decfsz	??___fldiv,f
  5353  043D  2C37               	goto	u2535
  5354  043E                     l2456:
  5355  043E  1FC1               	btfss	___fldiv@grs+3,7
  5356  043F  2C41               	goto	u2541
  5357  0440  2C42               	goto	u2540
  5358  0441                     u2541:
  5359  0441  2C43               	goto	l2460
  5360  0442                     u2540:
  5361  0442                     l2458:
  5362  0442  142E               	bsf	___fldiv@b,0
  5363  0443                     l2460:
  5364  0443  3001               	movlw	1
  5365  0444  00B2               	movwf	??___fldiv
  5366  0445                     u2555:
  5367  0445  1003               	clrc
  5368  0446  0DBE               	rlf	___fldiv@grs,f
  5369  0447  0DBF               	rlf	___fldiv@grs+1,f
  5370  0448  0DC0               	rlf	___fldiv@grs+2,f
  5371  0449  0DC1               	rlf	___fldiv@grs+3,f
  5372  044A  0BB2               	decfsz	??___fldiv,f
  5373  044B  2C45               	goto	u2555
  5374  044C                     l2462:
  5375  044C  082D               	movf	___fldiv@a+3,w
  5376  044D  023A               	subwf	___fldiv@rem+3,w
  5377  044E  1D03               	skipz
  5378  044F  2C5A               	goto	u2565
  5379  0450  082C               	movf	___fldiv@a+2,w
  5380  0451  0239               	subwf	___fldiv@rem+2,w
  5381  0452  1D03               	skipz
  5382  0453  2C5A               	goto	u2565
  5383  0454  082B               	movf	___fldiv@a+1,w
  5384  0455  0238               	subwf	___fldiv@rem+1,w
  5385  0456  1D03               	skipz
  5386  0457  2C5A               	goto	u2565
  5387  0458  082A               	movf	___fldiv@a,w
  5388  0459  0237               	subwf	___fldiv@rem,w
  5389  045A                     u2565:
  5390  045A  1C03               	skipc
  5391  045B  2C5D               	goto	u2561
  5392  045C  2C5E               	goto	u2560
  5393  045D                     u2561:
  5394  045D  2C6D               	goto	l2468
  5395  045E                     u2560:
  5396  045E                     l2464:
  5397  045E  1741               	bsf	___fldiv@grs+3,6
  5398  045F                     l2466:
  5399  045F  082A               	movf	___fldiv@a,w
  5400  0460  02B7               	subwf	___fldiv@rem,f
  5401  0461  082B               	movf	___fldiv@a+1,w
  5402  0462  1C03               	skipc
  5403  0463  0F2B               	incfsz	___fldiv@a+1,w
  5404  0464  02B8               	subwf	___fldiv@rem+1,f
  5405  0465  082C               	movf	___fldiv@a+2,w
  5406  0466  1C03               	skipc
  5407  0467  0F2C               	incfsz	___fldiv@a+2,w
  5408  0468  02B9               	subwf	___fldiv@rem+2,f
  5409  0469  082D               	movf	___fldiv@a+3,w
  5410  046A  1C03               	skipc
  5411  046B  0F2D               	incfsz	___fldiv@a+3,w
  5412  046C  02BA               	subwf	___fldiv@rem+3,f
  5413  046D                     l2468:
  5414  046D  3001               	movlw	1
  5415  046E  00B2               	movwf	??___fldiv
  5416  046F  0832               	movf	??___fldiv,w
  5417  0470  07C3               	addwf	___fldiv@aexp,f
  5418  0471                     l2470:
  5419  0471  301A               	movlw	26
  5420  0472  0243               	subwf	___fldiv@aexp,w
  5421  0473  1C03               	skipc
  5422  0474  2C76               	goto	u2571
  5423  0475  2C77               	goto	u2570
  5424  0476                     u2571:
  5425  0476  2C27               	goto	l2452
  5426  0477                     u2570:
  5427  0477                     l2472:
  5428  0477  083A               	movf	___fldiv@rem+3,w
  5429  0478  0439               	iorwf	___fldiv@rem+2,w
  5430  0479  0438               	iorwf	___fldiv@rem+1,w
  5431  047A  0437               	iorwf	___fldiv@rem,w
  5432  047B  1903               	skipnz
  5433  047C  2C7E               	goto	u2581
  5434  047D  2C7F               	goto	u2580
  5435  047E                     u2581:
  5436  047E  2C9E               	goto	l2486
  5437  047F                     u2580:
  5438  047F                     l2474:
  5439  047F  143E               	bsf	___fldiv@grs,0
  5440  0480  2C9E               	goto	l2486
  5441  0481                     l2476:
  5442  0481  3001               	movlw	1
  5443  0482  00B2               	movwf	??___fldiv
  5444  0483                     u2595:
  5445  0483  1003               	clrc
  5446  0484  0DAE               	rlf	___fldiv@b,f
  5447  0485  0DAF               	rlf	___fldiv@b+1,f
  5448  0486  0DB0               	rlf	___fldiv@b+2,f
  5449  0487  0DB1               	rlf	___fldiv@b+3,f
  5450  0488  0BB2               	decfsz	??___fldiv,f
  5451  0489  2C83               	goto	u2595
  5452  048A                     l2478:
  5453  048A  1FC1               	btfss	___fldiv@grs+3,7
  5454  048B  2C8D               	goto	u2601
  5455  048C  2C8E               	goto	u2600
  5456  048D                     u2601:
  5457  048D  2C8F               	goto	l2482
  5458  048E                     u2600:
  5459  048E                     l2480:
  5460  048E  142E               	bsf	___fldiv@b,0
  5461  048F                     l2482:
  5462  048F  3001               	movlw	1
  5463  0490  00B2               	movwf	??___fldiv
  5464  0491                     u2615:
  5465  0491  1003               	clrc
  5466  0492  0DBE               	rlf	___fldiv@grs,f
  5467  0493  0DBF               	rlf	___fldiv@grs+1,f
  5468  0494  0DC0               	rlf	___fldiv@grs+2,f
  5469  0495  0DC1               	rlf	___fldiv@grs+3,f
  5470  0496  0BB2               	decfsz	??___fldiv,f
  5471  0497  2C91               	goto	u2615
  5472  0498                     l2484:
  5473  0498  30FF               	movlw	255
  5474  0499  07BC               	addwf	___fldiv@new_exp,f
  5475  049A  1803               	skipnc
  5476  049B  0ABD               	incf	___fldiv@new_exp+1,f
  5477  049C  30FF               	movlw	255
  5478  049D  07BD               	addwf	___fldiv@new_exp+1,f
  5479  049E                     l2486:
  5480  049E  1FB0               	btfss	___fldiv@b+2,7
  5481  049F  2CA1               	goto	u2621
  5482  04A0  2CA2               	goto	u2620
  5483  04A1                     u2621:
  5484  04A1  2C81               	goto	l2476
  5485  04A2                     u2620:
  5486  04A2                     l2488:
  5487  04A2  01C3               	clrf	___fldiv@aexp
  5488  04A3                     l2490:
  5489  04A3  1FC1               	btfss	___fldiv@grs+3,7
  5490  04A4  2CA6               	goto	u2631
  5491  04A5  2CA7               	goto	u2630
  5492  04A6                     u2631:
  5493  04A6  2CC3               	goto	l2498
  5494  04A7                     u2630:
  5495  04A7                     l2492:
  5496  04A7  30FF               	movlw	255
  5497  04A8  053E               	andwf	___fldiv@grs,w
  5498  04A9  00B2               	movwf	??___fldiv
  5499  04AA  30FF               	movlw	255
  5500  04AB  053F               	andwf	___fldiv@grs+1,w
  5501  04AC  00B3               	movwf	??___fldiv+1
  5502  04AD  30FF               	movlw	255
  5503  04AE  0540               	andwf	___fldiv@grs+2,w
  5504  04AF  00B4               	movwf	??___fldiv+2
  5505  04B0  307F               	movlw	127
  5506  04B1  0541               	andwf	___fldiv@grs+3,w
  5507  04B2  00B5               	movwf	??___fldiv+3
  5508  04B3  0835               	movf	??___fldiv+3,w
  5509  04B4  0434               	iorwf	??___fldiv+2,w
  5510  04B5  0433               	iorwf	??___fldiv+1,w
  5511  04B6  0432               	iorwf	??___fldiv,w
  5512  04B7  1903               	skipnz
  5513  04B8  2CBA               	goto	u2641
  5514  04B9  2CBB               	goto	u2640
  5515  04BA                     u2641:
  5516  04BA  2CBE               	goto	l708
  5517  04BB                     u2640:
  5518  04BB                     l2494:
  5519  04BB  01C3               	clrf	___fldiv@aexp
  5520  04BC  0AC3               	incf	___fldiv@aexp,f
  5521  04BD  2CC3               	goto	l2498
  5522  04BE                     l708:
  5523  04BE  1C2E               	btfss	___fldiv@b,0
  5524  04BF  2CC1               	goto	u2651
  5525  04C0  2CC2               	goto	u2650
  5526  04C1                     u2651:
  5527  04C1  2CC3               	goto	l2498
  5528  04C2                     u2650:
  5529  04C2  2CBB               	goto	l2494
  5530  04C3                     l2498:
  5531  04C3  0843               	movf	___fldiv@aexp,w
  5532  04C4  1903               	btfsc	3,2
  5533  04C5  2CC7               	goto	u2661
  5534  04C6  2CC8               	goto	u2660
  5535  04C7                     u2661:
  5536  04C7  2CF9               	goto	l2508
  5537  04C8                     u2660:
  5538  04C8                     l2500:
  5539  04C8  3001               	movlw	1
  5540  04C9  07AE               	addwf	___fldiv@b,f
  5541  04CA  3000               	movlw	0
  5542  04CB  1803               	skipnc
  5543  04CC  3001               	movlw	1
  5544  04CD  07AF               	addwf	___fldiv@b+1,f
  5545  04CE  3000               	movlw	0
  5546  04CF  1803               	skipnc
  5547  04D0  3001               	movlw	1
  5548  04D1  07B0               	addwf	___fldiv@b+2,f
  5549  04D2  3000               	movlw	0
  5550  04D3  1803               	skipnc
  5551  04D4  3001               	movlw	1
  5552  04D5  07B1               	addwf	___fldiv@b+3,f
  5553  04D6                     l2502:
  5554  04D6  1C31               	btfss	___fldiv@b+3,0
  5555  04D7  2CD9               	goto	u2671
  5556  04D8  2CDA               	goto	u2670
  5557  04D9                     u2671:
  5558  04D9  2CF9               	goto	l2508
  5559  04DA                     u2670:
  5560  04DA                     l2504:
  5561  04DA  082E               	movf	___fldiv@b,w
  5562  04DB  00B2               	movwf	??___fldiv
  5563  04DC  082F               	movf	___fldiv@b+1,w
  5564  04DD  00B3               	movwf	??___fldiv+1
  5565  04DE  0830               	movf	___fldiv@b+2,w
  5566  04DF  00B4               	movwf	??___fldiv+2
  5567  04E0  0831               	movf	___fldiv@b+3,w
  5568  04E1  00B5               	movwf	??___fldiv+3
  5569  04E2  3001               	movlw	1
  5570  04E3  00B6               	movwf	??___fldiv+4
  5571  04E4                     u2685:
  5572  04E4  0D35               	rlf	??___fldiv+3,w
  5573  04E5  0CB5               	rrf	??___fldiv+3,f
  5574  04E6  0CB4               	rrf	??___fldiv+2,f
  5575  04E7  0CB3               	rrf	??___fldiv+1,f
  5576  04E8  0CB2               	rrf	??___fldiv,f
  5577  04E9                     u2680:
  5578  04E9  0BB6               	decfsz	??___fldiv+4,f
  5579  04EA  2CE4               	goto	u2685
  5580  04EB  0835               	movf	??___fldiv+3,w
  5581  04EC  00B1               	movwf	___fldiv@b+3
  5582  04ED  0834               	movf	??___fldiv+2,w
  5583  04EE  00B0               	movwf	___fldiv@b+2
  5584  04EF  0833               	movf	??___fldiv+1,w
  5585  04F0  00AF               	movwf	___fldiv@b+1
  5586  04F1  0832               	movf	??___fldiv,w
  5587  04F2  00AE               	movwf	___fldiv@b
  5588  04F3                     l2506:
  5589  04F3  3001               	movlw	1
  5590  04F4  07BC               	addwf	___fldiv@new_exp,f
  5591  04F5  1803               	skipnc
  5592  04F6  0ABD               	incf	___fldiv@new_exp+1,f
  5593  04F7  3000               	movlw	0
  5594  04F8  07BD               	addwf	___fldiv@new_exp+1,f
  5595  04F9                     l2508:
  5596  04F9  083D               	movf	___fldiv@new_exp+1,w
  5597  04FA  3A80               	xorlw	128
  5598  04FB  00FF               	movwf	btemp+1
  5599  04FC  3080               	movlw	128
  5600  04FD  027F               	subwf	btemp+1,w
  5601  04FE  1D03               	skipz
  5602  04FF  2D02               	goto	u2695
  5603  0500  30FF               	movlw	255
  5604  0501  023C               	subwf	___fldiv@new_exp,w
  5605  0502                     u2695:
  5606  0502  1C03               	skipc
  5607  0503  2D05               	goto	u2691
  5608  0504  2D06               	goto	u2690
  5609  0505                     u2691:
  5610  0505  2D14               	goto	l2512
  5611  0506                     u2690:
  5612  0506                     l2510:
  5613  0506  30FF               	movlw	255
  5614  0507  1283               	bcf	3,5	;RP0=0, select bank0
  5615  0508  1303               	bcf	3,6	;RP1=0, select bank0
  5616  0509  00BC               	movwf	___fldiv@new_exp
  5617  050A  3000               	movlw	0
  5618  050B  00BD               	movwf	___fldiv@new_exp+1
  5619  050C  3000               	movlw	0
  5620  050D  00B1               	movwf	___fldiv@b+3
  5621  050E  3000               	movlw	0
  5622  050F  00B0               	movwf	___fldiv@b+2
  5623  0510  3000               	movlw	0
  5624  0511  00AF               	movwf	___fldiv@b+1
  5625  0512  3000               	movlw	0
  5626  0513  00AE               	movwf	___fldiv@b
  5627  0514                     l2512:
  5628  0514  1283               	bcf	3,5	;RP0=0, select bank0
  5629  0515  1303               	bcf	3,6	;RP1=0, select bank0
  5630  0516  083D               	movf	___fldiv@new_exp+1,w
  5631  0517  3A80               	xorlw	128
  5632  0518  00FF               	movwf	btemp+1
  5633  0519  3080               	movlw	128
  5634  051A  027F               	subwf	btemp+1,w
  5635  051B  1D03               	skipz
  5636  051C  2D1F               	goto	u2705
  5637  051D  3001               	movlw	1
  5638  051E  023C               	subwf	___fldiv@new_exp,w
  5639  051F                     u2705:
  5640  051F  1803               	skipnc
  5641  0520  2D22               	goto	u2701
  5642  0521  2D23               	goto	u2700
  5643  0522                     u2701:
  5644  0522  2D30               	goto	l714
  5645  0523                     u2700:
  5646  0523                     l2514:
  5647  0523  1283               	bcf	3,5	;RP0=0, select bank0
  5648  0524  1303               	bcf	3,6	;RP1=0, select bank0
  5649  0525  01BC               	clrf	___fldiv@new_exp
  5650  0526  01BD               	clrf	___fldiv@new_exp+1
  5651  0527                     l2516:
  5652  0527  3000               	movlw	0
  5653  0528  00B1               	movwf	___fldiv@b+3
  5654  0529  3000               	movlw	0
  5655  052A  00B0               	movwf	___fldiv@b+2
  5656  052B  3000               	movlw	0
  5657  052C  00AF               	movwf	___fldiv@b+1
  5658  052D  3000               	movlw	0
  5659  052E  00AE               	movwf	___fldiv@b
  5660  052F                     l2518:
  5661  052F  01BB               	clrf	___fldiv@sign
  5662  0530                     l714:
  5663  0530  1283               	bcf	3,5	;RP0=0, select bank0
  5664  0531  1303               	bcf	3,6	;RP1=0, select bank0
  5665  0532  083C               	movf	___fldiv@new_exp,w
  5666  0533  00B2               	movwf	??___fldiv
  5667  0534  0832               	movf	??___fldiv,w
  5668  0535  00C2               	movwf	___fldiv@bexp
  5669  0536                     l2520:
  5670  0536  1C42               	btfss	___fldiv@bexp,0
  5671  0537  2D39               	goto	u2711
  5672  0538  2D3A               	goto	u2710
  5673  0539                     u2711:
  5674  0539  2D3C               	goto	l2524
  5675  053A                     u2710:
  5676  053A                     l2522:
  5677  053A  17B0               	bsf	___fldiv@b+2,7
  5678  053B  2D40               	goto	l716
  5679  053C                     l2524:
  5680  053C  307F               	movlw	127
  5681  053D  00B2               	movwf	??___fldiv
  5682  053E  0832               	movf	??___fldiv,w
  5683  053F  05B0               	andwf	___fldiv@b+2,f
  5684  0540                     l716:
  5685  0540  0842               	movf	___fldiv@bexp,w
  5686  0541  00B2               	movwf	??___fldiv
  5687  0542  1003               	clrc
  5688  0543  0C32               	rrf	??___fldiv,w
  5689  0544  00B3               	movwf	??___fldiv+1
  5690  0545  0833               	movf	??___fldiv+1,w
  5691  0546  00B1               	movwf	___fldiv@b+3
  5692  0547  083B               	movf	___fldiv@sign,w
  5693  0548  00B2               	movwf	??___fldiv
  5694  0549  0832               	movf	??___fldiv,w
  5695  054A  04B1               	iorwf	___fldiv@b+3,f
  5696  054B  2BE4               	goto	l2432
  5697  054C                     l694:
  5698  054C  0008               	return
  5699  054D                     __end_of___fldiv:
  5700                           
  5701                           	psect	text19
  5702  0D78                     __ptext19:	
  5703 ;; *************** function _LCD_Begin *****************
  5704 ;; Defined at:
  5705 ;;		line 106 in file "./LCD_Lib.c"
  5706 ;; Parameters:    Size  Location     Type
  5707 ;;		None
  5708 ;; Auto vars:     Size  Location     Type
  5709 ;;		None
  5710 ;; Return value:  Size  Location     Type
  5711 ;;                  1    wreg      void 
  5712 ;; Registers used:
  5713 ;;		wreg, status,2, status,0, pclath, cstack
  5714 ;; Tracked objects:
  5715 ;;		On entry : 0/0
  5716 ;;		On exit  : 0/0
  5717 ;;		Unchanged: 0/0
  5718 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5719 ;;      Params:         0       0       0       0       0
  5720 ;;      Locals:         0       0       0       0       0
  5721 ;;      Temps:          0       2       0       0       0
  5722 ;;      Totals:         0       2       0       0       0
  5723 ;;Total ram usage:        2 bytes
  5724 ;; Hardware stack levels used:    1
  5725 ;; Hardware stack levels required when called:    3
  5726 ;; This function calls:
  5727 ;;		_LCD_Cmd
  5728 ;; This function is called by:
  5729 ;;		_main
  5730 ;; This function uses a non-reentrant model
  5731 ;;
  5732                           
  5733                           
  5734                           ;psect for function _LCD_Begin
  5735  0D78                     _LCD_Begin:
  5736  0D78                     l2962:	
  5737                           ;incstack = 0
  5738                           ; Regs used in _LCD_Begin: [wreg+status,2+status,0+pclath+cstack]
  5739                           
  5740                           
  5741                           ;./LCD_Lib.c: 108:   RS = 0;
  5742  0D78  107A               	bcf	_RS/(0+8),_RS& (0+7)
  5743                           
  5744                           ;./LCD_Lib.c: 110:   PORTDbits.RD0 = 0;
  5745  0D79  1283               	bcf	3,5	;RP0=0, select bank0
  5746  0D7A  1303               	bcf	3,6	;RP1=0, select bank0
  5747  0D7B  1008               	bcf	8,0	;volatile
  5748                           
  5749                           ;./LCD_Lib.c: 111:   PORTDbits.RD1 = 0;
  5750  0D7C  1088               	bcf	8,1	;volatile
  5751                           
  5752                           ;./LCD_Lib.c: 112:   PORTDbits.RD2 = 0;
  5753  0D7D  1108               	bcf	8,2	;volatile
  5754                           
  5755                           ;./LCD_Lib.c: 113:   PORTDbits.RD3 = 0;
  5756  0D7E  1188               	bcf	8,3	;volatile
  5757                           
  5758                           ;./LCD_Lib.c: 114:   PORTDbits.RD4 = 0;
  5759  0D7F  1208               	bcf	8,4	;volatile
  5760                           
  5761                           ;./LCD_Lib.c: 115:   PORTDbits.RD5 = 0;
  5762  0D80  1288               	bcf	8,5	;volatile
  5763                           
  5764                           ;./LCD_Lib.c: 116:   TRISD0 = 0;
  5765  0D81  1683               	bsf	3,5	;RP0=1, select bank1
  5766  0D82  1303               	bcf	3,6	;RP1=0, select bank1
  5767  0D83  1008               	bcf	8,0	;volatile
  5768                           
  5769                           ;./LCD_Lib.c: 117:   TRISD1 = 0;
  5770  0D84  1088               	bcf	8,1	;volatile
  5771                           
  5772                           ;./LCD_Lib.c: 118:   TRISD2 = 0;
  5773  0D85  1108               	bcf	8,2	;volatile
  5774                           
  5775                           ;./LCD_Lib.c: 119:   TRISD3 = 0;
  5776  0D86  1188               	bcf	8,3	;volatile
  5777                           
  5778                           ;./LCD_Lib.c: 120:   TRISD4 = 0;
  5779  0D87  1208               	bcf	8,4	;volatile
  5780                           
  5781                           ;./LCD_Lib.c: 121:   TRISD5 = 0;
  5782  0D88  1288               	bcf	8,5	;volatile
  5783  0D89                     l2964:
  5784                           
  5785                           ;./LCD_Lib.c: 123:   _delay((unsigned long)((40)*(4000000/4000.0)));
  5786  0D89  3034               	movlw	52
  5787  0D8A  1283               	bcf	3,5	;RP0=0, select bank0
  5788  0D8B  1303               	bcf	3,6	;RP1=0, select bank0
  5789  0D8C  00A2               	movwf	??_LCD_Begin+1
  5790  0D8D  30F1               	movlw	241
  5791  0D8E  00A1               	movwf	??_LCD_Begin
  5792  0D8F                     u3927:
  5793  0D8F  0BA1               	decfsz	??_LCD_Begin,f
  5794  0D90  2D8F               	goto	u3927
  5795  0D91  0BA2               	decfsz	??_LCD_Begin+1,f
  5796  0D92  2D8F               	goto	u3927
  5797  0D93                     l2966:
  5798                           
  5799                           ;./LCD_Lib.c: 124:   LCD_Cmd(3);
  5800  0D93  3003               	movlw	3
  5801  0D94  120A  158A  2201  120A  158A  	fcall	_LCD_Cmd
  5802  0D99                     l2968:
  5803                           
  5804                           ;./LCD_Lib.c: 125:   _delay((unsigned long)((5)*(4000000/4000.0)));
  5805  0D99  3007               	movlw	7
  5806  0D9A  1283               	bcf	3,5	;RP0=0, select bank0
  5807  0D9B  1303               	bcf	3,6	;RP1=0, select bank0
  5808  0D9C  00A2               	movwf	??_LCD_Begin+1
  5809  0D9D  307C               	movlw	124
  5810  0D9E  00A1               	movwf	??_LCD_Begin
  5811  0D9F                     u3937:
  5812  0D9F  0BA1               	decfsz	??_LCD_Begin,f
  5813  0DA0  2D9F               	goto	u3937
  5814  0DA1  0BA2               	decfsz	??_LCD_Begin+1,f
  5815  0DA2  2D9F               	goto	u3937
  5816  0DA3  0000               	nop
  5817                           
  5818                           ;./LCD_Lib.c: 126:   LCD_Cmd(3);
  5819  0DA4  3003               	movlw	3
  5820  0DA5  120A  158A  2201  120A  158A  	fcall	_LCD_Cmd
  5821  0DAA                     l2970:
  5822                           
  5823                           ;./LCD_Lib.c: 127:   _delay((unsigned long)((5)*(4000000/4000.0)));
  5824  0DAA  3007               	movlw	7
  5825  0DAB  1283               	bcf	3,5	;RP0=0, select bank0
  5826  0DAC  1303               	bcf	3,6	;RP1=0, select bank0
  5827  0DAD  00A2               	movwf	??_LCD_Begin+1
  5828  0DAE  307C               	movlw	124
  5829  0DAF  00A1               	movwf	??_LCD_Begin
  5830  0DB0                     u3947:
  5831  0DB0  0BA1               	decfsz	??_LCD_Begin,f
  5832  0DB1  2DB0               	goto	u3947
  5833  0DB2  0BA2               	decfsz	??_LCD_Begin+1,f
  5834  0DB3  2DB0               	goto	u3947
  5835  0DB4  0000               	nop
  5836  0DB5                     l2972:
  5837                           
  5838                           ;./LCD_Lib.c: 128:   LCD_Cmd(3);
  5839  0DB5  3003               	movlw	3
  5840  0DB6  120A  158A  2201  120A  158A  	fcall	_LCD_Cmd
  5841                           
  5842                           ;./LCD_Lib.c: 129:   _delay((unsigned long)((5)*(4000000/4000.0)));
  5843  0DBB  3007               	movlw	7
  5844  0DBC  1283               	bcf	3,5	;RP0=0, select bank0
  5845  0DBD  1303               	bcf	3,6	;RP1=0, select bank0
  5846  0DBE  00A2               	movwf	??_LCD_Begin+1
  5847  0DBF  307C               	movlw	124
  5848  0DC0  00A1               	movwf	??_LCD_Begin
  5849  0DC1                     u3957:
  5850  0DC1  0BA1               	decfsz	??_LCD_Begin,f
  5851  0DC2  2DC1               	goto	u3957
  5852  0DC3  0BA2               	decfsz	??_LCD_Begin+1,f
  5853  0DC4  2DC1               	goto	u3957
  5854  0DC5  0000               	nop
  5855  0DC6                     l2974:
  5856                           
  5857                           ;./LCD_Lib.c: 130:   LCD_Cmd(0x02);
  5858  0DC6  3002               	movlw	2
  5859  0DC7  120A  158A  2201  120A  158A  	fcall	_LCD_Cmd
  5860  0DCC                     l2976:
  5861                           
  5862                           ;./LCD_Lib.c: 131:   _delay((unsigned long)((5)*(4000000/4000.0)));
  5863  0DCC  3007               	movlw	7
  5864  0DCD  1283               	bcf	3,5	;RP0=0, select bank0
  5865  0DCE  1303               	bcf	3,6	;RP1=0, select bank0
  5866  0DCF  00A2               	movwf	??_LCD_Begin+1
  5867  0DD0  307C               	movlw	124
  5868  0DD1  00A1               	movwf	??_LCD_Begin
  5869  0DD2                     u3967:
  5870  0DD2  0BA1               	decfsz	??_LCD_Begin,f
  5871  0DD3  2DD2               	goto	u3967
  5872  0DD4  0BA2               	decfsz	??_LCD_Begin+1,f
  5873  0DD5  2DD2               	goto	u3967
  5874  0DD6  0000               	nop
  5875                           
  5876                           ;./LCD_Lib.c: 132:   LCD_Cmd(0x20 | (2 << 2));
  5877  0DD7  3028               	movlw	40
  5878  0DD8  120A  158A  2201  120A  158A  	fcall	_LCD_Cmd
  5879  0DDD                     l2978:
  5880                           
  5881                           ;./LCD_Lib.c: 133:   _delay((unsigned long)((50)*(4000000/4000.0)));
  5882  0DDD  3041               	movlw	65
  5883  0DDE  1283               	bcf	3,5	;RP0=0, select bank0
  5884  0DDF  1303               	bcf	3,6	;RP1=0, select bank0
  5885  0DE0  00A2               	movwf	??_LCD_Begin+1
  5886  0DE1  30ED               	movlw	237
  5887  0DE2  00A1               	movwf	??_LCD_Begin
  5888  0DE3                     u3977:
  5889  0DE3  0BA1               	decfsz	??_LCD_Begin,f
  5890  0DE4  2DE3               	goto	u3977
  5891  0DE5  0BA2               	decfsz	??_LCD_Begin+1,f
  5892  0DE6  2DE3               	goto	u3977
  5893  0DE7  2DE8               	nop2
  5894  0DE8                     l2980:
  5895                           
  5896                           ;./LCD_Lib.c: 134:   LCD_Cmd(0x0C);
  5897  0DE8  300C               	movlw	12
  5898  0DE9  120A  158A  2201  120A  158A  	fcall	_LCD_Cmd
  5899                           
  5900                           ;./LCD_Lib.c: 135:   _delay((unsigned long)((50)*(4000000/4000.0)));
  5901  0DEE  3041               	movlw	65
  5902  0DEF  1283               	bcf	3,5	;RP0=0, select bank0
  5903  0DF0  1303               	bcf	3,6	;RP1=0, select bank0
  5904  0DF1  00A2               	movwf	??_LCD_Begin+1
  5905  0DF2  30ED               	movlw	237
  5906  0DF3  00A1               	movwf	??_LCD_Begin
  5907  0DF4                     u3987:
  5908  0DF4  0BA1               	decfsz	??_LCD_Begin,f
  5909  0DF5  2DF4               	goto	u3987
  5910  0DF6  0BA2               	decfsz	??_LCD_Begin+1,f
  5911  0DF7  2DF4               	goto	u3987
  5912  0DF8  2DF9               	nop2
  5913  0DF9                     l2982:
  5914                           
  5915                           ;./LCD_Lib.c: 136:   LCD_Cmd(0x01);
  5916  0DF9  3001               	movlw	1
  5917  0DFA  120A  158A  2201  120A  158A  	fcall	_LCD_Cmd
  5918  0DFF                     l2984:
  5919                           
  5920                           ;./LCD_Lib.c: 137:   _delay((unsigned long)((50)*(4000000/4000.0)));
  5921  0DFF  3041               	movlw	65
  5922  0E00  1283               	bcf	3,5	;RP0=0, select bank0
  5923  0E01  1303               	bcf	3,6	;RP1=0, select bank0
  5924  0E02  00A2               	movwf	??_LCD_Begin+1
  5925  0E03  30ED               	movlw	237
  5926  0E04  00A1               	movwf	??_LCD_Begin
  5927  0E05                     u3997:
  5928  0E05  0BA1               	decfsz	??_LCD_Begin,f
  5929  0E06  2E05               	goto	u3997
  5930  0E07  0BA2               	decfsz	??_LCD_Begin+1,f
  5931  0E08  2E05               	goto	u3997
  5932  0E09  2E0A               	nop2
  5933                           
  5934                           ;./LCD_Lib.c: 138:   LCD_Cmd(0x04 | 0x02);
  5935  0E0A  3006               	movlw	6
  5936  0E0B  120A  158A  2201  120A  158A  	fcall	_LCD_Cmd
  5937  0E10                     l2986:
  5938                           
  5939                           ;./LCD_Lib.c: 139:   _delay((unsigned long)((50)*(4000000/4000.0)));
  5940  0E10  3041               	movlw	65
  5941  0E11  1283               	bcf	3,5	;RP0=0, select bank0
  5942  0E12  1303               	bcf	3,6	;RP1=0, select bank0
  5943  0E13  00A2               	movwf	??_LCD_Begin+1
  5944  0E14  30ED               	movlw	237
  5945  0E15  00A1               	movwf	??_LCD_Begin
  5946  0E16                     u4007:
  5947  0E16  0BA1               	decfsz	??_LCD_Begin,f
  5948  0E17  2E16               	goto	u4007
  5949  0E18  0BA2               	decfsz	??_LCD_Begin+1,f
  5950  0E19  2E16               	goto	u4007
  5951  0E1A  2E1B               	nop2
  5952  0E1B                     l80:
  5953  0E1B  0008               	return
  5954  0E1C                     __end_of_LCD_Begin:
  5955                           
  5956                           	psect	text20
  5957  0A01                     __ptext20:	
  5958 ;; *************** function _LCD_Cmd *****************
  5959 ;; Defined at:
  5960 ;;		line 60 in file "./LCD_Lib.c"
  5961 ;; Parameters:    Size  Location     Type
  5962 ;;  Command         1    wreg     unsigned char 
  5963 ;; Auto vars:     Size  Location     Type
  5964 ;;  Command         1    0[BANK0 ] unsigned char 
  5965 ;; Return value:  Size  Location     Type
  5966 ;;                  1    wreg      void 
  5967 ;; Registers used:
  5968 ;;		wreg, status,2, status,0, pclath, cstack
  5969 ;; Tracked objects:
  5970 ;;		On entry : 0/0
  5971 ;;		On exit  : 0/0
  5972 ;;		Unchanged: 0/0
  5973 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5974 ;;      Params:         0       0       0       0       0
  5975 ;;      Locals:         0       1       0       0       0
  5976 ;;      Temps:          2       0       0       0       0
  5977 ;;      Totals:         2       1       0       0       0
  5978 ;;Total ram usage:        3 bytes
  5979 ;; Hardware stack levels used:    1
  5980 ;; Hardware stack levels required when called:    2
  5981 ;; This function calls:
  5982 ;;		_LCD_Write_Nibble
  5983 ;; This function is called by:
  5984 ;;		_LCD_Goto
  5985 ;;		_LCD_Begin
  5986 ;;		_ajustes
  5987 ;; This function uses a non-reentrant model
  5988 ;;
  5989                           
  5990                           
  5991                           ;psect for function _LCD_Cmd
  5992  0A01                     _LCD_Cmd:
  5993                           
  5994                           ;incstack = 0
  5995                           ; Regs used in _LCD_Cmd: [wreg+status,2+status,0+pclath+cstack]
  5996                           ;LCD_Cmd@Command stored from wreg
  5997  0A01  1283               	bcf	3,5	;RP0=0, select bank0
  5998  0A02  1303               	bcf	3,6	;RP1=0, select bank0
  5999  0A03  00A0               	movwf	LCD_Cmd@Command
  6000  0A04                     l2730:
  6001                           
  6002                           ;./LCD_Lib.c: 60: void LCD_Cmd(uint8_t Command);./LCD_Lib.c: 61: {;./LCD_Lib.c: 62:   RS
      +                           = 0;
  6003  0A04  107A               	bcf	_RS/(0+8),_RS& (0+7)
  6004  0A05                     l2732:
  6005                           
  6006                           ;./LCD_Lib.c: 63:   LCD_Write_Nibble(Command >> 4);
  6007  0A05  0820               	movf	LCD_Cmd@Command,w
  6008  0A06  00F6               	movwf	??_LCD_Cmd
  6009  0A07  3004               	movlw	4
  6010  0A08                     u3015:
  6011  0A08  1003               	clrc
  6012  0A09  0CF6               	rrf	??_LCD_Cmd,f
  6013  0A0A  3EFF               	addlw	-1
  6014  0A0B  1D03               	skipz
  6015  0A0C  2A08               	goto	u3015
  6016  0A0D  0876               	movf	??_LCD_Cmd,w
  6017  0A0E  120A  158A  2439  120A  158A  	fcall	_LCD_Write_Nibble
  6018                           
  6019                           ;./LCD_Lib.c: 64:   LCD_Write_Nibble(Command);
  6020  0A13  1283               	bcf	3,5	;RP0=0, select bank0
  6021  0A14  1303               	bcf	3,6	;RP1=0, select bank0
  6022  0A15  0820               	movf	LCD_Cmd@Command,w
  6023  0A16  120A  158A  2439  120A  158A  	fcall	_LCD_Write_Nibble
  6024  0A1B                     l2734:
  6025                           
  6026                           ;./LCD_Lib.c: 65:   if((Command == 0x01) || (Command == 0x02))
  6027  0A1B  1283               	bcf	3,5	;RP0=0, select bank0
  6028  0A1C  1303               	bcf	3,6	;RP1=0, select bank0
  6029  0A1D  0320               	decf	LCD_Cmd@Command,w
  6030  0A1E  1903               	btfsc	3,2
  6031  0A1F  2A21               	goto	u3021
  6032  0A20  2A22               	goto	u3020
  6033  0A21                     u3021:
  6034  0A21  2A28               	goto	l2738
  6035  0A22                     u3020:
  6036  0A22                     l2736:
  6037  0A22  3002               	movlw	2
  6038  0A23  0620               	xorwf	LCD_Cmd@Command,w
  6039  0A24  1D03               	btfss	3,2
  6040  0A25  2A27               	goto	u3031
  6041  0A26  2A28               	goto	u3030
  6042  0A27                     u3031:
  6043  0A27  2A31               	goto	l59
  6044  0A28                     u3030:
  6045  0A28                     l2738:
  6046                           
  6047                           ;./LCD_Lib.c: 66:     _delay((unsigned long)((2)*(4000000/4000.0)));
  6048  0A28  3003               	movlw	3
  6049  0A29  00F7               	movwf	??_LCD_Cmd+1
  6050  0A2A  3097               	movlw	151
  6051  0A2B  00F6               	movwf	??_LCD_Cmd
  6052  0A2C                     u4017:
  6053  0A2C  0BF6               	decfsz	??_LCD_Cmd,f
  6054  0A2D  2A2C               	goto	u4017
  6055  0A2E  0BF7               	decfsz	??_LCD_Cmd+1,f
  6056  0A2F  2A2C               	goto	u4017
  6057  0A30  2A31               	nop2
  6058  0A31                     l59:
  6059  0A31  0008               	return
  6060  0A32                     __end_of_LCD_Cmd:
  6061                           
  6062                           	psect	text21
  6063  0C39                     __ptext21:	
  6064 ;; *************** function _LCD_Write_Nibble *****************
  6065 ;; Defined at:
  6066 ;;		line 43 in file "./LCD_Lib.c"
  6067 ;; Parameters:    Size  Location     Type
  6068 ;;  n               1    wreg     unsigned char 
  6069 ;; Auto vars:     Size  Location     Type
  6070 ;;  n               1    5[COMMON] unsigned char 
  6071 ;; Return value:  Size  Location     Type
  6072 ;;                  1    wreg      void 
  6073 ;; Registers used:
  6074 ;;		wreg, status,2, status,0
  6075 ;; Tracked objects:
  6076 ;;		On entry : 0/0
  6077 ;;		On exit  : 0/0
  6078 ;;		Unchanged: 0/0
  6079 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6080 ;;      Params:         0       0       0       0       0
  6081 ;;      Locals:         1       0       0       0       0
  6082 ;;      Temps:          2       0       0       0       0
  6083 ;;      Totals:         3       0       0       0       0
  6084 ;;Total ram usage:        3 bytes
  6085 ;; Hardware stack levels used:    1
  6086 ;; Hardware stack levels required when called:    1
  6087 ;; This function calls:
  6088 ;;		Nothing
  6089 ;; This function is called by:
  6090 ;;		_LCD_Cmd
  6091 ;;		_LCD_Print
  6092 ;;		_LCD_PutC
  6093 ;; This function uses a non-reentrant model
  6094 ;;
  6095                           
  6096                           
  6097                           ;psect for function _LCD_Write_Nibble
  6098  0C39                     _LCD_Write_Nibble:
  6099                           
  6100                           ;incstack = 0
  6101                           ; Regs used in _LCD_Write_Nibble: [wreg+status,2+status,0]
  6102                           ;LCD_Write_Nibble@n stored from wreg
  6103  0C39  00F5               	movwf	LCD_Write_Nibble@n
  6104  0C3A                     l2714:
  6105                           
  6106                           ;./LCD_Lib.c: 43: void LCD_Write_Nibble(uint8_t n);./LCD_Lib.c: 44: {;./LCD_Lib.c: 45:  
      +                           PORTDbits.RD0 = RS;
  6107  0C3A  187A               	btfsc	_RS/(0+8),_RS& (0+7)
  6108  0C3B  2C3D               	goto	u2971
  6109  0C3C  2C41               	goto	u2970
  6110  0C3D                     u2971:
  6111  0C3D  1283               	bcf	3,5	;RP0=0, select bank0
  6112  0C3E  1303               	bcf	3,6	;RP1=0, select bank0
  6113  0C3F  1408               	bsf	8,0	;volatile
  6114  0C40  2C44               	goto	u2984
  6115  0C41                     u2970:
  6116  0C41  1283               	bcf	3,5	;RP0=0, select bank0
  6117  0C42  1303               	bcf	3,6	;RP1=0, select bank0
  6118  0C43  1008               	bcf	8,0	;volatile
  6119  0C44                     u2984:
  6120  0C44                     l2716:
  6121                           
  6122                           ;./LCD_Lib.c: 46:   PORTDbits.RD2 = n & 0x01;
  6123  0C44  0875               	movf	LCD_Write_Nibble@n,w
  6124  0C45  3901               	andlw	1
  6125  0C46  00F3               	movwf	??_LCD_Write_Nibble
  6126  0C47  0DF3               	rlf	??_LCD_Write_Nibble,f
  6127  0C48  0DF3               	rlf	??_LCD_Write_Nibble,f
  6128  0C49  0808               	movf	8,w	;volatile
  6129  0C4A  0673               	xorwf	??_LCD_Write_Nibble,w
  6130  0C4B  39FB               	andlw	-5
  6131  0C4C  0673               	xorwf	??_LCD_Write_Nibble,w
  6132  0C4D  0088               	movwf	8	;volatile
  6133                           
  6134                           ;./LCD_Lib.c: 47:   PORTDbits.RD3 = (n >> 1) & 0x01;
  6135  0C4E  0875               	movf	LCD_Write_Nibble@n,w
  6136  0C4F  00F3               	movwf	??_LCD_Write_Nibble
  6137  0C50  1003               	clrc
  6138  0C51  0C73               	rrf	??_LCD_Write_Nibble,w
  6139  0C52  3901               	andlw	1
  6140  0C53  00F4               	movwf	??_LCD_Write_Nibble+1
  6141  0C54  0DF4               	rlf	??_LCD_Write_Nibble+1,f
  6142  0C55  0DF4               	rlf	??_LCD_Write_Nibble+1,f
  6143  0C56  0DF4               	rlf	??_LCD_Write_Nibble+1,f
  6144  0C57  0808               	movf	8,w	;volatile
  6145  0C58  0674               	xorwf	??_LCD_Write_Nibble+1,w
  6146  0C59  39F7               	andlw	-9
  6147  0C5A  0674               	xorwf	??_LCD_Write_Nibble+1,w
  6148  0C5B  0088               	movwf	8	;volatile
  6149                           
  6150                           ;./LCD_Lib.c: 48:   PORTDbits.RD4 = (n >> 2) & 0x01;
  6151  0C5C  0875               	movf	LCD_Write_Nibble@n,w
  6152  0C5D  00F3               	movwf	??_LCD_Write_Nibble
  6153  0C5E  3002               	movlw	2
  6154  0C5F                     u2995:
  6155  0C5F  1003               	clrc
  6156  0C60  0CF3               	rrf	??_LCD_Write_Nibble,f
  6157  0C61  3EFF               	addlw	-1
  6158  0C62  1D03               	skipz
  6159  0C63  2C5F               	goto	u2995
  6160  0C64  0873               	movf	??_LCD_Write_Nibble,w
  6161  0C65  3901               	andlw	1
  6162  0C66  00F4               	movwf	??_LCD_Write_Nibble+1
  6163  0C67  0EF4               	swapf	??_LCD_Write_Nibble+1,f
  6164  0C68  0808               	movf	8,w	;volatile
  6165  0C69  0674               	xorwf	??_LCD_Write_Nibble+1,w
  6166  0C6A  39EF               	andlw	-17
  6167  0C6B  0674               	xorwf	??_LCD_Write_Nibble+1,w
  6168  0C6C  0088               	movwf	8	;volatile
  6169                           
  6170                           ;./LCD_Lib.c: 49:   PORTDbits.RD5 = (n >> 3) & 0x01;
  6171  0C6D  0875               	movf	LCD_Write_Nibble@n,w
  6172  0C6E  00F3               	movwf	??_LCD_Write_Nibble
  6173  0C6F  3003               	movlw	3
  6174  0C70                     u3005:
  6175  0C70  1003               	clrc
  6176  0C71  0CF3               	rrf	??_LCD_Write_Nibble,f
  6177  0C72  3EFF               	addlw	-1
  6178  0C73  1D03               	skipz
  6179  0C74  2C70               	goto	u3005
  6180  0C75  0873               	movf	??_LCD_Write_Nibble,w
  6181  0C76  3901               	andlw	1
  6182  0C77  00F4               	movwf	??_LCD_Write_Nibble+1
  6183  0C78  0EF4               	swapf	??_LCD_Write_Nibble+1,f
  6184  0C79  0DF4               	rlf	??_LCD_Write_Nibble+1,f
  6185  0C7A  0808               	movf	8,w	;volatile
  6186  0C7B  0674               	xorwf	??_LCD_Write_Nibble+1,w
  6187  0C7C  39DF               	andlw	-33
  6188  0C7D  0674               	xorwf	??_LCD_Write_Nibble+1,w
  6189  0C7E  0088               	movwf	8	;volatile
  6190  0C7F                     l2718:
  6191                           
  6192                           ;./LCD_Lib.c: 52:   PORTDbits.RD1 = 0;
  6193  0C7F  1088               	bcf	8,1	;volatile
  6194  0C80                     l2720:
  6195                           
  6196                           ;./LCD_Lib.c: 53:   _delay((unsigned long)((1)*(4000000/4000000.0)));
  6197  0C80  0000               	nop
  6198  0C81                     l2722:
  6199                           
  6200                           ;./LCD_Lib.c: 54:   PORTDbits.RD1 = 1;
  6201  0C81  1283               	bcf	3,5	;RP0=0, select bank0
  6202  0C82  1303               	bcf	3,6	;RP1=0, select bank0
  6203  0C83  1488               	bsf	8,1	;volatile
  6204  0C84                     l2724:
  6205                           
  6206                           ;./LCD_Lib.c: 55:   _delay((unsigned long)((1)*(4000000/4000000.0)));
  6207  0C84  0000               	nop
  6208  0C85                     l2726:
  6209                           
  6210                           ;./LCD_Lib.c: 56:   PORTDbits.RD1 = 0;
  6211  0C85  1283               	bcf	3,5	;RP0=0, select bank0
  6212  0C86  1303               	bcf	3,6	;RP1=0, select bank0
  6213  0C87  1088               	bcf	8,1	;volatile
  6214  0C88                     l2728:
  6215                           
  6216                           ;./LCD_Lib.c: 57:   _delay((unsigned long)((100)*(4000000/4000000.0)));
  6217  0C88  3021               	movlw	33
  6218  0C89  00F3               	movwf	??_LCD_Write_Nibble
  6219  0C8A                     u4027:
  6220  0C8A  0BF3               	decfsz	??_LCD_Write_Nibble,f
  6221  0C8B  2C8A               	goto	u4027
  6222  0C8C                     l53:
  6223  0C8C  0008               	return
  6224  0C8D                     __end_of_LCD_Write_Nibble:
  6225                           
  6226                           	psect	text22
  6227  0C8D                     __ptext22:	
  6228 ;; *************** function _my_isr_routine *****************
  6229 ;; Defined at:
  6230 ;;		line 300 in file "main.c"
  6231 ;; Parameters:    Size  Location     Type
  6232 ;;		None
  6233 ;; Auto vars:     Size  Location     Type
  6234 ;;		None
  6235 ;; Return value:  Size  Location     Type
  6236 ;;                  1    wreg      void 
  6237 ;; Registers used:
  6238 ;;		wreg, status,2, btemp+1
  6239 ;; Tracked objects:
  6240 ;;		On entry : 0/0
  6241 ;;		On exit  : 0/0
  6242 ;;		Unchanged: 0/0
  6243 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6244 ;;      Params:         0       0       0       0       0
  6245 ;;      Locals:         0       0       0       0       0
  6246 ;;      Temps:          3       0       0       0       0
  6247 ;;      Totals:         3       0       0       0       0
  6248 ;;Total ram usage:        3 bytes
  6249 ;; Hardware stack levels used:    1
  6250 ;; This function calls:
  6251 ;;		Nothing
  6252 ;; This function is called by:
  6253 ;;		Interrupt level 1
  6254 ;; This function uses a non-reentrant model
  6255 ;;
  6256                           
  6257                           
  6258                           ;psect for function _my_isr_routine
  6259  0C8D                     _my_isr_routine:
  6260  0C8D                     i1l2578:
  6261                           
  6262                           ;main.c: 302:     if (INTCONbits.T0IF)
  6263  0C8D  1D0B               	btfss	11,2	;volatile
  6264  0C8E  2C90               	goto	u287_21
  6265  0C8F  2C91               	goto	u287_20
  6266  0C90                     u287_21:
  6267  0C90  2CF1               	goto	i1l193
  6268  0C91                     u287_20:
  6269  0C91                     i1l2580:
  6270                           
  6271                           ;main.c: 303:     {;main.c: 305:         TMR0=256-125;
  6272  0C91  3083               	movlw	131
  6273  0C92  0081               	movwf	1	;volatile
  6274                           
  6275                           ;main.c: 306:         TMR0_aux++;
  6276  0C93  3001               	movlw	1
  6277  0C94  07F8               	addwf	_TMR0_aux,f
  6278  0C95  1803               	skipnc
  6279  0C96  0AF9               	incf	_TMR0_aux+1,f
  6280  0C97  3000               	movlw	0
  6281  0C98  07F9               	addwf	_TMR0_aux+1,f
  6282  0C99                     i1l2582:
  6283                           
  6284                           ;main.c: 309:         if(TMR0_aux>125)
  6285  0C99  0879               	movf	_TMR0_aux+1,w
  6286  0C9A  3A80               	xorlw	128
  6287  0C9B  00FF               	movwf	btemp+1
  6288  0C9C  3080               	movlw	128
  6289  0C9D  027F               	subwf	btemp+1,w
  6290  0C9E  1D03               	skipz
  6291  0C9F  2CA2               	goto	u288_25
  6292  0CA0  307E               	movlw	126
  6293  0CA1  0278               	subwf	_TMR0_aux,w
  6294  0CA2                     u288_25:
  6295  0CA2  1C03               	skipc
  6296  0CA3  2CA5               	goto	u288_21
  6297  0CA4  2CA6               	goto	u288_20
  6298  0CA5                     u288_21:
  6299  0CA5  2CF0               	goto	i1l2604
  6300  0CA6                     u288_20:
  6301  0CA6                     i1l2584:
  6302                           
  6303                           ;main.c: 310:         {;main.c: 311:             TMR0_aux=0;
  6304  0CA6  01F8               	clrf	_TMR0_aux
  6305  0CA7  01F9               	clrf	_TMR0_aux+1
  6306  0CA8                     i1l2586:
  6307                           
  6308                           ;main.c: 312:             Segundos++;
  6309  0CA8  3001               	movlw	1
  6310  0CA9  1283               	bcf	3,5	;RP0=0, select bank0
  6311  0CAA  1303               	bcf	3,6	;RP1=0, select bank0
  6312  0CAB  07E3               	addwf	_Segundos,f
  6313  0CAC  1803               	skipnc
  6314  0CAD  0AE4               	incf	_Segundos+1,f
  6315  0CAE  3000               	movlw	0
  6316  0CAF  07E4               	addwf	_Segundos+1,f
  6317  0CB0                     i1l2588:
  6318                           
  6319                           ;main.c: 314:             if(Segundos>59)
  6320  0CB0  0864               	movf	_Segundos+1,w
  6321  0CB1  3A80               	xorlw	128
  6322  0CB2  00FF               	movwf	btemp+1
  6323  0CB3  3080               	movlw	128
  6324  0CB4  027F               	subwf	btemp+1,w
  6325  0CB5  1D03               	skipz
  6326  0CB6  2CB9               	goto	u289_25
  6327  0CB7  303C               	movlw	60
  6328  0CB8  0263               	subwf	_Segundos,w
  6329  0CB9                     u289_25:
  6330  0CB9  1C03               	skipc
  6331  0CBA  2CBC               	goto	u289_21
  6332  0CBB  2CBD               	goto	u289_20
  6333  0CBC                     u289_21:
  6334  0CBC  2CF0               	goto	i1l2604
  6335  0CBD                     u289_20:
  6336  0CBD                     i1l2590:
  6337                           
  6338                           ;main.c: 315:             {;main.c: 316:                 Segundos=0;
  6339  0CBD  1283               	bcf	3,5	;RP0=0, select bank0
  6340  0CBE  1303               	bcf	3,6	;RP1=0, select bank0
  6341  0CBF  01E3               	clrf	_Segundos
  6342  0CC0  01E4               	clrf	_Segundos+1
  6343  0CC1                     i1l2592:
  6344                           
  6345                           ;main.c: 317:                 Minutos++;
  6346  0CC1  3001               	movlw	1
  6347  0CC2  07E1               	addwf	_Minutos,f
  6348  0CC3  1803               	skipnc
  6349  0CC4  0AE2               	incf	_Minutos+1,f
  6350  0CC5  3000               	movlw	0
  6351  0CC6  07E2               	addwf	_Minutos+1,f
  6352  0CC7                     i1l2594:
  6353                           
  6354                           ;main.c: 319:                 if(Minutos>59)
  6355  0CC7  0862               	movf	_Minutos+1,w
  6356  0CC8  3A80               	xorlw	128
  6357  0CC9  00FF               	movwf	btemp+1
  6358  0CCA  3080               	movlw	128
  6359  0CCB  027F               	subwf	btemp+1,w
  6360  0CCC  1D03               	skipz
  6361  0CCD  2CD0               	goto	u290_25
  6362  0CCE  303C               	movlw	60
  6363  0CCF  0261               	subwf	_Minutos,w
  6364  0CD0                     u290_25:
  6365  0CD0  1C03               	skipc
  6366  0CD1  2CD3               	goto	u290_21
  6367  0CD2  2CD4               	goto	u290_20
  6368  0CD3                     u290_21:
  6369  0CD3  2CF0               	goto	i1l2604
  6370  0CD4                     u290_20:
  6371  0CD4                     i1l2596:
  6372                           
  6373                           ;main.c: 320:                 {;main.c: 321:                     Minutos=0;
  6374  0CD4  1283               	bcf	3,5	;RP0=0, select bank0
  6375  0CD5  1303               	bcf	3,6	;RP1=0, select bank0
  6376  0CD6  01E1               	clrf	_Minutos
  6377  0CD7  01E2               	clrf	_Minutos+1
  6378  0CD8                     i1l2598:
  6379                           
  6380                           ;main.c: 322:                     Horas++;
  6381  0CD8  3001               	movlw	1
  6382  0CD9  07DF               	addwf	_Horas,f
  6383  0CDA  1803               	skipnc
  6384  0CDB  0AE0               	incf	_Horas+1,f
  6385  0CDC  3000               	movlw	0
  6386  0CDD  07E0               	addwf	_Horas+1,f
  6387  0CDE                     i1l2600:
  6388                           
  6389                           ;main.c: 323:                     if(Horas>23)
  6390  0CDE  0860               	movf	_Horas+1,w
  6391  0CDF  3A80               	xorlw	128
  6392  0CE0  00FF               	movwf	btemp+1
  6393  0CE1  3080               	movlw	128
  6394  0CE2  027F               	subwf	btemp+1,w
  6395  0CE3  1D03               	skipz
  6396  0CE4  2CE7               	goto	u291_25
  6397  0CE5  3018               	movlw	24
  6398  0CE6  025F               	subwf	_Horas,w
  6399  0CE7                     u291_25:
  6400  0CE7  1C03               	skipc
  6401  0CE8  2CEA               	goto	u291_21
  6402  0CE9  2CEB               	goto	u291_20
  6403  0CEA                     u291_21:
  6404  0CEA  2CF0               	goto	i1l190
  6405  0CEB                     u291_20:
  6406  0CEB                     i1l2602:
  6407                           
  6408                           ;main.c: 324:                         Horas=0;
  6409  0CEB  1283               	bcf	3,5	;RP0=0, select bank0
  6410  0CEC  1303               	bcf	3,6	;RP1=0, select bank0
  6411  0CED  01DF               	clrf	_Horas
  6412  0CEE  01E0               	clrf	_Horas+1
  6413  0CEF  2CF0               	goto	i1l2604
  6414  0CF0                     i1l190:	
  6415                           ;main.c: 327:             }
  6416                           
  6417  0CF0                     i1l2604:
  6418                           
  6419                           ;main.c: 330:     INTCONbits.T0IF=0;
  6420  0CF0  110B               	bcf	11,2	;volatile
  6421  0CF1                     i1l193:
  6422  0CF1  0872               	movf	??_my_isr_routine+2,w
  6423  0CF2  1283               	bcf	3,5	;RP0=0, select bank0
  6424  0CF3  1303               	bcf	3,6	;RP1=0, select bank0
  6425  0CF4  00FF               	movwf	btemp+1
  6426  0CF5  0871               	movf	??_my_isr_routine+1,w
  6427  0CF6  008A               	movwf	10
  6428  0CF7  0E70               	swapf	??_my_isr_routine,w
  6429  0CF8  0083               	movwf	3
  6430  0CF9  0EFE               	swapf	btemp,f
  6431  0CFA  0E7E               	swapf	btemp,w
  6432  0CFB  0009               	retfie
  6433  0CFC                     __end_of_my_isr_routine:
  6434  007E                     btemp	set	126	;btemp
  6435  007E                     wtemp0	set	126
  6436                           
  6437                           	psect	intentry
  6438  0004                     __pintentry:	
  6439                           ;incstack = 0
  6440                           ; Regs used in _my_isr_routine: [wreg+status,2+btemp+1]
  6441                           
  6442  0004                     interrupt_function:
  6443  007E                     saved_w	set	btemp
  6444  0004  00FE               	movwf	btemp
  6445  0005  0E03               	swapf	3,w
  6446  0006  00F0               	movwf	??_my_isr_routine
  6447  0007  080A               	movf	10,w
  6448  0008  00F1               	movwf	??_my_isr_routine+1
  6449  0009  1283               	bcf	3,5	;RP0=0, select bank0
  6450  000A  1303               	bcf	3,6	;RP1=0, select bank0
  6451  000B  087F               	movf	btemp+1,w
  6452  000C  00F2               	movwf	??_my_isr_routine+2
  6453  000D  120A  158A  2C8D   	ljmp	_my_isr_routine
  6454                           
  6455                           	psect	config
  6456                           
  6457                           ;Config register CONFIG @ 0x2007
  6458                           ;	Oscillator Selection bits
  6459                           ;	FOSC = XT, XT oscillator
  6460                           ;	Watchdog Timer Enable bit
  6461                           ;	WDTE = OFF, WDT disabled
  6462                           ;	Power-up Timer Enable bit
  6463                           ;	PWRTE = ON, PWRT enabled
  6464                           ;	FLASH Program Memory Code Protection bits
  6465                           ;	CP = OFF, Code protection off
  6466                           ;	Brown-out Reset Enable bit
  6467                           ;	BOREN = ON, BOR enabled
  6468                           ;	Low Voltage In-Circuit Serial Programming Enable bit
  6469                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
  6470                           ;	Data EE Memory Code Protection
  6471                           ;	CPD = OFF, Code Protection off
  6472                           ;	FLASH Program Memory Write Enable
  6473                           ;	WRT = ON, Unprotected program memory may be written to by EECON control
  6474                           ;	In-Circuit Debugger Mode bit
  6475                           ;	DEBUG = 0x1, unprogrammed default
  6476  2007                     	org	8199
  6477  2007  3FF1               	dw	16369

Data Sizes:
    Strings     113
    Constant    10
    Data        0
    BSS         26
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80     61      69
    BANK1            80      0      16
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 23
		 -> STR_9(CODE[20]), STR_8(CODE[11]), STR_7(CODE[20]), STR_6(CODE[12]), 
		 -> STR_5(CODE[20]), STR_4(CODE[15]), STR_3(CODE[20]), STR_2(CODE[12]), 
		 -> STR_1(CODE[23]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 16
		 -> LCD_Cstring(BANK1[16]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    ajustes@min_max	PTR int  size(1) Largest target is 2
		 -> main@min_max(BANK0[2]), 

    ajustes@hora_max	PTR int  size(1) Largest target is 2
		 -> main@hora_max(BANK0[2]), 

    ajustes@min_min	PTR int  size(1) Largest target is 2
		 -> main@min_min(BANK0[2]), 

    ajustes@hora_min	PTR int  size(1) Largest target is 2
		 -> main@hora_min(BANK0[2]), 

    ajustes@temp	PTR int  size(1) Largest target is 2
		 -> main@temp(BANK0[2]), 

    LCD_Print@LCD_Str	PTR unsigned char  size(1) Largest target is 16
		 -> LCD_Cstring(BANK1[16]), 


Critical Paths under _main in COMMON

    _imprime_tela_main->_LCD_Print
    _ajustes->_LCD_Cmd
    _imprime_tela_ajuste4->_LCD_Print
    _imprime_tela_ajuste3->_LCD_Print
    _imprime_tela_ajuste2->_LCD_Print
    _imprime_tela_ajuste1->_LCD_Print
    _sprintf->___lwdiv
    ___lwmod->___lwdiv
    _LCD_Print->_LCD_Write_Nibble
    _LCD_Goto->_LCD_Cmd
    ___fltol->___xxtofl
    ___fldiv->___xxtofl
    _LCD_Begin->_LCD_Cmd
    _LCD_Cmd->_LCD_Write_Nibble

Critical Paths under _my_isr_routine in COMMON

    None.

Critical Paths under _main in BANK0

    _main->___fltol
    _imprime_tela_main->_sprintf
    _ajustes->_imprime_tela_ajuste3
    _ajustes->_imprime_tela_ajuste4
    _imprime_tela_ajuste4->_sprintf
    _imprime_tela_ajuste3->_sprintf
    _imprime_tela_ajuste2->_sprintf
    _imprime_tela_ajuste1->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _LCD_Goto->_LCD_Cmd
    ___fltol->___fldiv
    ___fldiv->___xxtofl
    _LCD_Begin->_LCD_Cmd

Critical Paths under _my_isr_routine in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _my_isr_routine in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _my_isr_routine in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _my_isr_routine in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                14    14      0   33913
                                             47 BANK0     14    14      0
                          _LCD_Begin
                            ___fldiv
                            ___fltol
                           ___xxtofl
                            _ajustes
                       _atualiza_ADC
                 _controle_aquecedor
                  _imprime_tela_main
 ---------------------------------------------------------------------------------
 (1) _imprime_tela_main                                    1     1      0    5427
                                             28 BANK0      1     1      0
                           _LCD_Goto
                          _LCD_Print
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _controle_aquecedor                                  11     1     10     754
                                              3 COMMON     1     1      0
                                              0 BANK0     10     0     10
 ---------------------------------------------------------------------------------
 (1) _atualiza_ADC                                         1     1      0       0
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ajustes                                              9     5      4   24821
                                             33 BANK0      9     5      4
                            _LCD_Cmd
               _imprime_tela_ajuste1
               _imprime_tela_ajuste2
               _imprime_tela_ajuste3
               _imprime_tela_ajuste4
 ---------------------------------------------------------------------------------
 (2) _imprime_tela_ajuste4                                 5     1      4    6029
                                             28 BANK0      5     1      4
                           _LCD_Goto
                          _LCD_Print
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _imprime_tela_ajuste3                                 5     1      4    6029
                                             28 BANK0      5     1      4
                           _LCD_Goto
                          _LCD_Print
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _imprime_tela_ajuste2                                 1     1      0    5427
                                             28 BANK0      1     1      0
                           _LCD_Goto
                          _LCD_Print
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _imprime_tela_ajuste1                                 3     1      2    5638
                                             28 BANK0      3     1      2
                           _LCD_Goto
                          _LCD_Print
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             27    20      7    3574
                                              9 BANK0     19    12      7
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              2     2      0      68
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     316
                                              3 COMMON     4     0      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     311
                                              3 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     421
                                              3 COMMON     5     1      4
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _LCD_Print                                            4     4      0     640
                                              6 COMMON     2     2      0
                                              0 BANK0      2     2      0
                   _LCD_Write_Nibble
 ---------------------------------------------------------------------------------
 (2) _LCD_Goto                                             4     3      1    1213
                                              1 BANK0      4     3      1
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     566
                                              3 COMMON     4     0      4
                                              0 BANK0     10    10      0
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             11     7      4     305
                                             36 BANK0     11     7      4
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___fldiv                                             26    18      8    1273
                                             10 BANK0     26    18      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _LCD_Begin                                            2     2      0     248
                                              1 BANK0      2     2      0
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (3) _LCD_Cmd                                              3     3      0     248
                                              6 COMMON     2     2      0
                                              0 BANK0      1     1      0
                   _LCD_Write_Nibble
 ---------------------------------------------------------------------------------
 (3) _LCD_Write_Nibble                                     3     3      0     124
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _my_isr_routine                                       3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Begin
     _LCD_Cmd
       _LCD_Write_Nibble
   ___fldiv
     ___xxtofl (ARG)
   ___fltol
     ___fldiv (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___xxtofl
   _ajustes
     _LCD_Cmd
       _LCD_Write_Nibble
     _imprime_tela_ajuste1
       _LCD_Goto
         _LCD_Cmd
           _LCD_Write_Nibble
       _LCD_Print
         _LCD_Write_Nibble
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
         _isdigit
     _imprime_tela_ajuste2
       _LCD_Goto
         _LCD_Cmd
           _LCD_Write_Nibble
       _LCD_Print
         _LCD_Write_Nibble
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
         _isdigit
     _imprime_tela_ajuste3
       _LCD_Goto
         _LCD_Cmd
           _LCD_Write_Nibble
       _LCD_Print
         _LCD_Write_Nibble
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
         _isdigit
     _imprime_tela_ajuste4
       _LCD_Goto
         _LCD_Cmd
           _LCD_Write_Nibble
       _LCD_Print
         _LCD_Write_Nibble
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
         _isdigit
   _atualiza_ADC
   _controle_aquecedor
   _imprime_tela_main
     _LCD_Goto
       _LCD_Cmd
         _LCD_Write_Nibble
     _LCD_Print
       _LCD_Write_Nibble
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit

 _my_isr_routine (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       1       0        7.1%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      60       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     3D      45       5       86.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0      10       7       20.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      60      12        0.0%


Microchip Technology PIC Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Sat Dec 05 21:05:37 2020

                   ___fldiv@aexp 0043                     ___fldiv@bexp 0042                                pc 0002  
                   ___fldiv@sign 003B                               l53 0C8C                               l80 0E1B  
                             l59 0A31                               l68 0A69                               l77 0AA2  
                             l98 09C3                               _RS 03D0                               fsr 0004  
            ___wmul@multiplicand 0075                      ajustes@temp 0049                              l101 0C38  
                            l110 0B64                              l104 07FD                              l200 0F07  
                            l113 0BA7                              l107 0B21                              l151 036F  
                            l304 056B                              l322 0645                              l157 0FFF  
                            l343 09E6                              l345 0A00                              l339 0720  
                            l615 0BED                              l536 0D62                              l529 0D77  
                            l625 0ADE                              l714 0530                              l539 0D77  
                            l716 0540                              l708 04BE                              l692 03CC  
                            l694 054C                              l790 07B2                              l782 078A  
                            l776 0745                              l778 07DC                              l796 09D5  
                            l789 07A6                              fsr0 0004                              indf 0000  
                __end_of_LCD_Cmd 0A32                     ___fltol@exp1 004E                             l3000 0034  
                           l3010 0077                             l3002 0043                             l3100 02A5  
                           l3020 00B7                             l3012 008E                             l3004 0053  
                           l3110 02E5                             l3102 02AB                             l3030 00E6  
                           l3022 00BC                             l3014 00A3                             l3006 0062  
                           l2400 038C                             l3120 0337                             l3112 02F5  
                           l3104 02C2                             l3040 0115                             l3032 00EE  
                           l3024 00CC                             l3008 0071                             l3016 00AB  
                           l2312 0FBA                             l2304 0FA9                             l2240 0F0C  
                           l3200 0E3E                             l2410 03A4                             l2402 0394  
                           l3122 034C                             l3114 0304                             l3106 02D7  
                           l3050 0144                             l3042 0124                             l3034 00FB  
                           l3026 00DB                             l3018 00B1                             l2090 09B5  
                           l2314 0FC6                             l2242 0F1C                             l3210 0E8D  
                           l3202 0E40                             l2500 04C8                             l2420 03B9  
                           l2412 03AA                             l2404 0395                             l3140 074D  
                           l3132 0724                             l3300 0A5E                             l3116 031A  
                           l3124 0354                             l3108 02DF                             l3060 017A  
                           l3044 0129                             l3052 0148                             l3028 00E0  
                           l3036 00FF                             l2092 09B9                             l2260 0F5E  
                           l2252 0F43                             l2244 0F2C                             l3220 0EC9  
                           l3212 0E93                             l3204 0E42                             l2510 0506  
                           l2502 04D6                             l2430 03E0                             l2422 03C1  
                           l2414 03AE                             l2406 0397                             l3150 076F  
                           l3134 0729                             l3126 035A                             l3118 0320  
                           l3070 01D1                             l3062 0189                             l3054 014E  
                           l3046 012F                             l3038 0105                             l2094 09BD  
                           l2334 0FE4                             l2326 0FD5                             l2254 0F4F  
                           l2246 0F3C                             l2270 0F63                             l3222 0EEB  
                           l3214 0EA9                             l3206 0E47                             l2520 0536  
                           l2512 0514                             l2504 04DA                             l2432 03E4  
                           l2424 03C2                             l2416 03AF                             l2408 039F  
                           l2360 0D27                             l2352 0CFC                             l3160 07A0  
                           l3152 0773                             l3144 0756                             l3136 072D  
                           l3128 0369                             l3080 0214                             l3064 019F  
                           l3072 01D9                             l3056 0154                             l3048 0137  
                           l2336 0FF0                             l2272 0F6F                             l3224 0F03  
                           l3216 0EAF                             l3208 0E88                             l2522 053A  
                           l2514 0523                             l2506 04F3                             l2450 0425  
                           l2442 03FB                             l2418 03B4                             l2426 03C4  
                           l2362 0D28                             l2354 0D09                             l3170 07D3  
                           l3162 07AA                             l3154 0781                             l3146 075B  
                           l3138 073D                             l1810 09C5                             l3090 0254  
                           l3082 021A                             l3074 01DF                             l3066 01A5  
                           l3058 016A                             l2282 0F8E                             l2274 0F7D  
                           l3218 0EB3                             l2524 053C                             l2516 0527  
                           l2508 04F9                             l2460 0443                             l2452 0427  
                           l2444 040D                             l2428 03D4                             l2436 03ED  
                           l2364 0D30                             l3172 07D4                             l3164 07B4  
                           l3156 0791                             l3148 0768                             l1812 09C6  
                           l3092 025A                             l3084 0231                             l3076 01EF  
                           l3068 01BC                             l2284 0F9A                             l3180 0E1C  
                           l2518 052F                             l2454 042C                             l2462 044C  
                           l2470 0471                             l2446 0415                             l2438 03F2  
                           l2390 0377                             l2382 0D57                             l2374 0D3E  
                           l2366 0D32                             l2358 0D12                             l3166 07CA  
                           l3158 079C                             l1814 09CC                             l3094 0270  
                           l3086 0246                             l3078 01FE                             l3190 0E2D  
                           l3182 0E26                             l2720 0C80                             l2480 048E  
                           l2472 0477                             l2464 045E                             l2456 043E  
                           l2448 041D                             l2392 037D                             l2384 0D67  
                           l2368 0D36                             l2376 0D50                             l3168 07CF  
                           l2800 0A6E                             l1816 09D2                             l3096 0280  
                           l3088 024E                             l3192 0E31                             l3184 0E27  
                           l2722 0C81                             l2714 0C3A                             l2730 0A04  
                           l2490 04A3                             l2482 048F                             l2474 047F  
                           l2466 045F                             l2458 0442                             l2394 0381  
                           l2386 0D6C                             l2802 0A70                             l1818 09D4  
                           l2810 0555                             l3098 028F                             l3194 0E36  
                           l3186 0E28                             l2724 0C84                             l2716 0C44  
                           l2732 0A05                             l2492 04A7                             l2484 0498  
                           l2476 0481                             l2468 046D                             l2396 0382  
                           l2388 0370                             l2804 0A91                             l2740 09D6  
                           l2900 06BD                             l2812 055B                             l3196 0E3A  
                           l3188 0E29                             l2726 0C85                             l2718 0C7F  
                           l2734 0A1B                             l2494 04BB                             l2478 048A  
                           l2486 049E                             l2398 0387                             l2806 0A97  
                           l1870 0AB9                             l1862 0AA3                             l2750 09FA  
                           l2742 09DA                             l2910 0701                             l2902 06C1  
                           l2830 05AC                             l2822 0570                             l2814 0562  
                           l3198 0E3C                             l2728 0C88                             l2736 0A22  
                           l2488 04A2                             l2760 0BB5                             l1872 0ABD  
                           l1864 0AAB                             l1880 0ADA                             l2744 09DE  
                           l2904 06C6                             l2840 05F2                             l2832 05BF  
                           l2824 0583                             l3296 057E                             l2816 0567  
                           l2912 070A                             l2808 0550                             l2738 0A28  
                           l2498 04C3                             l2770 0BDB                             l2762 0BBC  
                           l2754 0BA8                             l1874 0AC7                             l1866 0AAE  
                           l2746 09ED                             l2906 06F6                             l2850 060B  
                           l2842 05FA                             l2914 071C                             l3298 05E7  
                           l2834 05C3                             l2826 0593                             l2818 056C  
                           l2930 07F7                             l2780 0A35                             l2772 0BDC  
                           l2764 0BC0                             l2756 0BAC                             l1876 0ACD  
                           l1868 0AB5                             l2748 09F4                             l2908 06FD  
                           l2860 0629                             l2844 05FE                             l2828 0597  
                           l2940 0B07                             l2932 0ADF                             l2782 0A36  
                           l2790 0A56                             l2774 0BE3                             l2766 0BC4  
                           l2758 0BB2                             l1878 0AD4                             l2870 065C  
                           l2862 0633                             l2846 0602                             l2838 05D3  
                           l2926 07DD                             l2934 0AE9                             l2950 0B4A  
                           l2942 0B22                             l2784 0A3E                             l2768 0BD5  
                           l2776 0BE9                             l2880 0675                             l2872 0660  
                           l2864 0639                             l2856 060D                             l2848 0606  
                           l2928 07E7                             l2936 0AF5                             l2944 0B2C  
                           l2960 0B8D                             l2952 0B65                             l2970 0DAA  
                           l2962 0D78                             l2786 0A46                             l2890 0699  
                           l2882 067B                             l2874 0664                             l2866 063F  
                           l2938 0AFB                             l2946 0B38                             l2954 0B6F  
                           l2980 0DE8                             l2972 0DB5                             l2964 0D89  
                           l2788 0A4E                             l2892 06A0                             l2884 0682  
                           l2876 066A                             l2868 0650                             l2948 0B3E  
                           l2956 0B7B                             l2982 0DF9                             l2974 0DC6  
                           l2966 0D93                             l2798 0A6D                             l2894 06A4  
                           l2886 0686                             l2878 0671                             l2958 0B81  
                           l2990 0BF8                             l2984 0DFF                             l2976 0DCC  
                           l2968 0D99                             l2896 06B0                             l2888 0693  
                           l2992 0C10                ?_LCD_Write_Nibble 0070                             l2986 0E10  
                           l2978 0DDD                             l2898 06B6                             l2994 0C16  
                           l2996 0C22                             l2988 0BEE                             l2998 002E  
                           STR_1 0810                             STR_2 086A                             STR_3 083B  
                           STR_4 084F                             STR_5 0827                             STR_6 085E  
                           STR_7 0827                             STR_8 0876                             STR_9 0827  
                           u2200 0F4F                             u2201 0F4E                             u2210 0F5D  
                           u2211 0F5C                             u3020 0A22                             u3100 0BC4  
                           u2300 0FE3                             u2220 0F6F                             u3005 0C70  
                           u3021 0A21                             u3101 0BC3                             u2301 0FE2  
                           u2221 0F6E                             u2205 0F4B                             u3030 0A28  
                           u2310 0FF0                             u2230 0F7D                             u3031 0A27  
                           u3015 0A08                             u2311 0FEF                             u2231 0F7C  
                           u2215 0F59                             u3120 0BD5                             u3040 09DE  
                           u3200 0602                             u2320 0FFE                             u2240 0F8D  
                           u3121 0BD4                             u3041 09DD                             u3201 0601  
                           u2321 0FFD                             u2305 0FDF                             u2241 0F8C  
                           u2225 0F6B                             u2410 0D67                             u2330 0D09  
                           u3210 0628                             u2250 0F9A                             u2170 0F1C  
                           u2411 0D66                             u2331 0D08                             u3115 0BC5  
                           u3211 0627                             u2315 0FEC                             u2251 0F99  
                           u2235 0F79                             u2171 0F1B                             u2500 03F2  
                           u2420 0D6C                             u2340 0D20                             u3140 0BE9  
                           u3300 0699                             u3220 0633                             u2260 0FA8  
                           u2180 0F2C                             u2501 03F1                             u2421 0D6B  
                           u2405 0D59                             u3141 0BE8                             u3125 0BD1  
                           u3301 0698                             u3221 0632                             u2325 0FFA  
                           u2261 0FA7                             u2245 0F89                             u2181 0F2B  
                           u2510 042C                             u2430 0381                             u2350 0D36  
                           u1710 0ABD                             u3070 09FA                             u3310 06B0  
                           u3230 0639                             u2270 0FB9                             u2190 0F3C  
                           u4007 0E16                             u2511 042B                             u2431 0380  
                           u2351 0D35                             u3135 0BDD                             u1711 0ABC  
                           u3071 09F9                             u3055 09E7                             u3311 06AF  
                           u3231 0638                             u3215 0624                             u2271 0FB8  
                           u2255 0F96                             u2191 0F3B                             u2175 0F18  
                           u2600 048E                             u2440 0387                             u2360 0D3D  
                           u3160 0AA2                             u3080 0BB2                             u1720 0AC7  
                           u1560 09CC                             u3320 06B6                             u3240 063F  
                           u3400 0105                             u2280 0FC6                             u4017 0A2C  
                           u2601 048D                             u2441 0386                             u2361 0D3C  
                           u2345 0D1B                             u3161 0AA1                             u3081 0BB1  
                           u1721 0AC6                             u1705 0AAF                             u3065 09EE  
                           u1561 09CB                             u3321 06B5                             u3241 063E  
                           u3401 0104                             u2281 0FC5                             u2265 0FA4  
                           u2185 0F28                             u2450 038C                             u1570 09D2  
                           u3330 070A                             u3250 0650                             u3170 055B  
                           u3410 012F                             u2290 0FD4                             u4027 0C8A  
                           u2451 038B                             u3155 0A78                             u1571 09D1  
                           u3331 0709                             u3251 064F                             u3171 055A  
                           u3411 012E                             u2291 0FD3                             u2275 0FB5  
                           u2195 0F38                             u2700 0523                             u2620 04A2  
                           u2540 0442                             u2460 03AE                             u2380 0D4F  
                           u1740 0ADA                             u3340 071C                             u3260 0664  
                           u3180 0593                             u3500 02AB                             u3420 0144  
                           u2701 0522                             u2621 04A1                             u2541 0441  
                           u2525 042E                             u2461 03AD                             u2381 0D4E  
                           u1741 0AD9                             u1725 0AC3                             u3341 071B  
                           u3261 0663                             u3181 0592                             u3501 02AA  
                           u3421 0143                             u2285 0FC2                             u2710 053A  
                           u2630 04A7                             u2470 03B4                             u2390 0D56  
                           u3270 066A                             u3190 05D3                             u3510 02D7  
                           u3430 014E                             u3350 0077                             u2711 0539  
                           u2631 04A6                             u2615 0491                             u2535 0437  
                           u2471 03B3                             u2391 0D55                             u2375 0D3F  
                           u3095 0BB6                             u1735 0ACE                             u3271 0669  
                           u3255 064C                             u3191 05D2                             u3511 02D6  
                           u3431 014D                             u3351 0076                             u2295 0FD0  
                           u2640 04BB                             u2560 045E                             u2480 03B9  
                           u3600 076E                             u3280 067B                             u3520 02E5  
                           u3440 01A5                             u3360 00A3                             u2705 051F  
                           u2641 04BA                             u2561 045D                             u2481 03B8  
                           u3601 076D                             u3281 067A                             u3521 02E4  
                           u3441 01A4                             u3425 0140                             u3361 00A2  
                           u2650 04C2                             u2570 0477                             u2490 03D4  
                           u1690 0AAB                             u3290 0692                             u3530 0320  
                           u3450 01D1                             u3370 00B1                             u2651 04C1  
                           u2571 0476                             u2555 0445                             u2491 03D3  
                           u1691 0AAA                             u3291 0691                             u3531 031F  
                           u3515 02D3                             u3451 01D0                             u3371 00B0  
                           u2660 04C8                             u2580 047F                             u3620 0790  
                           u3540 034C                             u3460 01DF                             u3380 00E6  
                           u2661 04C7                             u2581 047E                             u2565 045A  
                           u3621 078F                             u3541 034B                             u3461 01DE  
                           u3381 00E5                             u3365 009F                             u2670 04DA  
                           u3550 035A                             u3470 021A                             u3390 00FB  
                           u1950 09C3                             u3710 0E93                             u2671 04D9  
                           u3615 0782                             u3551 0359                             u3471 0219  
                           u3455 01CD                             u3391 00FA                             u1951 09C2  
                           u3711 0E92                             u2680 04E9                             u3640 07A0  
                           u3560 0729                             u3480 0246                             u3720 0EAF  
                           u3641 079F                             u3561 0728                             u3545 0348  
                           u3481 0245                             u3721 0EAE                             u2690 0506  
                           u3650 07A6                             u3570 072D                             u3490 0254  
                           u3730 0EB3                             u2691 0505                             u2595 0483  
                           u3651 07A5                             u3635 0795                             u3571 072C  
                           u3491 0253                             u3395 00F7                             u3731 0EB2  
                           u3660 07AA                             u3580 074D                             u3740 0EC9  
                           u2685 04E4                             u3661 07A9                             u3581 074C  
                           u3485 0242                             u3741 0EC8                             u3670 07BF  
                           u3750 0F03                             u2695 0502                             u3807 00D4  
                           u3751 0F02                             u3680 07CF                             u3681 07CE  
                           u3817 010D                             u3745 0EC5                             u2970 0C41  
                           u3690 07D3                             u2971 0C3D                             u3691 07D2  
                           u3675 07BA                             u3595 0760                             u3907 02FD  
                           u3827 011D                             u3755 0EFF                             u3917 0362  
                           u3837 0172                             u3927 0D8F                             u3847 0182  
                           u3767 09BB                             u2984 0C44                             u3937 0D9F  
                           u3857 01E7                             u3777 004B                             u2995 0C5F  
                           u3947 0DB0                             u3867 01F7                             u3787 005B  
                           u3957 0DC1                             u3877 0278                             u3797 00C4  
                           u3967 0DD2                             u3887 0288                             u3977 0DE3  
                           u3897 02ED                             u3987 0DF4                             u3997 0E05  
                           _TMR0 0001                      main@min_max 0059                      main@min_min 0055  
             ??_LCD_Write_Nibble 0073                             _main 0E1C               __size_of_LCD_Begin 00A4  
                           btemp 007E               __size_of_LCD_Print 0039                             start 0010  
                ___fldiv@new_exp 003C                    ?_atualiza_ADC 0070                      LCD_Goto@col 0024  
                    LCD_Goto@row 0021                 __end_of_LCD_Goto 0A6A         imprime_tela_ajuste1@temp 003C  
                  ___fltol@sign1 004D                            ?_main 0070                  __end_of___fldiv 054D  
                __end_of___fltol 0D78                  __end_of___lwdiv 0BEE                            i1l190 0CF0  
                          i1l193 0CF1                  __end_of___lwmod 0ADF                            _TRISA 0085  
                          _TRISB 0086                            _TRISC 0087                            _TRISD 0088  
                          _TRISE 0089                     main@hora_max 0057                     main@hora_min 0053  
                          _Horas 005F                  __end_of_ajustes 0370       controle_aquecedor@hora_max 0026  
     controle_aquecedor@hora_min 0022                  __end_of_dpowers 0810                  __end_of_isdigit 09D6  
                 ajustes@min_max 0044                   ajustes@min_min 0042                   __pbitbssCOMMON 03D0  
                          pclath 000A                            status 0003                            wtemp0 007E  
                __end_of_sprintf 0721                   ??_atualiza_ADC 0073                  __initialization 0013  
                   __end_of_main 0F0C       __end_of_controle_aquecedor 1000                           ??_main 004F  
              __end_of_LCD_Begin 0E1C             _imprime_tela_ajuste1 07DD             _imprime_tela_ajuste2 0ADF  
           _imprime_tela_ajuste3 0B22             _imprime_tela_ajuste4 0B65                        ??_LCD_Cmd 0076  
              __end_of_LCD_Print 0AA3                           _ADCON0 001F                           _ADCON1 009F  
                         _ADRESH 001E                           i1l2600 0CDE                           i1l2602 0CEB  
                         i1l2604 0CF0                           i1l2580 0C91                           i1l2590 0CBD  
                         i1l2582 0C99                           i1l2592 0CC1                           i1l2584 0CA6  
                         i1l2594 0CC7                           i1l2586 0CA8                           i1l2578 0C8D  
                         i1l2596 0CD4                           i1l2588 0CB0                           i1l2598 0CD8  
                         _INTCON 000B                           u290_20 0CD4                           u290_21 0CD3  
                         u290_25 0CD0                           u291_20 0CEB                           u291_21 0CEA  
                         u291_25 0CE7                           u287_20 0C91                           u287_21 0C90  
                         u288_20 0CA6                           u288_21 0CA5                           u288_25 0CA2  
                         u289_20 0CBD                           u289_21 0CBC                           u289_25 0CB9  
                         _TRISD0 0440                           _TRISD1 0441                           _TRISD2 0442  
                         _TRISD3 0443                           _TRISD4 0444                           _TRISD5 0445  
               __end_of___xxtofl 07DD                           ___wmul 09D6                        ??___fldiv 0032  
                      ??___fltol 0048                        ??___lwdiv 0077                        ??___lwmod 0027  
                ajustes@hora_max 0043                  ajustes@hora_min 0041            ?_imprime_tela_ajuste1 003C  
          ?_imprime_tela_ajuste2 0070            ?_imprime_tela_ajuste3 003C            ?_imprime_tela_ajuste4 003C  
                      ??_ajustes 0045                        ??_isdigit 0073                           saved_w 007E  
                      ??_sprintf 0030                     ___xxtofl@arg 0026                     ___xxtofl@exp 0025  
                   ___xxtofl@val 0073          __end_of__initialization 0027                        ?_LCD_Goto 0021  
                     ___fltol@f1 0044                   __pcstackCOMMON 0070                   LCD_Cmd@Command 0020  
           __end_of_atualiza_ADC 09C4                     sprintf@width 0038                       __pbssBANK0 005D  
                     __pbssBANK1 00A0                       ??_LCD_Goto 0022                       __pmaintext 0E1C  
                        ?___wmul 0073        __size_of_LCD_Write_Nibble 0054                       __pintentry 0004  
         ??_imprime_tela_ajuste1 003E           ??_imprime_tela_ajuste2 003C           ??_imprime_tela_ajuste3 0040  
         ??_imprime_tela_ajuste4 0040                          _LCD_Cmd 0A01                        ?___xxtofl 0073  
        __size_of_my_isr_routine 006F                       __stringtab 0800                          _Minutos 0061  
                        ___fldiv 0370                          ___fltol 0CFC                  __size_of___wmul 002B  
                        ___lwdiv 0BA8                          ___lwmod 0AA3                      _Temperatura 005D  
                        __ptext1 0BEE                          __ptext2 0F0C                          __ptext3 09B5  
                        __ptext4 002B                          __ptext5 0B65                          __ptext6 0B22  
                        __ptext7 0ADF                          __ptext8 07DD                          __ptext9 054D  
                        _ajustes 002B                          _dpowers 0806                          _isdigit 09C4  
                     ??___xxtofl 0020                        _LCD_Begin 0D78                        _LCD_Print 0A6A  
                        _sprintf 054D                          clrloop0 09AE             end_of_initialization 0027  
             _controle_aquecedor 0F0C              ?_controle_aquecedor 0020                LCD_Write_Nibble@n 0075  
          __size_of_atualiza_ADC 000F                        _PORTBbits 0006                        _PORTCbits 0007  
                      _PORTDbits 0008             ??_controle_aquecedor 0073                    ___xxtofl@sign 0024  
                     ?_LCD_Begin 0070                      ___fldiv@grs 003E                      ___fldiv@rem 0037  
                     ?_LCD_Print 0070           controle_aquecedor@temp 0020                __size_of_LCD_Goto 0038  
                   _atualiza_ADC 09B5                 _LCD_Write_Nibble 0C39                       LCD_Print@i 0020  
                 __end_of___wmul 0A01              start_initialization 0013                   _my_isr_routine 0C8D  
                       ??___wmul 0077                         ?_LCD_Cmd 0070                        ___fldiv@a 002A  
                      ___fldiv@b 002E                      __pbssCOMMON 0078                        ___latbits 0002  
                  __pcstackBANK0 0020           __end_of_my_isr_routine 0CFC                      ??_LCD_Begin 0021  
              __size_of___xxtofl 00BC                      ??_LCD_Print 0076                _imprime_tela_main 0BEE  
                    sprintf@flag 0037               ?_imprime_tela_main 0070                      sprintf@prec 0034  
               ___lwdiv@dividend 0075              ??_imprime_tela_main 003C                         ?___fldiv 002A  
                       ?___fltol 0044                         ?___lwdiv 0073                         ?___lwmod 0023  
               LCD_Print@LCD_Str 0021                        __pstrings 0800                         ?_ajustes 0041  
  __size_of_imprime_tela_ajuste1 0021    __size_of_imprime_tela_ajuste2 0043    __size_of_imprime_tela_ajuste3 0043  
  __size_of_imprime_tela_ajuste4 0043                         ?_isdigit 0070  imprime_tela_ajuste3@minutos_min 003E  
                ?_my_isr_routine 0070        __end_of_imprime_tela_main 0C39                 ___lwdiv@quotient 0021  
                       ?_sprintf 0029                interrupt_function 0004                         _LCD_Goto 0A32  
                 ___wmul@product 0020                        clear_ram0 09AD                         _TMR0_aux 0078  
                    _LCD_Cstring 00A0                       _ADCON0bits 001F                      __stringbase 0805  
              ___wmul@multiplier 0073        controle_aquecedor@min_max 0028        controle_aquecedor@min_min 0024  
               __size_of_LCD_Cmd 0031  imprime_tela_ajuste4@minutos_max 003E         __end_of_LCD_Write_Nibble 0C8D  
                       _Segundos 0063                 __size_of___fldiv 01DD                 __size_of___fltol 007C  
               __size_of___lwdiv 0046                 __size_of___lwmod 003C               __end_of__stringtab 0806  
                    _isdigit$762 0073                 __size_of_ajustes 0345                       sprintf@val 0035  
                       ___xxtofl 0721      __size_of_controle_aquecedor 00F4                 __size_of_isdigit 0012  
                ___lwdiv@divisor 0073                  ___lwdiv@counter 0020       __size_of_imprime_tela_main 004B  
                       __ptext10 09C4                         __ptext11 09D6                         __ptext20 0A01  
                       __ptext12 0AA3                         __ptext21 0C39                         __ptext13 0BA8  
                       __ptext22 0C8D                         __ptext14 0A6A                         __ptext15 0A32  
                       __ptext16 0721                         __ptext17 0CFC                         __ptext18 0370  
                       __ptext19 0D78                 __size_of_sprintf 01D4                    __size_of_main 00F0  
                       main@temp 005B                       _INTCONbits 000B                         isdigit@c 0074  
                       intlevel1 0000                        sprintf@ap 0033                        sprintf@sp 003B  
               ___lwmod@dividend 0025                        stringcode 0800                 ??_my_isr_routine 0070  
                     _OPTION_REG 0081                         sprintf@c 003A                         sprintf@f 0029  
                ___lwmod@divisor 0023                  ___lwmod@counter 0028                         stringdir 0800  
  imprime_tela_ajuste3@horas_min 003C                         stringtab 0800    imprime_tela_ajuste4@horas_max 003C  
   __end_of_imprime_tela_ajuste1 07FE     __end_of_imprime_tela_ajuste2 0B22     __end_of_imprime_tela_ajuste3 0B65  
   __end_of_imprime_tela_ajuste4 0BA8  
