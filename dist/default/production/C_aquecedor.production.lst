

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sat Jul 24 02:01:42 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F877
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bitbssCOMMON,global,bit,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	maintext,global,class=CODE,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2,group=3
    16                           	psect	text2,local,class=CODE,merge=1,delta=2,group=3
    17                           	psect	text3,local,class=CODE,merge=1,delta=2,group=3
    18                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    32                           	psect	text18,local,class=CODE,merge=1,delta=2,group=3
    33                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text22,local,class=CODE,merge=1,delta=2
    37                           	psect	text23,local,class=CODE,merge=1,delta=2
    38                           	psect	text24,local,class=CODE,merge=1,delta=2,group=2
    39                           	psect	text25,local,class=CODE,merge=1,delta=2
    40                           	psect	text26,local,class=CODE,merge=1,delta=2
    41                           	psect	text27,local,class=CODE,merge=1,delta=2
    42                           	psect	text28,local,class=CODE,merge=1,delta=2
    43                           	psect	intentry,global,class=CODE,delta=2
    44                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    45                           	dabs	1,0x7E,2
    46  0000                     
    47                           ; Version 2.20
    48                           ; Generated 12/02/2020 GMT
    49                           ; 
    50                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    51                           ; All rights reserved.
    52                           ; 
    53                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    54                           ; 
    55                           ; Redistribution and use in source and binary forms, with or without modification, are
    56                           ; permitted provided that the following conditions are met:
    57                           ; 
    58                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    59                           ;        conditions and the following disclaimer.
    60                           ; 
    61                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    62                           ;        of conditions and the following disclaimer in the documentation and/or other
    63                           ;        materials provided with the distribution.
    64                           ; 
    65                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    66                           ;        software without specific prior written permission.
    67                           ; 
    68                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    69                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    70                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    71                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    72                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    73                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    74                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    75                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    76                           ; 
    77                           ; 
    78                           ; Code-generator required, PIC16F877 Definitions
    79                           ; 
    80                           ; SFR Addresses
    81  0000                     	;# 
    82  0001                     	;# 
    83  0002                     	;# 
    84  0003                     	;# 
    85  0004                     	;# 
    86  0005                     	;# 
    87  0006                     	;# 
    88  0007                     	;# 
    89  0008                     	;# 
    90  0009                     	;# 
    91  000A                     	;# 
    92  000B                     	;# 
    93  000C                     	;# 
    94  000D                     	;# 
    95  000E                     	;# 
    96  000E                     	;# 
    97  000F                     	;# 
    98  0010                     	;# 
    99  0011                     	;# 
   100  0012                     	;# 
   101  0013                     	;# 
   102  0014                     	;# 
   103  0015                     	;# 
   104  0015                     	;# 
   105  0016                     	;# 
   106  0017                     	;# 
   107  0018                     	;# 
   108  0019                     	;# 
   109  001A                     	;# 
   110  001B                     	;# 
   111  001B                     	;# 
   112  001C                     	;# 
   113  001D                     	;# 
   114  001E                     	;# 
   115  001F                     	;# 
   116  0081                     	;# 
   117  0085                     	;# 
   118  0086                     	;# 
   119  0087                     	;# 
   120  0088                     	;# 
   121  0089                     	;# 
   122  008C                     	;# 
   123  008D                     	;# 
   124  008E                     	;# 
   125  0091                     	;# 
   126  0092                     	;# 
   127  0093                     	;# 
   128  0094                     	;# 
   129  0098                     	;# 
   130  0099                     	;# 
   131  009E                     	;# 
   132  009F                     	;# 
   133  010C                     	;# 
   134  010D                     	;# 
   135  010E                     	;# 
   136  010F                     	;# 
   137  018C                     	;# 
   138  018D                     	;# 
   139  0000                     	;# 
   140  0001                     	;# 
   141  0002                     	;# 
   142  0003                     	;# 
   143  0004                     	;# 
   144  0005                     	;# 
   145  0006                     	;# 
   146  0007                     	;# 
   147  0008                     	;# 
   148  0009                     	;# 
   149  000A                     	;# 
   150  000B                     	;# 
   151  000C                     	;# 
   152  000D                     	;# 
   153  000E                     	;# 
   154  000E                     	;# 
   155  000F                     	;# 
   156  0010                     	;# 
   157  0011                     	;# 
   158  0012                     	;# 
   159  0013                     	;# 
   160  0014                     	;# 
   161  0015                     	;# 
   162  0015                     	;# 
   163  0016                     	;# 
   164  0017                     	;# 
   165  0018                     	;# 
   166  0019                     	;# 
   167  001A                     	;# 
   168  001B                     	;# 
   169  001B                     	;# 
   170  001C                     	;# 
   171  001D                     	;# 
   172  001E                     	;# 
   173  001F                     	;# 
   174  0081                     	;# 
   175  0085                     	;# 
   176  0086                     	;# 
   177  0087                     	;# 
   178  0088                     	;# 
   179  0089                     	;# 
   180  008C                     	;# 
   181  008D                     	;# 
   182  008E                     	;# 
   183  0091                     	;# 
   184  0092                     	;# 
   185  0093                     	;# 
   186  0094                     	;# 
   187  0098                     	;# 
   188  0099                     	;# 
   189  009E                     	;# 
   190  009F                     	;# 
   191  010C                     	;# 
   192  010D                     	;# 
   193  010E                     	;# 
   194  010F                     	;# 
   195  018C                     	;# 
   196  018D                     	;# 
   197                           
   198                           	psect	strings
   199  0800                     __pstrings:
   200  0800                     stringtab:
   201  0800                     __stringtab:
   202  0800                     stringcode:	
   203                           ;	String table - string pointers are 1 byte each
   204                           
   205  0800                     stringdir:
   206  0800  3008               	movlw	high stringdir
   207  0801  008A               	movwf	10
   208  0802  0804               	movf	4,w
   209  0803  0A84               	incf	4,f
   210  0804  0782               	addwf	2,f
   211  0805                     __stringbase:
   212  0805  3400               	retlw	0
   213  0806                     __end_of__stringtab:
   214  0806                     _dpowers:
   215  0806  3401               	retlw	1
   216  0807  3400               	retlw	0
   217  0808  340A               	retlw	10
   218  0809  3400               	retlw	0
   219  080A  3464               	retlw	100
   220  080B  3400               	retlw	0
   221  080C  34E8               	retlw	232
   222  080D  3403               	retlw	3
   223  080E  3410               	retlw	16
   224  080F  3427               	retlw	39
   225  0810                     __end_of_dpowers:
   226  0007                     _PORTCbits	set	7
   227  001E                     _ADRESH	set	30
   228  001F                     _ADCON0	set	31
   229  000B                     _INTCON	set	11
   230  0001                     _TMR0	set	1
   231  000B                     _INTCONbits	set	11
   232  0006                     _PORTBbits	set	6
   233  001F                     _ADCON0bits	set	31
   234  0008                     _PORTDbits	set	8
   235  009E                     _ADRESL	set	158
   236  009F                     _ADCON1	set	159
   237  0089                     _TRISE	set	137
   238  0088                     _TRISD	set	136
   239  0087                     _TRISC	set	135
   240  0086                     _TRISB	set	134
   241  0085                     _TRISA	set	133
   242  0081                     _OPTION_REG	set	129
   243  0445                     _TRISD5	set	1093
   244  0444                     _TRISD4	set	1092
   245  0443                     _TRISD3	set	1091
   246  0442                     _TRISD2	set	1090
   247  0441                     _TRISD1	set	1089
   248  0440                     _TRISD0	set	1088
   249  0810                     STR_1:
   250  0810  3448               	retlw	72	;'H'
   251  0811  346F               	retlw	111	;'o'
   252  0812  342E               	retlw	46	;'.'
   253  0813  343A               	retlw	58	;':'
   254  0814  3420               	retlw	32	;' '
   255  0815  3425               	retlw	37	;'%'
   256  0816  3430               	retlw	48	;'0'
   257  0817  3432               	retlw	50	;'2'
   258  0818  3464               	retlw	100	;'d'
   259  0819  343A               	retlw	58	;':'
   260  081A  3425               	retlw	37	;'%'
   261  081B  3430               	retlw	48	;'0'
   262  081C  3432               	retlw	50	;'2'
   263  081D  3464               	retlw	100	;'d'
   264  081E  343A               	retlw	58	;':'
   265  081F  3425               	retlw	37	;'%'
   266  0820  3430               	retlw	48	;'0'
   267  0821  3432               	retlw	50	;'2'
   268  0822  3464               	retlw	100	;'d'
   269  0823  3420               	retlw	32	;' '
   270  0824  3420               	retlw	32	;' '
   271  0825  3420               	retlw	32	;' '
   272  0826  3400               	retlw	0
   273  0827                     STR_5:
   274  0827  3420               	retlw	32	;' '
   275  0828  3420               	retlw	32	;' '
   276  0829  3420               	retlw	32	;' '
   277  082A  3420               	retlw	32	;' '
   278  082B  3420               	retlw	32	;' '
   279  082C  3425               	retlw	37	;'%'
   280  082D  3430               	retlw	48	;'0'
   281  082E  3432               	retlw	50	;'2'
   282  082F  3464               	retlw	100	;'d'
   283  0830  343A               	retlw	58	;':'
   284  0831  3425               	retlw	37	;'%'
   285  0832  3430               	retlw	48	;'0'
   286  0833  3432               	retlw	50	;'2'
   287  0834  3464               	retlw	100	;'d'
   288  0835  3420               	retlw	32	;' '
   289  0836  3420               	retlw	32	;' '
   290  0837  3420               	retlw	32	;' '
   291  0838  3420               	retlw	32	;' '
   292  0839  3420               	retlw	32	;' '
   293  083A  3400               	retlw	0
   294  083B                     STR_3:
   295  083B  3454               	retlw	84	;'T'
   296  083C  3465               	retlw	101	;'e'
   297  083D  346D               	retlw	109	;'m'
   298  083E  3470               	retlw	112	;'p'
   299  083F  342E               	retlw	46	;'.'
   300  0840  3420               	retlw	32	;' '
   301  0841  3444               	retlw	68	;'D'
   302  0842  3465               	retlw	101	;'e'
   303  0843  3473               	retlw	115	;'s'
   304  0844  343A               	retlw	58	;':'
   305  0845  3420               	retlw	32	;' '
   306  0846  3425               	retlw	37	;'%'
   307  0847  3430               	retlw	48	;'0'
   308  0848  3432               	retlw	50	;'2'
   309  0849  3464               	retlw	100	;'d'
   310  084A  34DF               	retlw	-33
   311  084B  3463               	retlw	99	;'c'
   312  084C  3420               	retlw	32	;' '
   313  084D  3420               	retlw	32	;' '
   314  084E  3400               	retlw	0
   315  084F                     STR_4:
   316  084F  3448               	retlw	72	;'H'
   317  0850  346F               	retlw	111	;'o'
   318  0851  3472               	retlw	114	;'r'
   319  0852  3461               	retlw	97	;'a'
   320  0853  3472               	retlw	114	;'r'
   321  0854  3469               	retlw	105	;'i'
   322  0855  346F               	retlw	111	;'o'
   323  0856  3420               	retlw	32	;' '
   324  0857  3441               	retlw	65	;'A'
   325  0858  3474               	retlw	116	;'t'
   326  0859  3475               	retlw	117	;'u'
   327  085A  3461               	retlw	97	;'a'
   328  085B  346C               	retlw	108	;'l'
   329  085C  343A               	retlw	58	;':'
   330  085D  3400               	retlw	0
   331  085E                     STR_6:
   332  085E  3453               	retlw	83	;'S'
   333  085F  3474               	retlw	116	;'t'
   334  0860  3461               	retlw	97	;'a'
   335  0861  3472               	retlw	114	;'r'
   336  0862  3474               	retlw	116	;'t'
   337  0863  3420               	retlw	32	;' '
   338  0864  3474               	retlw	116	;'t'
   339  0865  3469               	retlw	105	;'i'
   340  0866  346D               	retlw	109	;'m'
   341  0867  3465               	retlw	101	;'e'
   342  0868  343A               	retlw	58	;':'
   343  0869  3400               	retlw	0
   344  086A                     STR_2:
   345  086A  3454               	retlw	84	;'T'
   346  086B  3465               	retlw	101	;'e'
   347  086C  342E               	retlw	46	;'.'
   348  086D  343A               	retlw	58	;':'
   349  086E  3420               	retlw	32	;' '
   350  086F  3425               	retlw	37	;'%'
   351  0870  3430               	retlw	48	;'0'
   352  0871  3432               	retlw	50	;'2'
   353  0872  3464               	retlw	100	;'d'
   354  0873  34DF               	retlw	-33
   355  0874  3463               	retlw	99	;'c'
   356  0875  3400               	retlw	0
   357  0876                     STR_8:
   358  0876  3453               	retlw	83	;'S'
   359  0877  3474               	retlw	116	;'t'
   360  0878  346F               	retlw	111	;'o'
   361  0879  3470               	retlw	112	;'p'
   362  087A  3420               	retlw	32	;' '
   363  087B  3474               	retlw	116	;'t'
   364  087C  3469               	retlw	105	;'i'
   365  087D  346D               	retlw	109	;'m'
   366  087E  3465               	retlw	101	;'e'
   367  087F  343A               	retlw	58	;':'
   368  0880  3400               	retlw	0
   369  0827                     
   370                           	psect	cinit
   371  0013                     start_initialization:	
   372                           ; #config settings
   373                           
   374  0013                     __initialization:
   375                           
   376                           ; Clear objects allocated to BITCOMMON
   377  0013  01FA               	clrf	(__pbitbssCOMMON/(0+8))& (0+127)
   378                           
   379                           ; Clear objects allocated to COMMON
   380  0014  01F8               	clrf	__pbssCOMMON& (0+127)
   381  0015  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   382                           
   383                           ; Clear objects allocated to BANK0
   384  0016  1283               	bcf	3,5	;RP0=0, select bank0
   385  0017  1303               	bcf	3,6	;RP1=0, select bank0
   386  0018  01ED               	clrf	__pbssBANK0& (0+127)
   387  0019  01EE               	clrf	(__pbssBANK0+1)& (0+127)
   388                           
   389                           ; Clear objects allocated to BANK1
   390  001A  1383               	bcf	3,7	;select IRP bank0
   391  001B  30C6               	movlw	low __pbssBANK1
   392  001C  0084               	movwf	4
   393  001D  30DE               	movlw	low (__pbssBANK1+24)
   394  001E  160A  118A  23E2  120A  118A  	fcall	clear_ram0
   395  0023                     end_of_initialization:	
   396                           ;End of C runtime variable initialization code
   397                           
   398  0023                     __end_of__initialization:
   399  0023  0183               	clrf	3
   400  0024  120A  158A  2CA5   	ljmp	_main	;jump to C main() function
   401                           
   402                           	psect	bitbssCOMMON
   403  03D0                     __pbitbssCOMMON:
   404  03D0                     _RS:
   405  03D0                     	ds	1
   406                           
   407                           	psect	bssCOMMON
   408  0078                     __pbssCOMMON:
   409  0078                     _Minutos:
   410  0078                     	ds	2
   411                           
   412                           	psect	bssBANK0
   413  006D                     __pbssBANK0:
   414  006D                     _Horas:
   415  006D                     	ds	2
   416                           
   417                           	psect	bssBANK1
   418  00C6                     __pbssBANK1:
   419  00C6                     _errno:
   420  00C6                     	ds	2
   421  00C8                     _Temperatura:
   422  00C8                     	ds	2
   423  00CA                     _Segundos:
   424  00CA                     	ds	2
   425  00CC                     _TMR0_aux:
   426  00CC                     	ds	2
   427  00CE                     _LCD_Cstring:
   428  00CE                     	ds	16
   429                           
   430                           	psect	clrtext
   431  13E2                     clear_ram0:	
   432                           ;	Called with FSR containing the base address, and
   433                           ;	W with the last address+1
   434                           
   435  13E2  0064               	clrwdt	;clear the watchdog before getting into this loop
   436  13E3                     clrloop0:
   437  13E3  0180               	clrf	0	;clear RAM location pointed to by FSR
   438  13E4  0A84               	incf	4,f	;increment pointer
   439  13E5  0604               	xorwf	4,w	;XOR with final address
   440  13E6  1903               	btfsc	3,2	;have we reached the end yet?
   441  13E7  3400               	retlw	0	;all done for this memory range, return
   442  13E8  0604               	xorwf	4,w	;XOR again to restore value
   443  13E9  2BE3               	goto	clrloop0	;do the next byte
   444                           
   445                           	psect	cstackBANK1
   446  00A0                     __pcstackBANK1:
   447  00A0                     ?___flsub:
   448  00A0                     ___flsub@a:	
   449                           ; 4 bytes @ 0x0
   450                           
   451                           
   452                           ; 4 bytes @ 0x0
   453  00A0                     	ds	4
   454  00A4                     ___flsub@b:
   455                           
   456                           ; 4 bytes @ 0x4
   457  00A4                     	ds	4
   458  00A8                     ?_round:
   459  00A8                     round@x:	
   460                           ; 4 bytes @ 0x8
   461                           
   462                           
   463                           ; 4 bytes @ 0x8
   464  00A8                     	ds	4
   465  00AC                     round@f:
   466                           
   467                           ; 4 bytes @ 0xC
   468  00AC                     	ds	4
   469  00B0                     ??_main:
   470                           
   471                           ; 1 bytes @ 0x10
   472  00B0                     	ds	4
   473  00B4                     _main$1008:
   474                           
   475                           ; 4 bytes @ 0x14
   476  00B4                     	ds	4
   477  00B8                     _main$1009:
   478                           
   479                           ; 4 bytes @ 0x18
   480  00B8                     	ds	4
   481  00BC                     main@hora_min:
   482                           
   483                           ; 2 bytes @ 0x1C
   484  00BC                     	ds	2
   485  00BE                     main@min_min:
   486                           
   487                           ; 2 bytes @ 0x1E
   488  00BE                     	ds	2
   489  00C0                     main@hora_max:
   490                           
   491                           ; 2 bytes @ 0x20
   492  00C0                     	ds	2
   493  00C2                     main@min_max:
   494                           
   495                           ; 2 bytes @ 0x22
   496  00C2                     	ds	2
   497  00C4                     main@temp:
   498                           
   499                           ; 2 bytes @ 0x24
   500  00C4                     	ds	2
   501                           
   502                           	psect	cstackCOMMON
   503  0070                     __pcstackCOMMON:
   504  0070                     ?_isdigit:
   505  0070                     ?_LCD_Write_Nibble:	
   506                           ; 1 bit 
   507                           
   508  0070                     ?_LCD_Cmd:	
   509                           ; 1 bytes @ 0x0
   510                           
   511  0070                     ?_LCD_Print:	
   512                           ; 1 bytes @ 0x0
   513                           
   514  0070                     ?_LCD_Begin:	
   515                           ; 1 bytes @ 0x0
   516                           
   517  0070                     ?_atualiza_ADC:	
   518                           ; 1 bytes @ 0x0
   519                           
   520  0070                     ?_imprime_tela_main:	
   521                           ; 1 bytes @ 0x0
   522                           
   523  0070                     ?_imprime_tela_ajuste2:	
   524                           ; 1 bytes @ 0x0
   525                           
   526  0070                     ?_my_isr_routine:	
   527                           ; 1 bytes @ 0x0
   528                           
   529  0070                     ??_my_isr_routine:	
   530                           ; 1 bytes @ 0x0
   531                           
   532  0070                     ?_main:	
   533                           ; 1 bytes @ 0x0
   534                           
   535                           
   536                           ; 1 bytes @ 0x0
   537  0070                     	ds	3
   538  0073                     ??_isdigit:
   539  0073                     ??_LCD_Write_Nibble:	
   540                           ; 1 bytes @ 0x3
   541                           
   542  0073                     ??_atualiza_ADC:	
   543                           ; 1 bytes @ 0x3
   544                           
   545  0073                     ??_controle_aquecedor:	
   546                           ; 1 bytes @ 0x3
   547                           
   548  0073                     ??___fleq:	
   549                           ; 1 bytes @ 0x3
   550                           
   551  0073                     ?___wmul:	
   552                           ; 1 bytes @ 0x3
   553                           
   554  0073                     ?___lwdiv:	
   555                           ; 2 bytes @ 0x3
   556                           
   557  0073                     ?___xxtofl:	
   558                           ; 2 bytes @ 0x3
   559                           
   560  0073                     _isdigit$768:	
   561                           ; 4 bytes @ 0x3
   562                           
   563  0073                     ___wmul@multiplier:	
   564                           ; 1 bytes @ 0x3
   565                           
   566  0073                     ___lwdiv@divisor:	
   567                           ; 2 bytes @ 0x3
   568                           
   569  0073                     ___xxtofl@val:	
   570                           ; 2 bytes @ 0x3
   571                           
   572                           
   573                           ; 4 bytes @ 0x3
   574  0073                     	ds	1
   575  0074                     isdigit@c:
   576                           
   577                           ; 1 bytes @ 0x4
   578  0074                     	ds	1
   579  0075                     LCD_Write_Nibble@n:
   580  0075                     ___wmul@multiplicand:	
   581                           ; 1 bytes @ 0x5
   582                           
   583  0075                     ___lwdiv@dividend:	
   584                           ; 2 bytes @ 0x5
   585                           
   586                           
   587                           ; 2 bytes @ 0x5
   588  0075                     	ds	1
   589  0076                     ??_LCD_Cmd:
   590  0076                     ??_LCD_Print:	
   591                           ; 1 bytes @ 0x6
   592                           
   593                           
   594                           ; 1 bytes @ 0x6
   595  0076                     	ds	1
   596  0077                     ??_trunc:
   597  0077                     ??___wmul:	
   598                           ; 1 bytes @ 0x7
   599                           
   600  0077                     ??___lwdiv:	
   601                           ; 1 bytes @ 0x7
   602                           
   603                           
   604                           ; 1 bytes @ 0x7
   605  0077                     	ds	1
   606  0078                     ??_round:
   607  0078                     ??___flsub:	
   608                           ; 1 bytes @ 0x8
   609                           
   610                           
   611                           	psect	cstackBANK0
   612  0020                     __pcstackBANK0:	
   613                           ; 1 bytes @ 0x8
   614                           
   615  0020                     ?___fleq:
   616  0020                     ??___xxtofl:	
   617                           ; 1 bit 
   618                           
   619  0020                     ?_controle_aquecedor:	
   620                           ; 1 bytes @ 0x0
   621                           
   622  0020                     LCD_Cmd@Command:	
   623                           ; 2 bytes @ 0x0
   624                           
   625  0020                     LCD_Print@i:	
   626                           ; 1 bytes @ 0x0
   627                           
   628  0020                     ___lwdiv@counter:	
   629                           ; 1 bytes @ 0x0
   630                           
   631  0020                     controle_aquecedor@temp:	
   632                           ; 1 bytes @ 0x0
   633                           
   634  0020                     ___wmul@product:	
   635                           ; 2 bytes @ 0x0
   636                           
   637  0020                     ___fleq@ff1:	
   638                           ; 2 bytes @ 0x0
   639                           
   640                           
   641                           ; 4 bytes @ 0x0
   642  0020                     	ds	1
   643  0021                     ?_LCD_Goto:
   644  0021                     ??_LCD_Begin:	
   645                           ; 1 bytes @ 0x1
   646                           
   647  0021                     LCD_Goto@row:	
   648                           ; 1 bytes @ 0x1
   649                           
   650  0021                     LCD_Print@LCD_Str:	
   651                           ; 1 bytes @ 0x1
   652                           
   653  0021                     ___lwdiv@quotient:	
   654                           ; 1 bytes @ 0x1
   655                           
   656                           
   657                           ; 2 bytes @ 0x1
   658  0021                     	ds	1
   659  0022                     ??_LCD_Goto:
   660  0022                     controle_aquecedor@hora_min:	
   661                           ; 1 bytes @ 0x2
   662                           
   663                           
   664                           ; 2 bytes @ 0x2
   665  0022                     	ds	1
   666  0023                     ?___lwmod:
   667  0023                     ___lwmod@divisor:	
   668                           ; 2 bytes @ 0x3
   669                           
   670                           
   671                           ; 2 bytes @ 0x3
   672  0023                     	ds	1
   673  0024                     LCD_Goto@col:
   674  0024                     ___xxtofl@sign:	
   675                           ; 1 bytes @ 0x4
   676                           
   677  0024                     controle_aquecedor@min_min:	
   678                           ; 1 bytes @ 0x4
   679                           
   680  0024                     ___fleq@ff2:	
   681                           ; 2 bytes @ 0x4
   682                           
   683                           
   684                           ; 4 bytes @ 0x4
   685  0024                     	ds	1
   686  0025                     ___xxtofl@exp:
   687  0025                     ___lwmod@dividend:	
   688                           ; 1 bytes @ 0x5
   689                           
   690                           
   691                           ; 2 bytes @ 0x5
   692  0025                     	ds	1
   693  0026                     controle_aquecedor@hora_max:
   694  0026                     ___xxtofl@arg:	
   695                           ; 2 bytes @ 0x6
   696                           
   697                           
   698                           ; 4 bytes @ 0x6
   699  0026                     	ds	1
   700  0027                     ??___lwmod:
   701                           
   702                           ; 1 bytes @ 0x7
   703  0027                     	ds	1
   704  0028                     ?_frexp:
   705  0028                     ___lwmod@counter:	
   706                           ; 4 bytes @ 0x8
   707                           
   708  0028                     controle_aquecedor@min_max:	
   709                           ; 1 bytes @ 0x8
   710                           
   711  0028                     frexp@value:	
   712                           ; 2 bytes @ 0x8
   713                           
   714                           
   715                           ; 4 bytes @ 0x8
   716  0028                     	ds	1
   717  0029                     ?_sprintf:
   718  0029                     sprintf@f:	
   719                           ; 2 bytes @ 0x9
   720                           
   721                           
   722                           ; 1 bytes @ 0x9
   723  0029                     	ds	1
   724  002A                     ?___fldiv:
   725  002A                     ___fldiv@a:	
   726                           ; 4 bytes @ 0xA
   727                           
   728                           
   729                           ; 4 bytes @ 0xA
   730  002A                     	ds	2
   731  002C                     frexp@eptr:
   732                           
   733                           ; 1 bytes @ 0xC
   734  002C                     	ds	1
   735  002D                     ??_frexp:
   736                           
   737                           ; 1 bytes @ 0xD
   738  002D                     	ds	1
   739  002E                     ___fldiv@b:
   740                           
   741                           ; 4 bytes @ 0xE
   742  002E                     	ds	2
   743  0030                     ??_sprintf:
   744                           
   745                           ; 1 bytes @ 0x10
   746  0030                     	ds	2
   747  0032                     ??___fldiv:
   748                           
   749                           ; 1 bytes @ 0x12
   750  0032                     	ds	1
   751  0033                     sprintf@ap:
   752                           
   753                           ; 1 bytes @ 0x13
   754  0033                     	ds	1
   755  0034                     sprintf@prec:
   756                           
   757                           ; 1 bytes @ 0x14
   758  0034                     	ds	1
   759  0035                     sprintf@val:
   760                           
   761                           ; 2 bytes @ 0x15
   762  0035                     	ds	2
   763  0037                     sprintf@flag:
   764  0037                     ___fldiv@rem:	
   765                           ; 1 bytes @ 0x17
   766                           
   767                           
   768                           ; 4 bytes @ 0x17
   769  0037                     	ds	1
   770  0038                     sprintf@width:
   771                           
   772                           ; 2 bytes @ 0x18
   773  0038                     	ds	2
   774  003A                     sprintf@c:
   775                           
   776                           ; 1 bytes @ 0x1A
   777  003A                     	ds	1
   778  003B                     sprintf@sp:
   779  003B                     ___fldiv@sign:	
   780                           ; 1 bytes @ 0x1B
   781                           
   782                           
   783                           ; 1 bytes @ 0x1B
   784  003B                     	ds	1
   785  003C                     ??_imprime_tela_main:
   786  003C                     ?_imprime_tela_ajuste1:	
   787                           ; 1 bytes @ 0x1C
   788                           
   789  003C                     ??_imprime_tela_ajuste2:	
   790                           ; 1 bytes @ 0x1C
   791                           
   792  003C                     ?_imprime_tela_ajuste3:	
   793                           ; 1 bytes @ 0x1C
   794                           
   795  003C                     ?_imprime_tela_ajuste4:	
   796                           ; 1 bytes @ 0x1C
   797                           
   798  003C                     imprime_tela_ajuste1@temp:	
   799                           ; 1 bytes @ 0x1C
   800                           
   801  003C                     imprime_tela_ajuste3@horas_min:	
   802                           ; 2 bytes @ 0x1C
   803                           
   804  003C                     imprime_tela_ajuste4@horas_max:	
   805                           ; 2 bytes @ 0x1C
   806                           
   807  003C                     ___fldiv@new_exp:	
   808                           ; 2 bytes @ 0x1C
   809                           
   810                           
   811                           ; 2 bytes @ 0x1C
   812  003C                     	ds	2
   813  003E                     ??_imprime_tela_ajuste1:
   814  003E                     imprime_tela_ajuste3@minutos_min:	
   815                           ; 1 bytes @ 0x1E
   816                           
   817  003E                     imprime_tela_ajuste4@minutos_max:	
   818                           ; 2 bytes @ 0x1E
   819                           
   820  003E                     ___fldiv@grs:	
   821                           ; 2 bytes @ 0x1E
   822                           
   823                           
   824                           ; 4 bytes @ 0x1E
   825  003E                     	ds	2
   826  0040                     ??_imprime_tela_ajuste3:
   827  0040                     ??_imprime_tela_ajuste4:	
   828                           ; 1 bytes @ 0x20
   829                           
   830                           
   831                           ; 1 bytes @ 0x20
   832  0040                     	ds	1
   833  0041                     ?_ajustes:
   834  0041                     ajustes@hora_min:	
   835                           ; 1 bytes @ 0x21
   836                           
   837                           
   838                           ; 1 bytes @ 0x21
   839  0041                     	ds	1
   840  0042                     ajustes@min_min:
   841  0042                     ___fldiv@bexp:	
   842                           ; 1 bytes @ 0x22
   843                           
   844                           
   845                           ; 1 bytes @ 0x22
   846  0042                     	ds	1
   847  0043                     ajustes@hora_max:
   848  0043                     ___fldiv@aexp:	
   849                           ; 1 bytes @ 0x23
   850                           
   851                           
   852                           ; 1 bytes @ 0x23
   853  0043                     	ds	1
   854  0044                     ?___fladd:
   855  0044                     ajustes@min_max:	
   856                           ; 4 bytes @ 0x24
   857                           
   858  0044                     ___fladd@b:	
   859                           ; 1 bytes @ 0x24
   860                           
   861                           
   862                           ; 4 bytes @ 0x24
   863  0044                     	ds	1
   864  0045                     ??_ajustes:
   865                           
   866                           ; 1 bytes @ 0x25
   867  0045                     	ds	3
   868  0048                     ___fladd@a:
   869                           
   870                           ; 4 bytes @ 0x28
   871  0048                     	ds	1
   872  0049                     ajustes@temp:
   873                           
   874                           ; 1 bytes @ 0x29
   875  0049                     	ds	3
   876  004C                     ??___fladd:
   877                           
   878                           ; 1 bytes @ 0x2C
   879  004C                     	ds	8
   880  0054                     ___fladd@signs:
   881                           
   882                           ; 1 bytes @ 0x34
   883  0054                     	ds	1
   884  0055                     ___fladd@aexp:
   885                           
   886                           ; 1 bytes @ 0x35
   887  0055                     	ds	1
   888  0056                     ___fladd@bexp:
   889                           
   890                           ; 1 bytes @ 0x36
   891  0056                     	ds	1
   892  0057                     ___fladd@grs:
   893                           
   894                           ; 1 bytes @ 0x37
   895  0057                     	ds	1
   896  0058                     ?___fltol:
   897  0058                     ___fltol@f1:	
   898                           ; 4 bytes @ 0x38
   899                           
   900                           
   901                           ; 4 bytes @ 0x38
   902  0058                     	ds	4
   903  005C                     ??___fltol:
   904                           
   905                           ; 1 bytes @ 0x3C
   906  005C                     	ds	5
   907  0061                     ___fltol@sign1:
   908                           
   909                           ; 1 bytes @ 0x41
   910  0061                     	ds	1
   911  0062                     ___fltol@exp1:
   912                           
   913                           ; 1 bytes @ 0x42
   914  0062                     	ds	1
   915  0063                     ?_trunc:
   916  0063                     trunc@x:	
   917                           ; 4 bytes @ 0x43
   918                           
   919                           
   920                           ; 4 bytes @ 0x43
   921  0063                     	ds	4
   922  0067                     trunc@i:
   923                           
   924                           ; 4 bytes @ 0x47
   925  0067                     	ds	4
   926  006B                     trunc@expon:
   927                           
   928                           ; 2 bytes @ 0x4B
   929  006B                     	ds	2
   930                           
   931                           	psect	maintext
   932  0CA5                     __pmaintext:	
   933 ;;
   934 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   935 ;;
   936 ;; *************** function _main *****************
   937 ;; Defined at:
   938 ;;		line 394 in file "main.c"
   939 ;; Parameters:    Size  Location     Type
   940 ;;		None
   941 ;; Auto vars:     Size  Location     Type
   942 ;;  temp            2   36[BANK1 ] int 
   943 ;;  min_max         2   34[BANK1 ] int 
   944 ;;  hora_max        2   32[BANK1 ] int 
   945 ;;  min_min         2   30[BANK1 ] int 
   946 ;;  hora_min        2   28[BANK1 ] int 
   947 ;; Return value:  Size  Location     Type
   948 ;;                  1    wreg      void 
   949 ;; Registers used:
   950 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   951 ;; Tracked objects:
   952 ;;		On entry : B00/0
   953 ;;		On exit  : 0/0
   954 ;;		Unchanged: 0/0
   955 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   956 ;;      Params:         0       0       0       0       0
   957 ;;      Locals:         0       0      18       0       0
   958 ;;      Temps:          0       0       4       0       0
   959 ;;      Totals:         0       0      22       0       0
   960 ;;Total ram usage:       22 bytes
   961 ;; Hardware stack levels required when called: 6
   962 ;; This function calls:
   963 ;;		_LCD_Begin
   964 ;;		___fladd
   965 ;;		___fldiv
   966 ;;		___fltol
   967 ;;		___xxtofl
   968 ;;		_ajustes
   969 ;;		_atualiza_ADC
   970 ;;		_controle_aquecedor
   971 ;;		_imprime_tela_main
   972 ;;		_round
   973 ;; This function is called by:
   974 ;;		Startup code after reset
   975 ;; This function uses a non-reentrant model
   976 ;;
   977                           
   978                           
   979                           ;psect for function _main
   980  0CA5                     _main:
   981  0CA5                     l3804:	
   982                           ;incstack = 0
   983                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   984                           
   985                           
   986                           ;main.c: 396:     OPTION_REG =0b01010101;
   987  0CA5  3055               	movlw	85
   988  0CA6  1683               	bsf	3,5	;RP0=1, select bank1
   989  0CA7  1303               	bcf	3,6	;RP1=0, select bank1
   990  0CA8  0081               	movwf	1	;volatile
   991                           
   992                           ;main.c: 397:     INTCON =0b10100000;
   993  0CA9  30A0               	movlw	160
   994  0CAA  008B               	movwf	11	;volatile
   995                           
   996                           ;main.c: 398:     TRISA =0b00000001;
   997  0CAB  3001               	movlw	1
   998  0CAC  0085               	movwf	5	;volatile
   999                           
  1000                           ;main.c: 399:     TRISB =0b00110011;
  1001  0CAD  3033               	movlw	51
  1002  0CAE  0086               	movwf	6	;volatile
  1003  0CAF                     l3806:
  1004                           
  1005                           ;main.c: 400:     TRISC =0b00000000;
  1006  0CAF  0187               	clrf	7	;volatile
  1007  0CB0                     l3808:
  1008                           
  1009                           ;main.c: 401:     TRISD =0b00000000;
  1010  0CB0  0188               	clrf	8	;volatile
  1011  0CB1                     l3810:
  1012                           
  1013                           ;main.c: 402:     TRISE =0b00000000;
  1014  0CB1  0189               	clrf	9	;volatile
  1015  0CB2                     l3812:
  1016                           
  1017                           ;main.c: 403:     ADCON0 =0b00000001;
  1018  0CB2  3001               	movlw	1
  1019  0CB3  1283               	bcf	3,5	;RP0=0, select bank0
  1020  0CB4  1303               	bcf	3,6	;RP1=0, select bank0
  1021  0CB5  009F               	movwf	31	;volatile
  1022  0CB6                     l3814:
  1023                           
  1024                           ;main.c: 404:     ADCON1 =0b10001110;
  1025  0CB6  308E               	movlw	142
  1026  0CB7  1683               	bsf	3,5	;RP0=1, select bank1
  1027  0CB8  1303               	bcf	3,6	;RP1=0, select bank1
  1028  0CB9  009F               	movwf	31	;volatile
  1029  0CBA                     l3816:
  1030                           
  1031                           ;main.c: 406:     LCD_Begin();
  1032  0CBA  120A  158A  2186  120A  158A  	fcall	_LCD_Begin
  1033  0CBF                     l3818:
  1034                           
  1035                           ;main.c: 408:     int temp =0;
  1036  0CBF  1683               	bsf	3,5	;RP0=1, select bank1
  1037  0CC0  1303               	bcf	3,6	;RP1=0, select bank1
  1038  0CC1  01C4               	clrf	main@temp^(0+128)
  1039  0CC2  01C5               	clrf	(main@temp+1)^(0+128)
  1040  0CC3                     l3820:
  1041                           
  1042                           ;main.c: 409:     int hora_min =0;
  1043  0CC3  01BC               	clrf	main@hora_min^(0+128)
  1044  0CC4  01BD               	clrf	(main@hora_min+1)^(0+128)
  1045  0CC5                     l3822:
  1046                           
  1047                           ;main.c: 410:     int min_min =0;
  1048  0CC5  01BE               	clrf	main@min_min^(0+128)
  1049  0CC6  01BF               	clrf	(main@min_min+1)^(0+128)
  1050  0CC7                     l3824:
  1051                           
  1052                           ;main.c: 411:     int hora_max =0;
  1053  0CC7  01C0               	clrf	main@hora_max^(0+128)
  1054  0CC8  01C1               	clrf	(main@hora_max+1)^(0+128)
  1055  0CC9                     l3826:
  1056                           
  1057                           ;main.c: 412:     int min_max =0;
  1058  0CC9  01C2               	clrf	main@min_max^(0+128)
  1059  0CCA  01C3               	clrf	(main@min_max+1)^(0+128)
  1060  0CCB                     l3828:
  1061                           
  1062                           ;main.c: 414:     {;main.c: 415:         atualiza_ADC();
  1063  0CCB  160A  118A  23EA  120A  158A  	fcall	_atualiza_ADC
  1064  0CD0                     l3830:
  1065                           
  1066                           ;main.c: 418:         Temperatura=round(((ADRESL + (ADRESH *256))/2.046)-50);
  1067  0CD0  1283               	bcf	3,5	;RP0=0, select bank0
  1068  0CD1  1303               	bcf	3,6	;RP1=0, select bank0
  1069  0CD2  081E               	movf	30,w	;volatile
  1070  0CD3  1683               	bsf	3,5	;RP0=1, select bank1
  1071  0CD4  1303               	bcf	3,6	;RP1=0, select bank1
  1072  0CD5  00B0               	movwf	??_main^(0+128)
  1073  0CD6  01B1               	clrf	(??_main^(0+128)+1)
  1074  0CD7  0830               	movf	??_main^(0+128),w
  1075  0CD8  00B1               	movwf	(??_main^(0+128)+1)
  1076  0CD9  01B0               	clrf	??_main^(0+128)
  1077  0CDA  081E               	movf	30,w	;volatile
  1078  0CDB  0730               	addwf	??_main^(0+128),w
  1079  0CDC  00F3               	movwf	___xxtofl@val
  1080  0CDD  0831               	movf	(??_main+1)^(0+128),w
  1081  0CDE  1803               	skipnc
  1082  0CDF  0A31               	incf	(??_main+1)^(0+128),w
  1083  0CE0  00F4               	movwf	___xxtofl@val+1
  1084  0CE1  01F5               	clrf	___xxtofl@val+2
  1085  0CE2  1BF4               	btfsc	___xxtofl@val+1,7
  1086  0CE3  03F5               	decf	___xxtofl@val+2,f
  1087  0CE4  0875               	movf	___xxtofl@val+2,w
  1088  0CE5  00F6               	movwf	___xxtofl@val+3
  1089  0CE6  3001               	movlw	1
  1090  0CE7  120A  158A  222A  120A  158A  	fcall	___xxtofl
  1091  0CEC  0876               	movf	?___xxtofl+3,w
  1092  0CED  1283               	bcf	3,5	;RP0=0, select bank0
  1093  0CEE  1303               	bcf	3,6	;RP1=0, select bank0
  1094  0CEF  00B1               	movwf	___fldiv@b+3
  1095  0CF0  0875               	movf	?___xxtofl+2,w
  1096  0CF1  00B0               	movwf	___fldiv@b+2
  1097  0CF2  0874               	movf	?___xxtofl+1,w
  1098  0CF3  00AF               	movwf	___fldiv@b+1
  1099  0CF4  0873               	movf	?___xxtofl,w
  1100  0CF5  00AE               	movwf	___fldiv@b
  1101  0CF6  3040               	movlw	64
  1102  0CF7  00AD               	movwf	___fldiv@a+3
  1103  0CF8  3002               	movlw	2
  1104  0CF9  00AC               	movwf	___fldiv@a+2
  1105  0CFA  30F1               	movlw	241
  1106  0CFB  00AB               	movwf	___fldiv@a+1
  1107  0CFC  30AA               	movlw	170
  1108  0CFD  00AA               	movwf	___fldiv@a
  1109  0CFE  120A  118A  25F2  120A  158A  	fcall	___fldiv
  1110  0D03  1283               	bcf	3,5	;RP0=0, select bank0
  1111  0D04  1303               	bcf	3,6	;RP1=0, select bank0
  1112  0D05  082D               	movf	?___fldiv+3,w
  1113  0D06  00CB               	movwf	___fladd@a+3
  1114  0D07  082C               	movf	?___fldiv+2,w
  1115  0D08  00CA               	movwf	___fladd@a+2
  1116  0D09  082B               	movf	?___fldiv+1,w
  1117  0D0A  00C9               	movwf	___fladd@a+1
  1118  0D0B  082A               	movf	?___fldiv,w
  1119  0D0C  00C8               	movwf	___fladd@a
  1120  0D0D  30C2               	movlw	194
  1121  0D0E  00C7               	movwf	___fladd@b+3
  1122  0D0F  3048               	movlw	72
  1123  0D10  00C6               	movwf	___fladd@b+2
  1124  0D11  3000               	movlw	0
  1125  0D12  00C5               	movwf	___fladd@b+1
  1126  0D13  3000               	movlw	0
  1127  0D14  00C4               	movwf	___fladd@b
  1128  0D15  120A  118A  236A  120A  158A  	fcall	___fladd
  1129  0D1A  1283               	bcf	3,5	;RP0=0, select bank0
  1130  0D1B  1303               	bcf	3,6	;RP1=0, select bank0
  1131  0D1C  0847               	movf	?___fladd+3,w
  1132  0D1D  1683               	bsf	3,5	;RP0=1, select bank1
  1133  0D1E  1303               	bcf	3,6	;RP1=0, select bank1
  1134  0D1F  00B7               	movwf	(_main$1008+3)^(0+128)
  1135  0D20  1283               	bcf	3,5	;RP0=0, select bank0
  1136  0D21  1303               	bcf	3,6	;RP1=0, select bank0
  1137  0D22  0846               	movf	?___fladd+2,w
  1138  0D23  1683               	bsf	3,5	;RP0=1, select bank1
  1139  0D24  1303               	bcf	3,6	;RP1=0, select bank1
  1140  0D25  00B6               	movwf	(_main$1008+2)^(0+128)
  1141  0D26  1283               	bcf	3,5	;RP0=0, select bank0
  1142  0D27  1303               	bcf	3,6	;RP1=0, select bank0
  1143  0D28  0845               	movf	?___fladd+1,w
  1144  0D29  1683               	bsf	3,5	;RP0=1, select bank1
  1145  0D2A  1303               	bcf	3,6	;RP1=0, select bank1
  1146  0D2B  00B5               	movwf	(_main$1008+1)^(0+128)
  1147  0D2C  1283               	bcf	3,5	;RP0=0, select bank0
  1148  0D2D  1303               	bcf	3,6	;RP1=0, select bank0
  1149  0D2E  0844               	movf	?___fladd,w
  1150  0D2F  1683               	bsf	3,5	;RP0=1, select bank1
  1151  0D30  1303               	bcf	3,6	;RP1=0, select bank1
  1152  0D31  00B4               	movwf	_main$1008^(0+128)
  1153  0D32                     l3832:
  1154                           
  1155                           ;main.c: 418:         Temperatura=round(((ADRESL + (ADRESH *256))/2.046)-50);
  1156  0D32  0837               	movf	(_main$1008+3)^(0+128),w
  1157  0D33  00AB               	movwf	(round@x+3)^(0+128)
  1158  0D34  0836               	movf	(_main$1008+2)^(0+128),w
  1159  0D35  00AA               	movwf	(round@x+2)^(0+128)
  1160  0D36  0835               	movf	(_main$1008+1)^(0+128),w
  1161  0D37  00A9               	movwf	(round@x+1)^(0+128)
  1162  0D38  0834               	movf	_main$1008^(0+128),w
  1163  0D39  00A8               	movwf	round@x^(0+128)
  1164  0D3A  120A  158A  22E6  120A  158A  	fcall	_round
  1165  0D3F  1683               	bsf	3,5	;RP0=1, select bank1
  1166  0D40  1303               	bcf	3,6	;RP1=0, select bank1
  1167  0D41  082B               	movf	(?_round+3)^(0+128),w
  1168  0D42  00BB               	movwf	(_main$1009+3)^(0+128)
  1169  0D43  082A               	movf	(?_round+2)^(0+128),w
  1170  0D44  00BA               	movwf	(_main$1009+2)^(0+128)
  1171  0D45  0829               	movf	(?_round+1)^(0+128),w
  1172  0D46  00B9               	movwf	(_main$1009+1)^(0+128)
  1173  0D47  0828               	movf	?_round^(0+128),w
  1174  0D48  00B8               	movwf	_main$1009^(0+128)
  1175  0D49                     l3834:
  1176                           
  1177                           ;main.c: 418:         Temperatura=round(((ADRESL + (ADRESH *256))/2.046)-50);
  1178  0D49  083B               	movf	(_main$1009+3)^(0+128),w
  1179  0D4A  1283               	bcf	3,5	;RP0=0, select bank0
  1180  0D4B  1303               	bcf	3,6	;RP1=0, select bank0
  1181  0D4C  00DB               	movwf	___fltol@f1+3
  1182  0D4D  1683               	bsf	3,5	;RP0=1, select bank1
  1183  0D4E  1303               	bcf	3,6	;RP1=0, select bank1
  1184  0D4F  083A               	movf	(_main$1009+2)^(0+128),w
  1185  0D50  1283               	bcf	3,5	;RP0=0, select bank0
  1186  0D51  1303               	bcf	3,6	;RP1=0, select bank0
  1187  0D52  00DA               	movwf	___fltol@f1+2
  1188  0D53  1683               	bsf	3,5	;RP0=1, select bank1
  1189  0D54  1303               	bcf	3,6	;RP1=0, select bank1
  1190  0D55  0839               	movf	(_main$1009+1)^(0+128),w
  1191  0D56  1283               	bcf	3,5	;RP0=0, select bank0
  1192  0D57  1303               	bcf	3,6	;RP1=0, select bank0
  1193  0D58  00D9               	movwf	___fltol@f1+1
  1194  0D59  1683               	bsf	3,5	;RP0=1, select bank1
  1195  0D5A  1303               	bcf	3,6	;RP1=0, select bank1
  1196  0D5B  0838               	movf	_main$1009^(0+128),w
  1197  0D5C  1283               	bcf	3,5	;RP0=0, select bank0
  1198  0D5D  1303               	bcf	3,6	;RP1=0, select bank0
  1199  0D5E  00D8               	movwf	___fltol@f1
  1200  0D5F  120A  158A  210A  120A  158A  	fcall	___fltol
  1201  0D64  1283               	bcf	3,5	;RP0=0, select bank0
  1202  0D65  1303               	bcf	3,6	;RP1=0, select bank0
  1203  0D66  0859               	movf	?___fltol+1,w
  1204  0D67  1683               	bsf	3,5	;RP0=1, select bank1
  1205  0D68  1303               	bcf	3,6	;RP1=0, select bank1
  1206  0D69  00C9               	movwf	(_Temperatura+1)^(0+128)
  1207  0D6A  1283               	bcf	3,5	;RP0=0, select bank0
  1208  0D6B  1303               	bcf	3,6	;RP1=0, select bank0
  1209  0D6C  0858               	movf	?___fltol,w
  1210  0D6D  1683               	bsf	3,5	;RP0=1, select bank1
  1211  0D6E  1303               	bcf	3,6	;RP1=0, select bank1
  1212  0D6F  00C8               	movwf	_Temperatura^(0+128)
  1213  0D70                     l3836:
  1214                           
  1215                           ;main.c: 421:         imprime_tela_main();
  1216  0D70  160A  118A  2749  120A  158A  	fcall	_imprime_tela_main
  1217  0D75                     l3838:
  1218                           
  1219                           ;main.c: 422:         if(PORTBbits.RB0==0)
  1220  0D75  1283               	bcf	3,5	;RP0=0, select bank0
  1221  0D76  1303               	bcf	3,6	;RP1=0, select bank0
  1222  0D77  1806               	btfsc	6,0	;volatile
  1223  0D78  2D7A               	goto	u4811
  1224  0D79  2D7B               	goto	u4810
  1225  0D7A                     u4811:
  1226  0D7A  2DA1               	goto	l3842
  1227  0D7B                     u4810:
  1228  0D7B                     l3840:
  1229                           
  1230                           ;main.c: 423:             ajustes(&temp,&hora_min,&min_min,&hora_max,&min_max);
  1231  0D7B  30BC               	movlw	(low (main@hora_min| 0))& (0+255)
  1232  0D7C  1683               	bsf	3,5	;RP0=1, select bank1
  1233  0D7D  1303               	bcf	3,6	;RP1=0, select bank1
  1234  0D7E  00B0               	movwf	??_main^(0+128)
  1235  0D7F  0830               	movf	??_main^(0+128),w
  1236  0D80  1283               	bcf	3,5	;RP0=0, select bank0
  1237  0D81  1303               	bcf	3,6	;RP1=0, select bank0
  1238  0D82  00C1               	movwf	ajustes@hora_min
  1239  0D83  30BE               	movlw	(low (main@min_min| 0))& (0+255)
  1240  0D84  1683               	bsf	3,5	;RP0=1, select bank1
  1241  0D85  1303               	bcf	3,6	;RP1=0, select bank1
  1242  0D86  00B1               	movwf	(??_main+1)^(0+128)
  1243  0D87  0831               	movf	(??_main+1)^(0+128),w
  1244  0D88  1283               	bcf	3,5	;RP0=0, select bank0
  1245  0D89  1303               	bcf	3,6	;RP1=0, select bank0
  1246  0D8A  00C2               	movwf	ajustes@min_min
  1247  0D8B  30C0               	movlw	(low (main@hora_max| 0))& (0+255)
  1248  0D8C  1683               	bsf	3,5	;RP0=1, select bank1
  1249  0D8D  1303               	bcf	3,6	;RP1=0, select bank1
  1250  0D8E  00B2               	movwf	(??_main+2)^(0+128)
  1251  0D8F  0832               	movf	(??_main+2)^(0+128),w
  1252  0D90  1283               	bcf	3,5	;RP0=0, select bank0
  1253  0D91  1303               	bcf	3,6	;RP1=0, select bank0
  1254  0D92  00C3               	movwf	ajustes@hora_max
  1255  0D93  30C2               	movlw	(low (main@min_max| 0))& (0+255)
  1256  0D94  1683               	bsf	3,5	;RP0=1, select bank1
  1257  0D95  1303               	bcf	3,6	;RP1=0, select bank1
  1258  0D96  00B3               	movwf	(??_main+3)^(0+128)
  1259  0D97  0833               	movf	(??_main+3)^(0+128),w
  1260  0D98  1283               	bcf	3,5	;RP0=0, select bank0
  1261  0D99  1303               	bcf	3,6	;RP1=0, select bank0
  1262  0D9A  00C4               	movwf	ajustes@min_max
  1263  0D9B  30C4               	movlw	(low (main@temp| 0))& (0+255)
  1264  0D9C  120A  118A  2027  120A  158A  	fcall	_ajustes
  1265  0DA1                     l3842:
  1266                           
  1267                           ;main.c: 425:         if(PORTBbits.RB4==0&&PORTBbits.RB5==0)
  1268  0DA1  1283               	bcf	3,5	;RP0=0, select bank0
  1269  0DA2  1303               	bcf	3,6	;RP1=0, select bank0
  1270  0DA3  1A06               	btfsc	6,4	;volatile
  1271  0DA4  2DA6               	goto	u4821
  1272  0DA5  2DA7               	goto	u4820
  1273  0DA6                     u4821:
  1274  0DA6  2E27               	goto	l204
  1275  0DA7                     u4820:
  1276  0DA7                     l3844:
  1277  0DA7  1A86               	btfsc	6,5	;volatile
  1278  0DA8  2DAA               	goto	u4831
  1279  0DA9  2DAB               	goto	u4830
  1280  0DAA                     u4831:
  1281  0DAA  2E27               	goto	l204
  1282  0DAB                     u4830:
  1283  0DAB                     l3846:
  1284                           
  1285                           ;main.c: 426:         {;main.c: 427:             if (Temperatura<(temp-5))
  1286  0DAB  1683               	bsf	3,5	;RP0=1, select bank1
  1287  0DAC  1303               	bcf	3,6	;RP1=0, select bank1
  1288  0DAD  0844               	movf	main@temp^(0+128),w
  1289  0DAE  3EFB               	addlw	251
  1290  0DAF  00B0               	movwf	??_main^(0+128)
  1291  0DB0  0845               	movf	(main@temp+1)^(0+128),w
  1292  0DB1  1803               	skipnc
  1293  0DB2  3E01               	addlw	1
  1294  0DB3  3EFF               	addlw	255
  1295  0DB4  00B1               	movwf	(??_main+1)^(0+128)
  1296  0DB5  0849               	movf	(_Temperatura+1)^(0+128),w
  1297  0DB6  3A80               	xorlw	128
  1298  0DB7  00B2               	movwf	(??_main+2)^(0+128)
  1299  0DB8  0831               	movf	(??_main+1)^(0+128),w
  1300  0DB9  3A80               	xorlw	128
  1301  0DBA  0232               	subwf	(??_main+2)^(0+128),w
  1302  0DBB  1D03               	skipz
  1303  0DBC  2DBF               	goto	u4845
  1304  0DBD  0830               	movf	??_main^(0+128),w
  1305  0DBE  0248               	subwf	_Temperatura^(0+128),w
  1306  0DBF                     u4845:
  1307  0DBF  1803               	skipnc
  1308  0DC0  2DC2               	goto	u4841
  1309  0DC1  2DC3               	goto	u4840
  1310  0DC2                     u4841:
  1311  0DC2  2E0B               	goto	l3850
  1312  0DC3                     u4840:
  1313  0DC3                     l3848:
  1314                           
  1315                           ;main.c: 428:                 PORTCbits.RC0 = controle_aquecedor(temp,hora_min,min_min,h
      +                          ora_max,min_max);
  1316  0DC3  1683               	bsf	3,5	;RP0=1, select bank1
  1317  0DC4  1303               	bcf	3,6	;RP1=0, select bank1
  1318  0DC5  0845               	movf	(main@temp+1)^(0+128),w
  1319  0DC6  1283               	bcf	3,5	;RP0=0, select bank0
  1320  0DC7  1303               	bcf	3,6	;RP1=0, select bank0
  1321  0DC8  00A1               	movwf	controle_aquecedor@temp+1
  1322  0DC9  1683               	bsf	3,5	;RP0=1, select bank1
  1323  0DCA  1303               	bcf	3,6	;RP1=0, select bank1
  1324  0DCB  0844               	movf	main@temp^(0+128),w
  1325  0DCC  1283               	bcf	3,5	;RP0=0, select bank0
  1326  0DCD  1303               	bcf	3,6	;RP1=0, select bank0
  1327  0DCE  00A0               	movwf	controle_aquecedor@temp
  1328  0DCF  1683               	bsf	3,5	;RP0=1, select bank1
  1329  0DD0  1303               	bcf	3,6	;RP1=0, select bank1
  1330  0DD1  083D               	movf	(main@hora_min+1)^(0+128),w
  1331  0DD2  1283               	bcf	3,5	;RP0=0, select bank0
  1332  0DD3  1303               	bcf	3,6	;RP1=0, select bank0
  1333  0DD4  00A3               	movwf	controle_aquecedor@hora_min+1
  1334  0DD5  1683               	bsf	3,5	;RP0=1, select bank1
  1335  0DD6  1303               	bcf	3,6	;RP1=0, select bank1
  1336  0DD7  083C               	movf	main@hora_min^(0+128),w
  1337  0DD8  1283               	bcf	3,5	;RP0=0, select bank0
  1338  0DD9  1303               	bcf	3,6	;RP1=0, select bank0
  1339  0DDA  00A2               	movwf	controle_aquecedor@hora_min
  1340  0DDB  1683               	bsf	3,5	;RP0=1, select bank1
  1341  0DDC  1303               	bcf	3,6	;RP1=0, select bank1
  1342  0DDD  083F               	movf	(main@min_min+1)^(0+128),w
  1343  0DDE  1283               	bcf	3,5	;RP0=0, select bank0
  1344  0DDF  1303               	bcf	3,6	;RP1=0, select bank0
  1345  0DE0  00A5               	movwf	controle_aquecedor@min_min+1
  1346  0DE1  1683               	bsf	3,5	;RP0=1, select bank1
  1347  0DE2  1303               	bcf	3,6	;RP1=0, select bank1
  1348  0DE3  083E               	movf	main@min_min^(0+128),w
  1349  0DE4  1283               	bcf	3,5	;RP0=0, select bank0
  1350  0DE5  1303               	bcf	3,6	;RP1=0, select bank0
  1351  0DE6  00A4               	movwf	controle_aquecedor@min_min
  1352  0DE7  1683               	bsf	3,5	;RP0=1, select bank1
  1353  0DE8  1303               	bcf	3,6	;RP1=0, select bank1
  1354  0DE9  0841               	movf	(main@hora_max+1)^(0+128),w
  1355  0DEA  1283               	bcf	3,5	;RP0=0, select bank0
  1356  0DEB  1303               	bcf	3,6	;RP1=0, select bank0
  1357  0DEC  00A7               	movwf	controle_aquecedor@hora_max+1
  1358  0DED  1683               	bsf	3,5	;RP0=1, select bank1
  1359  0DEE  1303               	bcf	3,6	;RP1=0, select bank1
  1360  0DEF  0840               	movf	main@hora_max^(0+128),w
  1361  0DF0  1283               	bcf	3,5	;RP0=0, select bank0
  1362  0DF1  1303               	bcf	3,6	;RP1=0, select bank0
  1363  0DF2  00A6               	movwf	controle_aquecedor@hora_max
  1364  0DF3  1683               	bsf	3,5	;RP0=1, select bank1
  1365  0DF4  1303               	bcf	3,6	;RP1=0, select bank1
  1366  0DF5  0843               	movf	(main@min_max+1)^(0+128),w
  1367  0DF6  1283               	bcf	3,5	;RP0=0, select bank0
  1368  0DF7  1303               	bcf	3,6	;RP1=0, select bank0
  1369  0DF8  00A9               	movwf	controle_aquecedor@min_max+1
  1370  0DF9  1683               	bsf	3,5	;RP0=1, select bank1
  1371  0DFA  1303               	bcf	3,6	;RP1=0, select bank1
  1372  0DFB  0842               	movf	main@min_max^(0+128),w
  1373  0DFC  1283               	bcf	3,5	;RP0=0, select bank0
  1374  0DFD  1303               	bcf	3,6	;RP1=0, select bank0
  1375  0DFE  00A8               	movwf	controle_aquecedor@min_max
  1376  0DFF  120A  158A  23B1  120A  158A  	fcall	_controle_aquecedor
  1377  0E04  1283               	bcf	3,5	;RP0=0, select bank0
  1378  0E05  1303               	bcf	3,6	;RP1=0, select bank0
  1379  0E06  0807               	movf	7,w	;volatile
  1380  0E07  0620               	xorwf	?_controle_aquecedor,w
  1381  0E08  39FE               	andlw	-2
  1382  0E09  0620               	xorwf	?_controle_aquecedor,w
  1383  0E0A  0087               	movwf	7	;volatile
  1384  0E0B                     l3850:
  1385                           
  1386                           ;main.c: 429:             if (Temperatura>(temp+5))
  1387  0E0B  1683               	bsf	3,5	;RP0=1, select bank1
  1388  0E0C  1303               	bcf	3,6	;RP1=0, select bank1
  1389  0E0D  0844               	movf	main@temp^(0+128),w
  1390  0E0E  3E05               	addlw	5
  1391  0E0F  00B0               	movwf	??_main^(0+128)
  1392  0E10  0845               	movf	(main@temp+1)^(0+128),w
  1393  0E11  1803               	skipnc
  1394  0E12  3E01               	addlw	1
  1395  0E13  3E00               	addlw	0
  1396  0E14  00B1               	movwf	(??_main+1)^(0+128)
  1397  0E15  0831               	movf	(??_main+1)^(0+128),w
  1398  0E16  3A80               	xorlw	128
  1399  0E17  00B2               	movwf	(??_main+2)^(0+128)
  1400  0E18  0849               	movf	(_Temperatura+1)^(0+128),w
  1401  0E19  3A80               	xorlw	128
  1402  0E1A  0232               	subwf	(??_main+2)^(0+128),w
  1403  0E1B  1D03               	skipz
  1404  0E1C  2E1F               	goto	u4855
  1405  0E1D  0848               	movf	_Temperatura^(0+128),w
  1406  0E1E  0230               	subwf	??_main^(0+128),w
  1407  0E1F                     u4855:
  1408  0E1F  1803               	skipnc
  1409  0E20  2E22               	goto	u4851
  1410  0E21  2E23               	goto	u4850
  1411  0E22                     u4851:
  1412  0E22  2CCB               	goto	l3828
  1413  0E23                     u4850:
  1414  0E23                     l3852:
  1415                           
  1416                           ;main.c: 430:                 PORTCbits.RC0 = 0;
  1417  0E23  1283               	bcf	3,5	;RP0=0, select bank0
  1418  0E24  1303               	bcf	3,6	;RP1=0, select bank0
  1419  0E25  1007               	bcf	7,0	;volatile
  1420  0E26  2CCB               	goto	l3828
  1421  0E27                     l204:	
  1422                           ;main.c: 432:         else
  1423                           
  1424                           
  1425                           ;main.c: 433:             PORTCbits.RC0=0;
  1426  0E27  1007               	bcf	7,0	;volatile
  1427  0E28  2CCB               	goto	l3828
  1428  0E29  120A  118A  2810   	ljmp	start
  1429  0E2C                     __end_of_main:
  1430                           
  1431                           	psect	text1
  1432  0AE6                     __ptext1:	
  1433 ;; *************** function _round *****************
  1434 ;; Defined at:
  1435 ;;		line 6 in file "D:\Programas\XC8 compiler\pic\sources\c90\common\round.c"
  1436 ;; Parameters:    Size  Location     Type
  1437 ;;  x               4    8[BANK1 ] void 
  1438 ;; Auto vars:     Size  Location     Type
  1439 ;;  f               4   12[BANK1 ] void 
  1440 ;; Return value:  Size  Location     Type
  1441 ;;                  4    8[BANK1 ] void 
  1442 ;; Registers used:
  1443 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1444 ;; Tracked objects:
  1445 ;;		On entry : 0/0
  1446 ;;		On exit  : 0/0
  1447 ;;		Unchanged: 0/0
  1448 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1449 ;;      Params:         0       0       4       0       0
  1450 ;;      Locals:         0       0       4       0       0
  1451 ;;      Temps:          0       0       0       0       0
  1452 ;;      Totals:         0       0       8       0       0
  1453 ;;Total ram usage:        8 bytes
  1454 ;; Hardware stack levels used: 1
  1455 ;; Hardware stack levels required when called: 4
  1456 ;; This function calls:
  1457 ;;		___fladd
  1458 ;;		___flsub
  1459 ;;		_trunc
  1460 ;; This function is called by:
  1461 ;;		_main
  1462 ;; This function uses a non-reentrant model
  1463 ;;
  1464                           
  1465                           
  1466                           ;psect for function _round
  1467  0AE6                     _round:
  1468  0AE6                     l3792:	
  1469                           ;incstack = 0
  1470                           ; Regs used in _round: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1471                           
  1472  0AE6  1683               	bsf	3,5	;RP0=1, select bank1
  1473  0AE7  1303               	bcf	3,6	;RP1=0, select bank1
  1474  0AE8  082B               	movf	(round@x+3)^(0+128),w
  1475  0AE9  1283               	bcf	3,5	;RP0=0, select bank0
  1476  0AEA  1303               	bcf	3,6	;RP1=0, select bank0
  1477  0AEB  00E6               	movwf	trunc@x+3
  1478  0AEC  1683               	bsf	3,5	;RP0=1, select bank1
  1479  0AED  1303               	bcf	3,6	;RP1=0, select bank1
  1480  0AEE  082A               	movf	(round@x+2)^(0+128),w
  1481  0AEF  1283               	bcf	3,5	;RP0=0, select bank0
  1482  0AF0  1303               	bcf	3,6	;RP1=0, select bank0
  1483  0AF1  00E5               	movwf	trunc@x+2
  1484  0AF2  1683               	bsf	3,5	;RP0=1, select bank1
  1485  0AF3  1303               	bcf	3,6	;RP1=0, select bank1
  1486  0AF4  0829               	movf	(round@x+1)^(0+128),w
  1487  0AF5  1283               	bcf	3,5	;RP0=0, select bank0
  1488  0AF6  1303               	bcf	3,6	;RP1=0, select bank0
  1489  0AF7  00E4               	movwf	trunc@x+1
  1490  0AF8  1683               	bsf	3,5	;RP0=1, select bank1
  1491  0AF9  1303               	bcf	3,6	;RP1=0, select bank1
  1492  0AFA  0828               	movf	round@x^(0+128),w
  1493  0AFB  1283               	bcf	3,5	;RP0=0, select bank0
  1494  0AFC  1303               	bcf	3,6	;RP1=0, select bank0
  1495  0AFD  00E3               	movwf	trunc@x
  1496  0AFE  160A  118A  27A4  120A  158A  	fcall	_trunc
  1497  0B03  1283               	bcf	3,5	;RP0=0, select bank0
  1498  0B04  1303               	bcf	3,6	;RP1=0, select bank0
  1499  0B05  0866               	movf	?_trunc+3,w
  1500  0B06  1683               	bsf	3,5	;RP0=1, select bank1
  1501  0B07  1303               	bcf	3,6	;RP1=0, select bank1
  1502  0B08  00A3               	movwf	(___flsub@a+3)^(0+128)
  1503  0B09  1283               	bcf	3,5	;RP0=0, select bank0
  1504  0B0A  1303               	bcf	3,6	;RP1=0, select bank0
  1505  0B0B  0865               	movf	?_trunc+2,w
  1506  0B0C  1683               	bsf	3,5	;RP0=1, select bank1
  1507  0B0D  1303               	bcf	3,6	;RP1=0, select bank1
  1508  0B0E  00A2               	movwf	(___flsub@a+2)^(0+128)
  1509  0B0F  1283               	bcf	3,5	;RP0=0, select bank0
  1510  0B10  1303               	bcf	3,6	;RP1=0, select bank0
  1511  0B11  0864               	movf	?_trunc+1,w
  1512  0B12  1683               	bsf	3,5	;RP0=1, select bank1
  1513  0B13  1303               	bcf	3,6	;RP1=0, select bank1
  1514  0B14  00A1               	movwf	(___flsub@a+1)^(0+128)
  1515  0B15  1283               	bcf	3,5	;RP0=0, select bank0
  1516  0B16  1303               	bcf	3,6	;RP1=0, select bank0
  1517  0B17  0863               	movf	?_trunc,w
  1518  0B18  1683               	bsf	3,5	;RP0=1, select bank1
  1519  0B19  1303               	bcf	3,6	;RP1=0, select bank1
  1520  0B1A  00A0               	movwf	___flsub@a^(0+128)
  1521  0B1B  082B               	movf	(round@x+3)^(0+128),w
  1522  0B1C  00A7               	movwf	(___flsub@b+3)^(0+128)
  1523  0B1D  082A               	movf	(round@x+2)^(0+128),w
  1524  0B1E  00A6               	movwf	(___flsub@b+2)^(0+128)
  1525  0B1F  0829               	movf	(round@x+1)^(0+128),w
  1526  0B20  00A5               	movwf	(___flsub@b+1)^(0+128)
  1527  0B21  0828               	movf	round@x^(0+128),w
  1528  0B22  00A4               	movwf	___flsub@b^(0+128)
  1529  0B23  160A  118A  2601  120A  158A  	fcall	___flsub
  1530  0B28  1683               	bsf	3,5	;RP0=1, select bank1
  1531  0B29  1303               	bcf	3,6	;RP1=0, select bank1
  1532  0B2A  0823               	movf	(?___flsub+3)^(0+128),w
  1533  0B2B  00AF               	movwf	(round@f+3)^(0+128)
  1534  0B2C  0822               	movf	(?___flsub+2)^(0+128),w
  1535  0B2D  00AE               	movwf	(round@f+2)^(0+128)
  1536  0B2E  0821               	movf	(?___flsub+1)^(0+128),w
  1537  0B2F  00AD               	movwf	(round@f+1)^(0+128)
  1538  0B30  0820               	movf	?___flsub^(0+128),w
  1539  0B31  00AC               	movwf	round@f^(0+128)
  1540  0B32                     l3794:
  1541  0B32  082F               	movf	(round@f+3)^(0+128),w
  1542  0B33  1283               	bcf	3,5	;RP0=0, select bank0
  1543  0B34  1303               	bcf	3,6	;RP1=0, select bank0
  1544  0B35  00C7               	movwf	___fladd@b+3
  1545  0B36  1683               	bsf	3,5	;RP0=1, select bank1
  1546  0B37  1303               	bcf	3,6	;RP1=0, select bank1
  1547  0B38  082E               	movf	(round@f+2)^(0+128),w
  1548  0B39  1283               	bcf	3,5	;RP0=0, select bank0
  1549  0B3A  1303               	bcf	3,6	;RP1=0, select bank0
  1550  0B3B  00C6               	movwf	___fladd@b+2
  1551  0B3C  1683               	bsf	3,5	;RP0=1, select bank1
  1552  0B3D  1303               	bcf	3,6	;RP1=0, select bank1
  1553  0B3E  082D               	movf	(round@f+1)^(0+128),w
  1554  0B3F  1283               	bcf	3,5	;RP0=0, select bank0
  1555  0B40  1303               	bcf	3,6	;RP1=0, select bank0
  1556  0B41  00C5               	movwf	___fladd@b+1
  1557  0B42  1683               	bsf	3,5	;RP0=1, select bank1
  1558  0B43  1303               	bcf	3,6	;RP1=0, select bank1
  1559  0B44  082C               	movf	round@f^(0+128),w
  1560  0B45  1283               	bcf	3,5	;RP0=0, select bank0
  1561  0B46  1303               	bcf	3,6	;RP1=0, select bank0
  1562  0B47  00C4               	movwf	___fladd@b
  1563  0B48  1683               	bsf	3,5	;RP0=1, select bank1
  1564  0B49  1303               	bcf	3,6	;RP1=0, select bank1
  1565  0B4A  082B               	movf	(round@x+3)^(0+128),w
  1566  0B4B  1283               	bcf	3,5	;RP0=0, select bank0
  1567  0B4C  1303               	bcf	3,6	;RP1=0, select bank0
  1568  0B4D  00CB               	movwf	___fladd@a+3
  1569  0B4E  1683               	bsf	3,5	;RP0=1, select bank1
  1570  0B4F  1303               	bcf	3,6	;RP1=0, select bank1
  1571  0B50  082A               	movf	(round@x+2)^(0+128),w
  1572  0B51  1283               	bcf	3,5	;RP0=0, select bank0
  1573  0B52  1303               	bcf	3,6	;RP1=0, select bank0
  1574  0B53  00CA               	movwf	___fladd@a+2
  1575  0B54  1683               	bsf	3,5	;RP0=1, select bank1
  1576  0B55  1303               	bcf	3,6	;RP1=0, select bank1
  1577  0B56  0829               	movf	(round@x+1)^(0+128),w
  1578  0B57  1283               	bcf	3,5	;RP0=0, select bank0
  1579  0B58  1303               	bcf	3,6	;RP1=0, select bank0
  1580  0B59  00C9               	movwf	___fladd@a+1
  1581  0B5A  1683               	bsf	3,5	;RP0=1, select bank1
  1582  0B5B  1303               	bcf	3,6	;RP1=0, select bank1
  1583  0B5C  0828               	movf	round@x^(0+128),w
  1584  0B5D  1283               	bcf	3,5	;RP0=0, select bank0
  1585  0B5E  1303               	bcf	3,6	;RP1=0, select bank0
  1586  0B5F  00C8               	movwf	___fladd@a
  1587  0B60  120A  118A  236A  120A  158A  	fcall	___fladd
  1588  0B65  1283               	bcf	3,5	;RP0=0, select bank0
  1589  0B66  1303               	bcf	3,6	;RP1=0, select bank0
  1590  0B67  0847               	movf	?___fladd+3,w
  1591  0B68  1683               	bsf	3,5	;RP0=1, select bank1
  1592  0B69  1303               	bcf	3,6	;RP1=0, select bank1
  1593  0B6A  00AB               	movwf	(round@x+3)^(0+128)
  1594  0B6B  1283               	bcf	3,5	;RP0=0, select bank0
  1595  0B6C  1303               	bcf	3,6	;RP1=0, select bank0
  1596  0B6D  0846               	movf	?___fladd+2,w
  1597  0B6E  1683               	bsf	3,5	;RP0=1, select bank1
  1598  0B6F  1303               	bcf	3,6	;RP1=0, select bank1
  1599  0B70  00AA               	movwf	(round@x+2)^(0+128)
  1600  0B71  1283               	bcf	3,5	;RP0=0, select bank0
  1601  0B72  1303               	bcf	3,6	;RP1=0, select bank0
  1602  0B73  0845               	movf	?___fladd+1,w
  1603  0B74  1683               	bsf	3,5	;RP0=1, select bank1
  1604  0B75  1303               	bcf	3,6	;RP1=0, select bank1
  1605  0B76  00A9               	movwf	(round@x+1)^(0+128)
  1606  0B77  1283               	bcf	3,5	;RP0=0, select bank0
  1607  0B78  1303               	bcf	3,6	;RP1=0, select bank0
  1608  0B79  0844               	movf	?___fladd,w
  1609  0B7A  1683               	bsf	3,5	;RP0=1, select bank1
  1610  0B7B  1303               	bcf	3,6	;RP1=0, select bank1
  1611  0B7C  00A8               	movwf	round@x^(0+128)
  1612  0B7D                     l3796:
  1613  0B7D  082B               	movf	(round@x+3)^(0+128),w
  1614  0B7E  1283               	bcf	3,5	;RP0=0, select bank0
  1615  0B7F  1303               	bcf	3,6	;RP1=0, select bank0
  1616  0B80  00E6               	movwf	trunc@x+3
  1617  0B81  1683               	bsf	3,5	;RP0=1, select bank1
  1618  0B82  1303               	bcf	3,6	;RP1=0, select bank1
  1619  0B83  082A               	movf	(round@x+2)^(0+128),w
  1620  0B84  1283               	bcf	3,5	;RP0=0, select bank0
  1621  0B85  1303               	bcf	3,6	;RP1=0, select bank0
  1622  0B86  00E5               	movwf	trunc@x+2
  1623  0B87  1683               	bsf	3,5	;RP0=1, select bank1
  1624  0B88  1303               	bcf	3,6	;RP1=0, select bank1
  1625  0B89  0829               	movf	(round@x+1)^(0+128),w
  1626  0B8A  1283               	bcf	3,5	;RP0=0, select bank0
  1627  0B8B  1303               	bcf	3,6	;RP1=0, select bank0
  1628  0B8C  00E4               	movwf	trunc@x+1
  1629  0B8D  1683               	bsf	3,5	;RP0=1, select bank1
  1630  0B8E  1303               	bcf	3,6	;RP1=0, select bank1
  1631  0B8F  0828               	movf	round@x^(0+128),w
  1632  0B90  1283               	bcf	3,5	;RP0=0, select bank0
  1633  0B91  1303               	bcf	3,6	;RP1=0, select bank0
  1634  0B92  00E3               	movwf	trunc@x
  1635  0B93  160A  118A  27A4  120A  158A  	fcall	_trunc
  1636  0B98  1283               	bcf	3,5	;RP0=0, select bank0
  1637  0B99  1303               	bcf	3,6	;RP1=0, select bank0
  1638  0B9A  0866               	movf	?_trunc+3,w
  1639  0B9B  1683               	bsf	3,5	;RP0=1, select bank1
  1640  0B9C  1303               	bcf	3,6	;RP1=0, select bank1
  1641  0B9D  00AB               	movwf	(?_round+3)^(0+128)
  1642  0B9E  1283               	bcf	3,5	;RP0=0, select bank0
  1643  0B9F  1303               	bcf	3,6	;RP1=0, select bank0
  1644  0BA0  0865               	movf	?_trunc+2,w
  1645  0BA1  1683               	bsf	3,5	;RP0=1, select bank1
  1646  0BA2  1303               	bcf	3,6	;RP1=0, select bank1
  1647  0BA3  00AA               	movwf	(?_round+2)^(0+128)
  1648  0BA4  1283               	bcf	3,5	;RP0=0, select bank0
  1649  0BA5  1303               	bcf	3,6	;RP1=0, select bank0
  1650  0BA6  0864               	movf	?_trunc+1,w
  1651  0BA7  1683               	bsf	3,5	;RP0=1, select bank1
  1652  0BA8  1303               	bcf	3,6	;RP1=0, select bank1
  1653  0BA9  00A9               	movwf	(?_round+1)^(0+128)
  1654  0BAA  1283               	bcf	3,5	;RP0=0, select bank0
  1655  0BAB  1303               	bcf	3,6	;RP1=0, select bank0
  1656  0BAC  0863               	movf	?_trunc,w
  1657  0BAD  1683               	bsf	3,5	;RP0=1, select bank1
  1658  0BAE  1303               	bcf	3,6	;RP1=0, select bank1
  1659  0BAF  00A8               	movwf	?_round^(0+128)
  1660  0BB0                     l805:
  1661  0BB0  0008               	return
  1662  0BB1                     __end_of_round:
  1663                           
  1664                           	psect	text2
  1665  17A4                     __ptext2:	
  1666 ;; *************** function _trunc *****************
  1667 ;; Defined at:
  1668 ;;		line 13 in file "D:\Programas\XC8 compiler\pic\sources\c90\common\trunc.c"
  1669 ;; Parameters:    Size  Location     Type
  1670 ;;  x               4   67[BANK0 ] void 
  1671 ;; Auto vars:     Size  Location     Type
  1672 ;;  i               4   71[BANK0 ] void 
  1673 ;;  expon           2   75[BANK0 ] int 
  1674 ;; Return value:  Size  Location     Type
  1675 ;;                  4   67[BANK0 ] int 
  1676 ;; Registers used:
  1677 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1678 ;; Tracked objects:
  1679 ;;		On entry : 0/0
  1680 ;;		On exit  : 0/0
  1681 ;;		Unchanged: 0/0
  1682 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1683 ;;      Params:         0       4       0       0       0
  1684 ;;      Locals:         0       6       0       0       0
  1685 ;;      Temps:          1       0       0       0       0
  1686 ;;      Totals:         1      10       0       0       0
  1687 ;;Total ram usage:       11 bytes
  1688 ;; Hardware stack levels used: 1
  1689 ;; Hardware stack levels required when called: 3
  1690 ;; This function calls:
  1691 ;;		___fltol
  1692 ;;		___xxtofl
  1693 ;;		_frexp
  1694 ;; This function is called by:
  1695 ;;		_round
  1696 ;; This function uses a non-reentrant model
  1697 ;;
  1698                           
  1699                           
  1700                           ;psect for function _trunc
  1701  17A4                     _trunc:
  1702  17A4                     l3604:	
  1703                           ;incstack = 0
  1704                           ; Regs used in _trunc: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1705                           
  1706  17A4  1283               	bcf	3,5	;RP0=0, select bank0
  1707  17A5  1303               	bcf	3,6	;RP1=0, select bank0
  1708  17A6  0866               	movf	trunc@x+3,w
  1709  17A7  00AB               	movwf	frexp@value+3
  1710  17A8  0865               	movf	trunc@x+2,w
  1711  17A9  00AA               	movwf	frexp@value+2
  1712  17AA  0864               	movf	trunc@x+1,w
  1713  17AB  00A9               	movwf	frexp@value+1
  1714  17AC  0863               	movf	trunc@x,w
  1715  17AD  00A8               	movwf	frexp@value
  1716  17AE  306B               	movlw	(low (trunc@expon| 0))& (0+255)
  1717  17AF  00F7               	movwf	??_trunc
  1718  17B0  0877               	movf	??_trunc,w
  1719  17B1  00AC               	movwf	frexp@eptr
  1720  17B2  160A  118A  26F5  160A  118A  	fcall	_frexp
  1721  17B7                     l3606:
  1722  17B7  1283               	bcf	3,5	;RP0=0, select bank0
  1723  17B8  1303               	bcf	3,6	;RP1=0, select bank0
  1724  17B9  1FEC               	btfss	trunc@expon+1,7
  1725  17BA  2FBC               	goto	u4571
  1726  17BB  2FBD               	goto	u4570
  1727  17BC                     u4571:
  1728  17BC  2FC6               	goto	l3612
  1729  17BD                     u4570:
  1730  17BD                     l3608:
  1731  17BD  3000               	movlw	0
  1732  17BE  00E6               	movwf	?_trunc+3
  1733  17BF  3000               	movlw	0
  1734  17C0  00E5               	movwf	?_trunc+2
  1735  17C1  3000               	movlw	0
  1736  17C2  00E4               	movwf	?_trunc+1
  1737  17C3  3000               	movlw	0
  1738  17C4  00E3               	movwf	?_trunc
  1739  17C5  2FFF               	goto	l811
  1740  17C6                     l3612:
  1741  17C6  3000               	movlw	0
  1742  17C7  026C               	subwf	trunc@expon+1,w
  1743  17C8  301D               	movlw	29
  1744  17C9  1903               	skipnz
  1745  17CA  026B               	subwf	trunc@expon,w
  1746  17CB  1C03               	skipc
  1747  17CC  2FCE               	goto	u4581
  1748  17CD  2FCF               	goto	u4580
  1749  17CE                     u4581:
  1750  17CE  2FD0               	goto	l3616
  1751  17CF                     u4580:
  1752  17CF                     l3614:
  1753  17CF  2FFF               	goto	l811
  1754  17D0                     l3616:
  1755  17D0  0866               	movf	trunc@x+3,w
  1756  17D1  00DB               	movwf	___fltol@f1+3
  1757  17D2  0865               	movf	trunc@x+2,w
  1758  17D3  00DA               	movwf	___fltol@f1+2
  1759  17D4  0864               	movf	trunc@x+1,w
  1760  17D5  00D9               	movwf	___fltol@f1+1
  1761  17D6  0863               	movf	trunc@x,w
  1762  17D7  00D8               	movwf	___fltol@f1
  1763  17D8  120A  158A  210A  160A  118A  	fcall	___fltol
  1764  17DD  1283               	bcf	3,5	;RP0=0, select bank0
  1765  17DE  1303               	bcf	3,6	;RP1=0, select bank0
  1766  17DF  085B               	movf	?___fltol+3,w
  1767  17E0  00F6               	movwf	___xxtofl@val+3
  1768  17E1  085A               	movf	?___fltol+2,w
  1769  17E2  00F5               	movwf	___xxtofl@val+2
  1770  17E3  0859               	movf	?___fltol+1,w
  1771  17E4  00F4               	movwf	___xxtofl@val+1
  1772  17E5  0858               	movf	?___fltol,w
  1773  17E6  00F3               	movwf	___xxtofl@val
  1774  17E7  3001               	movlw	1
  1775  17E8  120A  158A  222A  160A  118A  	fcall	___xxtofl
  1776  17ED  0876               	movf	?___xxtofl+3,w
  1777  17EE  1283               	bcf	3,5	;RP0=0, select bank0
  1778  17EF  1303               	bcf	3,6	;RP1=0, select bank0
  1779  17F0  00EA               	movwf	trunc@i+3
  1780  17F1  0875               	movf	?___xxtofl+2,w
  1781  17F2  00E9               	movwf	trunc@i+2
  1782  17F3  0874               	movf	?___xxtofl+1,w
  1783  17F4  00E8               	movwf	trunc@i+1
  1784  17F5  0873               	movf	?___xxtofl,w
  1785  17F6  00E7               	movwf	trunc@i
  1786  17F7                     l3618:
  1787  17F7  086A               	movf	trunc@i+3,w
  1788  17F8  00E6               	movwf	?_trunc+3
  1789  17F9  0869               	movf	trunc@i+2,w
  1790  17FA  00E5               	movwf	?_trunc+2
  1791  17FB  0868               	movf	trunc@i+1,w
  1792  17FC  00E4               	movwf	?_trunc+1
  1793  17FD  0867               	movf	trunc@i,w
  1794  17FE  00E3               	movwf	?_trunc
  1795  17FF                     l811:
  1796  17FF  0008               	return
  1797  1800                     __end_of_trunc:
  1798                           
  1799                           	psect	text3
  1800  16F5                     __ptext3:	
  1801 ;; *************** function _frexp *****************
  1802 ;; Defined at:
  1803 ;;		line 254 in file "D:\Programas\XC8 compiler\pic\sources\c90\common\frexp.c"
  1804 ;; Parameters:    Size  Location     Type
  1805 ;;  value           4    8[BANK0 ] int 
  1806 ;;  eptr            1   12[BANK0 ] PTR int 
  1807 ;;		 -> trunc@expon(2), 
  1808 ;; Auto vars:     Size  Location     Type
  1809 ;;		None
  1810 ;; Return value:  Size  Location     Type
  1811 ;;                  4    8[BANK0 ] PTR int 
  1812 ;; Registers used:
  1813 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1814 ;; Tracked objects:
  1815 ;;		On entry : 0/0
  1816 ;;		On exit  : 0/0
  1817 ;;		Unchanged: 0/0
  1818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1819 ;;      Params:         0       5       0       0       0
  1820 ;;      Locals:         0       0       0       0       0
  1821 ;;      Temps:          0       2       0       0       0
  1822 ;;      Totals:         0       7       0       0       0
  1823 ;;Total ram usage:        7 bytes
  1824 ;; Hardware stack levels used: 1
  1825 ;; Hardware stack levels required when called: 2
  1826 ;; This function calls:
  1827 ;;		___fleq
  1828 ;; This function is called by:
  1829 ;;		_trunc
  1830 ;; This function uses a non-reentrant model
  1831 ;;
  1832                           
  1833                           
  1834                           ;psect for function _frexp
  1835  16F5                     _frexp:
  1836  16F5                     l3552:	
  1837                           ;incstack = 0
  1838                           ; Regs used in _frexp: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1839                           
  1840  16F5  1283               	bcf	3,5	;RP0=0, select bank0
  1841  16F6  1303               	bcf	3,6	;RP1=0, select bank0
  1842  16F7  082B               	movf	frexp@value+3,w
  1843  16F8  00A3               	movwf	___fleq@ff1+3
  1844  16F9  082A               	movf	frexp@value+2,w
  1845  16FA  00A2               	movwf	___fleq@ff1+2
  1846  16FB  0829               	movf	frexp@value+1,w
  1847  16FC  00A1               	movwf	___fleq@ff1+1
  1848  16FD  0828               	movf	frexp@value,w
  1849  16FE  00A0               	movwf	___fleq@ff1
  1850  16FF  3000               	movlw	0
  1851  1700  00A7               	movwf	___fleq@ff2+3
  1852  1701  3000               	movlw	0
  1853  1702  00A6               	movwf	___fleq@ff2+2
  1854  1703  3000               	movlw	0
  1855  1704  00A5               	movwf	___fleq@ff2+1
  1856  1705  3000               	movlw	0
  1857  1706  00A4               	movwf	___fleq@ff2
  1858  1707  160A  118A  2651  160A  118A  	fcall	___fleq
  1859  170C  1C03               	btfss	3,0
  1860  170D  2F0F               	goto	u4561
  1861  170E  2F10               	goto	u4560
  1862  170F                     u4561:
  1863  170F  2F19               	goto	l3558
  1864  1710                     u4560:
  1865  1710                     l3554:
  1866  1710  1283               	bcf	3,5	;RP0=0, select bank0
  1867  1711  1303               	bcf	3,6	;RP1=0, select bank0
  1868  1712  082C               	movf	frexp@eptr,w
  1869  1713  0084               	movwf	4
  1870  1714  1383               	bcf	3,7	;select IRP bank0
  1871  1715  0180               	clrf	0
  1872  1716  0A84               	incf	4,f
  1873  1717  0180               	clrf	0
  1874  1718  2F48               	goto	l818
  1875  1719                     l3558:
  1876  1719  1283               	bcf	3,5	;RP0=0, select bank0
  1877  171A  1303               	bcf	3,6	;RP1=0, select bank0
  1878  171B  082B               	movf	frexp@value+3,w
  1879  171C  397F               	andlw	127
  1880  171D  00AD               	movwf	??_frexp
  1881  171E  01AE               	clrf	??_frexp+1
  1882  171F  1003               	clrc
  1883  1720  0DAD               	rlf	??_frexp,f
  1884  1721  0DAE               	rlf	??_frexp+1,f
  1885  1722  082C               	movf	frexp@eptr,w
  1886  1723  0084               	movwf	4
  1887  1724  082D               	movf	??_frexp,w
  1888  1725  1383               	bcf	3,7	;select IRP bank0
  1889  1726  0080               	movwf	0
  1890  1727  0A84               	incf	4,f
  1891  1728  082E               	movf	??_frexp+1,w
  1892  1729  0080               	movwf	0
  1893  172A  0D2A               	rlf	frexp@value+2,w
  1894  172B  0D2A               	rlf	frexp@value+2,w
  1895  172C  3901               	andlw	1
  1896  172D  00AD               	movwf	??_frexp
  1897  172E  01AE               	clrf	??_frexp+1
  1898  172F  082C               	movf	frexp@eptr,w
  1899  1730  0084               	movwf	4
  1900  1731  082D               	movf	??_frexp,w
  1901  1732  0480               	iorwf	0,f
  1902  1733  0A84               	incf	4,f
  1903  1734  082E               	movf	??_frexp+1,w
  1904  1735  0480               	iorwf	0,f
  1905  1736                     l3560:
  1906  1736  082C               	movf	frexp@eptr,w
  1907  1737  0084               	movwf	4
  1908  1738  3082               	movlw	130
  1909  1739  0780               	addwf	0,f
  1910  173A  0F84               	incfsz	4,f
  1911  173B  0800               	movf	0,w
  1912  173C  1803               	skipnc
  1913  173D  0A00               	incf	0,w
  1914  173E  00FF               	movwf	btemp+1
  1915  173F  30FF               	movlw	255
  1916  1740  077F               	addwf	btemp+1,w
  1917  1741  0080               	movwf	0
  1918  1742  0384               	decf	4,f
  1919  1743                     l3562:
  1920  1743  082B               	movf	frexp@value+3,w
  1921  1744  3980               	andlw	-128
  1922  1745  383F               	iorlw	63
  1923  1746  00AB               	movwf	frexp@value+3
  1924  1747                     l3564:
  1925  1747  13AA               	bcf	frexp@value+2,7
  1926  1748                     l818:
  1927  1748  0008               	return
  1928  1749                     __end_of_frexp:
  1929                           
  1930                           	psect	text4
  1931  1651                     __ptext4:	
  1932 ;; *************** function ___fleq *****************
  1933 ;; Defined at:
  1934 ;;		line 4 in file "D:\Programas\XC8 compiler\pic\sources\c90\common\fleq.c"
  1935 ;; Parameters:    Size  Location     Type
  1936 ;;  ff1             4    0[BANK0 ] PTR int 
  1937 ;;  ff2             4    4[BANK0 ] PTR int 
  1938 ;; Auto vars:     Size  Location     Type
  1939 ;;		None
  1940 ;; Return value:  Size  Location     Type
  1941 ;;		None               void
  1942 ;; Registers used:
  1943 ;;		wreg, status,2, status,0
  1944 ;; Tracked objects:
  1945 ;;		On entry : 0/0
  1946 ;;		On exit  : 0/0
  1947 ;;		Unchanged: 0/0
  1948 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1949 ;;      Params:         0       8       0       0       0
  1950 ;;      Locals:         0       0       0       0       0
  1951 ;;      Temps:          4       0       0       0       0
  1952 ;;      Totals:         4       8       0       0       0
  1953 ;;Total ram usage:       12 bytes
  1954 ;; Hardware stack levels used: 1
  1955 ;; Hardware stack levels required when called: 1
  1956 ;; This function calls:
  1957 ;;		Nothing
  1958 ;; This function is called by:
  1959 ;;		_frexp
  1960 ;; This function uses a non-reentrant model
  1961 ;;
  1962                           
  1963                           
  1964                           ;psect for function ___fleq
  1965  1651                     ___fleq:
  1966  1651                     l3324:	
  1967                           ;incstack = 0
  1968                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  1969                           
  1970  1651  3000               	movlw	0
  1971  1652  1283               	bcf	3,5	;RP0=0, select bank0
  1972  1653  1303               	bcf	3,6	;RP1=0, select bank0
  1973  1654  0520               	andwf	___fleq@ff1,w
  1974  1655  00F3               	movwf	??___fleq
  1975  1656  3000               	movlw	0
  1976  1657  0521               	andwf	___fleq@ff1+1,w
  1977  1658  00F4               	movwf	??___fleq+1
  1978  1659  3080               	movlw	128
  1979  165A  0522               	andwf	___fleq@ff1+2,w
  1980  165B  00F5               	movwf	??___fleq+2
  1981  165C  307F               	movlw	127
  1982  165D  0523               	andwf	___fleq@ff1+3,w
  1983  165E  00F6               	movwf	??___fleq+3
  1984  165F  0876               	movf	??___fleq+3,w
  1985  1660  0475               	iorwf	??___fleq+2,w
  1986  1661  0474               	iorwf	??___fleq+1,w
  1987  1662  0473               	iorwf	??___fleq,w
  1988  1663  1D03               	skipz
  1989  1664  2E66               	goto	u4121
  1990  1665  2E67               	goto	u4120
  1991  1666                     u4121:
  1992  1666  2E6F               	goto	l516
  1993  1667                     u4120:
  1994  1667                     l3326:
  1995  1667  3000               	movlw	0
  1996  1668  00A3               	movwf	___fleq@ff1+3
  1997  1669  3000               	movlw	0
  1998  166A  00A2               	movwf	___fleq@ff1+2
  1999  166B  3000               	movlw	0
  2000  166C  00A1               	movwf	___fleq@ff1+1
  2001  166D  3000               	movlw	0
  2002  166E  00A0               	movwf	___fleq@ff1
  2003  166F                     l516:
  2004  166F  3000               	movlw	0
  2005  1670  0524               	andwf	___fleq@ff2,w
  2006  1671  00F3               	movwf	??___fleq
  2007  1672  3000               	movlw	0
  2008  1673  0525               	andwf	___fleq@ff2+1,w
  2009  1674  00F4               	movwf	??___fleq+1
  2010  1675  3080               	movlw	128
  2011  1676  0526               	andwf	___fleq@ff2+2,w
  2012  1677  00F5               	movwf	??___fleq+2
  2013  1678  307F               	movlw	127
  2014  1679  0527               	andwf	___fleq@ff2+3,w
  2015  167A  00F6               	movwf	??___fleq+3
  2016  167B  0876               	movf	??___fleq+3,w
  2017  167C  0475               	iorwf	??___fleq+2,w
  2018  167D  0474               	iorwf	??___fleq+1,w
  2019  167E  0473               	iorwf	??___fleq,w
  2020  167F  1D03               	skipz
  2021  1680  2E82               	goto	u4131
  2022  1681  2E83               	goto	u4130
  2023  1682                     u4131:
  2024  1682  2E8B               	goto	l517
  2025  1683                     u4130:
  2026  1683                     l3328:
  2027  1683  3000               	movlw	0
  2028  1684  00A7               	movwf	___fleq@ff2+3
  2029  1685  3000               	movlw	0
  2030  1686  00A6               	movwf	___fleq@ff2+2
  2031  1687  3000               	movlw	0
  2032  1688  00A5               	movwf	___fleq@ff2+1
  2033  1689  3000               	movlw	0
  2034  168A  00A4               	movwf	___fleq@ff2
  2035  168B                     l517:
  2036  168B  0827               	movf	___fleq@ff2+3,w
  2037  168C  0623               	xorwf	___fleq@ff1+3,w
  2038  168D  1D03               	skipz
  2039  168E  2E99               	goto	u4145
  2040  168F  0826               	movf	___fleq@ff2+2,w
  2041  1690  0622               	xorwf	___fleq@ff1+2,w
  2042  1691  1D03               	skipz
  2043  1692  2E99               	goto	u4145
  2044  1693  0825               	movf	___fleq@ff2+1,w
  2045  1694  0621               	xorwf	___fleq@ff1+1,w
  2046  1695  1D03               	skipz
  2047  1696  2E99               	goto	u4145
  2048  1697  0824               	movf	___fleq@ff2,w
  2049  1698  0620               	xorwf	___fleq@ff1,w
  2050  1699                     u4145:
  2051  1699  1903               	skipnz
  2052  169A  2E9C               	goto	u4141
  2053  169B  2E9D               	goto	u4140
  2054  169C                     u4141:
  2055  169C  2E9F               	goto	l3332
  2056  169D                     u4140:
  2057  169D                     l3330:
  2058  169D  1003               	clrc
  2059  169E  2EA0               	goto	l518
  2060  169F                     l3332:
  2061  169F  1403               	setc
  2062  16A0                     l518:
  2063  16A0  0008               	return
  2064  16A1                     __end_of___fleq:
  2065                           
  2066                           	psect	text5
  2067  0A2A                     __ptext5:	
  2068 ;; *************** function ___xxtofl *****************
  2069 ;; Defined at:
  2070 ;;		line 10 in file "D:\Programas\XC8 compiler\pic\sources\c90\common\xxtofl.c"
  2071 ;; Parameters:    Size  Location     Type
  2072 ;;  sign            1    wreg     unsigned char 
  2073 ;;  val             4    3[COMMON] long 
  2074 ;; Auto vars:     Size  Location     Type
  2075 ;;  sign            1    4[BANK0 ] unsigned char 
  2076 ;;  arg             4    6[BANK0 ] unsigned long 
  2077 ;;  exp             1    5[BANK0 ] unsigned char 
  2078 ;; Return value:  Size  Location     Type
  2079 ;;                  4    3[COMMON] unsigned char 
  2080 ;; Registers used:
  2081 ;;		wreg, status,2, status,0
  2082 ;; Tracked objects:
  2083 ;;		On entry : 0/0
  2084 ;;		On exit  : 0/0
  2085 ;;		Unchanged: 0/0
  2086 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2087 ;;      Params:         4       0       0       0       0
  2088 ;;      Locals:         0       6       0       0       0
  2089 ;;      Temps:          0       4       0       0       0
  2090 ;;      Totals:         4      10       0       0       0
  2091 ;;Total ram usage:       14 bytes
  2092 ;; Hardware stack levels used: 1
  2093 ;; Hardware stack levels required when called: 1
  2094 ;; This function calls:
  2095 ;;		Nothing
  2096 ;; This function is called by:
  2097 ;;		_main
  2098 ;;		_trunc
  2099 ;; This function uses a non-reentrant model
  2100 ;;
  2101                           
  2102                           
  2103                           ;psect for function ___xxtofl
  2104  0A2A                     ___xxtofl:
  2105                           
  2106                           ;incstack = 0
  2107                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  2108                           ;___xxtofl@sign stored from wreg
  2109  0A2A  1283               	bcf	3,5	;RP0=0, select bank0
  2110  0A2B  1303               	bcf	3,6	;RP1=0, select bank0
  2111  0A2C  00A4               	movwf	___xxtofl@sign
  2112  0A2D                     l3508:
  2113  0A2D  0824               	movf	___xxtofl@sign,w
  2114  0A2E  1903               	btfsc	3,2
  2115  0A2F  2A31               	goto	u4421
  2116  0A30  2A32               	goto	u4420
  2117  0A31                     u4421:
  2118  0A31  2A46               	goto	l3514
  2119  0A32                     u4420:
  2120  0A32                     l3510:
  2121  0A32  1FF6               	btfss	___xxtofl@val+3,7
  2122  0A33  2A35               	goto	u4431
  2123  0A34  2A36               	goto	u4430
  2124  0A35                     u4431:
  2125  0A35  2A46               	goto	l3514
  2126  0A36                     u4430:
  2127  0A36                     l3512:
  2128  0A36  0973               	comf	___xxtofl@val,w
  2129  0A37  00A6               	movwf	___xxtofl@arg
  2130  0A38  0974               	comf	___xxtofl@val+1,w
  2131  0A39  00A7               	movwf	___xxtofl@arg+1
  2132  0A3A  0975               	comf	___xxtofl@val+2,w
  2133  0A3B  00A8               	movwf	___xxtofl@arg+2
  2134  0A3C  0976               	comf	___xxtofl@val+3,w
  2135  0A3D  00A9               	movwf	___xxtofl@arg+3
  2136  0A3E  0AA6               	incf	___xxtofl@arg,f
  2137  0A3F  1903               	skipnz
  2138  0A40  0AA7               	incf	___xxtofl@arg+1,f
  2139  0A41  1903               	skipnz
  2140  0A42  0AA8               	incf	___xxtofl@arg+2,f
  2141  0A43  1903               	skipnz
  2142  0A44  0AA9               	incf	___xxtofl@arg+3,f
  2143  0A45  2A4E               	goto	l780
  2144  0A46                     l3514:
  2145  0A46  0876               	movf	___xxtofl@val+3,w
  2146  0A47  00A9               	movwf	___xxtofl@arg+3
  2147  0A48  0875               	movf	___xxtofl@val+2,w
  2148  0A49  00A8               	movwf	___xxtofl@arg+2
  2149  0A4A  0874               	movf	___xxtofl@val+1,w
  2150  0A4B  00A7               	movwf	___xxtofl@arg+1
  2151  0A4C  0873               	movf	___xxtofl@val,w
  2152  0A4D  00A6               	movwf	___xxtofl@arg
  2153  0A4E                     l780:
  2154  0A4E  0876               	movf	___xxtofl@val+3,w
  2155  0A4F  0475               	iorwf	___xxtofl@val+2,w
  2156  0A50  0474               	iorwf	___xxtofl@val+1,w
  2157  0A51  0473               	iorwf	___xxtofl@val,w
  2158  0A52  1D03               	skipz
  2159  0A53  2A55               	goto	u4441
  2160  0A54  2A56               	goto	u4440
  2161  0A55                     u4441:
  2162  0A55  2A5F               	goto	l3520
  2163  0A56                     u4440:
  2164  0A56                     l3516:
  2165  0A56  3000               	movlw	0
  2166  0A57  00F6               	movwf	?___xxtofl+3
  2167  0A58  3000               	movlw	0
  2168  0A59  00F5               	movwf	?___xxtofl+2
  2169  0A5A  3000               	movlw	0
  2170  0A5B  00F4               	movwf	?___xxtofl+1
  2171  0A5C  3000               	movlw	0
  2172  0A5D  00F3               	movwf	?___xxtofl
  2173  0A5E  2AE5               	goto	l782
  2174  0A5F                     l3520:
  2175  0A5F  3096               	movlw	150
  2176  0A60  00A0               	movwf	??___xxtofl
  2177  0A61  0820               	movf	??___xxtofl,w
  2178  0A62  00A5               	movwf	___xxtofl@exp
  2179  0A63  2A71               	goto	l3524
  2180  0A64                     l3522:
  2181  0A64  3001               	movlw	1
  2182  0A65  00A0               	movwf	??___xxtofl
  2183  0A66  0820               	movf	??___xxtofl,w
  2184  0A67  07A5               	addwf	___xxtofl@exp,f
  2185  0A68  3001               	movlw	1
  2186  0A69                     u4455:
  2187  0A69  1003               	clrc
  2188  0A6A  0CA9               	rrf	___xxtofl@arg+3,f
  2189  0A6B  0CA8               	rrf	___xxtofl@arg+2,f
  2190  0A6C  0CA7               	rrf	___xxtofl@arg+1,f
  2191  0A6D  0CA6               	rrf	___xxtofl@arg,f
  2192  0A6E  3EFF               	addlw	-1
  2193  0A6F  1D03               	skipz
  2194  0A70  2A69               	goto	u4455
  2195  0A71                     l3524:
  2196  0A71  30FE               	movlw	254
  2197  0A72  0529               	andwf	___xxtofl@arg+3,w
  2198  0A73  1D03               	btfss	3,2
  2199  0A74  2A76               	goto	u4461
  2200  0A75  2A77               	goto	u4460
  2201  0A76                     u4461:
  2202  0A76  2A64               	goto	l3522
  2203  0A77                     u4460:
  2204  0A77  2A93               	goto	l786
  2205  0A78                     l3526:
  2206  0A78  3001               	movlw	1
  2207  0A79  00A0               	movwf	??___xxtofl
  2208  0A7A  0820               	movf	??___xxtofl,w
  2209  0A7B  07A5               	addwf	___xxtofl@exp,f
  2210  0A7C                     l3528:
  2211  0A7C  3001               	movlw	1
  2212  0A7D  07A6               	addwf	___xxtofl@arg,f
  2213  0A7E  3000               	movlw	0
  2214  0A7F  1803               	skipnc
  2215  0A80  3001               	movlw	1
  2216  0A81  07A7               	addwf	___xxtofl@arg+1,f
  2217  0A82  3000               	movlw	0
  2218  0A83  1803               	skipnc
  2219  0A84  3001               	movlw	1
  2220  0A85  07A8               	addwf	___xxtofl@arg+2,f
  2221  0A86  3000               	movlw	0
  2222  0A87  1803               	skipnc
  2223  0A88  3001               	movlw	1
  2224  0A89  07A9               	addwf	___xxtofl@arg+3,f
  2225  0A8A                     l3530:
  2226  0A8A  3001               	movlw	1
  2227  0A8B                     u4475:
  2228  0A8B  1003               	clrc
  2229  0A8C  0CA9               	rrf	___xxtofl@arg+3,f
  2230  0A8D  0CA8               	rrf	___xxtofl@arg+2,f
  2231  0A8E  0CA7               	rrf	___xxtofl@arg+1,f
  2232  0A8F  0CA6               	rrf	___xxtofl@arg,f
  2233  0A90  3EFF               	addlw	-1
  2234  0A91  1D03               	skipz
  2235  0A92  2A8B               	goto	u4475
  2236  0A93                     l786:
  2237  0A93  30FF               	movlw	255
  2238  0A94  0529               	andwf	___xxtofl@arg+3,w
  2239  0A95  1D03               	btfss	3,2
  2240  0A96  2A98               	goto	u4481
  2241  0A97  2A99               	goto	u4480
  2242  0A98                     u4481:
  2243  0A98  2A78               	goto	l3526
  2244  0A99                     u4480:
  2245  0A99  2AA5               	goto	l3534
  2246  0A9A                     l3532:
  2247  0A9A  3001               	movlw	1
  2248  0A9B  02A5               	subwf	___xxtofl@exp,f
  2249  0A9C  3001               	movlw	1
  2250  0A9D  00A0               	movwf	??___xxtofl
  2251  0A9E                     u4495:
  2252  0A9E  1003               	clrc
  2253  0A9F  0DA6               	rlf	___xxtofl@arg,f
  2254  0AA0  0DA7               	rlf	___xxtofl@arg+1,f
  2255  0AA1  0DA8               	rlf	___xxtofl@arg+2,f
  2256  0AA2  0DA9               	rlf	___xxtofl@arg+3,f
  2257  0AA3  0BA0               	decfsz	??___xxtofl,f
  2258  0AA4  2A9E               	goto	u4495
  2259  0AA5                     l3534:
  2260  0AA5  1BA8               	btfsc	___xxtofl@arg+2,7
  2261  0AA6  2AA8               	goto	u4501
  2262  0AA7  2AA9               	goto	u4500
  2263  0AA8                     u4501:
  2264  0AA8  2AAF               	goto	l793
  2265  0AA9                     u4500:
  2266  0AA9                     l3536:
  2267  0AA9  3002               	movlw	2
  2268  0AAA  0225               	subwf	___xxtofl@exp,w
  2269  0AAB  1803               	skipnc
  2270  0AAC  2AAE               	goto	u4511
  2271  0AAD  2AAF               	goto	u4510
  2272  0AAE                     u4511:
  2273  0AAE  2A9A               	goto	l3532
  2274  0AAF                     u4510:
  2275  0AAF                     l793:
  2276  0AAF  1825               	btfsc	___xxtofl@exp,0
  2277  0AB0  2AB2               	goto	u4521
  2278  0AB1  2AB3               	goto	u4520
  2279  0AB2                     u4521:
  2280  0AB2  2ABB               	goto	l794
  2281  0AB3                     u4520:
  2282  0AB3                     l3538:
  2283  0AB3  30FF               	movlw	255
  2284  0AB4  05A6               	andwf	___xxtofl@arg,f
  2285  0AB5  30FF               	movlw	255
  2286  0AB6  05A7               	andwf	___xxtofl@arg+1,f
  2287  0AB7  307F               	movlw	127
  2288  0AB8  05A8               	andwf	___xxtofl@arg+2,f
  2289  0AB9  30FF               	movlw	255
  2290  0ABA  05A9               	andwf	___xxtofl@arg+3,f
  2291  0ABB                     l794:
  2292  0ABB  1003               	clrc
  2293  0ABC  0CA5               	rrf	___xxtofl@exp,f
  2294  0ABD                     l3540:
  2295  0ABD  0825               	movf	___xxtofl@exp,w
  2296  0ABE  00A0               	movwf	??___xxtofl
  2297  0ABF  01A1               	clrf	??___xxtofl+1
  2298  0AC0  01A2               	clrf	??___xxtofl+2
  2299  0AC1  01A3               	clrf	??___xxtofl+3
  2300  0AC2  3018               	movlw	24
  2301  0AC3                     u4535:
  2302  0AC3  1003               	clrc
  2303  0AC4  0DA0               	rlf	??___xxtofl,f
  2304  0AC5  0DA1               	rlf	??___xxtofl+1,f
  2305  0AC6  0DA2               	rlf	??___xxtofl+2,f
  2306  0AC7  0DA3               	rlf	??___xxtofl+3,f
  2307  0AC8                     u4530:
  2308  0AC8  3EFF               	addlw	-1
  2309  0AC9  1D03               	skipz
  2310  0ACA  2AC3               	goto	u4535
  2311  0ACB  0820               	movf	??___xxtofl,w
  2312  0ACC  04A6               	iorwf	___xxtofl@arg,f
  2313  0ACD  0821               	movf	??___xxtofl+1,w
  2314  0ACE  04A7               	iorwf	___xxtofl@arg+1,f
  2315  0ACF  0822               	movf	??___xxtofl+2,w
  2316  0AD0  04A8               	iorwf	___xxtofl@arg+2,f
  2317  0AD1  0823               	movf	??___xxtofl+3,w
  2318  0AD2  04A9               	iorwf	___xxtofl@arg+3,f
  2319  0AD3                     l3542:
  2320  0AD3  0824               	movf	___xxtofl@sign,w
  2321  0AD4  1903               	btfsc	3,2
  2322  0AD5  2AD7               	goto	u4541
  2323  0AD6  2AD8               	goto	u4540
  2324  0AD7                     u4541:
  2325  0AD7  2ADD               	goto	l3548
  2326  0AD8                     u4540:
  2327  0AD8                     l3544:
  2328  0AD8  1FF6               	btfss	___xxtofl@val+3,7
  2329  0AD9  2ADB               	goto	u4551
  2330  0ADA  2ADC               	goto	u4550
  2331  0ADB                     u4551:
  2332  0ADB  2ADD               	goto	l3548
  2333  0ADC                     u4550:
  2334  0ADC                     l3546:
  2335  0ADC  17A9               	bsf	___xxtofl@arg+3,7
  2336  0ADD                     l3548:
  2337  0ADD  0829               	movf	___xxtofl@arg+3,w
  2338  0ADE  00F6               	movwf	?___xxtofl+3
  2339  0ADF  0828               	movf	___xxtofl@arg+2,w
  2340  0AE0  00F5               	movwf	?___xxtofl+2
  2341  0AE1  0827               	movf	___xxtofl@arg+1,w
  2342  0AE2  00F4               	movwf	?___xxtofl+1
  2343  0AE3  0826               	movf	___xxtofl@arg,w
  2344  0AE4  00F3               	movwf	?___xxtofl
  2345  0AE5                     l782:
  2346  0AE5  0008               	return
  2347  0AE6                     __end_of___xxtofl:
  2348                           
  2349                           	psect	text6
  2350  090A                     __ptext6:	
  2351 ;; *************** function ___fltol *****************
  2352 ;; Defined at:
  2353 ;;		line 43 in file "D:\Programas\XC8 compiler\pic\sources\c90\common\fltol.c"
  2354 ;; Parameters:    Size  Location     Type
  2355 ;;  f1              4   56[BANK0 ] unsigned char 
  2356 ;; Auto vars:     Size  Location     Type
  2357 ;;  exp1            1   66[BANK0 ] unsigned char 
  2358 ;;  sign1           1   65[BANK0 ] unsigned char 
  2359 ;; Return value:  Size  Location     Type
  2360 ;;                  4   56[BANK0 ] long 
  2361 ;; Registers used:
  2362 ;;		wreg, status,2, status,0
  2363 ;; Tracked objects:
  2364 ;;		On entry : 0/0
  2365 ;;		On exit  : 0/0
  2366 ;;		Unchanged: 0/0
  2367 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2368 ;;      Params:         0       4       0       0       0
  2369 ;;      Locals:         0       2       0       0       0
  2370 ;;      Temps:          0       5       0       0       0
  2371 ;;      Totals:         0      11       0       0       0
  2372 ;;Total ram usage:       11 bytes
  2373 ;; Hardware stack levels used: 1
  2374 ;; Hardware stack levels required when called: 1
  2375 ;; This function calls:
  2376 ;;		Nothing
  2377 ;; This function is called by:
  2378 ;;		_main
  2379 ;;		_trunc
  2380 ;; This function uses a non-reentrant model
  2381 ;;
  2382                           
  2383                           
  2384                           ;psect for function ___fltol
  2385  090A                     ___fltol:
  2386  090A                     l2348:	
  2387                           ;incstack = 0
  2388                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  2389                           
  2390  090A  1003               	clrc
  2391  090B  1283               	bcf	3,5	;RP0=0, select bank0
  2392  090C  1303               	bcf	3,6	;RP1=0, select bank0
  2393  090D  0D5A               	rlf	___fltol@f1+2,w
  2394  090E  0D5B               	rlf	___fltol@f1+3,w
  2395  090F  00DC               	movwf	??___fltol
  2396  0910  085C               	movf	??___fltol,w
  2397  0911  00E2               	movwf	___fltol@exp1
  2398  0912  0862               	movf	___fltol@exp1,w
  2399  0913  1D03               	btfss	3,2
  2400  0914  2916               	goto	u2501
  2401  0915  2917               	goto	u2500
  2402  0916                     u2501:
  2403  0916  2920               	goto	l2354
  2404  0917                     u2500:
  2405  0917                     l2350:
  2406  0917  3000               	movlw	0
  2407  0918  00DB               	movwf	?___fltol+3
  2408  0919  3000               	movlw	0
  2409  091A  00DA               	movwf	?___fltol+2
  2410  091B  3000               	movlw	0
  2411  091C  00D9               	movwf	?___fltol+1
  2412  091D  3000               	movlw	0
  2413  091E  00D8               	movwf	?___fltol
  2414  091F  2985               	goto	l533
  2415  0920                     l2354:
  2416  0920  0858               	movf	___fltol@f1,w
  2417  0921  00DC               	movwf	??___fltol
  2418  0922  0859               	movf	___fltol@f1+1,w
  2419  0923  00DD               	movwf	??___fltol+1
  2420  0924  085A               	movf	___fltol@f1+2,w
  2421  0925  00DE               	movwf	??___fltol+2
  2422  0926  085B               	movf	___fltol@f1+3,w
  2423  0927  00DF               	movwf	??___fltol+3
  2424  0928  301F               	movlw	31
  2425  0929                     u2515:
  2426  0929  1003               	clrc
  2427  092A  0CDF               	rrf	??___fltol+3,f
  2428  092B  0CDE               	rrf	??___fltol+2,f
  2429  092C  0CDD               	rrf	??___fltol+1,f
  2430  092D  0CDC               	rrf	??___fltol,f
  2431  092E                     u2510:
  2432  092E  3EFF               	addlw	-1
  2433  092F  1D03               	skipz
  2434  0930  2929               	goto	u2515
  2435  0931  085C               	movf	??___fltol,w
  2436  0932  00E0               	movwf	??___fltol+4
  2437  0933  0860               	movf	??___fltol+4,w
  2438  0934  00E1               	movwf	___fltol@sign1
  2439  0935                     l2356:
  2440  0935  17DA               	bsf	___fltol@f1+2,7
  2441  0936                     l2358:
  2442  0936  30FF               	movlw	255
  2443  0937  05D8               	andwf	___fltol@f1,f
  2444  0938  30FF               	movlw	255
  2445  0939  05D9               	andwf	___fltol@f1+1,f
  2446  093A  30FF               	movlw	255
  2447  093B  05DA               	andwf	___fltol@f1+2,f
  2448  093C  3000               	movlw	0
  2449  093D  05DB               	andwf	___fltol@f1+3,f
  2450  093E                     l2360:
  2451  093E  3096               	movlw	150
  2452  093F  02E2               	subwf	___fltol@exp1,f
  2453  0940                     l2362:
  2454  0940  1FE2               	btfss	___fltol@exp1,7
  2455  0941  2943               	goto	u2521
  2456  0942  2944               	goto	u2520
  2457  0943                     u2521:
  2458  0943  295E               	goto	l2372
  2459  0944                     u2520:
  2460  0944                     l2364:
  2461  0944  0862               	movf	___fltol@exp1,w
  2462  0945  3A80               	xorlw	128
  2463  0946  3E97               	addlw	151
  2464  0947  1803               	skipnc
  2465  0948  294A               	goto	u2531
  2466  0949  294B               	goto	u2530
  2467  094A                     u2531:
  2468  094A  294C               	goto	l2370
  2469  094B                     u2530:
  2470  094B  2917               	goto	l2350
  2471  094C                     l2370:
  2472  094C  3001               	movlw	1
  2473  094D                     u2545:
  2474  094D  1003               	clrc
  2475  094E  0CDB               	rrf	___fltol@f1+3,f
  2476  094F  0CDA               	rrf	___fltol@f1+2,f
  2477  0950  0CD9               	rrf	___fltol@f1+1,f
  2478  0951  0CD8               	rrf	___fltol@f1,f
  2479  0952  3EFF               	addlw	-1
  2480  0953  1D03               	skipz
  2481  0954  294D               	goto	u2545
  2482  0955  3001               	movlw	1
  2483  0956  00DC               	movwf	??___fltol
  2484  0957  085C               	movf	??___fltol,w
  2485  0958  07E2               	addwf	___fltol@exp1,f
  2486  0959  1D03               	btfss	3,2
  2487  095A  295C               	goto	u2551
  2488  095B  295D               	goto	u2550
  2489  095C                     u2551:
  2490  095C  294C               	goto	l2370
  2491  095D                     u2550:
  2492  095D  2975               	goto	l2380
  2493  095E                     l2372:
  2494  095E  3020               	movlw	32
  2495  095F  0262               	subwf	___fltol@exp1,w
  2496  0960  1C03               	skipc
  2497  0961  2963               	goto	u2561
  2498  0962  2964               	goto	u2560
  2499  0963                     u2561:
  2500  0963  2970               	goto	l540
  2501  0964                     u2560:
  2502  0964  2917               	goto	l2350
  2503  0965                     l2378:
  2504  0965  3001               	movlw	1
  2505  0966  00DC               	movwf	??___fltol
  2506  0967                     u2575:
  2507  0967  1003               	clrc
  2508  0968  0DD8               	rlf	___fltol@f1,f
  2509  0969  0DD9               	rlf	___fltol@f1+1,f
  2510  096A  0DDA               	rlf	___fltol@f1+2,f
  2511  096B  0DDB               	rlf	___fltol@f1+3,f
  2512  096C  0BDC               	decfsz	??___fltol,f
  2513  096D  2967               	goto	u2575
  2514  096E  3001               	movlw	1
  2515  096F  02E2               	subwf	___fltol@exp1,f
  2516  0970                     l540:
  2517  0970  0862               	movf	___fltol@exp1,w
  2518  0971  1D03               	btfss	3,2
  2519  0972  2974               	goto	u2581
  2520  0973  2975               	goto	u2580
  2521  0974                     u2581:
  2522  0974  2965               	goto	l2378
  2523  0975                     u2580:
  2524  0975                     l2380:
  2525  0975  0861               	movf	___fltol@sign1,w
  2526  0976  1903               	btfsc	3,2
  2527  0977  2979               	goto	u2591
  2528  0978  297A               	goto	u2590
  2529  0979                     u2591:
  2530  0979  2985               	goto	l543
  2531  097A                     u2590:
  2532  097A                     l2382:
  2533  097A  09D8               	comf	___fltol@f1,f
  2534  097B  09D9               	comf	___fltol@f1+1,f
  2535  097C  09DA               	comf	___fltol@f1+2,f
  2536  097D  09DB               	comf	___fltol@f1+3,f
  2537  097E  0AD8               	incf	___fltol@f1,f
  2538  097F  1903               	skipnz
  2539  0980  0AD9               	incf	___fltol@f1+1,f
  2540  0981  1903               	skipnz
  2541  0982  0ADA               	incf	___fltol@f1+2,f
  2542  0983  1903               	skipnz
  2543  0984  0ADB               	incf	___fltol@f1+3,f
  2544  0985                     l543:
  2545  0985                     l533:
  2546  0985  0008               	return
  2547  0986                     __end_of___fltol:
  2548                           
  2549                           	psect	text7
  2550  1601                     __ptext7:	
  2551 ;; *************** function ___flsub *****************
  2552 ;; Defined at:
  2553 ;;		line 242 in file "D:\Programas\XC8 compiler\pic\sources\c90\common\sprcadd.c"
  2554 ;; Parameters:    Size  Location     Type
  2555 ;;  a               4    0[BANK1 ] long 
  2556 ;;  b               4    4[BANK1 ] long 
  2557 ;; Auto vars:     Size  Location     Type
  2558 ;;		None
  2559 ;; Return value:  Size  Location     Type
  2560 ;;                  4    0[BANK1 ] long 
  2561 ;; Registers used:
  2562 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2563 ;; Tracked objects:
  2564 ;;		On entry : 0/0
  2565 ;;		On exit  : 0/0
  2566 ;;		Unchanged: 0/0
  2567 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2568 ;;      Params:         0       0       8       0       0
  2569 ;;      Locals:         0       0       0       0       0
  2570 ;;      Temps:          0       0       0       0       0
  2571 ;;      Totals:         0       0       8       0       0
  2572 ;;Total ram usage:        8 bytes
  2573 ;; Hardware stack levels used: 1
  2574 ;; Hardware stack levels required when called: 2
  2575 ;; This function calls:
  2576 ;;		___fladd
  2577 ;; This function is called by:
  2578 ;;		_round
  2579 ;; This function uses a non-reentrant model
  2580 ;;
  2581                           
  2582                           
  2583                           ;psect for function ___flsub
  2584  1601                     ___flsub:
  2585  1601                     l2674:	
  2586                           ;incstack = 0
  2587                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2588                           
  2589  1601  3080               	movlw	128
  2590  1602  1683               	bsf	3,5	;RP0=1, select bank1
  2591  1603  1303               	bcf	3,6	;RP1=0, select bank1
  2592  1604  06A3               	xorwf	(___flsub@a+3)^(0+128),f
  2593  1605                     l2676:
  2594  1605  0827               	movf	(___flsub@b+3)^(0+128),w
  2595  1606  1283               	bcf	3,5	;RP0=0, select bank0
  2596  1607  1303               	bcf	3,6	;RP1=0, select bank0
  2597  1608  00C7               	movwf	___fladd@b+3
  2598  1609  1683               	bsf	3,5	;RP0=1, select bank1
  2599  160A  1303               	bcf	3,6	;RP1=0, select bank1
  2600  160B  0826               	movf	(___flsub@b+2)^(0+128),w
  2601  160C  1283               	bcf	3,5	;RP0=0, select bank0
  2602  160D  1303               	bcf	3,6	;RP1=0, select bank0
  2603  160E  00C6               	movwf	___fladd@b+2
  2604  160F  1683               	bsf	3,5	;RP0=1, select bank1
  2605  1610  1303               	bcf	3,6	;RP1=0, select bank1
  2606  1611  0825               	movf	(___flsub@b+1)^(0+128),w
  2607  1612  1283               	bcf	3,5	;RP0=0, select bank0
  2608  1613  1303               	bcf	3,6	;RP1=0, select bank0
  2609  1614  00C5               	movwf	___fladd@b+1
  2610  1615  1683               	bsf	3,5	;RP0=1, select bank1
  2611  1616  1303               	bcf	3,6	;RP1=0, select bank1
  2612  1617  0824               	movf	___flsub@b^(0+128),w
  2613  1618  1283               	bcf	3,5	;RP0=0, select bank0
  2614  1619  1303               	bcf	3,6	;RP1=0, select bank0
  2615  161A  00C4               	movwf	___fladd@b
  2616  161B  1683               	bsf	3,5	;RP0=1, select bank1
  2617  161C  1303               	bcf	3,6	;RP1=0, select bank1
  2618  161D  0823               	movf	(___flsub@a+3)^(0+128),w
  2619  161E  1283               	bcf	3,5	;RP0=0, select bank0
  2620  161F  1303               	bcf	3,6	;RP1=0, select bank0
  2621  1620  00CB               	movwf	___fladd@a+3
  2622  1621  1683               	bsf	3,5	;RP0=1, select bank1
  2623  1622  1303               	bcf	3,6	;RP1=0, select bank1
  2624  1623  0822               	movf	(___flsub@a+2)^(0+128),w
  2625  1624  1283               	bcf	3,5	;RP0=0, select bank0
  2626  1625  1303               	bcf	3,6	;RP1=0, select bank0
  2627  1626  00CA               	movwf	___fladd@a+2
  2628  1627  1683               	bsf	3,5	;RP0=1, select bank1
  2629  1628  1303               	bcf	3,6	;RP1=0, select bank1
  2630  1629  0821               	movf	(___flsub@a+1)^(0+128),w
  2631  162A  1283               	bcf	3,5	;RP0=0, select bank0
  2632  162B  1303               	bcf	3,6	;RP1=0, select bank0
  2633  162C  00C9               	movwf	___fladd@a+1
  2634  162D  1683               	bsf	3,5	;RP0=1, select bank1
  2635  162E  1303               	bcf	3,6	;RP1=0, select bank1
  2636  162F  0820               	movf	___flsub@a^(0+128),w
  2637  1630  1283               	bcf	3,5	;RP0=0, select bank0
  2638  1631  1303               	bcf	3,6	;RP1=0, select bank0
  2639  1632  00C8               	movwf	___fladd@a
  2640  1633  120A  118A  236A  160A  118A  	fcall	___fladd
  2641  1638  1283               	bcf	3,5	;RP0=0, select bank0
  2642  1639  1303               	bcf	3,6	;RP1=0, select bank0
  2643  163A  0847               	movf	?___fladd+3,w
  2644  163B  1683               	bsf	3,5	;RP0=1, select bank1
  2645  163C  1303               	bcf	3,6	;RP1=0, select bank1
  2646  163D  00A3               	movwf	(?___flsub+3)^(0+128)
  2647  163E  1283               	bcf	3,5	;RP0=0, select bank0
  2648  163F  1303               	bcf	3,6	;RP1=0, select bank0
  2649  1640  0846               	movf	?___fladd+2,w
  2650  1641  1683               	bsf	3,5	;RP0=1, select bank1
  2651  1642  1303               	bcf	3,6	;RP1=0, select bank1
  2652  1643  00A2               	movwf	(?___flsub+2)^(0+128)
  2653  1644  1283               	bcf	3,5	;RP0=0, select bank0
  2654  1645  1303               	bcf	3,6	;RP1=0, select bank0
  2655  1646  0845               	movf	?___fladd+1,w
  2656  1647  1683               	bsf	3,5	;RP0=1, select bank1
  2657  1648  1303               	bcf	3,6	;RP1=0, select bank1
  2658  1649  00A1               	movwf	(?___flsub+1)^(0+128)
  2659  164A  1283               	bcf	3,5	;RP0=0, select bank0
  2660  164B  1303               	bcf	3,6	;RP1=0, select bank0
  2661  164C  0844               	movf	?___fladd,w
  2662  164D  1683               	bsf	3,5	;RP0=1, select bank1
  2663  164E  1303               	bcf	3,6	;RP1=0, select bank1
  2664  164F  00A0               	movwf	?___flsub^(0+128)
  2665  1650                     l686:
  2666  1650  0008               	return
  2667  1651                     __end_of___flsub:
  2668                           
  2669                           	psect	text8
  2670  036A                     __ptext8:	
  2671 ;; *************** function ___fladd *****************
  2672 ;; Defined at:
  2673 ;;		line 10 in file "D:\Programas\XC8 compiler\pic\sources\c90\common\sprcadd.c"
  2674 ;; Parameters:    Size  Location     Type
  2675 ;;  b               4   36[BANK0 ] long 
  2676 ;;  a               4   40[BANK0 ] long 
  2677 ;; Auto vars:     Size  Location     Type
  2678 ;;  grs             1   55[BANK0 ] unsigned char 
  2679 ;;  bexp            1   54[BANK0 ] unsigned char 
  2680 ;;  aexp            1   53[BANK0 ] unsigned char 
  2681 ;;  signs           1   52[BANK0 ] unsigned char 
  2682 ;; Return value:  Size  Location     Type
  2683 ;;                  4   36[BANK0 ] unsigned char 
  2684 ;; Registers used:
  2685 ;;		wreg, status,2, status,0, btemp+1
  2686 ;; Tracked objects:
  2687 ;;		On entry : 0/0
  2688 ;;		On exit  : 0/0
  2689 ;;		Unchanged: 0/0
  2690 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2691 ;;      Params:         0       8       0       0       0
  2692 ;;      Locals:         0       4       0       0       0
  2693 ;;      Temps:          0       8       0       0       0
  2694 ;;      Totals:         0      20       0       0       0
  2695 ;;Total ram usage:       20 bytes
  2696 ;; Hardware stack levels used: 1
  2697 ;; Hardware stack levels required when called: 1
  2698 ;; This function calls:
  2699 ;;		Nothing
  2700 ;; This function is called by:
  2701 ;;		_main
  2702 ;;		___flsub
  2703 ;;		_round
  2704 ;; This function uses a non-reentrant model
  2705 ;;
  2706                           
  2707                           
  2708                           ;psect for function ___fladd
  2709  036A                     ___fladd:
  2710  036A                     l2384:	
  2711                           ;incstack = 0
  2712                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  2713                           
  2714  036A  1283               	bcf	3,5	;RP0=0, select bank0
  2715  036B  1303               	bcf	3,6	;RP1=0, select bank0
  2716  036C  0847               	movf	___fladd@b+3,w
  2717  036D  3980               	andlw	128
  2718  036E  00CC               	movwf	??___fladd
  2719  036F  084C               	movf	??___fladd,w
  2720  0370  00D4               	movwf	___fladd@signs
  2721  0371                     l2386:
  2722  0371  0847               	movf	___fladd@b+3,w
  2723  0372  00CC               	movwf	??___fladd
  2724  0373  074C               	addwf	??___fladd,w
  2725  0374  00CD               	movwf	??___fladd+1
  2726  0375  084D               	movf	??___fladd+1,w
  2727  0376  00D6               	movwf	___fladd@bexp
  2728  0377                     l2388:
  2729  0377  1FC6               	btfss	___fladd@b+2,7
  2730  0378  2B7A               	goto	u2601
  2731  0379  2B7B               	goto	u2600
  2732  037A                     u2601:
  2733  037A  2B7C               	goto	l2392
  2734  037B                     u2600:
  2735  037B                     l2390:
  2736  037B  1456               	bsf	___fladd@bexp,0
  2737  037C                     l2392:
  2738  037C  0856               	movf	___fladd@bexp,w
  2739  037D  1903               	btfsc	3,2
  2740  037E  2B80               	goto	u2611
  2741  037F  2B81               	goto	u2610
  2742  0380                     u2611:
  2743  0380  2B91               	goto	l2402
  2744  0381                     u2610:
  2745  0381                     l2394:
  2746  0381  0A56               	incf	___fladd@bexp,w
  2747  0382  1D03               	btfss	3,2
  2748  0383  2B85               	goto	u2621
  2749  0384  2B86               	goto	u2620
  2750  0385                     u2621:
  2751  0385  2B8E               	goto	l2398
  2752  0386                     u2620:
  2753  0386                     l2396:
  2754  0386  3000               	movlw	0
  2755  0387  00C7               	movwf	___fladd@b+3
  2756  0388  3000               	movlw	0
  2757  0389  00C6               	movwf	___fladd@b+2
  2758  038A  3000               	movlw	0
  2759  038B  00C5               	movwf	___fladd@b+1
  2760  038C  3000               	movlw	0
  2761  038D  00C4               	movwf	___fladd@b
  2762  038E                     l2398:
  2763  038E  17C6               	bsf	___fladd@b+2,7
  2764  038F                     l2400:
  2765  038F  01C7               	clrf	___fladd@b+3
  2766  0390  2B99               	goto	l2404
  2767  0391                     l2402:
  2768  0391  3000               	movlw	0
  2769  0392  00C7               	movwf	___fladd@b+3
  2770  0393  3000               	movlw	0
  2771  0394  00C6               	movwf	___fladd@b+2
  2772  0395  3000               	movlw	0
  2773  0396  00C5               	movwf	___fladd@b+1
  2774  0397  3000               	movlw	0
  2775  0398  00C4               	movwf	___fladd@b
  2776  0399                     l2404:
  2777  0399  084B               	movf	___fladd@a+3,w
  2778  039A  3980               	andlw	128
  2779  039B  00CC               	movwf	??___fladd
  2780  039C  084C               	movf	??___fladd,w
  2781  039D  00D5               	movwf	___fladd@aexp
  2782  039E                     l2406:
  2783  039E  0855               	movf	___fladd@aexp,w
  2784  039F  0654               	xorwf	___fladd@signs,w
  2785  03A0  1903               	skipnz
  2786  03A1  2BA3               	goto	u2631
  2787  03A2  2BA4               	goto	u2630
  2788  03A3                     u2631:
  2789  03A3  2BA5               	goto	l2410
  2790  03A4                     u2630:
  2791  03A4                     l2408:
  2792  03A4  1754               	bsf	___fladd@signs,6
  2793  03A5                     l2410:
  2794  03A5  084B               	movf	___fladd@a+3,w
  2795  03A6  00CC               	movwf	??___fladd
  2796  03A7  074C               	addwf	??___fladd,w
  2797  03A8  00CD               	movwf	??___fladd+1
  2798  03A9  084D               	movf	??___fladd+1,w
  2799  03AA  00D5               	movwf	___fladd@aexp
  2800  03AB                     l2412:
  2801  03AB  1FCA               	btfss	___fladd@a+2,7
  2802  03AC  2BAE               	goto	u2641
  2803  03AD  2BAF               	goto	u2640
  2804  03AE                     u2641:
  2805  03AE  2BB0               	goto	l2416
  2806  03AF                     u2640:
  2807  03AF                     l2414:
  2808  03AF  1455               	bsf	___fladd@aexp,0
  2809  03B0                     l2416:
  2810  03B0  0855               	movf	___fladd@aexp,w
  2811  03B1  1903               	btfsc	3,2
  2812  03B2  2BB4               	goto	u2651
  2813  03B3  2BB5               	goto	u2650
  2814  03B4                     u2651:
  2815  03B4  2BC5               	goto	l2426
  2816  03B5                     u2650:
  2817  03B5                     l2418:
  2818  03B5  0A55               	incf	___fladd@aexp,w
  2819  03B6  1D03               	btfss	3,2
  2820  03B7  2BB9               	goto	u2661
  2821  03B8  2BBA               	goto	u2660
  2822  03B9                     u2661:
  2823  03B9  2BC2               	goto	l2422
  2824  03BA                     u2660:
  2825  03BA                     l2420:
  2826  03BA  3000               	movlw	0
  2827  03BB  00CB               	movwf	___fladd@a+3
  2828  03BC  3000               	movlw	0
  2829  03BD  00CA               	movwf	___fladd@a+2
  2830  03BE  3000               	movlw	0
  2831  03BF  00C9               	movwf	___fladd@a+1
  2832  03C0  3000               	movlw	0
  2833  03C1  00C8               	movwf	___fladd@a
  2834  03C2                     l2422:
  2835  03C2  17CA               	bsf	___fladd@a+2,7
  2836  03C3                     l2424:
  2837  03C3  01CB               	clrf	___fladd@a+3
  2838  03C4  2BCD               	goto	l640
  2839  03C5                     l2426:
  2840  03C5  3000               	movlw	0
  2841  03C6  00CB               	movwf	___fladd@a+3
  2842  03C7  3000               	movlw	0
  2843  03C8  00CA               	movwf	___fladd@a+2
  2844  03C9  3000               	movlw	0
  2845  03CA  00C9               	movwf	___fladd@a+1
  2846  03CB  3000               	movlw	0
  2847  03CC  00C8               	movwf	___fladd@a
  2848  03CD                     l640:
  2849  03CD  0856               	movf	___fladd@bexp,w
  2850  03CE  0255               	subwf	___fladd@aexp,w
  2851  03CF  1803               	skipnc
  2852  03D0  2BD2               	goto	u2671
  2853  03D1  2BD3               	goto	u2670
  2854  03D2                     u2671:
  2855  03D2  2C17               	goto	l2462
  2856  03D3                     u2670:
  2857  03D3                     l2428:
  2858  03D3  1F54               	btfss	___fladd@signs,6
  2859  03D4  2BD6               	goto	u2681
  2860  03D5  2BD7               	goto	u2680
  2861  03D6                     u2681:
  2862  03D6  2BDB               	goto	l2432
  2863  03D7                     u2680:
  2864  03D7                     l2430:
  2865  03D7  3080               	movlw	128
  2866  03D8  00CC               	movwf	??___fladd
  2867  03D9  084C               	movf	??___fladd,w
  2868  03DA  06D4               	xorwf	___fladd@signs,f
  2869  03DB                     l2432:
  2870  03DB  0856               	movf	___fladd@bexp,w
  2871  03DC  00CC               	movwf	??___fladd
  2872  03DD  084C               	movf	??___fladd,w
  2873  03DE  00D7               	movwf	___fladd@grs
  2874  03DF                     l2434:
  2875  03DF  0855               	movf	___fladd@aexp,w
  2876  03E0  00CC               	movwf	??___fladd
  2877  03E1  084C               	movf	??___fladd,w
  2878  03E2  00D6               	movwf	___fladd@bexp
  2879  03E3                     l2436:
  2880  03E3  0857               	movf	___fladd@grs,w
  2881  03E4  00CC               	movwf	??___fladd
  2882  03E5  084C               	movf	??___fladd,w
  2883  03E6  00D5               	movwf	___fladd@aexp
  2884  03E7                     l2438:
  2885  03E7  0844               	movf	___fladd@b,w
  2886  03E8  00CC               	movwf	??___fladd
  2887  03E9  084C               	movf	??___fladd,w
  2888  03EA  00D7               	movwf	___fladd@grs
  2889  03EB                     l2440:
  2890  03EB  0848               	movf	___fladd@a,w
  2891  03EC  00CC               	movwf	??___fladd
  2892  03ED  084C               	movf	??___fladd,w
  2893  03EE  00C4               	movwf	___fladd@b
  2894  03EF                     l2442:
  2895  03EF  0857               	movf	___fladd@grs,w
  2896  03F0  00CC               	movwf	??___fladd
  2897  03F1  084C               	movf	??___fladd,w
  2898  03F2  00C8               	movwf	___fladd@a
  2899  03F3                     l2444:
  2900  03F3  0845               	movf	___fladd@b+1,w
  2901  03F4  00CC               	movwf	??___fladd
  2902  03F5  084C               	movf	??___fladd,w
  2903  03F6  00D7               	movwf	___fladd@grs
  2904  03F7                     l2446:
  2905  03F7  0849               	movf	___fladd@a+1,w
  2906  03F8  00CC               	movwf	??___fladd
  2907  03F9  084C               	movf	??___fladd,w
  2908  03FA  00C5               	movwf	___fladd@b+1
  2909  03FB                     l2448:
  2910  03FB  0857               	movf	___fladd@grs,w
  2911  03FC  00CC               	movwf	??___fladd
  2912  03FD  084C               	movf	??___fladd,w
  2913  03FE  00C9               	movwf	___fladd@a+1
  2914  03FF                     l2450:
  2915  03FF  0846               	movf	___fladd@b+2,w
  2916  0400  00CC               	movwf	??___fladd
  2917  0401  084C               	movf	??___fladd,w
  2918  0402  00D7               	movwf	___fladd@grs
  2919  0403                     l2452:
  2920  0403  084A               	movf	___fladd@a+2,w
  2921  0404  00CC               	movwf	??___fladd
  2922  0405  084C               	movf	??___fladd,w
  2923  0406  00C6               	movwf	___fladd@b+2
  2924  0407                     l2454:
  2925  0407  0857               	movf	___fladd@grs,w
  2926  0408  00CC               	movwf	??___fladd
  2927  0409  084C               	movf	??___fladd,w
  2928  040A  00CA               	movwf	___fladd@a+2
  2929  040B                     l2456:
  2930  040B  0847               	movf	___fladd@b+3,w
  2931  040C  00CC               	movwf	??___fladd
  2932  040D  084C               	movf	??___fladd,w
  2933  040E  00D7               	movwf	___fladd@grs
  2934  040F                     l2458:
  2935  040F  084B               	movf	___fladd@a+3,w
  2936  0410  00CC               	movwf	??___fladd
  2937  0411  084C               	movf	??___fladd,w
  2938  0412  00C7               	movwf	___fladd@b+3
  2939  0413                     l2460:
  2940  0413  0857               	movf	___fladd@grs,w
  2941  0414  00CC               	movwf	??___fladd
  2942  0415  084C               	movf	??___fladd,w
  2943  0416  00CB               	movwf	___fladd@a+3
  2944  0417                     l2462:
  2945  0417  01D7               	clrf	___fladd@grs
  2946  0418                     l2464:
  2947  0418  0855               	movf	___fladd@aexp,w
  2948  0419  00CC               	movwf	??___fladd
  2949  041A  01CD               	clrf	??___fladd+1
  2950  041B  084D               	movf	??___fladd+1,w
  2951  041C  00CF               	movwf	??___fladd+3
  2952  041D  0856               	movf	___fladd@bexp,w
  2953  041E  024C               	subwf	??___fladd,w
  2954  041F  00CE               	movwf	??___fladd+2
  2955  0420  1C03               	skipc
  2956  0421  03CF               	decf	??___fladd+3,f
  2957  0422  084F               	movf	??___fladd+3,w
  2958  0423  3A80               	xorlw	128
  2959  0424  00FF               	movwf	btemp+1
  2960  0425  3080               	movlw	128
  2961  0426  027F               	subwf	btemp+1,w
  2962  0427  1D03               	skipz
  2963  0428  2C2B               	goto	u2695
  2964  0429  301A               	movlw	26
  2965  042A  024E               	subwf	??___fladd+2,w
  2966  042B                     u2695:
  2967  042B  1C03               	skipc
  2968  042C  2C2E               	goto	u2691
  2969  042D  2C2F               	goto	u2690
  2970  042E                     u2691:
  2971  042E  2C6C               	goto	l2480
  2972  042F                     u2690:
  2973  042F                     l2466:
  2974  042F  1283               	bcf	3,5	;RP0=0, select bank0
  2975  0430  1303               	bcf	3,6	;RP1=0, select bank0
  2976  0431  0847               	movf	___fladd@b+3,w
  2977  0432  0446               	iorwf	___fladd@b+2,w
  2978  0433  0445               	iorwf	___fladd@b+1,w
  2979  0434  0444               	iorwf	___fladd@b,w
  2980  0435  1D03               	skipz
  2981  0436  2C38               	goto	u2701
  2982  0437  2C3A               	goto	u2700
  2983  0438                     u2701:
  2984  0438  3001               	movlw	1
  2985  0439  2C3B               	goto	u2710
  2986  043A                     u2700:
  2987  043A  3000               	movlw	0
  2988  043B                     u2710:
  2989  043B  00CC               	movwf	??___fladd
  2990  043C  084C               	movf	??___fladd,w
  2991  043D  00D7               	movwf	___fladd@grs
  2992  043E  3000               	movlw	0
  2993  043F  00C7               	movwf	___fladd@b+3
  2994  0440  3000               	movlw	0
  2995  0441  00C6               	movwf	___fladd@b+2
  2996  0442  3000               	movlw	0
  2997  0443  00C5               	movwf	___fladd@b+1
  2998  0444  3000               	movlw	0
  2999  0445  00C4               	movwf	___fladd@b
  3000  0446  0855               	movf	___fladd@aexp,w
  3001  0447  00CC               	movwf	??___fladd
  3002  0448  084C               	movf	??___fladd,w
  3003  0449  00D6               	movwf	___fladd@bexp
  3004  044A  2C74               	goto	l644
  3005  044B                     l646:
  3006  044B  1C57               	btfss	___fladd@grs,0
  3007  044C  2C4E               	goto	u2721
  3008  044D  2C4F               	goto	u2720
  3009  044E                     u2721:
  3010  044E  2C58               	goto	l2470
  3011  044F                     u2720:
  3012  044F                     l2468:
  3013  044F  0857               	movf	___fladd@grs,w
  3014  0450  00CC               	movwf	??___fladd
  3015  0451  1003               	clrc
  3016  0452  0C4C               	rrf	??___fladd,w
  3017  0453  3801               	iorlw	1
  3018  0454  00CD               	movwf	??___fladd+1
  3019  0455  084D               	movf	??___fladd+1,w
  3020  0456  00D7               	movwf	___fladd@grs
  3021  0457  2C5A               	goto	l2472
  3022  0458                     l2470:
  3023  0458  1003               	clrc
  3024  0459  0CD7               	rrf	___fladd@grs,f
  3025  045A                     l2472:
  3026  045A  1C44               	btfss	___fladd@b,0
  3027  045B  2C5D               	goto	u2731
  3028  045C  2C5E               	goto	u2730
  3029  045D                     u2731:
  3030  045D  2C5F               	goto	l2476
  3031  045E                     u2730:
  3032  045E                     l2474:
  3033  045E  17D7               	bsf	___fladd@grs,7
  3034  045F                     l2476:
  3035  045F  3001               	movlw	1
  3036  0460  00CC               	movwf	??___fladd
  3037  0461                     u2745:
  3038  0461  0D47               	rlf	___fladd@b+3,w
  3039  0462  0CC7               	rrf	___fladd@b+3,f
  3040  0463  0CC6               	rrf	___fladd@b+2,f
  3041  0464  0CC5               	rrf	___fladd@b+1,f
  3042  0465  0CC4               	rrf	___fladd@b,f
  3043  0466  0BCC               	decfsz	??___fladd& (0+127),f
  3044  0467  2C61               	goto	u2745
  3045  0468                     l2478:
  3046  0468  3001               	movlw	1
  3047  0469  00CC               	movwf	??___fladd
  3048  046A  084C               	movf	??___fladd,w
  3049  046B  07D6               	addwf	___fladd@bexp,f
  3050  046C                     l2480:
  3051  046C  1283               	bcf	3,5	;RP0=0, select bank0
  3052  046D  1303               	bcf	3,6	;RP1=0, select bank0
  3053  046E  0855               	movf	___fladd@aexp,w
  3054  046F  0256               	subwf	___fladd@bexp,w
  3055  0470  1C03               	skipc
  3056  0471  2C73               	goto	u2751
  3057  0472  2C74               	goto	u2750
  3058  0473                     u2751:
  3059  0473  2C4B               	goto	l646
  3060  0474                     u2750:
  3061  0474                     l644:
  3062  0474  1B54               	btfsc	___fladd@signs,6
  3063  0475  2C77               	goto	u2761
  3064  0476  2C78               	goto	u2760
  3065  0477                     u2761:
  3066  0477  2CC3               	goto	l2506
  3067  0478                     u2760:
  3068  0478                     l2482:
  3069  0478  0856               	movf	___fladd@bexp,w
  3070  0479  1D03               	btfss	3,2
  3071  047A  2C7C               	goto	u2771
  3072  047B  2C7D               	goto	u2770
  3073  047C                     u2771:
  3074  047C  2C86               	goto	l2488
  3075  047D                     u2770:
  3076  047D                     l2484:
  3077  047D  3000               	movlw	0
  3078  047E  00C7               	movwf	?___fladd+3
  3079  047F  3000               	movlw	0
  3080  0480  00C6               	movwf	?___fladd+2
  3081  0481  3000               	movlw	0
  3082  0482  00C5               	movwf	?___fladd+1
  3083  0483  3000               	movlw	0
  3084  0484  00C4               	movwf	?___fladd
  3085  0485  2DF1               	goto	l653
  3086  0486                     l2488:
  3087  0486  0848               	movf	___fladd@a,w
  3088  0487  07C4               	addwf	___fladd@b,f
  3089  0488  0849               	movf	___fladd@a+1,w
  3090  0489  1103               	clrz
  3091  048A  1803               	skipnc
  3092  048B  3E01               	addlw	1
  3093  048C  1903               	skipnz
  3094  048D  2C8F               	goto	u2781
  3095  048E  07C5               	addwf	___fladd@b+1,f
  3096  048F                     u2781:
  3097  048F  084A               	movf	___fladd@a+2,w
  3098  0490  1103               	clrz
  3099  0491  1803               	skipnc
  3100  0492  3E01               	addlw	1
  3101  0493  1903               	skipnz
  3102  0494  2C96               	goto	u2782
  3103  0495  07C6               	addwf	___fladd@b+2,f
  3104  0496                     u2782:
  3105  0496  084B               	movf	___fladd@a+3,w
  3106  0497  1103               	clrz
  3107  0498  1803               	skipnc
  3108  0499  3E01               	addlw	1
  3109  049A  1903               	skipnz
  3110  049B  2C9D               	goto	u2783
  3111  049C  07C7               	addwf	___fladd@b+3,f
  3112  049D                     u2783:
  3113  049D                     l2490:
  3114  049D  1C47               	btfss	___fladd@b+3,0
  3115  049E  2CA0               	goto	u2791
  3116  049F  2CA1               	goto	u2790
  3117  04A0                     u2791:
  3118  04A0  2D77               	goto	l2540
  3119  04A1                     u2790:
  3120  04A1                     l2492:
  3121  04A1  1C57               	btfss	___fladd@grs,0
  3122  04A2  2CA4               	goto	u2801
  3123  04A3  2CA5               	goto	u2800
  3124  04A4                     u2801:
  3125  04A4  2CAE               	goto	l2496
  3126  04A5                     u2800:
  3127  04A5                     l2494:
  3128  04A5  0857               	movf	___fladd@grs,w
  3129  04A6  00CC               	movwf	??___fladd
  3130  04A7  1003               	clrc
  3131  04A8  0C4C               	rrf	??___fladd,w
  3132  04A9  3801               	iorlw	1
  3133  04AA  00CD               	movwf	??___fladd+1
  3134  04AB  084D               	movf	??___fladd+1,w
  3135  04AC  00D7               	movwf	___fladd@grs
  3136  04AD  2CB0               	goto	l2498
  3137  04AE                     l2496:
  3138  04AE  1003               	clrc
  3139  04AF  0CD7               	rrf	___fladd@grs,f
  3140  04B0                     l2498:
  3141  04B0  1C44               	btfss	___fladd@b,0
  3142  04B1  2CB3               	goto	u2811
  3143  04B2  2CB4               	goto	u2810
  3144  04B3                     u2811:
  3145  04B3  2CB5               	goto	l2502
  3146  04B4                     u2810:
  3147  04B4                     l2500:
  3148  04B4  17D7               	bsf	___fladd@grs,7
  3149  04B5                     l2502:
  3150  04B5  3001               	movlw	1
  3151  04B6  00CC               	movwf	??___fladd
  3152  04B7                     u2825:
  3153  04B7  0D47               	rlf	___fladd@b+3,w
  3154  04B8  0CC7               	rrf	___fladd@b+3,f
  3155  04B9  0CC6               	rrf	___fladd@b+2,f
  3156  04BA  0CC5               	rrf	___fladd@b+1,f
  3157  04BB  0CC4               	rrf	___fladd@b,f
  3158  04BC  0BCC               	decfsz	??___fladd& (0+127),f
  3159  04BD  2CB7               	goto	u2825
  3160  04BE                     l2504:
  3161  04BE  3001               	movlw	1
  3162  04BF  00CC               	movwf	??___fladd
  3163  04C0  084C               	movf	??___fladd,w
  3164  04C1  07D6               	addwf	___fladd@bexp,f
  3165  04C2  2D77               	goto	l2540
  3166  04C3                     l2506:
  3167  04C3  0847               	movf	___fladd@b+3,w
  3168  04C4  3A80               	xorlw	128
  3169  04C5  00FF               	movwf	btemp+1
  3170  04C6  084B               	movf	___fladd@a+3,w
  3171  04C7  3A80               	xorlw	128
  3172  04C8  027F               	subwf	btemp+1,w
  3173  04C9  1D03               	skipz
  3174  04CA  2CD5               	goto	u2833
  3175  04CB  084A               	movf	___fladd@a+2,w
  3176  04CC  0246               	subwf	___fladd@b+2,w
  3177  04CD  1D03               	skipz
  3178  04CE  2CD5               	goto	u2833
  3179  04CF  0849               	movf	___fladd@a+1,w
  3180  04D0  0245               	subwf	___fladd@b+1,w
  3181  04D1  1D03               	skipz
  3182  04D2  2CD5               	goto	u2833
  3183  04D3  0848               	movf	___fladd@a,w
  3184  04D4  0244               	subwf	___fladd@b,w
  3185  04D5                     u2833:
  3186  04D5  1803               	skipnc
  3187  04D6  2CD8               	goto	u2831
  3188  04D7  2CD9               	goto	u2830
  3189  04D8                     u2831:
  3190  04D8  2D31               	goto	l2516
  3191  04D9                     u2830:
  3192  04D9                     l2508:
  3193  04D9  30FF               	movlw	255
  3194  04DA  00CC               	movwf	??___fladd
  3195  04DB  30FF               	movlw	255
  3196  04DC  00CD               	movwf	??___fladd+1
  3197  04DD  30FF               	movlw	255
  3198  04DE  00CE               	movwf	??___fladd+2
  3199  04DF  30FF               	movlw	255
  3200  04E0  00CF               	movwf	??___fladd+3
  3201  04E1  0848               	movf	___fladd@a,w
  3202  04E2  00D0               	movwf	??___fladd+4
  3203  04E3  0849               	movf	___fladd@a+1,w
  3204  04E4  00D1               	movwf	??___fladd+5
  3205  04E5  084A               	movf	___fladd@a+2,w
  3206  04E6  00D2               	movwf	??___fladd+6
  3207  04E7  084B               	movf	___fladd@a+3,w
  3208  04E8  00D3               	movwf	??___fladd+7
  3209  04E9  0844               	movf	___fladd@b,w
  3210  04EA  02D0               	subwf	??___fladd+4,f
  3211  04EB  0845               	movf	___fladd@b+1,w
  3212  04EC  1C03               	skipc
  3213  04ED  0F45               	incfsz	___fladd@b+1,w
  3214  04EE  2CF0               	goto	u2841
  3215  04EF  2CF1               	goto	u2842
  3216  04F0                     u2841:
  3217  04F0  02D1               	subwf	??___fladd+5,f
  3218  04F1                     u2842:
  3219  04F1  0846               	movf	___fladd@b+2,w
  3220  04F2  1C03               	skipc
  3221  04F3  0F46               	incfsz	___fladd@b+2,w
  3222  04F4  2CF6               	goto	u2843
  3223  04F5  2CF7               	goto	u2844
  3224  04F6                     u2843:
  3225  04F6  02D2               	subwf	??___fladd+6,f
  3226  04F7                     u2844:
  3227  04F7  0847               	movf	___fladd@b+3,w
  3228  04F8  1C03               	skipc
  3229  04F9  0F47               	incfsz	___fladd@b+3,w
  3230  04FA  2CFC               	goto	u2845
  3231  04FB  2CFD               	goto	u2846
  3232  04FC                     u2845:
  3233  04FC  02D3               	subwf	??___fladd+7,f
  3234  04FD                     u2846:
  3235  04FD  0850               	movf	??___fladd+4,w
  3236  04FE  07CC               	addwf	??___fladd,f
  3237  04FF  0851               	movf	??___fladd+5,w
  3238  0500  1803               	skipnc
  3239  0501  0F51               	incfsz	??___fladd+5,w
  3240  0502  2D04               	goto	u2850
  3241  0503  2D05               	goto	u2851
  3242  0504                     u2850:
  3243  0504  07CD               	addwf	??___fladd+1,f
  3244  0505                     u2851:
  3245  0505  0852               	movf	??___fladd+6,w
  3246  0506  1803               	skipnc
  3247  0507  0F52               	incfsz	??___fladd+6,w
  3248  0508  2D0A               	goto	u2852
  3249  0509  2D0B               	goto	u2853
  3250  050A                     u2852:
  3251  050A  07CE               	addwf	??___fladd+2,f
  3252  050B                     u2853:
  3253  050B  0853               	movf	??___fladd+7,w
  3254  050C  1803               	skipnc
  3255  050D  0A53               	incf	??___fladd+7,w
  3256  050E  07CF               	addwf	??___fladd+3,f
  3257  050F  084F               	movf	??___fladd+3,w
  3258  0510  00C7               	movwf	___fladd@b+3
  3259  0511  084E               	movf	??___fladd+2,w
  3260  0512  00C6               	movwf	___fladd@b+2
  3261  0513  084D               	movf	??___fladd+1,w
  3262  0514  00C5               	movwf	___fladd@b+1
  3263  0515  084C               	movf	??___fladd,w
  3264  0516  00C4               	movwf	___fladd@b
  3265  0517                     l2510:
  3266  0517  3080               	movlw	128
  3267  0518  00CC               	movwf	??___fladd
  3268  0519  084C               	movf	??___fladd,w
  3269  051A  06D4               	xorwf	___fladd@signs,f
  3270  051B  09D7               	comf	___fladd@grs,f
  3271  051C  0AD7               	incf	___fladd@grs,f
  3272  051D                     l2512:
  3273  051D  0857               	movf	___fladd@grs,w
  3274  051E  1D03               	btfss	3,2
  3275  051F  2D21               	goto	u2861
  3276  0520  2D22               	goto	u2860
  3277  0521                     u2861:
  3278  0521  2D3F               	goto	l661
  3279  0522                     u2860:
  3280  0522                     l2514:
  3281  0522  3001               	movlw	1
  3282  0523  07C4               	addwf	___fladd@b,f
  3283  0524  3000               	movlw	0
  3284  0525  1803               	skipnc
  3285  0526  3001               	movlw	1
  3286  0527  07C5               	addwf	___fladd@b+1,f
  3287  0528  3000               	movlw	0
  3288  0529  1803               	skipnc
  3289  052A  3001               	movlw	1
  3290  052B  07C6               	addwf	___fladd@b+2,f
  3291  052C  3000               	movlw	0
  3292  052D  1803               	skipnc
  3293  052E  3001               	movlw	1
  3294  052F  07C7               	addwf	___fladd@b+3,f
  3295  0530  2D3F               	goto	l661
  3296  0531                     l2516:
  3297  0531  0848               	movf	___fladd@a,w
  3298  0532  02C4               	subwf	___fladd@b,f
  3299  0533  0849               	movf	___fladd@a+1,w
  3300  0534  1C03               	skipc
  3301  0535  0F49               	incfsz	___fladd@a+1,w
  3302  0536  02C5               	subwf	___fladd@b+1,f
  3303  0537  084A               	movf	___fladd@a+2,w
  3304  0538  1C03               	skipc
  3305  0539  0F4A               	incfsz	___fladd@a+2,w
  3306  053A  02C6               	subwf	___fladd@b+2,f
  3307  053B  084B               	movf	___fladd@a+3,w
  3308  053C  1C03               	skipc
  3309  053D  0F4B               	incfsz	___fladd@a+3,w
  3310  053E  02C7               	subwf	___fladd@b+3,f
  3311  053F                     l661:
  3312  053F  0847               	movf	___fladd@b+3,w
  3313  0540  0446               	iorwf	___fladd@b+2,w
  3314  0541  0445               	iorwf	___fladd@b+1,w
  3315  0542  0444               	iorwf	___fladd@b,w
  3316  0543  1D03               	skipz
  3317  0544  2D46               	goto	u2871
  3318  0545  2D47               	goto	u2870
  3319  0546                     u2871:
  3320  0546  2D73               	goto	l2538
  3321  0547                     u2870:
  3322  0547                     l2518:
  3323  0547  0857               	movf	___fladd@grs,w
  3324  0548  1D03               	btfss	3,2
  3325  0549  2D4B               	goto	u2881
  3326  054A  2D4C               	goto	u2880
  3327  054B                     u2881:
  3328  054B  2D73               	goto	l2538
  3329  054C                     u2880:
  3330  054C                     l2520:
  3331  054C  3000               	movlw	0
  3332  054D  00C7               	movwf	?___fladd+3
  3333  054E  3000               	movlw	0
  3334  054F  00C6               	movwf	?___fladd+2
  3335  0550  3000               	movlw	0
  3336  0551  00C5               	movwf	?___fladd+1
  3337  0552  3000               	movlw	0
  3338  0553  00C4               	movwf	?___fladd
  3339  0554  2DF1               	goto	l653
  3340  0555                     l2524:
  3341  0555  3001               	movlw	1
  3342  0556  00CC               	movwf	??___fladd
  3343  0557                     u2895:
  3344  0557  1003               	clrc
  3345  0558  0DC4               	rlf	___fladd@b,f
  3346  0559  0DC5               	rlf	___fladd@b+1,f
  3347  055A  0DC6               	rlf	___fladd@b+2,f
  3348  055B  0DC7               	rlf	___fladd@b+3,f
  3349  055C  0BCC               	decfsz	??___fladd,f
  3350  055D  2D57               	goto	u2895
  3351  055E                     l2526:
  3352  055E  1FD7               	btfss	___fladd@grs,7
  3353  055F  2D61               	goto	u2901
  3354  0560  2D62               	goto	u2900
  3355  0561                     u2901:
  3356  0561  2D63               	goto	l665
  3357  0562                     u2900:
  3358  0562                     l2528:
  3359  0562  1444               	bsf	___fladd@b,0
  3360  0563                     l665:
  3361  0563  1C57               	btfss	___fladd@grs,0
  3362  0564  2D66               	goto	u2911
  3363  0565  2D67               	goto	u2910
  3364  0566                     u2911:
  3365  0566  2D6A               	goto	l2532
  3366  0567                     u2910:
  3367  0567                     l2530:
  3368  0567  1403               	setc
  3369  0568  0DD7               	rlf	___fladd@grs,f
  3370  0569  2D6C               	goto	l2534
  3371  056A                     l2532:
  3372  056A  1003               	clrc
  3373  056B  0DD7               	rlf	___fladd@grs,f
  3374  056C                     l2534:
  3375  056C  0856               	movf	___fladd@bexp,w
  3376  056D  1903               	btfsc	3,2
  3377  056E  2D70               	goto	u2921
  3378  056F  2D71               	goto	u2920
  3379  0570                     u2921:
  3380  0570  2D73               	goto	l2538
  3381  0571                     u2920:
  3382  0571                     l2536:
  3383  0571  3001               	movlw	1
  3384  0572  02D6               	subwf	___fladd@bexp,f
  3385  0573                     l2538:
  3386  0573  1FC6               	btfss	___fladd@b+2,7
  3387  0574  2D76               	goto	u2931
  3388  0575  2D77               	goto	u2930
  3389  0576                     u2931:
  3390  0576  2D55               	goto	l2524
  3391  0577                     u2930:
  3392  0577                     l2540:
  3393  0577  01D5               	clrf	___fladd@aexp
  3394  0578                     l2542:
  3395  0578  1FD7               	btfss	___fladd@grs,7
  3396  0579  2D7B               	goto	u2941
  3397  057A  2D7C               	goto	u2940
  3398  057B                     u2941:
  3399  057B  2D8A               	goto	l2550
  3400  057C                     u2940:
  3401  057C                     l2544:
  3402  057C  0857               	movf	___fladd@grs,w
  3403  057D  397F               	andlw	127
  3404  057E  1903               	btfsc	3,2
  3405  057F  2D81               	goto	u2951
  3406  0580  2D82               	goto	u2950
  3407  0581                     u2951:
  3408  0581  2D85               	goto	l671
  3409  0582                     u2950:
  3410  0582                     l2546:
  3411  0582  01D5               	clrf	___fladd@aexp
  3412  0583  0AD5               	incf	___fladd@aexp,f
  3413  0584  2D8A               	goto	l2550
  3414  0585                     l671:
  3415  0585  1C44               	btfss	___fladd@b,0
  3416  0586  2D88               	goto	u2961
  3417  0587  2D89               	goto	u2960
  3418  0588                     u2961:
  3419  0588  2D8A               	goto	l2550
  3420  0589                     u2960:
  3421  0589  2D82               	goto	l2546
  3422  058A                     l2550:
  3423  058A  0855               	movf	___fladd@aexp,w
  3424  058B  1903               	btfsc	3,2
  3425  058C  2D8E               	goto	u2971
  3426  058D  2D8F               	goto	u2970
  3427  058E                     u2971:
  3428  058E  2DC3               	goto	l674
  3429  058F                     u2970:
  3430  058F                     l2552:
  3431  058F  3001               	movlw	1
  3432  0590  07C4               	addwf	___fladd@b,f
  3433  0591  3000               	movlw	0
  3434  0592  1803               	skipnc
  3435  0593  3001               	movlw	1
  3436  0594  07C5               	addwf	___fladd@b+1,f
  3437  0595  3000               	movlw	0
  3438  0596  1803               	skipnc
  3439  0597  3001               	movlw	1
  3440  0598  07C6               	addwf	___fladd@b+2,f
  3441  0599  3000               	movlw	0
  3442  059A  1803               	skipnc
  3443  059B  3001               	movlw	1
  3444  059C  07C7               	addwf	___fladd@b+3,f
  3445  059D                     l2554:
  3446  059D  1C47               	btfss	___fladd@b+3,0
  3447  059E  2DA0               	goto	u2981
  3448  059F  2DA1               	goto	u2980
  3449  05A0                     u2981:
  3450  05A0  2DC3               	goto	l674
  3451  05A1                     u2980:
  3452  05A1                     l2556:
  3453  05A1  0844               	movf	___fladd@b,w
  3454  05A2  00CC               	movwf	??___fladd
  3455  05A3  0845               	movf	___fladd@b+1,w
  3456  05A4  00CD               	movwf	??___fladd+1
  3457  05A5  0846               	movf	___fladd@b+2,w
  3458  05A6  00CE               	movwf	??___fladd+2
  3459  05A7  0847               	movf	___fladd@b+3,w
  3460  05A8  00CF               	movwf	??___fladd+3
  3461  05A9  3001               	movlw	1
  3462  05AA  00D0               	movwf	??___fladd+4
  3463  05AB                     u2995:
  3464  05AB  0D4F               	rlf	??___fladd+3,w
  3465  05AC  0CCF               	rrf	??___fladd+3,f
  3466  05AD  0CCE               	rrf	??___fladd+2,f
  3467  05AE  0CCD               	rrf	??___fladd+1,f
  3468  05AF  0CCC               	rrf	??___fladd,f
  3469  05B0                     u2990:
  3470  05B0  0BD0               	decfsz	??___fladd+4,f
  3471  05B1  2DAB               	goto	u2995
  3472  05B2  084F               	movf	??___fladd+3,w
  3473  05B3  00C7               	movwf	___fladd@b+3
  3474  05B4  084E               	movf	??___fladd+2,w
  3475  05B5  00C6               	movwf	___fladd@b+2
  3476  05B6  084D               	movf	??___fladd+1,w
  3477  05B7  00C5               	movwf	___fladd@b+1
  3478  05B8  084C               	movf	??___fladd,w
  3479  05B9  00C4               	movwf	___fladd@b
  3480  05BA  0A56               	incf	___fladd@bexp,w
  3481  05BB  1903               	btfsc	3,2
  3482  05BC  2DBE               	goto	u3001
  3483  05BD  2DBF               	goto	u3000
  3484  05BE                     u3001:
  3485  05BE  2DC3               	goto	l674
  3486  05BF                     u3000:
  3487  05BF                     l2558:
  3488  05BF  3001               	movlw	1
  3489  05C0  00CC               	movwf	??___fladd
  3490  05C1  084C               	movf	??___fladd,w
  3491  05C2  07D6               	addwf	___fladd@bexp,f
  3492  05C3                     l674:
  3493  05C3  0A56               	incf	___fladd@bexp,w
  3494  05C4  1903               	btfsc	3,2
  3495  05C5  2DC7               	goto	u3011
  3496  05C6  2DC8               	goto	u3010
  3497  05C7                     u3011:
  3498  05C7  2DCD               	goto	l2562
  3499  05C8                     u3010:
  3500  05C8                     l2560:
  3501  05C8  0856               	movf	___fladd@bexp,w
  3502  05C9  1D03               	btfss	3,2
  3503  05CA  2DCC               	goto	u3021
  3504  05CB  2DCD               	goto	u3020
  3505  05CC                     u3021:
  3506  05CC  2DDB               	goto	l2568
  3507  05CD                     u3020:
  3508  05CD                     l2562:
  3509  05CD  3000               	movlw	0
  3510  05CE  00C7               	movwf	___fladd@b+3
  3511  05CF  3000               	movlw	0
  3512  05D0  00C6               	movwf	___fladd@b+2
  3513  05D1  3000               	movlw	0
  3514  05D2  00C5               	movwf	___fladd@b+1
  3515  05D3  3000               	movlw	0
  3516  05D4  00C4               	movwf	___fladd@b
  3517  05D5                     l2564:
  3518  05D5  0856               	movf	___fladd@bexp,w
  3519  05D6  1D03               	btfss	3,2
  3520  05D7  2DD9               	goto	u3031
  3521  05D8  2DDA               	goto	u3030
  3522  05D9                     u3031:
  3523  05D9  2DDB               	goto	l2568
  3524  05DA                     u3030:
  3525  05DA                     l2566:
  3526  05DA  01D4               	clrf	___fladd@signs
  3527  05DB                     l2568:
  3528  05DB  1C56               	btfss	___fladd@bexp,0
  3529  05DC  2DDE               	goto	u3041
  3530  05DD  2DDF               	goto	u3040
  3531  05DE                     u3041:
  3532  05DE  2DE1               	goto	l2572
  3533  05DF                     u3040:
  3534  05DF                     l2570:
  3535  05DF  17C6               	bsf	___fladd@b+2,7
  3536  05E0  2DE5               	goto	l682
  3537  05E1                     l2572:
  3538  05E1  307F               	movlw	127
  3539  05E2  00CC               	movwf	??___fladd
  3540  05E3  084C               	movf	??___fladd,w
  3541  05E4  05C6               	andwf	___fladd@b+2,f
  3542  05E5                     l682:
  3543  05E5  0856               	movf	___fladd@bexp,w
  3544  05E6  00CC               	movwf	??___fladd
  3545  05E7  1003               	clrc
  3546  05E8  0C4C               	rrf	??___fladd,w
  3547  05E9  00CD               	movwf	??___fladd+1
  3548  05EA  084D               	movf	??___fladd+1,w
  3549  05EB  00C7               	movwf	___fladd@b+3
  3550  05EC                     l2574:
  3551  05EC  1FD4               	btfss	___fladd@signs,7
  3552  05ED  2DEF               	goto	u3051
  3553  05EE  2DF0               	goto	u3050
  3554  05EF                     u3051:
  3555  05EF  2DF1               	goto	l683
  3556  05F0                     u3050:
  3557  05F0                     l2576:
  3558  05F0  17C7               	bsf	___fladd@b+3,7
  3559  05F1                     l683:
  3560  05F1                     l653:
  3561  05F1  0008               	return
  3562  05F2                     __end_of___fladd:
  3563                           
  3564                           	psect	text9
  3565  1749                     __ptext9:	
  3566 ;; *************** function _imprime_tela_main *****************
  3567 ;; Defined at:
  3568 ;;		line 90 in file "main.c"
  3569 ;; Parameters:    Size  Location     Type
  3570 ;;		None
  3571 ;; Auto vars:     Size  Location     Type
  3572 ;;		None
  3573 ;; Return value:  Size  Location     Type
  3574 ;;                  1    wreg      void 
  3575 ;; Registers used:
  3576 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3577 ;; Tracked objects:
  3578 ;;		On entry : 0/0
  3579 ;;		On exit  : 0/0
  3580 ;;		Unchanged: 0/0
  3581 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3582 ;;      Params:         0       0       0       0       0
  3583 ;;      Locals:         0       0       0       0       0
  3584 ;;      Temps:          0       1       0       0       0
  3585 ;;      Totals:         0       1       0       0       0
  3586 ;;Total ram usage:        1 bytes
  3587 ;; Hardware stack levels used: 1
  3588 ;; Hardware stack levels required when called: 4
  3589 ;; This function calls:
  3590 ;;		_LCD_Goto
  3591 ;;		_LCD_Print
  3592 ;;		_sprintf
  3593 ;; This function is called by:
  3594 ;;		_main
  3595 ;; This function uses a non-reentrant model
  3596 ;;
  3597                           
  3598                           
  3599                           ;psect for function _imprime_tela_main
  3600  1749                     _imprime_tela_main:
  3601  1749                     l3648:	
  3602                           ;incstack = 0
  3603                           ; Regs used in _imprime_tela_main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3604                           
  3605                           
  3606                           ;main.c: 92:     LCD_Goto(1, 1);
  3607  1749  1283               	bcf	3,5	;RP0=0, select bank0
  3608  174A  1303               	bcf	3,6	;RP1=0, select bank0
  3609  174B  01A1               	clrf	LCD_Goto@row
  3610  174C  0AA1               	incf	LCD_Goto@row,f
  3611  174D  3001               	movlw	1
  3612  174E  160A  118A  2445  160A  118A  	fcall	_LCD_Goto
  3613  1753                     l3650:
  3614                           
  3615                           ;main.c: 93:     sprintf(LCD_Cstring,"Ho.: %02d:%02d:%02d   ",Horas,Minutos,Segundos);
  3616  1753  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  3617  1754  1283               	bcf	3,5	;RP0=0, select bank0
  3618  1755  1303               	bcf	3,6	;RP1=0, select bank0
  3619  1756  00BC               	movwf	??_imprime_tela_main
  3620  1757  083C               	movf	??_imprime_tela_main,w
  3621  1758  00A9               	movwf	sprintf@f
  3622  1759  086E               	movf	_Horas+1,w
  3623  175A  00AB               	movwf	?_sprintf+2
  3624  175B  086D               	movf	_Horas,w
  3625  175C  00AA               	movwf	?_sprintf+1
  3626  175D  0879               	movf	_Minutos+1,w
  3627  175E  00AD               	movwf	?_sprintf+4
  3628  175F  0878               	movf	_Minutos,w
  3629  1760  00AC               	movwf	?_sprintf+3
  3630  1761  1683               	bsf	3,5	;RP0=1, select bank1
  3631  1762  1303               	bcf	3,6	;RP1=0, select bank1
  3632  1763  084B               	movf	(_Segundos+1)^(0+128),w
  3633  1764  1283               	bcf	3,5	;RP0=0, select bank0
  3634  1765  1303               	bcf	3,6	;RP1=0, select bank0
  3635  1766  00AF               	movwf	?_sprintf+6
  3636  1767  1683               	bsf	3,5	;RP0=1, select bank1
  3637  1768  1303               	bcf	3,6	;RP1=0, select bank1
  3638  1769  084A               	movf	_Segundos^(0+128),w
  3639  176A  1283               	bcf	3,5	;RP0=0, select bank0
  3640  176B  1303               	bcf	3,6	;RP1=0, select bank0
  3641  176C  00AE               	movwf	?_sprintf+5
  3642  176D  30CE               	movlw	(low (_LCD_Cstring| 0))& (0+255)
  3643  176E  120A  158A  262C  160A  118A  	fcall	_sprintf
  3644  1773                     l3652:
  3645                           
  3646                           ;main.c: 94:     LCD_Print(LCD_Cstring);
  3647  1773  30CE               	movlw	(low (_LCD_Cstring| 0))& (0+255)
  3648  1774  160A  118A  247D  160A  118A  	fcall	_LCD_Print
  3649  1779                     l3654:
  3650                           
  3651                           ;main.c: 96:     LCD_Goto(1, 2);
  3652  1779  3002               	movlw	2
  3653  177A  1283               	bcf	3,5	;RP0=0, select bank0
  3654  177B  1303               	bcf	3,6	;RP1=0, select bank0
  3655  177C  00BC               	movwf	??_imprime_tela_main
  3656  177D  083C               	movf	??_imprime_tela_main,w
  3657  177E  00A1               	movwf	LCD_Goto@row
  3658  177F  3001               	movlw	1
  3659  1780  160A  118A  2445  160A  118A  	fcall	_LCD_Goto
  3660  1785                     l3656:
  3661                           
  3662                           ;main.c: 97:     sprintf(LCD_Cstring,"Te.: %02d\337c",Temperatura);
  3663  1785  3065               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  3664  1786  1283               	bcf	3,5	;RP0=0, select bank0
  3665  1787  1303               	bcf	3,6	;RP1=0, select bank0
  3666  1788  00BC               	movwf	??_imprime_tela_main
  3667  1789  083C               	movf	??_imprime_tela_main,w
  3668  178A  00A9               	movwf	sprintf@f
  3669  178B  1683               	bsf	3,5	;RP0=1, select bank1
  3670  178C  1303               	bcf	3,6	;RP1=0, select bank1
  3671  178D  0849               	movf	(_Temperatura+1)^(0+128),w
  3672  178E  1283               	bcf	3,5	;RP0=0, select bank0
  3673  178F  1303               	bcf	3,6	;RP1=0, select bank0
  3674  1790  00AB               	movwf	?_sprintf+2
  3675  1791  1683               	bsf	3,5	;RP0=1, select bank1
  3676  1792  1303               	bcf	3,6	;RP1=0, select bank1
  3677  1793  0848               	movf	_Temperatura^(0+128),w
  3678  1794  1283               	bcf	3,5	;RP0=0, select bank0
  3679  1795  1303               	bcf	3,6	;RP1=0, select bank0
  3680  1796  00AA               	movwf	?_sprintf+1
  3681  1797  30CE               	movlw	(low (_LCD_Cstring| 0))& (0+255)
  3682  1798  120A  158A  262C  160A  118A  	fcall	_sprintf
  3683                           
  3684                           ;main.c: 98:     LCD_Print(LCD_Cstring);
  3685  179D  30CE               	movlw	(low (_LCD_Cstring| 0))& (0+255)
  3686  179E  160A  118A  247D  160A  118A  	fcall	_LCD_Print
  3687  17A3                     l105:
  3688  17A3  0008               	return
  3689  17A4                     __end_of_imprime_tela_main:
  3690                           
  3691                           	psect	text10
  3692  0BB1                     __ptext10:	
  3693 ;; *************** function _controle_aquecedor *****************
  3694 ;; Defined at:
  3695 ;;		line 263 in file "main.c"
  3696 ;; Parameters:    Size  Location     Type
  3697 ;;  temp            2    0[BANK0 ] int 
  3698 ;;  hora_min        2    2[BANK0 ] int 
  3699 ;;  min_min         2    4[BANK0 ] int 
  3700 ;;  hora_max        2    6[BANK0 ] int 
  3701 ;;  min_max         2    8[BANK0 ] int 
  3702 ;; Auto vars:     Size  Location     Type
  3703 ;;		None
  3704 ;; Return value:  Size  Location     Type
  3705 ;;                  2    0[BANK0 ] int 
  3706 ;; Registers used:
  3707 ;;		wreg, status,2
  3708 ;; Tracked objects:
  3709 ;;		On entry : 0/0
  3710 ;;		On exit  : 0/0
  3711 ;;		Unchanged: 0/0
  3712 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3713 ;;      Params:         0      10       0       0       0
  3714 ;;      Locals:         0       0       0       0       0
  3715 ;;      Temps:          1       0       0       0       0
  3716 ;;      Totals:         1      10       0       0       0
  3717 ;;Total ram usage:       11 bytes
  3718 ;; Hardware stack levels used: 1
  3719 ;; Hardware stack levels required when called: 1
  3720 ;; This function calls:
  3721 ;;		Nothing
  3722 ;; This function is called by:
  3723 ;;		_main
  3724 ;; This function uses a non-reentrant model
  3725 ;;
  3726                           
  3727                           
  3728                           ;psect for function _controle_aquecedor
  3729  0BB1                     _controle_aquecedor:
  3730  0BB1                     l2874:	
  3731                           ;incstack = 0
  3732                           ; Regs used in _controle_aquecedor: [wreg+status,2]
  3733                           
  3734                           
  3735                           ;main.c: 263: int controle_aquecedor(int temp,int hora_min,int min_min,int hora_max,int 
      +                          min_max);main.c: 264: {;main.c: 265:     if(hora_min<hora_max)
  3736  0BB1  1283               	bcf	3,5	;RP0=0, select bank0
  3737  0BB2  1303               	bcf	3,6	;RP1=0, select bank0
  3738  0BB3  0823               	movf	controle_aquecedor@hora_min+1,w
  3739  0BB4  3A80               	xorlw	128
  3740  0BB5  00F3               	movwf	??_controle_aquecedor
  3741  0BB6  0827               	movf	controle_aquecedor@hora_max+1,w
  3742  0BB7  3A80               	xorlw	128
  3743  0BB8  0273               	subwf	??_controle_aquecedor,w
  3744  0BB9  1D03               	skipz
  3745  0BBA  2BBD               	goto	u3455
  3746  0BBB  0826               	movf	controle_aquecedor@hora_max,w
  3747  0BBC  0222               	subwf	controle_aquecedor@hora_min,w
  3748  0BBD                     u3455:
  3749  0BBD  1803               	skipnc
  3750  0BBE  2BC0               	goto	u3451
  3751  0BBF  2BC1               	goto	u3450
  3752  0BC0                     u3451:
  3753  0BC0  2C4E               	goto	l2938
  3754  0BC1                     u3450:
  3755  0BC1                     l2876:
  3756                           
  3757                           ;main.c: 266:     {;main.c: 267:         if(Horas>hora_min)
  3758  0BC1  1283               	bcf	3,5	;RP0=0, select bank0
  3759  0BC2  1303               	bcf	3,6	;RP1=0, select bank0
  3760  0BC3  0823               	movf	controle_aquecedor@hora_min+1,w
  3761  0BC4  3A80               	xorlw	128
  3762  0BC5  00F3               	movwf	??_controle_aquecedor
  3763  0BC6  086E               	movf	_Horas+1,w
  3764  0BC7  3A80               	xorlw	128
  3765  0BC8  0273               	subwf	??_controle_aquecedor,w
  3766  0BC9  1D03               	skipz
  3767  0BCA  2BCD               	goto	u3465
  3768  0BCB  086D               	movf	_Horas,w
  3769  0BCC  0222               	subwf	controle_aquecedor@hora_min,w
  3770  0BCD                     u3465:
  3771  0BCD  1803               	skipnc
  3772  0BCE  2BD0               	goto	u3461
  3773  0BCF  2BD1               	goto	u3460
  3774  0BD0                     u3461:
  3775  0BD0  2C08               	goto	l2904
  3776  0BD1                     u3460:
  3777  0BD1                     l2878:
  3778                           
  3779                           ;main.c: 268:         {;main.c: 269:             if(Horas<hora_max)
  3780  0BD1  1283               	bcf	3,5	;RP0=0, select bank0
  3781  0BD2  1303               	bcf	3,6	;RP1=0, select bank0
  3782  0BD3  086E               	movf	_Horas+1,w
  3783  0BD4  3A80               	xorlw	128
  3784  0BD5  00F3               	movwf	??_controle_aquecedor
  3785  0BD6  0827               	movf	controle_aquecedor@hora_max+1,w
  3786  0BD7  3A80               	xorlw	128
  3787  0BD8  0273               	subwf	??_controle_aquecedor,w
  3788  0BD9  1D03               	skipz
  3789  0BDA  2BDD               	goto	u3475
  3790  0BDB  0826               	movf	controle_aquecedor@hora_max,w
  3791  0BDC  026D               	subwf	_Horas,w
  3792  0BDD                     u3475:
  3793  0BDD  1803               	skipnc
  3794  0BDE  2BE0               	goto	u3471
  3795  0BDF  2BE1               	goto	u3470
  3796  0BE0                     u3471:
  3797  0BE0  2BE8               	goto	l2886
  3798  0BE1                     u3470:
  3799  0BE1                     l2880:
  3800                           
  3801                           ;main.c: 270:             {;main.c: 271:                 return 1;
  3802  0BE1  3001               	movlw	1
  3803  0BE2  1283               	bcf	3,5	;RP0=0, select bank0
  3804  0BE3  1303               	bcf	3,6	;RP1=0, select bank0
  3805  0BE4  00A0               	movwf	?_controle_aquecedor
  3806  0BE5  3000               	movlw	0
  3807  0BE6  00A1               	movwf	?_controle_aquecedor+1
  3808  0BE7  2CA4               	goto	l161
  3809  0BE8                     l2886:
  3810  0BE8  1283               	bcf	3,5	;RP0=0, select bank0
  3811  0BE9  1303               	bcf	3,6	;RP1=0, select bank0
  3812  0BEA  0827               	movf	controle_aquecedor@hora_max+1,w
  3813  0BEB  066E               	xorwf	_Horas+1,w
  3814  0BEC  1D03               	skipz
  3815  0BED  2BF0               	goto	u3485
  3816  0BEE  0826               	movf	controle_aquecedor@hora_max,w
  3817  0BEF  066D               	xorwf	_Horas,w
  3818  0BF0                     u3485:
  3819  0BF0  1D03               	skipz
  3820  0BF1  2BF3               	goto	u3481
  3821  0BF2  2BF4               	goto	u3480
  3822  0BF3                     u3481:
  3823  0BF3  2C03               	goto	l2894
  3824  0BF4                     u3480:
  3825  0BF4                     l2888:
  3826                           
  3827                           ;main.c: 274:             {;main.c: 275:                 if (Minutos<min_max)
  3828  0BF4  0879               	movf	_Minutos+1,w
  3829  0BF5  3A80               	xorlw	128
  3830  0BF6  00F3               	movwf	??_controle_aquecedor
  3831  0BF7  0829               	movf	controle_aquecedor@min_max+1,w
  3832  0BF8  3A80               	xorlw	128
  3833  0BF9  0273               	subwf	??_controle_aquecedor,w
  3834  0BFA  1D03               	skipz
  3835  0BFB  2BFE               	goto	u3495
  3836  0BFC  0828               	movf	controle_aquecedor@min_max,w
  3837  0BFD  0278               	subwf	_Minutos,w
  3838  0BFE                     u3495:
  3839  0BFE  1803               	skipnc
  3840  0BFF  2C01               	goto	u3491
  3841  0C00  2C02               	goto	u3490
  3842  0C01                     u3491:
  3843  0C01  2C03               	goto	l2894
  3844  0C02                     u3490:
  3845  0C02  2BE1               	goto	l2880
  3846  0C03                     l2894:
  3847                           
  3848                           ;main.c: 279:                 return 0;
  3849  0C03  1283               	bcf	3,5	;RP0=0, select bank0
  3850  0C04  1303               	bcf	3,6	;RP1=0, select bank0
  3851  0C05  01A0               	clrf	?_controle_aquecedor
  3852  0C06  01A1               	clrf	?_controle_aquecedor+1
  3853  0C07  2CA4               	goto	l161
  3854  0C08                     l2904:
  3855  0C08  1283               	bcf	3,5	;RP0=0, select bank0
  3856  0C09  1303               	bcf	3,6	;RP1=0, select bank0
  3857  0C0A  0823               	movf	controle_aquecedor@hora_min+1,w
  3858  0C0B  066E               	xorwf	_Horas+1,w
  3859  0C0C  1D03               	skipz
  3860  0C0D  2C10               	goto	u3505
  3861  0C0E  0822               	movf	controle_aquecedor@hora_min,w
  3862  0C0F  066D               	xorwf	_Horas,w
  3863  0C10                     u3505:
  3864  0C10  1D03               	skipz
  3865  0C11  2C13               	goto	u3501
  3866  0C12  2C14               	goto	u3500
  3867  0C13                     u3501:
  3868  0C13  2C03               	goto	l2894
  3869  0C14                     u3500:
  3870  0C14                     l2906:
  3871                           
  3872                           ;main.c: 288:         {;main.c: 289:             if (Minutos>min_min)
  3873  0C14  0825               	movf	controle_aquecedor@min_min+1,w
  3874  0C15  3A80               	xorlw	128
  3875  0C16  00F3               	movwf	??_controle_aquecedor
  3876  0C17  0879               	movf	_Minutos+1,w
  3877  0C18  3A80               	xorlw	128
  3878  0C19  0273               	subwf	??_controle_aquecedor,w
  3879  0C1A  1D03               	skipz
  3880  0C1B  2C1E               	goto	u3515
  3881  0C1C  0878               	movf	_Minutos,w
  3882  0C1D  0224               	subwf	controle_aquecedor@min_min,w
  3883  0C1E                     u3515:
  3884  0C1E  1803               	skipnc
  3885  0C1F  2C21               	goto	u3511
  3886  0C20  2C22               	goto	u3510
  3887  0C21                     u3511:
  3888  0C21  2CA4               	goto	l161
  3889  0C22                     u3510:
  3890  0C22                     l2908:
  3891                           
  3892                           ;main.c: 290:             {;main.c: 291:                 if(Horas<hora_max)
  3893  0C22  1283               	bcf	3,5	;RP0=0, select bank0
  3894  0C23  1303               	bcf	3,6	;RP1=0, select bank0
  3895  0C24  086E               	movf	_Horas+1,w
  3896  0C25  3A80               	xorlw	128
  3897  0C26  00F3               	movwf	??_controle_aquecedor
  3898  0C27  0827               	movf	controle_aquecedor@hora_max+1,w
  3899  0C28  3A80               	xorlw	128
  3900  0C29  0273               	subwf	??_controle_aquecedor,w
  3901  0C2A  1D03               	skipz
  3902  0C2B  2C2E               	goto	u3525
  3903  0C2C  0826               	movf	controle_aquecedor@hora_max,w
  3904  0C2D  026D               	subwf	_Horas,w
  3905  0C2E                     u3525:
  3906  0C2E  1803               	skipnc
  3907  0C2F  2C31               	goto	u3521
  3908  0C30  2C32               	goto	u3520
  3909  0C31                     u3521:
  3910  0C31  2C33               	goto	l2916
  3911  0C32                     u3520:
  3912  0C32  2BE1               	goto	l2880
  3913  0C33                     l2916:
  3914  0C33  1283               	bcf	3,5	;RP0=0, select bank0
  3915  0C34  1303               	bcf	3,6	;RP1=0, select bank0
  3916  0C35  0827               	movf	controle_aquecedor@hora_max+1,w
  3917  0C36  066E               	xorwf	_Horas+1,w
  3918  0C37  1D03               	skipz
  3919  0C38  2C3B               	goto	u3535
  3920  0C39  0826               	movf	controle_aquecedor@hora_max,w
  3921  0C3A  066D               	xorwf	_Horas,w
  3922  0C3B                     u3535:
  3923  0C3B  1D03               	skipz
  3924  0C3C  2C3E               	goto	u3531
  3925  0C3D  2C3F               	goto	u3530
  3926  0C3E                     u3531:
  3927  0C3E  2C03               	goto	l2894
  3928  0C3F                     u3530:
  3929  0C3F                     l2918:
  3930                           
  3931                           ;main.c: 296:                 {;main.c: 297:                     if (Minutos<min_max)
  3932  0C3F  0879               	movf	_Minutos+1,w
  3933  0C40  3A80               	xorlw	128
  3934  0C41  00F3               	movwf	??_controle_aquecedor
  3935  0C42  0829               	movf	controle_aquecedor@min_max+1,w
  3936  0C43  3A80               	xorlw	128
  3937  0C44  0273               	subwf	??_controle_aquecedor,w
  3938  0C45  1D03               	skipz
  3939  0C46  2C49               	goto	u3545
  3940  0C47  0828               	movf	controle_aquecedor@min_max,w
  3941  0C48  0278               	subwf	_Minutos,w
  3942  0C49                     u3545:
  3943  0C49  1803               	skipnc
  3944  0C4A  2C4C               	goto	u3541
  3945  0C4B  2C4D               	goto	u3540
  3946  0C4C                     u3541:
  3947  0C4C  2C03               	goto	l2894
  3948  0C4D                     u3540:
  3949  0C4D  2BE1               	goto	l2880
  3950  0C4E                     l2938:
  3951                           
  3952                           ;main.c: 315:     {;main.c: 316:         if (Horas>hora_min)
  3953  0C4E  1283               	bcf	3,5	;RP0=0, select bank0
  3954  0C4F  1303               	bcf	3,6	;RP1=0, select bank0
  3955  0C50  0823               	movf	controle_aquecedor@hora_min+1,w
  3956  0C51  3A80               	xorlw	128
  3957  0C52  00F3               	movwf	??_controle_aquecedor
  3958  0C53  086E               	movf	_Horas+1,w
  3959  0C54  3A80               	xorlw	128
  3960  0C55  0273               	subwf	??_controle_aquecedor,w
  3961  0C56  1D03               	skipz
  3962  0C57  2C5A               	goto	u3555
  3963  0C58  086D               	movf	_Horas,w
  3964  0C59  0222               	subwf	controle_aquecedor@hora_min,w
  3965  0C5A                     u3555:
  3966  0C5A  1803               	skipnc
  3967  0C5B  2C5D               	goto	u3551
  3968  0C5C  2C5E               	goto	u3550
  3969  0C5D                     u3551:
  3970  0C5D  2C5F               	goto	l2946
  3971  0C5E                     u3550:
  3972  0C5E  2BE1               	goto	l2880
  3973  0C5F                     l2946:
  3974  0C5F  1283               	bcf	3,5	;RP0=0, select bank0
  3975  0C60  1303               	bcf	3,6	;RP1=0, select bank0
  3976  0C61  0823               	movf	controle_aquecedor@hora_min+1,w
  3977  0C62  066E               	xorwf	_Horas+1,w
  3978  0C63  1D03               	skipz
  3979  0C64  2C67               	goto	u3565
  3980  0C65  0822               	movf	controle_aquecedor@hora_min,w
  3981  0C66  066D               	xorwf	_Horas,w
  3982  0C67                     u3565:
  3983  0C67  1D03               	skipz
  3984  0C68  2C6A               	goto	u3561
  3985  0C69  2C6B               	goto	u3560
  3986  0C6A                     u3561:
  3987  0C6A  2C7A               	goto	l2960
  3988  0C6B                     u3560:
  3989  0C6B                     l2948:
  3990                           
  3991                           ;main.c: 321:         {;main.c: 322:             if (Minutos>min_min)
  3992  0C6B  0825               	movf	controle_aquecedor@min_min+1,w
  3993  0C6C  3A80               	xorlw	128
  3994  0C6D  00F3               	movwf	??_controle_aquecedor
  3995  0C6E  0879               	movf	_Minutos+1,w
  3996  0C6F  3A80               	xorlw	128
  3997  0C70  0273               	subwf	??_controle_aquecedor,w
  3998  0C71  1D03               	skipz
  3999  0C72  2C75               	goto	u3575
  4000  0C73  0878               	movf	_Minutos,w
  4001  0C74  0224               	subwf	controle_aquecedor@min_min,w
  4002  0C75                     u3575:
  4003  0C75  1803               	skipnc
  4004  0C76  2C78               	goto	u3571
  4005  0C77  2C79               	goto	u3570
  4006  0C78                     u3571:
  4007  0C78  2C03               	goto	l2894
  4008  0C79                     u3570:
  4009  0C79  2BE1               	goto	l2880
  4010  0C7A                     l2960:
  4011                           
  4012                           ;main.c: 332:         {;main.c: 333:             if(Horas<hora_max)
  4013  0C7A  086E               	movf	_Horas+1,w
  4014  0C7B  3A80               	xorlw	128
  4015  0C7C  00F3               	movwf	??_controle_aquecedor
  4016  0C7D  0827               	movf	controle_aquecedor@hora_max+1,w
  4017  0C7E  3A80               	xorlw	128
  4018  0C7F  0273               	subwf	??_controle_aquecedor,w
  4019  0C80  1D03               	skipz
  4020  0C81  2C84               	goto	u3585
  4021  0C82  0826               	movf	controle_aquecedor@hora_max,w
  4022  0C83  026D               	subwf	_Horas,w
  4023  0C84                     u3585:
  4024  0C84  1803               	skipnc
  4025  0C85  2C87               	goto	u3581
  4026  0C86  2C88               	goto	u3580
  4027  0C87                     u3581:
  4028  0C87  2C89               	goto	l2968
  4029  0C88                     u3580:
  4030  0C88  2BE1               	goto	l2880
  4031  0C89                     l2968:
  4032  0C89  1283               	bcf	3,5	;RP0=0, select bank0
  4033  0C8A  1303               	bcf	3,6	;RP1=0, select bank0
  4034  0C8B  0827               	movf	controle_aquecedor@hora_max+1,w
  4035  0C8C  066E               	xorwf	_Horas+1,w
  4036  0C8D  1D03               	skipz
  4037  0C8E  2C91               	goto	u3595
  4038  0C8F  0826               	movf	controle_aquecedor@hora_max,w
  4039  0C90  066D               	xorwf	_Horas,w
  4040  0C91                     u3595:
  4041  0C91  1D03               	skipz
  4042  0C92  2C94               	goto	u3591
  4043  0C93  2C95               	goto	u3590
  4044  0C94                     u3591:
  4045  0C94  2C03               	goto	l2894
  4046  0C95                     u3590:
  4047  0C95                     l2970:
  4048                           
  4049                           ;main.c: 338:             {;main.c: 339:                 if (Minutos<min_min)
  4050  0C95  0879               	movf	_Minutos+1,w
  4051  0C96  3A80               	xorlw	128
  4052  0C97  00F3               	movwf	??_controle_aquecedor
  4053  0C98  0825               	movf	controle_aquecedor@min_min+1,w
  4054  0C99  3A80               	xorlw	128
  4055  0C9A  0273               	subwf	??_controle_aquecedor,w
  4056  0C9B  1D03               	skipz
  4057  0C9C  2C9F               	goto	u3605
  4058  0C9D  0824               	movf	controle_aquecedor@min_min,w
  4059  0C9E  0278               	subwf	_Minutos,w
  4060  0C9F                     u3605:
  4061  0C9F  1803               	skipnc
  4062  0CA0  2CA2               	goto	u3601
  4063  0CA1  2CA3               	goto	u3600
  4064  0CA2                     u3601:
  4065  0CA2  2C03               	goto	l2894
  4066  0CA3                     u3600:
  4067  0CA3  2BE1               	goto	l2880
  4068  0CA4                     l161:
  4069  0CA4  0008               	return
  4070  0CA5                     __end_of_controle_aquecedor:
  4071                           
  4072                           	psect	text11
  4073  13EA                     __ptext11:	
  4074 ;; *************** function _atualiza_ADC *****************
  4075 ;; Defined at:
  4076 ;;		line 80 in file "main.c"
  4077 ;; Parameters:    Size  Location     Type
  4078 ;;		None
  4079 ;; Auto vars:     Size  Location     Type
  4080 ;;		None
  4081 ;; Return value:  Size  Location     Type
  4082 ;;                  1    wreg      void 
  4083 ;; Registers used:
  4084 ;;		wreg
  4085 ;; Tracked objects:
  4086 ;;		On entry : 0/0
  4087 ;;		On exit  : 0/0
  4088 ;;		Unchanged: 0/0
  4089 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4090 ;;      Params:         0       0       0       0       0
  4091 ;;      Locals:         0       0       0       0       0
  4092 ;;      Temps:          1       0       0       0       0
  4093 ;;      Totals:         1       0       0       0       0
  4094 ;;Total ram usage:        1 bytes
  4095 ;; Hardware stack levels used: 1
  4096 ;; Hardware stack levels required when called: 1
  4097 ;; This function calls:
  4098 ;;		Nothing
  4099 ;; This function is called by:
  4100 ;;		_main
  4101 ;; This function uses a non-reentrant model
  4102 ;;
  4103                           
  4104                           
  4105                           ;psect for function _atualiza_ADC
  4106  13EA                     _atualiza_ADC:
  4107  13EA                     l2724:	
  4108                           ;incstack = 0
  4109                           ; Regs used in _atualiza_ADC: [wreg]
  4110                           
  4111                           
  4112                           ;main.c: 82:     ADCON0bits.GO_nDONE=1;
  4113  13EA  1283               	bcf	3,5	;RP0=0, select bank0
  4114  13EB  1303               	bcf	3,6	;RP1=0, select bank0
  4115  13EC  151F               	bsf	31,2	;volatile
  4116                           
  4117                           ;main.c: 83:     while(ADCON0bits.GO_nDONE)
  4118  13ED  2BF2               	goto	l2728
  4119  13EE                     l2726:
  4120                           
  4121                           ;main.c: 84:     {;main.c: 85:         _delay((unsigned long)((10)*(4000000/4000000.0)))
      +                          ;
  4122  13EE  3003               	movlw	3
  4123  13EF  00F3               	movwf	??_atualiza_ADC
  4124  13F0                     u4867:
  4125  13F0  0BF3               	decfsz	??_atualiza_ADC,f
  4126  13F1  2BF0               	goto	u4867
  4127  13F2                     l2728:
  4128                           
  4129                           ;main.c: 83:     while(ADCON0bits.GO_nDONE)
  4130  13F2  1283               	bcf	3,5	;RP0=0, select bank0
  4131  13F3  1303               	bcf	3,6	;RP1=0, select bank0
  4132  13F4  191F               	btfsc	31,2	;volatile
  4133  13F5  2BF7               	goto	u3231
  4134  13F6  2BF8               	goto	u3230
  4135  13F7                     u3231:
  4136  13F7  2BEE               	goto	l2726
  4137  13F8                     u3230:
  4138  13F8                     l102:
  4139  13F8  0008               	return
  4140  13F9                     __end_of_atualiza_ADC:
  4141                           
  4142                           	psect	text12
  4143  0027                     __ptext12:	
  4144 ;; *************** function _ajustes *****************
  4145 ;; Defined at:
  4146 ;;		line 147 in file "main.c"
  4147 ;; Parameters:    Size  Location     Type
  4148 ;;  temp            1    wreg     PTR int 
  4149 ;;		 -> main@temp(2), 
  4150 ;;  hora_min        1   33[BANK0 ] PTR int 
  4151 ;;		 -> main@hora_min(2), 
  4152 ;;  min_min         1   34[BANK0 ] PTR int 
  4153 ;;		 -> main@min_min(2), 
  4154 ;;  hora_max        1   35[BANK0 ] PTR int 
  4155 ;;		 -> main@hora_max(2), 
  4156 ;;  min_max         1   36[BANK0 ] PTR int 
  4157 ;;		 -> main@min_max(2), 
  4158 ;; Auto vars:     Size  Location     Type
  4159 ;;  temp            1   41[BANK0 ] PTR int 
  4160 ;;		 -> main@temp(2), 
  4161 ;; Return value:  Size  Location     Type
  4162 ;;                  1    wreg      void 
  4163 ;; Registers used:
  4164 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4165 ;; Tracked objects:
  4166 ;;		On entry : 0/0
  4167 ;;		On exit  : 0/0
  4168 ;;		Unchanged: 0/0
  4169 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4170 ;;      Params:         0       4       0       0       0
  4171 ;;      Locals:         0       1       0       0       0
  4172 ;;      Temps:          0       4       0       0       0
  4173 ;;      Totals:         0       9       0       0       0
  4174 ;;Total ram usage:        9 bytes
  4175 ;; Hardware stack levels used: 1
  4176 ;; Hardware stack levels required when called: 5
  4177 ;; This function calls:
  4178 ;;		_LCD_Cmd
  4179 ;;		_imprime_tela_ajuste1
  4180 ;;		_imprime_tela_ajuste2
  4181 ;;		_imprime_tela_ajuste3
  4182 ;;		_imprime_tela_ajuste4
  4183 ;; This function is called by:
  4184 ;;		_main
  4185 ;; This function uses a non-reentrant model
  4186 ;;
  4187                           
  4188                           
  4189                           ;psect for function _ajustes
  4190  0027                     _ajustes:
  4191                           
  4192                           ;incstack = 0
  4193                           ; Regs used in _ajustes: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4194                           ;ajustes@temp stored from wreg
  4195  0027  1283               	bcf	3,5	;RP0=0, select bank0
  4196  0028  1303               	bcf	3,6	;RP1=0, select bank0
  4197  0029  00C9               	movwf	ajustes@temp
  4198  002A                     l3658:
  4199                           
  4200                           ;main.c: 147: void ajustes(int *temp,int *hora_min,int *min_min,int *hora_max,int *min_m
      +                          ax);main.c: 148: {;main.c: 149:     LCD_Cmd(0x01);
  4201  002A  3001               	movlw	1
  4202  002B  120A  118A  27CF  120A  118A  	fcall	_LCD_Cmd
  4203  0030                     l3660:
  4204                           
  4205                           ;main.c: 150:     imprime_tela_ajuste1(*temp);
  4206  0030  1283               	bcf	3,5	;RP0=0, select bank0
  4207  0031  1303               	bcf	3,6	;RP1=0, select bank0
  4208  0032  0849               	movf	ajustes@temp,w
  4209  0033  0084               	movwf	4
  4210  0034  1383               	bcf	3,7	;select IRP bank0
  4211  0035  0800               	movf	0,w
  4212  0036  00BC               	movwf	imprime_tela_ajuste1@temp
  4213  0037  0A84               	incf	4,f
  4214  0038  0800               	movf	0,w
  4215  0039  00BD               	movwf	imprime_tela_ajuste1@temp+1
  4216  003A  160A  118A  23F9  120A  118A  	fcall	_imprime_tela_ajuste1
  4217  003F                     l3662:
  4218                           
  4219                           ;main.c: 151:     _delay((unsigned long)((200)*(4000000/4000.0)));
  4220  003F  3002               	movlw	2
  4221  0040  1283               	bcf	3,5	;RP0=0, select bank0
  4222  0041  1303               	bcf	3,6	;RP1=0, select bank0
  4223  0042  00C7               	movwf	??_ajustes+2
  4224  0043  3004               	movlw	4
  4225  0044  00C6               	movwf	??_ajustes+1
  4226  0045  30B9               	movlw	185
  4227  0046  00C5               	movwf	??_ajustes
  4228  0047                     u4877:
  4229  0047  0BC5               	decfsz	??_ajustes,f
  4230  0048  2847               	goto	u4877
  4231  0049  0BC6               	decfsz	??_ajustes+1,f
  4232  004A  2847               	goto	u4877
  4233  004B  0BC7               	decfsz	??_ajustes+2,f
  4234  004C  2847               	goto	u4877
  4235  004D  284E               	nop2
  4236                           
  4237                           ;main.c: 153:     while(PORTBbits.RB0!=0)
  4238  004E  28A7               	goto	l3676
  4239  004F                     l3664:
  4240                           
  4241                           ;main.c: 154:     {;main.c: 155:         _delay((unsigned long)((200)*(4000000/4000.0)))
      +                          ;
  4242  004F  3002               	movlw	2
  4243  0050  1283               	bcf	3,5	;RP0=0, select bank0
  4244  0051  1303               	bcf	3,6	;RP1=0, select bank0
  4245  0052  00C7               	movwf	??_ajustes+2
  4246  0053  3004               	movlw	4
  4247  0054  00C6               	movwf	??_ajustes+1
  4248  0055  30B9               	movlw	185
  4249  0056  00C5               	movwf	??_ajustes
  4250  0057                     u4887:
  4251  0057  0BC5               	decfsz	??_ajustes,f
  4252  0058  2857               	goto	u4887
  4253  0059  0BC6               	decfsz	??_ajustes+1,f
  4254  005A  2857               	goto	u4887
  4255  005B  0BC7               	decfsz	??_ajustes+2,f
  4256  005C  2857               	goto	u4887
  4257  005D  285E               	nop2
  4258  005E                     l3666:
  4259                           
  4260                           ;main.c: 156:         imprime_tela_ajuste1(*temp);
  4261  005E  1283               	bcf	3,5	;RP0=0, select bank0
  4262  005F  1303               	bcf	3,6	;RP1=0, select bank0
  4263  0060  0849               	movf	ajustes@temp,w
  4264  0061  0084               	movwf	4
  4265  0062  1383               	bcf	3,7	;select IRP bank0
  4266  0063  0800               	movf	0,w
  4267  0064  00BC               	movwf	imprime_tela_ajuste1@temp
  4268  0065  0A84               	incf	4,f
  4269  0066  0800               	movf	0,w
  4270  0067  00BD               	movwf	imprime_tela_ajuste1@temp+1
  4271  0068  160A  118A  23F9  120A  118A  	fcall	_imprime_tela_ajuste1
  4272  006D                     l3668:
  4273                           
  4274                           ;main.c: 157:         if(PORTBbits.RB1==0)
  4275  006D  1283               	bcf	3,5	;RP0=0, select bank0
  4276  006E  1303               	bcf	3,6	;RP1=0, select bank0
  4277  006F  1886               	btfsc	6,1	;volatile
  4278  0070  2872               	goto	u4591
  4279  0071  2873               	goto	u4590
  4280  0072                     u4591:
  4281  0072  288A               	goto	l3672
  4282  0073                     u4590:
  4283  0073                     l3670:
  4284                           
  4285                           ;main.c: 158:         {;main.c: 159:             *temp=*temp+1;
  4286  0073  0849               	movf	ajustes@temp,w
  4287  0074  0084               	movwf	4
  4288  0075  1383               	bcf	3,7	;select IRP bank0
  4289  0076  0800               	movf	0,w
  4290  0077  00C5               	movwf	??_ajustes
  4291  0078  0A84               	incf	4,f
  4292  0079  0800               	movf	0,w
  4293  007A  00C6               	movwf	??_ajustes+1
  4294  007B  0845               	movf	??_ajustes,w
  4295  007C  3E01               	addlw	1
  4296  007D  00C7               	movwf	??_ajustes+2
  4297  007E  0846               	movf	??_ajustes+1,w
  4298  007F  1803               	skipnc
  4299  0080  3E01               	addlw	1
  4300  0081  3E00               	addlw	0
  4301  0082  00C8               	movwf	??_ajustes+3
  4302  0083  0849               	movf	ajustes@temp,w
  4303  0084  0084               	movwf	4
  4304  0085  0847               	movf	??_ajustes+2,w
  4305  0086  0080               	movwf	0
  4306  0087  0A84               	incf	4,f
  4307  0088  0848               	movf	??_ajustes+3,w
  4308  0089  0080               	movwf	0
  4309  008A                     l3672:
  4310                           
  4311                           ;main.c: 161:         if (*temp>99)
  4312  008A  0849               	movf	ajustes@temp,w
  4313  008B  0084               	movwf	4
  4314  008C  1383               	bcf	3,7	;select IRP bank0
  4315  008D  0800               	movf	0,w
  4316  008E  00C5               	movwf	??_ajustes
  4317  008F  0A84               	incf	4,f
  4318  0090  0800               	movf	0,w
  4319  0091  00C6               	movwf	??_ajustes+1
  4320  0092  0846               	movf	??_ajustes+1,w
  4321  0093  3A80               	xorlw	128
  4322  0094  00FF               	movwf	btemp+1
  4323  0095  3080               	movlw	128
  4324  0096  027F               	subwf	btemp+1,w
  4325  0097  1D03               	skipz
  4326  0098  289B               	goto	u4605
  4327  0099  3064               	movlw	100
  4328  009A  0245               	subwf	??_ajustes,w
  4329  009B                     u4605:
  4330  009B  1C03               	skipc
  4331  009C  289E               	goto	u4601
  4332  009D  289F               	goto	u4600
  4333  009E                     u4601:
  4334  009E  28A7               	goto	l3676
  4335  009F                     u4600:
  4336  009F                     l3674:
  4337                           
  4338                           ;main.c: 162:         {;main.c: 163:             *temp=0;
  4339  009F  1283               	bcf	3,5	;RP0=0, select bank0
  4340  00A0  1303               	bcf	3,6	;RP1=0, select bank0
  4341  00A1  0849               	movf	ajustes@temp,w
  4342  00A2  0084               	movwf	4
  4343  00A3  1383               	bcf	3,7	;select IRP bank0
  4344  00A4  0180               	clrf	0
  4345  00A5  0A84               	incf	4,f
  4346  00A6  0180               	clrf	0
  4347  00A7                     l3676:
  4348                           
  4349                           ;main.c: 153:     while(PORTBbits.RB0!=0)
  4350  00A7  1283               	bcf	3,5	;RP0=0, select bank0
  4351  00A8  1303               	bcf	3,6	;RP1=0, select bank0
  4352  00A9  1806               	btfsc	6,0	;volatile
  4353  00AA  28AC               	goto	u4611
  4354  00AB  28AD               	goto	u4610
  4355  00AC                     u4611:
  4356  00AC  284F               	goto	l3664
  4357  00AD                     u4610:
  4358  00AD                     l3678:
  4359                           
  4360                           ;main.c: 166:     LCD_Cmd(0x01);
  4361  00AD  3001               	movlw	1
  4362  00AE  120A  118A  27CF  120A  118A  	fcall	_LCD_Cmd
  4363  00B3                     l3680:
  4364                           
  4365                           ;main.c: 167:     imprime_tela_ajuste2();
  4366  00B3  160A  118A  24F2  120A  118A  	fcall	_imprime_tela_ajuste2
  4367  00B8                     l3682:
  4368                           
  4369                           ;main.c: 168:     _delay((unsigned long)((200)*(4000000/4000.0)));
  4370  00B8  3002               	movlw	2
  4371  00B9  1283               	bcf	3,5	;RP0=0, select bank0
  4372  00BA  1303               	bcf	3,6	;RP1=0, select bank0
  4373  00BB  00C7               	movwf	??_ajustes+2
  4374  00BC  3004               	movlw	4
  4375  00BD  00C6               	movwf	??_ajustes+1
  4376  00BE  30B9               	movlw	185
  4377  00BF  00C5               	movwf	??_ajustes
  4378  00C0                     u4897:
  4379  00C0  0BC5               	decfsz	??_ajustes,f
  4380  00C1  28C0               	goto	u4897
  4381  00C2  0BC6               	decfsz	??_ajustes+1,f
  4382  00C3  28C0               	goto	u4897
  4383  00C4  0BC7               	decfsz	??_ajustes+2,f
  4384  00C5  28C0               	goto	u4897
  4385  00C6  28C7               	nop2
  4386                           
  4387                           ;main.c: 169:     while(PORTBbits.RB0!=0)
  4388  00C7  28FB               	goto	l3696
  4389  00C8                     l3684:
  4390                           
  4391                           ;main.c: 170:     {;main.c: 171:         _delay((unsigned long)((200)*(4000000/4000.0)))
      +                          ;
  4392  00C8  3002               	movlw	2
  4393  00C9  1283               	bcf	3,5	;RP0=0, select bank0
  4394  00CA  1303               	bcf	3,6	;RP1=0, select bank0
  4395  00CB  00C7               	movwf	??_ajustes+2
  4396  00CC  3004               	movlw	4
  4397  00CD  00C6               	movwf	??_ajustes+1
  4398  00CE  30B9               	movlw	185
  4399  00CF  00C5               	movwf	??_ajustes
  4400  00D0                     u4907:
  4401  00D0  0BC5               	decfsz	??_ajustes,f
  4402  00D1  28D0               	goto	u4907
  4403  00D2  0BC6               	decfsz	??_ajustes+1,f
  4404  00D3  28D0               	goto	u4907
  4405  00D4  0BC7               	decfsz	??_ajustes+2,f
  4406  00D5  28D0               	goto	u4907
  4407  00D6  28D7               	nop2
  4408  00D7                     l3686:
  4409                           
  4410                           ;main.c: 172:         imprime_tela_ajuste2();
  4411  00D7  160A  118A  24F2  120A  118A  	fcall	_imprime_tela_ajuste2
  4412  00DC                     l3688:
  4413                           
  4414                           ;main.c: 173:         if(PORTBbits.RB1==0)
  4415  00DC  1283               	bcf	3,5	;RP0=0, select bank0
  4416  00DD  1303               	bcf	3,6	;RP1=0, select bank0
  4417  00DE  1886               	btfsc	6,1	;volatile
  4418  00DF  28E1               	goto	u4621
  4419  00E0  28E2               	goto	u4620
  4420  00E1                     u4621:
  4421  00E1  28EA               	goto	l3692
  4422  00E2                     u4620:
  4423  00E2                     l3690:
  4424                           
  4425                           ;main.c: 174:         {;main.c: 175:             Horas=Horas+1;
  4426  00E2  086D               	movf	_Horas,w
  4427  00E3  3E01               	addlw	1
  4428  00E4  00ED               	movwf	_Horas
  4429  00E5  086E               	movf	_Horas+1,w
  4430  00E6  1803               	skipnc
  4431  00E7  3E01               	addlw	1
  4432  00E8  3E00               	addlw	0
  4433  00E9  00EE               	movwf	_Horas+1
  4434  00EA                     l3692:
  4435                           
  4436                           ;main.c: 177:         if (Horas>23)
  4437  00EA  086E               	movf	_Horas+1,w
  4438  00EB  3A80               	xorlw	128
  4439  00EC  00FF               	movwf	btemp+1
  4440  00ED  3080               	movlw	128
  4441  00EE  027F               	subwf	btemp+1,w
  4442  00EF  1D03               	skipz
  4443  00F0  28F3               	goto	u4635
  4444  00F1  3018               	movlw	24
  4445  00F2  026D               	subwf	_Horas,w
  4446  00F3                     u4635:
  4447  00F3  1C03               	skipc
  4448  00F4  28F6               	goto	u4631
  4449  00F5  28F7               	goto	u4630
  4450  00F6                     u4631:
  4451  00F6  28FB               	goto	l3696
  4452  00F7                     u4630:
  4453  00F7                     l3694:
  4454                           
  4455                           ;main.c: 178:         {;main.c: 179:             Horas=0;
  4456  00F7  1283               	bcf	3,5	;RP0=0, select bank0
  4457  00F8  1303               	bcf	3,6	;RP1=0, select bank0
  4458  00F9  01ED               	clrf	_Horas
  4459  00FA  01EE               	clrf	_Horas+1
  4460  00FB                     l3696:
  4461                           
  4462                           ;main.c: 169:     while(PORTBbits.RB0!=0)
  4463  00FB  1283               	bcf	3,5	;RP0=0, select bank0
  4464  00FC  1303               	bcf	3,6	;RP1=0, select bank0
  4465  00FD  1806               	btfsc	6,0	;volatile
  4466  00FE  2900               	goto	u4641
  4467  00FF  2901               	goto	u4640
  4468  0100                     u4641:
  4469  0100  28C8               	goto	l3684
  4470  0101                     u4640:
  4471  0101                     l3698:
  4472                           
  4473                           ;main.c: 182:     _delay((unsigned long)((200)*(4000000/4000.0)));
  4474  0101  3002               	movlw	2
  4475  0102  1283               	bcf	3,5	;RP0=0, select bank0
  4476  0103  1303               	bcf	3,6	;RP1=0, select bank0
  4477  0104  00C7               	movwf	??_ajustes+2
  4478  0105  3004               	movlw	4
  4479  0106  00C6               	movwf	??_ajustes+1
  4480  0107  30B9               	movlw	185
  4481  0108  00C5               	movwf	??_ajustes
  4482  0109                     u4917:
  4483  0109  0BC5               	decfsz	??_ajustes,f
  4484  010A  2909               	goto	u4917
  4485  010B  0BC6               	decfsz	??_ajustes+1,f
  4486  010C  2909               	goto	u4917
  4487  010D  0BC7               	decfsz	??_ajustes+2,f
  4488  010E  2909               	goto	u4917
  4489  010F  2910               	nop2
  4490                           
  4491                           ;main.c: 183:     while(PORTBbits.RB0!=0)
  4492  0110  2942               	goto	l3712
  4493  0111                     l3700:
  4494                           
  4495                           ;main.c: 184:     {;main.c: 185:         _delay((unsigned long)((200)*(4000000/4000.0)))
      +                          ;
  4496  0111  3002               	movlw	2
  4497  0112  1283               	bcf	3,5	;RP0=0, select bank0
  4498  0113  1303               	bcf	3,6	;RP1=0, select bank0
  4499  0114  00C7               	movwf	??_ajustes+2
  4500  0115  3004               	movlw	4
  4501  0116  00C6               	movwf	??_ajustes+1
  4502  0117  30B9               	movlw	185
  4503  0118  00C5               	movwf	??_ajustes
  4504  0119                     u4927:
  4505  0119  0BC5               	decfsz	??_ajustes,f
  4506  011A  2919               	goto	u4927
  4507  011B  0BC6               	decfsz	??_ajustes+1,f
  4508  011C  2919               	goto	u4927
  4509  011D  0BC7               	decfsz	??_ajustes+2,f
  4510  011E  2919               	goto	u4927
  4511  011F  2920               	nop2
  4512  0120                     l3702:
  4513                           
  4514                           ;main.c: 186:         imprime_tela_ajuste2();
  4515  0120  160A  118A  24F2  120A  118A  	fcall	_imprime_tela_ajuste2
  4516  0125                     l3704:
  4517                           
  4518                           ;main.c: 187:         if(PORTBbits.RB1==0)
  4519  0125  1283               	bcf	3,5	;RP0=0, select bank0
  4520  0126  1303               	bcf	3,6	;RP1=0, select bank0
  4521  0127  1886               	btfsc	6,1	;volatile
  4522  0128  292A               	goto	u4651
  4523  0129  292B               	goto	u4650
  4524  012A                     u4651:
  4525  012A  2933               	goto	l3708
  4526  012B                     u4650:
  4527  012B                     l3706:
  4528                           
  4529                           ;main.c: 188:         {;main.c: 189:             Minutos=Minutos+1;
  4530  012B  0878               	movf	_Minutos,w
  4531  012C  3E01               	addlw	1
  4532  012D  00F8               	movwf	_Minutos
  4533  012E  0879               	movf	_Minutos+1,w
  4534  012F  1803               	skipnc
  4535  0130  3E01               	addlw	1
  4536  0131  3E00               	addlw	0
  4537  0132  00F9               	movwf	_Minutos+1
  4538  0133                     l3708:
  4539                           
  4540                           ;main.c: 191:         if (Minutos>59)
  4541  0133  0879               	movf	_Minutos+1,w
  4542  0134  3A80               	xorlw	128
  4543  0135  00FF               	movwf	btemp+1
  4544  0136  3080               	movlw	128
  4545  0137  027F               	subwf	btemp+1,w
  4546  0138  1D03               	skipz
  4547  0139  293C               	goto	u4665
  4548  013A  303C               	movlw	60
  4549  013B  0278               	subwf	_Minutos,w
  4550  013C                     u4665:
  4551  013C  1C03               	skipc
  4552  013D  293F               	goto	u4661
  4553  013E  2940               	goto	u4660
  4554  013F                     u4661:
  4555  013F  2942               	goto	l3712
  4556  0140                     u4660:
  4557  0140                     l3710:
  4558                           
  4559                           ;main.c: 192:         {;main.c: 193:             Minutos=0;
  4560  0140  01F8               	clrf	_Minutos
  4561  0141  01F9               	clrf	_Minutos+1
  4562  0142                     l3712:
  4563                           
  4564                           ;main.c: 183:     while(PORTBbits.RB0!=0)
  4565  0142  1283               	bcf	3,5	;RP0=0, select bank0
  4566  0143  1303               	bcf	3,6	;RP1=0, select bank0
  4567  0144  1806               	btfsc	6,0	;volatile
  4568  0145  2947               	goto	u4671
  4569  0146  2948               	goto	u4670
  4570  0147                     u4671:
  4571  0147  2911               	goto	l3700
  4572  0148                     u4670:
  4573  0148                     l3714:
  4574                           
  4575                           ;main.c: 196:     LCD_Cmd(0x01);
  4576  0148  3001               	movlw	1
  4577  0149  120A  118A  27CF  120A  118A  	fcall	_LCD_Cmd
  4578  014E                     l3716:
  4579                           
  4580                           ;main.c: 197:     imprime_tela_ajuste3(*hora_min,*min_min);
  4581  014E  1283               	bcf	3,5	;RP0=0, select bank0
  4582  014F  1303               	bcf	3,6	;RP1=0, select bank0
  4583  0150  0841               	movf	ajustes@hora_min,w
  4584  0151  0084               	movwf	4
  4585  0152  1383               	bcf	3,7	;select IRP bank0
  4586  0153  0800               	movf	0,w
  4587  0154  00BC               	movwf	imprime_tela_ajuste3@horas_min
  4588  0155  0A84               	incf	4,f
  4589  0156  0800               	movf	0,w
  4590  0157  00BD               	movwf	imprime_tela_ajuste3@horas_min+1
  4591  0158  0842               	movf	ajustes@min_min,w
  4592  0159  0084               	movwf	4
  4593  015A  0800               	movf	0,w
  4594  015B  00BE               	movwf	imprime_tela_ajuste3@minutos_min
  4595  015C  0A84               	incf	4,f
  4596  015D  0800               	movf	0,w
  4597  015E  00BF               	movwf	imprime_tela_ajuste3@minutos_min+1
  4598  015F  160A  118A  2535  120A  118A  	fcall	_imprime_tela_ajuste3
  4599  0164                     l3718:
  4600                           
  4601                           ;main.c: 198:     _delay((unsigned long)((200)*(4000000/4000.0)));
  4602  0164  3002               	movlw	2
  4603  0165  1283               	bcf	3,5	;RP0=0, select bank0
  4604  0166  1303               	bcf	3,6	;RP1=0, select bank0
  4605  0167  00C7               	movwf	??_ajustes+2
  4606  0168  3004               	movlw	4
  4607  0169  00C6               	movwf	??_ajustes+1
  4608  016A  30B9               	movlw	185
  4609  016B  00C5               	movwf	??_ajustes
  4610  016C                     u4937:
  4611  016C  0BC5               	decfsz	??_ajustes,f
  4612  016D  296C               	goto	u4937
  4613  016E  0BC6               	decfsz	??_ajustes+1,f
  4614  016F  296C               	goto	u4937
  4615  0170  0BC7               	decfsz	??_ajustes+2,f
  4616  0171  296C               	goto	u4937
  4617  0172  2973               	nop2
  4618                           
  4619                           ;main.c: 199:     while(PORTBbits.RB0!=0)
  4620  0173  29D3               	goto	l3732
  4621  0174                     l3720:
  4622                           
  4623                           ;main.c: 200:     {;main.c: 201:         _delay((unsigned long)((200)*(4000000/4000.0)))
      +                          ;
  4624  0174  3002               	movlw	2
  4625  0175  1283               	bcf	3,5	;RP0=0, select bank0
  4626  0176  1303               	bcf	3,6	;RP1=0, select bank0
  4627  0177  00C7               	movwf	??_ajustes+2
  4628  0178  3004               	movlw	4
  4629  0179  00C6               	movwf	??_ajustes+1
  4630  017A  30B9               	movlw	185
  4631  017B  00C5               	movwf	??_ajustes
  4632  017C                     u4947:
  4633  017C  0BC5               	decfsz	??_ajustes,f
  4634  017D  297C               	goto	u4947
  4635  017E  0BC6               	decfsz	??_ajustes+1,f
  4636  017F  297C               	goto	u4947
  4637  0180  0BC7               	decfsz	??_ajustes+2,f
  4638  0181  297C               	goto	u4947
  4639  0182  2983               	nop2
  4640  0183                     l3722:
  4641                           
  4642                           ;main.c: 202:         imprime_tela_ajuste3(*hora_min,*min_min);
  4643  0183  1283               	bcf	3,5	;RP0=0, select bank0
  4644  0184  1303               	bcf	3,6	;RP1=0, select bank0
  4645  0185  0841               	movf	ajustes@hora_min,w
  4646  0186  0084               	movwf	4
  4647  0187  1383               	bcf	3,7	;select IRP bank0
  4648  0188  0800               	movf	0,w
  4649  0189  00BC               	movwf	imprime_tela_ajuste3@horas_min
  4650  018A  0A84               	incf	4,f
  4651  018B  0800               	movf	0,w
  4652  018C  00BD               	movwf	imprime_tela_ajuste3@horas_min+1
  4653  018D  0842               	movf	ajustes@min_min,w
  4654  018E  0084               	movwf	4
  4655  018F  0800               	movf	0,w
  4656  0190  00BE               	movwf	imprime_tela_ajuste3@minutos_min
  4657  0191  0A84               	incf	4,f
  4658  0192  0800               	movf	0,w
  4659  0193  00BF               	movwf	imprime_tela_ajuste3@minutos_min+1
  4660  0194  160A  118A  2535  120A  118A  	fcall	_imprime_tela_ajuste3
  4661  0199                     l3724:
  4662                           
  4663                           ;main.c: 203:         if(PORTBbits.RB1==0)
  4664  0199  1283               	bcf	3,5	;RP0=0, select bank0
  4665  019A  1303               	bcf	3,6	;RP1=0, select bank0
  4666  019B  1886               	btfsc	6,1	;volatile
  4667  019C  299E               	goto	u4681
  4668  019D  299F               	goto	u4680
  4669  019E                     u4681:
  4670  019E  29B6               	goto	l3728
  4671  019F                     u4680:
  4672  019F                     l3726:
  4673                           
  4674                           ;main.c: 204:         {;main.c: 205:             *hora_min=*hora_min+1;
  4675  019F  0841               	movf	ajustes@hora_min,w
  4676  01A0  0084               	movwf	4
  4677  01A1  1383               	bcf	3,7	;select IRP bank0
  4678  01A2  0800               	movf	0,w
  4679  01A3  00C5               	movwf	??_ajustes
  4680  01A4  0A84               	incf	4,f
  4681  01A5  0800               	movf	0,w
  4682  01A6  00C6               	movwf	??_ajustes+1
  4683  01A7  0845               	movf	??_ajustes,w
  4684  01A8  3E01               	addlw	1
  4685  01A9  00C7               	movwf	??_ajustes+2
  4686  01AA  0846               	movf	??_ajustes+1,w
  4687  01AB  1803               	skipnc
  4688  01AC  3E01               	addlw	1
  4689  01AD  3E00               	addlw	0
  4690  01AE  00C8               	movwf	??_ajustes+3
  4691  01AF  0841               	movf	ajustes@hora_min,w
  4692  01B0  0084               	movwf	4
  4693  01B1  0847               	movf	??_ajustes+2,w
  4694  01B2  0080               	movwf	0
  4695  01B3  0A84               	incf	4,f
  4696  01B4  0848               	movf	??_ajustes+3,w
  4697  01B5  0080               	movwf	0
  4698  01B6                     l3728:
  4699                           
  4700                           ;main.c: 207:         if (*hora_min>23)
  4701  01B6  0841               	movf	ajustes@hora_min,w
  4702  01B7  0084               	movwf	4
  4703  01B8  1383               	bcf	3,7	;select IRP bank0
  4704  01B9  0800               	movf	0,w
  4705  01BA  00C5               	movwf	??_ajustes
  4706  01BB  0A84               	incf	4,f
  4707  01BC  0800               	movf	0,w
  4708  01BD  00C6               	movwf	??_ajustes+1
  4709  01BE  0846               	movf	??_ajustes+1,w
  4710  01BF  3A80               	xorlw	128
  4711  01C0  00FF               	movwf	btemp+1
  4712  01C1  3080               	movlw	128
  4713  01C2  027F               	subwf	btemp+1,w
  4714  01C3  1D03               	skipz
  4715  01C4  29C7               	goto	u4695
  4716  01C5  3018               	movlw	24
  4717  01C6  0245               	subwf	??_ajustes,w
  4718  01C7                     u4695:
  4719  01C7  1C03               	skipc
  4720  01C8  29CA               	goto	u4691
  4721  01C9  29CB               	goto	u4690
  4722  01CA                     u4691:
  4723  01CA  29D3               	goto	l3732
  4724  01CB                     u4690:
  4725  01CB                     l3730:
  4726                           
  4727                           ;main.c: 208:         {;main.c: 209:             *hora_min=0;
  4728  01CB  1283               	bcf	3,5	;RP0=0, select bank0
  4729  01CC  1303               	bcf	3,6	;RP1=0, select bank0
  4730  01CD  0841               	movf	ajustes@hora_min,w
  4731  01CE  0084               	movwf	4
  4732  01CF  1383               	bcf	3,7	;select IRP bank0
  4733  01D0  0180               	clrf	0
  4734  01D1  0A84               	incf	4,f
  4735  01D2  0180               	clrf	0
  4736  01D3                     l3732:
  4737                           
  4738                           ;main.c: 199:     while(PORTBbits.RB0!=0)
  4739  01D3  1283               	bcf	3,5	;RP0=0, select bank0
  4740  01D4  1303               	bcf	3,6	;RP1=0, select bank0
  4741  01D5  1806               	btfsc	6,0	;volatile
  4742  01D6  29D8               	goto	u4701
  4743  01D7  29D9               	goto	u4700
  4744  01D8                     u4701:
  4745  01D8  2974               	goto	l3720
  4746  01D9                     u4700:
  4747  01D9                     l3734:
  4748                           
  4749                           ;main.c: 212:     _delay((unsigned long)((200)*(4000000/4000.0)));
  4750  01D9  3002               	movlw	2
  4751  01DA  1283               	bcf	3,5	;RP0=0, select bank0
  4752  01DB  1303               	bcf	3,6	;RP1=0, select bank0
  4753  01DC  00C7               	movwf	??_ajustes+2
  4754  01DD  3004               	movlw	4
  4755  01DE  00C6               	movwf	??_ajustes+1
  4756  01DF  30B9               	movlw	185
  4757  01E0  00C5               	movwf	??_ajustes
  4758  01E1                     u4957:
  4759  01E1  0BC5               	decfsz	??_ajustes,f
  4760  01E2  29E1               	goto	u4957
  4761  01E3  0BC6               	decfsz	??_ajustes+1,f
  4762  01E4  29E1               	goto	u4957
  4763  01E5  0BC7               	decfsz	??_ajustes+2,f
  4764  01E6  29E1               	goto	u4957
  4765  01E7  29E8               	nop2
  4766                           
  4767                           ;main.c: 213:     while(PORTBbits.RB0!=0)
  4768  01E8  2A48               	goto	l3748
  4769  01E9                     l3736:
  4770                           
  4771                           ;main.c: 214:     {;main.c: 215:         _delay((unsigned long)((200)*(4000000/4000.0)))
      +                          ;
  4772  01E9  3002               	movlw	2
  4773  01EA  1283               	bcf	3,5	;RP0=0, select bank0
  4774  01EB  1303               	bcf	3,6	;RP1=0, select bank0
  4775  01EC  00C7               	movwf	??_ajustes+2
  4776  01ED  3004               	movlw	4
  4777  01EE  00C6               	movwf	??_ajustes+1
  4778  01EF  30B9               	movlw	185
  4779  01F0  00C5               	movwf	??_ajustes
  4780  01F1                     u4967:
  4781  01F1  0BC5               	decfsz	??_ajustes,f
  4782  01F2  29F1               	goto	u4967
  4783  01F3  0BC6               	decfsz	??_ajustes+1,f
  4784  01F4  29F1               	goto	u4967
  4785  01F5  0BC7               	decfsz	??_ajustes+2,f
  4786  01F6  29F1               	goto	u4967
  4787  01F7  29F8               	nop2
  4788  01F8                     l3738:
  4789                           
  4790                           ;main.c: 216:         imprime_tela_ajuste3(*hora_min,*min_min);
  4791  01F8  1283               	bcf	3,5	;RP0=0, select bank0
  4792  01F9  1303               	bcf	3,6	;RP1=0, select bank0
  4793  01FA  0841               	movf	ajustes@hora_min,w
  4794  01FB  0084               	movwf	4
  4795  01FC  1383               	bcf	3,7	;select IRP bank0
  4796  01FD  0800               	movf	0,w
  4797  01FE  00BC               	movwf	imprime_tela_ajuste3@horas_min
  4798  01FF  0A84               	incf	4,f
  4799  0200  0800               	movf	0,w
  4800  0201  00BD               	movwf	imprime_tela_ajuste3@horas_min+1
  4801  0202  0842               	movf	ajustes@min_min,w
  4802  0203  0084               	movwf	4
  4803  0204  0800               	movf	0,w
  4804  0205  00BE               	movwf	imprime_tela_ajuste3@minutos_min
  4805  0206  0A84               	incf	4,f
  4806  0207  0800               	movf	0,w
  4807  0208  00BF               	movwf	imprime_tela_ajuste3@minutos_min+1
  4808  0209  160A  118A  2535  120A  118A  	fcall	_imprime_tela_ajuste3
  4809  020E                     l3740:
  4810                           
  4811                           ;main.c: 217:         if(PORTBbits.RB1==0)
  4812  020E  1283               	bcf	3,5	;RP0=0, select bank0
  4813  020F  1303               	bcf	3,6	;RP1=0, select bank0
  4814  0210  1886               	btfsc	6,1	;volatile
  4815  0211  2A13               	goto	u4711
  4816  0212  2A14               	goto	u4710
  4817  0213                     u4711:
  4818  0213  2A2B               	goto	l3744
  4819  0214                     u4710:
  4820  0214                     l3742:
  4821                           
  4822                           ;main.c: 218:         {;main.c: 219:             *min_min=*min_min+1;
  4823  0214  0842               	movf	ajustes@min_min,w
  4824  0215  0084               	movwf	4
  4825  0216  1383               	bcf	3,7	;select IRP bank0
  4826  0217  0800               	movf	0,w
  4827  0218  00C5               	movwf	??_ajustes
  4828  0219  0A84               	incf	4,f
  4829  021A  0800               	movf	0,w
  4830  021B  00C6               	movwf	??_ajustes+1
  4831  021C  0845               	movf	??_ajustes,w
  4832  021D  3E01               	addlw	1
  4833  021E  00C7               	movwf	??_ajustes+2
  4834  021F  0846               	movf	??_ajustes+1,w
  4835  0220  1803               	skipnc
  4836  0221  3E01               	addlw	1
  4837  0222  3E00               	addlw	0
  4838  0223  00C8               	movwf	??_ajustes+3
  4839  0224  0842               	movf	ajustes@min_min,w
  4840  0225  0084               	movwf	4
  4841  0226  0847               	movf	??_ajustes+2,w
  4842  0227  0080               	movwf	0
  4843  0228  0A84               	incf	4,f
  4844  0229  0848               	movf	??_ajustes+3,w
  4845  022A  0080               	movwf	0
  4846  022B                     l3744:
  4847                           
  4848                           ;main.c: 221:         if (*min_min>59)
  4849  022B  0842               	movf	ajustes@min_min,w
  4850  022C  0084               	movwf	4
  4851  022D  1383               	bcf	3,7	;select IRP bank0
  4852  022E  0800               	movf	0,w
  4853  022F  00C5               	movwf	??_ajustes
  4854  0230  0A84               	incf	4,f
  4855  0231  0800               	movf	0,w
  4856  0232  00C6               	movwf	??_ajustes+1
  4857  0233  0846               	movf	??_ajustes+1,w
  4858  0234  3A80               	xorlw	128
  4859  0235  00FF               	movwf	btemp+1
  4860  0236  3080               	movlw	128
  4861  0237  027F               	subwf	btemp+1,w
  4862  0238  1D03               	skipz
  4863  0239  2A3C               	goto	u4725
  4864  023A  303C               	movlw	60
  4865  023B  0245               	subwf	??_ajustes,w
  4866  023C                     u4725:
  4867  023C  1C03               	skipc
  4868  023D  2A3F               	goto	u4721
  4869  023E  2A40               	goto	u4720
  4870  023F                     u4721:
  4871  023F  2A48               	goto	l3748
  4872  0240                     u4720:
  4873  0240                     l3746:
  4874                           
  4875                           ;main.c: 222:         {;main.c: 223:             *min_min=0;
  4876  0240  1283               	bcf	3,5	;RP0=0, select bank0
  4877  0241  1303               	bcf	3,6	;RP1=0, select bank0
  4878  0242  0842               	movf	ajustes@min_min,w
  4879  0243  0084               	movwf	4
  4880  0244  1383               	bcf	3,7	;select IRP bank0
  4881  0245  0180               	clrf	0
  4882  0246  0A84               	incf	4,f
  4883  0247  0180               	clrf	0
  4884  0248                     l3748:
  4885                           
  4886                           ;main.c: 213:     while(PORTBbits.RB0!=0)
  4887  0248  1283               	bcf	3,5	;RP0=0, select bank0
  4888  0249  1303               	bcf	3,6	;RP1=0, select bank0
  4889  024A  1806               	btfsc	6,0	;volatile
  4890  024B  2A4D               	goto	u4731
  4891  024C  2A4E               	goto	u4730
  4892  024D                     u4731:
  4893  024D  29E9               	goto	l3736
  4894  024E                     u4730:
  4895  024E                     l3750:
  4896                           
  4897                           ;main.c: 226:     LCD_Cmd(0x01);
  4898  024E  3001               	movlw	1
  4899  024F  120A  118A  27CF  120A  118A  	fcall	_LCD_Cmd
  4900  0254                     l3752:
  4901                           
  4902                           ;main.c: 227:     imprime_tela_ajuste4(*hora_max,*min_max);
  4903  0254  1283               	bcf	3,5	;RP0=0, select bank0
  4904  0255  1303               	bcf	3,6	;RP1=0, select bank0
  4905  0256  0843               	movf	ajustes@hora_max,w
  4906  0257  0084               	movwf	4
  4907  0258  1383               	bcf	3,7	;select IRP bank0
  4908  0259  0800               	movf	0,w
  4909  025A  00BC               	movwf	imprime_tela_ajuste4@horas_max
  4910  025B  0A84               	incf	4,f
  4911  025C  0800               	movf	0,w
  4912  025D  00BD               	movwf	imprime_tela_ajuste4@horas_max+1
  4913  025E  0844               	movf	ajustes@min_max,w
  4914  025F  0084               	movwf	4
  4915  0260  0800               	movf	0,w
  4916  0261  00BE               	movwf	imprime_tela_ajuste4@minutos_max
  4917  0262  0A84               	incf	4,f
  4918  0263  0800               	movf	0,w
  4919  0264  00BF               	movwf	imprime_tela_ajuste4@minutos_max+1
  4920  0265  160A  118A  2578  120A  118A  	fcall	_imprime_tela_ajuste4
  4921  026A                     l3754:
  4922                           
  4923                           ;main.c: 228:     _delay((unsigned long)((200)*(4000000/4000.0)));
  4924  026A  3002               	movlw	2
  4925  026B  1283               	bcf	3,5	;RP0=0, select bank0
  4926  026C  1303               	bcf	3,6	;RP1=0, select bank0
  4927  026D  00C7               	movwf	??_ajustes+2
  4928  026E  3004               	movlw	4
  4929  026F  00C6               	movwf	??_ajustes+1
  4930  0270  30B9               	movlw	185
  4931  0271  00C5               	movwf	??_ajustes
  4932  0272                     u4977:
  4933  0272  0BC5               	decfsz	??_ajustes,f
  4934  0273  2A72               	goto	u4977
  4935  0274  0BC6               	decfsz	??_ajustes+1,f
  4936  0275  2A72               	goto	u4977
  4937  0276  0BC7               	decfsz	??_ajustes+2,f
  4938  0277  2A72               	goto	u4977
  4939  0278  2A79               	nop2
  4940                           
  4941                           ;main.c: 229:     while(PORTBbits.RB0!=0)
  4942  0279  2AD9               	goto	l3768
  4943  027A                     l3756:
  4944                           
  4945                           ;main.c: 230:     {;main.c: 231:         _delay((unsigned long)((200)*(4000000/4000.0)))
      +                          ;
  4946  027A  3002               	movlw	2
  4947  027B  1283               	bcf	3,5	;RP0=0, select bank0
  4948  027C  1303               	bcf	3,6	;RP1=0, select bank0
  4949  027D  00C7               	movwf	??_ajustes+2
  4950  027E  3004               	movlw	4
  4951  027F  00C6               	movwf	??_ajustes+1
  4952  0280  30B9               	movlw	185
  4953  0281  00C5               	movwf	??_ajustes
  4954  0282                     u4987:
  4955  0282  0BC5               	decfsz	??_ajustes,f
  4956  0283  2A82               	goto	u4987
  4957  0284  0BC6               	decfsz	??_ajustes+1,f
  4958  0285  2A82               	goto	u4987
  4959  0286  0BC7               	decfsz	??_ajustes+2,f
  4960  0287  2A82               	goto	u4987
  4961  0288  2A89               	nop2
  4962  0289                     l3758:
  4963                           
  4964                           ;main.c: 232:         imprime_tela_ajuste4(*hora_max,*min_max);
  4965  0289  1283               	bcf	3,5	;RP0=0, select bank0
  4966  028A  1303               	bcf	3,6	;RP1=0, select bank0
  4967  028B  0843               	movf	ajustes@hora_max,w
  4968  028C  0084               	movwf	4
  4969  028D  1383               	bcf	3,7	;select IRP bank0
  4970  028E  0800               	movf	0,w
  4971  028F  00BC               	movwf	imprime_tela_ajuste4@horas_max
  4972  0290  0A84               	incf	4,f
  4973  0291  0800               	movf	0,w
  4974  0292  00BD               	movwf	imprime_tela_ajuste4@horas_max+1
  4975  0293  0844               	movf	ajustes@min_max,w
  4976  0294  0084               	movwf	4
  4977  0295  0800               	movf	0,w
  4978  0296  00BE               	movwf	imprime_tela_ajuste4@minutos_max
  4979  0297  0A84               	incf	4,f
  4980  0298  0800               	movf	0,w
  4981  0299  00BF               	movwf	imprime_tela_ajuste4@minutos_max+1
  4982  029A  160A  118A  2578  120A  118A  	fcall	_imprime_tela_ajuste4
  4983  029F                     l3760:
  4984                           
  4985                           ;main.c: 233:         if(PORTBbits.RB1==0)
  4986  029F  1283               	bcf	3,5	;RP0=0, select bank0
  4987  02A0  1303               	bcf	3,6	;RP1=0, select bank0
  4988  02A1  1886               	btfsc	6,1	;volatile
  4989  02A2  2AA4               	goto	u4741
  4990  02A3  2AA5               	goto	u4740
  4991  02A4                     u4741:
  4992  02A4  2ABC               	goto	l3764
  4993  02A5                     u4740:
  4994  02A5                     l3762:
  4995                           
  4996                           ;main.c: 234:         {;main.c: 235:             *hora_max=*hora_max+1;
  4997  02A5  0843               	movf	ajustes@hora_max,w
  4998  02A6  0084               	movwf	4
  4999  02A7  1383               	bcf	3,7	;select IRP bank0
  5000  02A8  0800               	movf	0,w
  5001  02A9  00C5               	movwf	??_ajustes
  5002  02AA  0A84               	incf	4,f
  5003  02AB  0800               	movf	0,w
  5004  02AC  00C6               	movwf	??_ajustes+1
  5005  02AD  0845               	movf	??_ajustes,w
  5006  02AE  3E01               	addlw	1
  5007  02AF  00C7               	movwf	??_ajustes+2
  5008  02B0  0846               	movf	??_ajustes+1,w
  5009  02B1  1803               	skipnc
  5010  02B2  3E01               	addlw	1
  5011  02B3  3E00               	addlw	0
  5012  02B4  00C8               	movwf	??_ajustes+3
  5013  02B5  0843               	movf	ajustes@hora_max,w
  5014  02B6  0084               	movwf	4
  5015  02B7  0847               	movf	??_ajustes+2,w
  5016  02B8  0080               	movwf	0
  5017  02B9  0A84               	incf	4,f
  5018  02BA  0848               	movf	??_ajustes+3,w
  5019  02BB  0080               	movwf	0
  5020  02BC                     l3764:
  5021                           
  5022                           ;main.c: 237:         if (*hora_max>23)
  5023  02BC  0843               	movf	ajustes@hora_max,w
  5024  02BD  0084               	movwf	4
  5025  02BE  1383               	bcf	3,7	;select IRP bank0
  5026  02BF  0800               	movf	0,w
  5027  02C0  00C5               	movwf	??_ajustes
  5028  02C1  0A84               	incf	4,f
  5029  02C2  0800               	movf	0,w
  5030  02C3  00C6               	movwf	??_ajustes+1
  5031  02C4  0846               	movf	??_ajustes+1,w
  5032  02C5  3A80               	xorlw	128
  5033  02C6  00FF               	movwf	btemp+1
  5034  02C7  3080               	movlw	128
  5035  02C8  027F               	subwf	btemp+1,w
  5036  02C9  1D03               	skipz
  5037  02CA  2ACD               	goto	u4755
  5038  02CB  3018               	movlw	24
  5039  02CC  0245               	subwf	??_ajustes,w
  5040  02CD                     u4755:
  5041  02CD  1C03               	skipc
  5042  02CE  2AD0               	goto	u4751
  5043  02CF  2AD1               	goto	u4750
  5044  02D0                     u4751:
  5045  02D0  2AD9               	goto	l3768
  5046  02D1                     u4750:
  5047  02D1                     l3766:
  5048                           
  5049                           ;main.c: 238:         {;main.c: 239:             *hora_max=0;
  5050  02D1  1283               	bcf	3,5	;RP0=0, select bank0
  5051  02D2  1303               	bcf	3,6	;RP1=0, select bank0
  5052  02D3  0843               	movf	ajustes@hora_max,w
  5053  02D4  0084               	movwf	4
  5054  02D5  1383               	bcf	3,7	;select IRP bank0
  5055  02D6  0180               	clrf	0
  5056  02D7  0A84               	incf	4,f
  5057  02D8  0180               	clrf	0
  5058  02D9                     l3768:
  5059                           
  5060                           ;main.c: 229:     while(PORTBbits.RB0!=0)
  5061  02D9  1283               	bcf	3,5	;RP0=0, select bank0
  5062  02DA  1303               	bcf	3,6	;RP1=0, select bank0
  5063  02DB  1806               	btfsc	6,0	;volatile
  5064  02DC  2ADE               	goto	u4761
  5065  02DD  2ADF               	goto	u4760
  5066  02DE                     u4761:
  5067  02DE  2A7A               	goto	l3756
  5068  02DF                     u4760:
  5069  02DF                     l3770:
  5070                           
  5071                           ;main.c: 242:     _delay((unsigned long)((200)*(4000000/4000.0)));
  5072  02DF  3002               	movlw	2
  5073  02E0  1283               	bcf	3,5	;RP0=0, select bank0
  5074  02E1  1303               	bcf	3,6	;RP1=0, select bank0
  5075  02E2  00C7               	movwf	??_ajustes+2
  5076  02E3  3004               	movlw	4
  5077  02E4  00C6               	movwf	??_ajustes+1
  5078  02E5  30B9               	movlw	185
  5079  02E6  00C5               	movwf	??_ajustes
  5080  02E7                     u4997:
  5081  02E7  0BC5               	decfsz	??_ajustes,f
  5082  02E8  2AE7               	goto	u4997
  5083  02E9  0BC6               	decfsz	??_ajustes+1,f
  5084  02EA  2AE7               	goto	u4997
  5085  02EB  0BC7               	decfsz	??_ajustes+2,f
  5086  02EC  2AE7               	goto	u4997
  5087  02ED  2AEE               	nop2
  5088                           
  5089                           ;main.c: 243:     while(PORTBbits.RB0!=0)
  5090  02EE  2B4E               	goto	l3784
  5091  02EF                     l3772:
  5092                           
  5093                           ;main.c: 244:     {;main.c: 245:         _delay((unsigned long)((200)*(4000000/4000.0)))
      +                          ;
  5094  02EF  3002               	movlw	2
  5095  02F0  1283               	bcf	3,5	;RP0=0, select bank0
  5096  02F1  1303               	bcf	3,6	;RP1=0, select bank0
  5097  02F2  00C7               	movwf	??_ajustes+2
  5098  02F3  3004               	movlw	4
  5099  02F4  00C6               	movwf	??_ajustes+1
  5100  02F5  30B9               	movlw	185
  5101  02F6  00C5               	movwf	??_ajustes
  5102  02F7                     u5007:
  5103  02F7  0BC5               	decfsz	??_ajustes,f
  5104  02F8  2AF7               	goto	u5007
  5105  02F9  0BC6               	decfsz	??_ajustes+1,f
  5106  02FA  2AF7               	goto	u5007
  5107  02FB  0BC7               	decfsz	??_ajustes+2,f
  5108  02FC  2AF7               	goto	u5007
  5109  02FD  2AFE               	nop2
  5110  02FE                     l3774:
  5111                           
  5112                           ;main.c: 246:         imprime_tela_ajuste4(*hora_max,*min_max);
  5113  02FE  1283               	bcf	3,5	;RP0=0, select bank0
  5114  02FF  1303               	bcf	3,6	;RP1=0, select bank0
  5115  0300  0843               	movf	ajustes@hora_max,w
  5116  0301  0084               	movwf	4
  5117  0302  1383               	bcf	3,7	;select IRP bank0
  5118  0303  0800               	movf	0,w
  5119  0304  00BC               	movwf	imprime_tela_ajuste4@horas_max
  5120  0305  0A84               	incf	4,f
  5121  0306  0800               	movf	0,w
  5122  0307  00BD               	movwf	imprime_tela_ajuste4@horas_max+1
  5123  0308  0844               	movf	ajustes@min_max,w
  5124  0309  0084               	movwf	4
  5125  030A  0800               	movf	0,w
  5126  030B  00BE               	movwf	imprime_tela_ajuste4@minutos_max
  5127  030C  0A84               	incf	4,f
  5128  030D  0800               	movf	0,w
  5129  030E  00BF               	movwf	imprime_tela_ajuste4@minutos_max+1
  5130  030F  160A  118A  2578  120A  118A  	fcall	_imprime_tela_ajuste4
  5131  0314                     l3776:
  5132                           
  5133                           ;main.c: 247:         if(PORTBbits.RB1==0)
  5134  0314  1283               	bcf	3,5	;RP0=0, select bank0
  5135  0315  1303               	bcf	3,6	;RP1=0, select bank0
  5136  0316  1886               	btfsc	6,1	;volatile
  5137  0317  2B19               	goto	u4771
  5138  0318  2B1A               	goto	u4770
  5139  0319                     u4771:
  5140  0319  2B31               	goto	l3780
  5141  031A                     u4770:
  5142  031A                     l3778:
  5143                           
  5144                           ;main.c: 248:         {;main.c: 249:             *min_max=*min_max+1;
  5145  031A  0844               	movf	ajustes@min_max,w
  5146  031B  0084               	movwf	4
  5147  031C  1383               	bcf	3,7	;select IRP bank0
  5148  031D  0800               	movf	0,w
  5149  031E  00C5               	movwf	??_ajustes
  5150  031F  0A84               	incf	4,f
  5151  0320  0800               	movf	0,w
  5152  0321  00C6               	movwf	??_ajustes+1
  5153  0322  0845               	movf	??_ajustes,w
  5154  0323  3E01               	addlw	1
  5155  0324  00C7               	movwf	??_ajustes+2
  5156  0325  0846               	movf	??_ajustes+1,w
  5157  0326  1803               	skipnc
  5158  0327  3E01               	addlw	1
  5159  0328  3E00               	addlw	0
  5160  0329  00C8               	movwf	??_ajustes+3
  5161  032A  0844               	movf	ajustes@min_max,w
  5162  032B  0084               	movwf	4
  5163  032C  0847               	movf	??_ajustes+2,w
  5164  032D  0080               	movwf	0
  5165  032E  0A84               	incf	4,f
  5166  032F  0848               	movf	??_ajustes+3,w
  5167  0330  0080               	movwf	0
  5168  0331                     l3780:
  5169                           
  5170                           ;main.c: 251:         if (*min_max>59)
  5171  0331  0844               	movf	ajustes@min_max,w
  5172  0332  0084               	movwf	4
  5173  0333  1383               	bcf	3,7	;select IRP bank0
  5174  0334  0800               	movf	0,w
  5175  0335  00C5               	movwf	??_ajustes
  5176  0336  0A84               	incf	4,f
  5177  0337  0800               	movf	0,w
  5178  0338  00C6               	movwf	??_ajustes+1
  5179  0339  0846               	movf	??_ajustes+1,w
  5180  033A  3A80               	xorlw	128
  5181  033B  00FF               	movwf	btemp+1
  5182  033C  3080               	movlw	128
  5183  033D  027F               	subwf	btemp+1,w
  5184  033E  1D03               	skipz
  5185  033F  2B42               	goto	u4785
  5186  0340  303C               	movlw	60
  5187  0341  0245               	subwf	??_ajustes,w
  5188  0342                     u4785:
  5189  0342  1C03               	skipc
  5190  0343  2B45               	goto	u4781
  5191  0344  2B46               	goto	u4780
  5192  0345                     u4781:
  5193  0345  2B4E               	goto	l3784
  5194  0346                     u4780:
  5195  0346                     l3782:
  5196                           
  5197                           ;main.c: 252:         {;main.c: 253:               *min_max=0;
  5198  0346  1283               	bcf	3,5	;RP0=0, select bank0
  5199  0347  1303               	bcf	3,6	;RP1=0, select bank0
  5200  0348  0844               	movf	ajustes@min_max,w
  5201  0349  0084               	movwf	4
  5202  034A  1383               	bcf	3,7	;select IRP bank0
  5203  034B  0180               	clrf	0
  5204  034C  0A84               	incf	4,f
  5205  034D  0180               	clrf	0
  5206  034E                     l3784:
  5207                           
  5208                           ;main.c: 243:     while(PORTBbits.RB0!=0)
  5209  034E  1283               	bcf	3,5	;RP0=0, select bank0
  5210  034F  1303               	bcf	3,6	;RP1=0, select bank0
  5211  0350  1806               	btfsc	6,0	;volatile
  5212  0351  2B53               	goto	u4791
  5213  0352  2B54               	goto	u4790
  5214  0353                     u4791:
  5215  0353  2AEF               	goto	l3772
  5216  0354                     u4790:
  5217  0354                     l3786:
  5218                           
  5219                           ;main.c: 256:     _delay((unsigned long)((200)*(4000000/4000.0)));
  5220  0354  3002               	movlw	2
  5221  0355  1283               	bcf	3,5	;RP0=0, select bank0
  5222  0356  1303               	bcf	3,6	;RP1=0, select bank0
  5223  0357  00C7               	movwf	??_ajustes+2
  5224  0358  3004               	movlw	4
  5225  0359  00C6               	movwf	??_ajustes+1
  5226  035A  30B9               	movlw	185
  5227  035B  00C5               	movwf	??_ajustes
  5228  035C                     u5017:
  5229  035C  0BC5               	decfsz	??_ajustes,f
  5230  035D  2B5C               	goto	u5017
  5231  035E  0BC6               	decfsz	??_ajustes+1,f
  5232  035F  2B5C               	goto	u5017
  5233  0360  0BC7               	decfsz	??_ajustes+2,f
  5234  0361  2B5C               	goto	u5017
  5235  0362  2B63               	nop2
  5236  0363                     l3788:
  5237                           
  5238                           ;main.c: 258:     LCD_Cmd(0x01);
  5239  0363  3001               	movlw	1
  5240  0364  120A  118A  27CF  120A  118A  	fcall	_LCD_Cmd
  5241  0369                     l155:
  5242  0369  0008               	return
  5243  036A                     __end_of_ajustes:
  5244                           
  5245                           	psect	text13
  5246  1578                     __ptext13:	
  5247 ;; *************** function _imprime_tela_ajuste4 *****************
  5248 ;; Defined at:
  5249 ;;		line 135 in file "main.c"
  5250 ;; Parameters:    Size  Location     Type
  5251 ;;  horas_max       2   28[BANK0 ] int 
  5252 ;;  minutos_max     2   30[BANK0 ] int 
  5253 ;; Auto vars:     Size  Location     Type
  5254 ;;		None
  5255 ;; Return value:  Size  Location     Type
  5256 ;;                  1    wreg      void 
  5257 ;; Registers used:
  5258 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5259 ;; Tracked objects:
  5260 ;;		On entry : 0/0
  5261 ;;		On exit  : 0/0
  5262 ;;		Unchanged: 0/0
  5263 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5264 ;;      Params:         0       4       0       0       0
  5265 ;;      Locals:         0       0       0       0       0
  5266 ;;      Temps:          0       1       0       0       0
  5267 ;;      Totals:         0       5       0       0       0
  5268 ;;Total ram usage:        5 bytes
  5269 ;; Hardware stack levels used: 1
  5270 ;; Hardware stack levels required when called: 4
  5271 ;; This function calls:
  5272 ;;		_LCD_Goto
  5273 ;;		_LCD_Print
  5274 ;;		_sprintf
  5275 ;; This function is called by:
  5276 ;;		_ajustes
  5277 ;; This function uses a non-reentrant model
  5278 ;;
  5279                           
  5280                           
  5281                           ;psect for function _imprime_tela_ajuste4
  5282  1578                     _imprime_tela_ajuste4:
  5283  1578                     l3594:	
  5284                           ;incstack = 0
  5285                           ; Regs used in _imprime_tela_ajuste4: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstac
      +                          k]
  5286                           
  5287                           
  5288                           ;main.c: 135: void imprime_tela_ajuste4(int horas_max,int minutos_max);main.c: 136: {;ma
      +                          in.c: 137:    LCD_Goto(1, 1);
  5289  1578  1283               	bcf	3,5	;RP0=0, select bank0
  5290  1579  1303               	bcf	3,6	;RP1=0, select bank0
  5291  157A  01A1               	clrf	LCD_Goto@row
  5292  157B  0AA1               	incf	LCD_Goto@row,f
  5293  157C  3001               	movlw	1
  5294  157D  160A  118A  2445  160A  118A  	fcall	_LCD_Goto
  5295  1582                     l3596:
  5296                           
  5297                           ;main.c: 138:    sprintf(LCD_Cstring,"Stop time:");
  5298  1582  3071               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  5299  1583  1283               	bcf	3,5	;RP0=0, select bank0
  5300  1584  1303               	bcf	3,6	;RP1=0, select bank0
  5301  1585  00C0               	movwf	??_imprime_tela_ajuste4
  5302  1586  0840               	movf	??_imprime_tela_ajuste4,w
  5303  1587  00A9               	movwf	sprintf@f
  5304  1588  30CE               	movlw	(low (_LCD_Cstring| 0))& (0+255)
  5305  1589  120A  158A  262C  160A  118A  	fcall	_sprintf
  5306  158E                     l3598:
  5307                           
  5308                           ;main.c: 139:    LCD_Print(LCD_Cstring);
  5309  158E  30CE               	movlw	(low (_LCD_Cstring| 0))& (0+255)
  5310  158F  160A  118A  247D  160A  118A  	fcall	_LCD_Print
  5311  1594                     l3600:
  5312                           
  5313                           ;main.c: 141:       LCD_Goto(1, 2);
  5314  1594  3002               	movlw	2
  5315  1595  1283               	bcf	3,5	;RP0=0, select bank0
  5316  1596  1303               	bcf	3,6	;RP1=0, select bank0
  5317  1597  00C0               	movwf	??_imprime_tela_ajuste4
  5318  1598  0840               	movf	??_imprime_tela_ajuste4,w
  5319  1599  00A1               	movwf	LCD_Goto@row
  5320  159A  3001               	movlw	1
  5321  159B  160A  118A  2445  160A  118A  	fcall	_LCD_Goto
  5322  15A0                     l3602:
  5323                           
  5324                           ;main.c: 142:    sprintf(LCD_Cstring,"     %02d:%02d     ",horas_max,minutos_max);
  5325  15A0  3022               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  5326  15A1  1283               	bcf	3,5	;RP0=0, select bank0
  5327  15A2  1303               	bcf	3,6	;RP1=0, select bank0
  5328  15A3  00C0               	movwf	??_imprime_tela_ajuste4
  5329  15A4  0840               	movf	??_imprime_tela_ajuste4,w
  5330  15A5  00A9               	movwf	sprintf@f
  5331  15A6  083D               	movf	imprime_tela_ajuste4@horas_max+1,w
  5332  15A7  00AB               	movwf	?_sprintf+2
  5333  15A8  083C               	movf	imprime_tela_ajuste4@horas_max,w
  5334  15A9  00AA               	movwf	?_sprintf+1
  5335  15AA  083F               	movf	imprime_tela_ajuste4@minutos_max+1,w
  5336  15AB  00AD               	movwf	?_sprintf+4
  5337  15AC  083E               	movf	imprime_tela_ajuste4@minutos_max,w
  5338  15AD  00AC               	movwf	?_sprintf+3
  5339  15AE  30CE               	movlw	(low (_LCD_Cstring| 0))& (0+255)
  5340  15AF  120A  158A  262C  160A  118A  	fcall	_sprintf
  5341                           
  5342                           ;main.c: 143:    LCD_Print(LCD_Cstring);
  5343  15B4  30CE               	movlw	(low (_LCD_Cstring| 0))& (0+255)
  5344  15B5  160A  118A  247D  160A  118A  	fcall	_LCD_Print
  5345  15BA                     l117:
  5346  15BA  0008               	return
  5347  15BB                     __end_of_imprime_tela_ajuste4:
  5348                           
  5349                           	psect	text14
  5350  1535                     __ptext14:	
  5351 ;; *************** function _imprime_tela_ajuste3 *****************
  5352 ;; Defined at:
  5353 ;;		line 124 in file "main.c"
  5354 ;; Parameters:    Size  Location     Type
  5355 ;;  horas_min       2   28[BANK0 ] int 
  5356 ;;  minutos_min     2   30[BANK0 ] int 
  5357 ;; Auto vars:     Size  Location     Type
  5358 ;;		None
  5359 ;; Return value:  Size  Location     Type
  5360 ;;                  1    wreg      void 
  5361 ;; Registers used:
  5362 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5363 ;; Tracked objects:
  5364 ;;		On entry : 0/0
  5365 ;;		On exit  : 0/0
  5366 ;;		Unchanged: 0/0
  5367 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5368 ;;      Params:         0       4       0       0       0
  5369 ;;      Locals:         0       0       0       0       0
  5370 ;;      Temps:          0       1       0       0       0
  5371 ;;      Totals:         0       5       0       0       0
  5372 ;;Total ram usage:        5 bytes
  5373 ;; Hardware stack levels used: 1
  5374 ;; Hardware stack levels required when called: 4
  5375 ;; This function calls:
  5376 ;;		_LCD_Goto
  5377 ;;		_LCD_Print
  5378 ;;		_sprintf
  5379 ;; This function is called by:
  5380 ;;		_ajustes
  5381 ;; This function uses a non-reentrant model
  5382 ;;
  5383                           
  5384                           
  5385                           ;psect for function _imprime_tela_ajuste3
  5386  1535                     _imprime_tela_ajuste3:
  5387  1535                     l3584:	
  5388                           ;incstack = 0
  5389                           ; Regs used in _imprime_tela_ajuste3: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstac
      +                          k]
  5390                           
  5391                           
  5392                           ;main.c: 124: void imprime_tela_ajuste3(int horas_min,int minutos_min);main.c: 125: {;ma
      +                          in.c: 126:    LCD_Goto(1, 1);
  5393  1535  1283               	bcf	3,5	;RP0=0, select bank0
  5394  1536  1303               	bcf	3,6	;RP1=0, select bank0
  5395  1537  01A1               	clrf	LCD_Goto@row
  5396  1538  0AA1               	incf	LCD_Goto@row,f
  5397  1539  3001               	movlw	1
  5398  153A  160A  118A  2445  160A  118A  	fcall	_LCD_Goto
  5399  153F                     l3586:
  5400                           
  5401                           ;main.c: 127:    sprintf(LCD_Cstring,"Start time:");
  5402  153F  3059               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  5403  1540  1283               	bcf	3,5	;RP0=0, select bank0
  5404  1541  1303               	bcf	3,6	;RP1=0, select bank0
  5405  1542  00C0               	movwf	??_imprime_tela_ajuste3
  5406  1543  0840               	movf	??_imprime_tela_ajuste3,w
  5407  1544  00A9               	movwf	sprintf@f
  5408  1545  30CE               	movlw	(low (_LCD_Cstring| 0))& (0+255)
  5409  1546  120A  158A  262C  160A  118A  	fcall	_sprintf
  5410  154B                     l3588:
  5411                           
  5412                           ;main.c: 128:    LCD_Print(LCD_Cstring);
  5413  154B  30CE               	movlw	(low (_LCD_Cstring| 0))& (0+255)
  5414  154C  160A  118A  247D  160A  118A  	fcall	_LCD_Print
  5415  1551                     l3590:
  5416                           
  5417                           ;main.c: 130:       LCD_Goto(1, 2);
  5418  1551  3002               	movlw	2
  5419  1552  1283               	bcf	3,5	;RP0=0, select bank0
  5420  1553  1303               	bcf	3,6	;RP1=0, select bank0
  5421  1554  00C0               	movwf	??_imprime_tela_ajuste3
  5422  1555  0840               	movf	??_imprime_tela_ajuste3,w
  5423  1556  00A1               	movwf	LCD_Goto@row
  5424  1557  3001               	movlw	1
  5425  1558  160A  118A  2445  160A  118A  	fcall	_LCD_Goto
  5426  155D                     l3592:
  5427                           
  5428                           ;main.c: 131:    sprintf(LCD_Cstring,"     %02d:%02d     ",horas_min,minutos_min);
  5429  155D  3022               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  5430  155E  1283               	bcf	3,5	;RP0=0, select bank0
  5431  155F  1303               	bcf	3,6	;RP1=0, select bank0
  5432  1560  00C0               	movwf	??_imprime_tela_ajuste3
  5433  1561  0840               	movf	??_imprime_tela_ajuste3,w
  5434  1562  00A9               	movwf	sprintf@f
  5435  1563  083D               	movf	imprime_tela_ajuste3@horas_min+1,w
  5436  1564  00AB               	movwf	?_sprintf+2
  5437  1565  083C               	movf	imprime_tela_ajuste3@horas_min,w
  5438  1566  00AA               	movwf	?_sprintf+1
  5439  1567  083F               	movf	imprime_tela_ajuste3@minutos_min+1,w
  5440  1568  00AD               	movwf	?_sprintf+4
  5441  1569  083E               	movf	imprime_tela_ajuste3@minutos_min,w
  5442  156A  00AC               	movwf	?_sprintf+3
  5443  156B  30CE               	movlw	(low (_LCD_Cstring| 0))& (0+255)
  5444  156C  120A  158A  262C  160A  118A  	fcall	_sprintf
  5445                           
  5446                           ;main.c: 132:    LCD_Print(LCD_Cstring);
  5447  1571  30CE               	movlw	(low (_LCD_Cstring| 0))& (0+255)
  5448  1572  160A  118A  247D  160A  118A  	fcall	_LCD_Print
  5449  1577                     l114:
  5450  1577  0008               	return
  5451  1578                     __end_of_imprime_tela_ajuste3:
  5452                           
  5453                           	psect	text15
  5454  14F2                     __ptext15:	
  5455 ;; *************** function _imprime_tela_ajuste2 *****************
  5456 ;; Defined at:
  5457 ;;		line 110 in file "main.c"
  5458 ;; Parameters:    Size  Location     Type
  5459 ;;		None
  5460 ;; Auto vars:     Size  Location     Type
  5461 ;;		None
  5462 ;; Return value:  Size  Location     Type
  5463 ;;                  1    wreg      void 
  5464 ;; Registers used:
  5465 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5466 ;; Tracked objects:
  5467 ;;		On entry : 0/0
  5468 ;;		On exit  : 0/0
  5469 ;;		Unchanged: 0/0
  5470 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5471 ;;      Params:         0       0       0       0       0
  5472 ;;      Locals:         0       0       0       0       0
  5473 ;;      Temps:          0       1       0       0       0
  5474 ;;      Totals:         0       1       0       0       0
  5475 ;;Total ram usage:        1 bytes
  5476 ;; Hardware stack levels used: 1
  5477 ;; Hardware stack levels required when called: 4
  5478 ;; This function calls:
  5479 ;;		_LCD_Goto
  5480 ;;		_LCD_Print
  5481 ;;		_sprintf
  5482 ;; This function is called by:
  5483 ;;		_ajustes
  5484 ;; This function uses a non-reentrant model
  5485 ;;
  5486                           
  5487                           
  5488                           ;psect for function _imprime_tela_ajuste2
  5489  14F2                     _imprime_tela_ajuste2:
  5490  14F2                     l3574:	
  5491                           ;incstack = 0
  5492                           ; Regs used in _imprime_tela_ajuste2: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstac
      +                          k]
  5493                           
  5494                           
  5495                           ;main.c: 113:    LCD_Goto(1, 1);
  5496  14F2  1283               	bcf	3,5	;RP0=0, select bank0
  5497  14F3  1303               	bcf	3,6	;RP1=0, select bank0
  5498  14F4  01A1               	clrf	LCD_Goto@row
  5499  14F5  0AA1               	incf	LCD_Goto@row,f
  5500  14F6  3001               	movlw	1
  5501  14F7  160A  118A  2445  160A  118A  	fcall	_LCD_Goto
  5502  14FC                     l3576:
  5503                           
  5504                           ;main.c: 114:    sprintf(LCD_Cstring,"Horario Atual:");
  5505  14FC  304A               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  5506  14FD  1283               	bcf	3,5	;RP0=0, select bank0
  5507  14FE  1303               	bcf	3,6	;RP1=0, select bank0
  5508  14FF  00BC               	movwf	??_imprime_tela_ajuste2
  5509  1500  083C               	movf	??_imprime_tela_ajuste2,w
  5510  1501  00A9               	movwf	sprintf@f
  5511  1502  30CE               	movlw	(low (_LCD_Cstring| 0))& (0+255)
  5512  1503  120A  158A  262C  160A  118A  	fcall	_sprintf
  5513  1508                     l3578:
  5514                           
  5515                           ;main.c: 115:    LCD_Print(LCD_Cstring);
  5516  1508  30CE               	movlw	(low (_LCD_Cstring| 0))& (0+255)
  5517  1509  160A  118A  247D  160A  118A  	fcall	_LCD_Print
  5518  150E                     l3580:
  5519                           
  5520                           ;main.c: 117:    LCD_Goto(1, 2);
  5521  150E  3002               	movlw	2
  5522  150F  1283               	bcf	3,5	;RP0=0, select bank0
  5523  1510  1303               	bcf	3,6	;RP1=0, select bank0
  5524  1511  00BC               	movwf	??_imprime_tela_ajuste2
  5525  1512  083C               	movf	??_imprime_tela_ajuste2,w
  5526  1513  00A1               	movwf	LCD_Goto@row
  5527  1514  3001               	movlw	1
  5528  1515  160A  118A  2445  160A  118A  	fcall	_LCD_Goto
  5529  151A                     l3582:
  5530                           
  5531                           ;main.c: 118:    sprintf(LCD_Cstring,"     %02d:%02d     ",Horas,Minutos);
  5532  151A  3022               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  5533  151B  1283               	bcf	3,5	;RP0=0, select bank0
  5534  151C  1303               	bcf	3,6	;RP1=0, select bank0
  5535  151D  00BC               	movwf	??_imprime_tela_ajuste2
  5536  151E  083C               	movf	??_imprime_tela_ajuste2,w
  5537  151F  00A9               	movwf	sprintf@f
  5538  1520  086E               	movf	_Horas+1,w
  5539  1521  00AB               	movwf	?_sprintf+2
  5540  1522  086D               	movf	_Horas,w
  5541  1523  00AA               	movwf	?_sprintf+1
  5542  1524  0879               	movf	_Minutos+1,w
  5543  1525  00AD               	movwf	?_sprintf+4
  5544  1526  0878               	movf	_Minutos,w
  5545  1527  00AC               	movwf	?_sprintf+3
  5546  1528  30CE               	movlw	(low (_LCD_Cstring| 0))& (0+255)
  5547  1529  120A  158A  262C  160A  118A  	fcall	_sprintf
  5548                           
  5549                           ;main.c: 119:    LCD_Print(LCD_Cstring);
  5550  152E  30CE               	movlw	(low (_LCD_Cstring| 0))& (0+255)
  5551  152F  160A  118A  247D  160A  118A  	fcall	_LCD_Print
  5552  1534                     l111:
  5553  1534  0008               	return
  5554  1535                     __end_of_imprime_tela_ajuste2:
  5555                           
  5556                           	psect	text16
  5557  13F9                     __ptext16:	
  5558 ;; *************** function _imprime_tela_ajuste1 *****************
  5559 ;; Defined at:
  5560 ;;		line 102 in file "main.c"
  5561 ;; Parameters:    Size  Location     Type
  5562 ;;  temp            2   28[BANK0 ] int 
  5563 ;; Auto vars:     Size  Location     Type
  5564 ;;		None
  5565 ;; Return value:  Size  Location     Type
  5566 ;;                  1    wreg      void 
  5567 ;; Registers used:
  5568 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5569 ;; Tracked objects:
  5570 ;;		On entry : 0/0
  5571 ;;		On exit  : 0/0
  5572 ;;		Unchanged: 0/0
  5573 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5574 ;;      Params:         0       2       0       0       0
  5575 ;;      Locals:         0       0       0       0       0
  5576 ;;      Temps:          0       1       0       0       0
  5577 ;;      Totals:         0       3       0       0       0
  5578 ;;Total ram usage:        3 bytes
  5579 ;; Hardware stack levels used: 1
  5580 ;; Hardware stack levels required when called: 4
  5581 ;; This function calls:
  5582 ;;		_LCD_Goto
  5583 ;;		_LCD_Print
  5584 ;;		_sprintf
  5585 ;; This function is called by:
  5586 ;;		_ajustes
  5587 ;; This function uses a non-reentrant model
  5588 ;;
  5589                           
  5590                           
  5591                           ;psect for function _imprime_tela_ajuste1
  5592  13F9                     _imprime_tela_ajuste1:
  5593  13F9                     l3568:	
  5594                           ;incstack = 0
  5595                           ; Regs used in _imprime_tela_ajuste1: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstac
      +                          k]
  5596                           
  5597                           
  5598                           ;main.c: 102: void imprime_tela_ajuste1(int temp);main.c: 103: {;main.c: 104:    LCD_Got
      +                          o(1, 1);
  5599  13F9  1283               	bcf	3,5	;RP0=0, select bank0
  5600  13FA  1303               	bcf	3,6	;RP1=0, select bank0
  5601  13FB  01A1               	clrf	LCD_Goto@row
  5602  13FC  0AA1               	incf	LCD_Goto@row,f
  5603  13FD  3001               	movlw	1
  5604  13FE  160A  118A  2445  160A  118A  	fcall	_LCD_Goto
  5605  1403                     l3570:
  5606                           
  5607                           ;main.c: 105:    sprintf(LCD_Cstring,"Temp. Des: %02d\337c  ",temp);
  5608  1403  3036               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  5609  1404  1283               	bcf	3,5	;RP0=0, select bank0
  5610  1405  1303               	bcf	3,6	;RP1=0, select bank0
  5611  1406  00BE               	movwf	??_imprime_tela_ajuste1
  5612  1407  083E               	movf	??_imprime_tela_ajuste1,w
  5613  1408  00A9               	movwf	sprintf@f
  5614  1409  083D               	movf	imprime_tela_ajuste1@temp+1,w
  5615  140A  00AB               	movwf	?_sprintf+2
  5616  140B  083C               	movf	imprime_tela_ajuste1@temp,w
  5617  140C  00AA               	movwf	?_sprintf+1
  5618  140D  30CE               	movlw	(low (_LCD_Cstring| 0))& (0+255)
  5619  140E  120A  158A  262C  160A  118A  	fcall	_sprintf
  5620  1413                     l3572:
  5621                           
  5622                           ;main.c: 106:    LCD_Print(LCD_Cstring);
  5623  1413  30CE               	movlw	(low (_LCD_Cstring| 0))& (0+255)
  5624  1414  160A  118A  247D  160A  118A  	fcall	_LCD_Print
  5625  1419                     l108:
  5626  1419  0008               	return
  5627  141A                     __end_of_imprime_tela_ajuste1:
  5628                           
  5629                           	psect	text17
  5630  0E2C                     __ptext17:	
  5631 ;; *************** function _sprintf *****************
  5632 ;; Defined at:
  5633 ;;		line 505 in file "D:\Programas\XC8 compiler\pic\sources\c90\common\doprnt.c"
  5634 ;; Parameters:    Size  Location     Type
  5635 ;;  sp              1    wreg     PTR unsigned char 
  5636 ;;		 -> LCD_Cstring(16), 
  5637 ;;  f               1    9[BANK0 ] PTR const unsigned char 
  5638 ;;		 -> STR_9(20), STR_8(11), STR_7(20), STR_6(12), 
  5639 ;;		 -> STR_5(20), STR_4(15), STR_3(20), STR_2(12), 
  5640 ;;		 -> STR_1(23), 
  5641 ;; Auto vars:     Size  Location     Type
  5642 ;;  sp              1   27[BANK0 ] PTR unsigned char 
  5643 ;;		 -> LCD_Cstring(16), 
  5644 ;;  tmpval          4    0        struct .
  5645 ;;  width           2   24[BANK0 ] int 
  5646 ;;  val             2   21[BANK0 ] unsigned int 
  5647 ;;  cp              2    0        PTR const unsigned char 
  5648 ;;  len             2    0        unsigned int 
  5649 ;;  c               1   26[BANK0 ] unsigned char 
  5650 ;;  flag            1   23[BANK0 ] unsigned char 
  5651 ;;  prec            1   20[BANK0 ] char 
  5652 ;;  ap              1   19[BANK0 ] PTR void [1]
  5653 ;;		 -> ?_sprintf(2), 
  5654 ;; Return value:  Size  Location     Type
  5655 ;;                  2    9[BANK0 ] int 
  5656 ;; Registers used:
  5657 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5658 ;; Tracked objects:
  5659 ;;		On entry : 0/0
  5660 ;;		On exit  : 0/0
  5661 ;;		Unchanged: 0/0
  5662 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5663 ;;      Params:         0       7       0       0       0
  5664 ;;      Locals:         0       9       0       0       0
  5665 ;;      Temps:          0       3       0       0       0
  5666 ;;      Totals:         0      19       0       0       0
  5667 ;;Total ram usage:       19 bytes
  5668 ;; Hardware stack levels used: 1
  5669 ;; Hardware stack levels required when called: 2
  5670 ;; This function calls:
  5671 ;;		___lwdiv
  5672 ;;		___lwmod
  5673 ;;		___wmul
  5674 ;;		_isdigit
  5675 ;; This function is called by:
  5676 ;;		_imprime_tela_main
  5677 ;;		_imprime_tela_ajuste1
  5678 ;;		_imprime_tela_ajuste2
  5679 ;;		_imprime_tela_ajuste3
  5680 ;;		_imprime_tela_ajuste4
  5681 ;; This function uses a non-reentrant model
  5682 ;;
  5683                           
  5684                           
  5685                           ;psect for function _sprintf
  5686  0E2C                     _sprintf:
  5687                           
  5688                           ;incstack = 0
  5689                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5690                           ;sprintf@sp stored from wreg
  5691  0E2C  1283               	bcf	3,5	;RP0=0, select bank0
  5692  0E2D  1303               	bcf	3,6	;RP1=0, select bank0
  5693  0E2E  00BB               	movwf	sprintf@sp
  5694  0E2F                     l3390:
  5695                           
  5696                           ;D:\Programas\XC8 compiler\pic\sources\c90\common\doprnt.c: 505: sprintf(char * sp, cons
      +                          t char * f, ...);D:\Programas\XC8 compiler\pic\sources\c90\common\doprnt.c: 506: {;D:\Pr
      +                          ogramas\XC8 compiler\pic\sources\c90\common\doprnt.c: 507:  va_list ap;;D:\Programas\XC8
      +                           compiler\pic\sources\c90\common\doprnt.c: 512:  char c;;D:\Programas\XC8 compiler\pic\s
      +                          ources\c90\common\doprnt.c: 514:  int width;;D:\Programas\XC8 compiler\pic\sources\c90\c
      +                          ommon\doprnt.c: 521:  signed char prec;;D:\Programas\XC8 compiler\pic\sources\c90\common
      +                          \doprnt.c: 525:  unsigned char flag;
  5697  0E2F  302A               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  5698  0E30  00B0               	movwf	??_sprintf
  5699  0E31  0830               	movf	??_sprintf,w
  5700  0E32  00B3               	movwf	sprintf@ap
  5701                           
  5702                           ;D:\Programas\XC8 compiler\pic\sources\c90\common\doprnt.c: 553:  while((c = *f++)) {
  5703  0E33  2FE9               	goto	l3494
  5704  0E34                     l3392:
  5705                           
  5706                           ;D:\Programas\XC8 compiler\pic\sources\c90\common\doprnt.c: 555:   if(c != '%')
  5707  0E34  3025               	movlw	37
  5708  0E35  063A               	xorwf	sprintf@c,w
  5709  0E36  1903               	btfsc	3,2
  5710  0E37  2E39               	goto	u4241
  5711  0E38  2E3A               	goto	u4240
  5712  0E39                     u4241:
  5713  0E39  2E46               	goto	l3398
  5714  0E3A                     u4240:
  5715  0E3A                     l3394:
  5716                           
  5717                           ;D:\Programas\XC8 compiler\pic\sources\c90\common\doprnt.c: 557:   {;D:\Programas\XC8 co
      +                          mpiler\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  5718  0E3A  083A               	movf	sprintf@c,w
  5719  0E3B  00B0               	movwf	??_sprintf
  5720  0E3C  083B               	movf	sprintf@sp,w
  5721  0E3D  0084               	movwf	4
  5722  0E3E  0830               	movf	??_sprintf,w
  5723  0E3F  1383               	bcf	3,7	;select IRP bank0
  5724  0E40  0080               	movwf	0
  5725  0E41                     l3396:
  5726  0E41  3001               	movlw	1
  5727  0E42  00B0               	movwf	??_sprintf
  5728  0E43  0830               	movf	??_sprintf,w
  5729  0E44  07BB               	addwf	sprintf@sp,f
  5730                           
  5731                           ;D:\Programas\XC8 compiler\pic\sources\c90\common\doprnt.c: 559:    continue;
  5732  0E45  2FE9               	goto	l3494
  5733  0E46                     l3398:
  5734                           
  5735                           ;D:\Programas\XC8 compiler\pic\sources\c90\common\doprnt.c: 563:   width = 0;
  5736  0E46  01B8               	clrf	sprintf@width
  5737  0E47  01B9               	clrf	sprintf@width+1
  5738                           
  5739                           ;D:\Programas\XC8 compiler\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  5740  0E48  01B7               	clrf	sprintf@flag
  5741  0E49  2E4F               	goto	l3404
  5742  0E4A                     l308:	
  5743                           ;D:\Programas\XC8 compiler\pic\sources\c90\common\doprnt.c: 596:    case '0':
  5744                           
  5745                           
  5746                           ;D:\Programas\XC8 compiler\pic\sources\c90\common\doprnt.c: 597:     flag |= 0x04;
  5747  0E4A  1537               	bsf	sprintf@flag,2
  5748  0E4B                     l3400:
  5749                           
  5750                           ;D:\Programas\XC8 compiler\pic\sources\c90\common\doprnt.c: 598:     f++;
  5751  0E4B  3001               	movlw	1
  5752  0E4C  00B0               	movwf	??_sprintf
  5753  0E4D  0830               	movf	??_sprintf,w
  5754  0E4E  07A9               	addwf	sprintf@f,f
  5755  0E4F                     l3404:	
  5756                           ;D:\Programas\XC8 compiler\pic\sources\c90\common\doprnt.c: 599:     continue;
  5757                           
  5758  0E4F  0829               	movf	sprintf@f,w
  5759  0E50  0084               	movwf	4
  5760  0E51  120A  158A  2000  120A  158A  	fcall	stringdir
  5761  0E56  00B0               	movwf	??_sprintf
  5762  0E57  01B1               	clrf	??_sprintf+1
  5763                           
  5764                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5765                           ; Switch size 1, requested type "simple"
  5766                           ; Number of cases is 1, Range of values is 0 to 0
  5767                           ; switch strategies available:
  5768                           ; Name         Instructions Cycles
  5769                           ; simple_byte            4     3 (average)
  5770                           ; direct_byte           11     8 (fixed)
  5771                           ; jumptable            260     6 (fixed)
  5772                           ;	Chosen strategy is simple_byte
  5773  0E58  0831               	movf	??_sprintf+1,w
  5774  0E59  3A00               	xorlw	0	; case 0
  5775  0E5A  1903               	skipnz
  5776  0E5B  2E5D               	goto	l3924
  5777  0E5C  2E62               	goto	l3406
  5778  0E5D                     l3924:
  5779                           
  5780                           ; Switch size 1, requested type "simple"
  5781                           ; Number of cases is 1, Range of values is 48 to 48
  5782                           ; switch strategies available:
  5783                           ; Name         Instructions Cycles
  5784                           ; simple_byte            4     3 (average)
  5785                           ; direct_byte           14    11 (fixed)
  5786                           ; jumptable            263     9 (fixed)
  5787                           ;	Chosen strategy is simple_byte
  5788  0E5D  0830               	movf	??_sprintf,w
  5789  0E5E  3A30               	xorlw	48	; case 48
  5790  0E5F  1903               	skipnz
  5791  0E60  2E4A               	goto	l308
  5792  0E61  2E62               	goto	l3406
  5793  0E62                     l3406:
  5794                           
  5795                           ;D:\Programas\XC8 compiler\pic\sources\c90\common\doprnt.c: 614:   if(isdigit((unsigned)
      +                          *f)) {
  5796  0E62  0829               	movf	sprintf@f,w
  5797  0E63  0084               	movwf	4
  5798  0E64  120A  158A  2000  120A  158A  	fcall	stringdir
  5799  0E69  120A  158A  2087  120A  158A  	fcall	_isdigit
  5800  0E6E  1C03               	btfss	3,0
  5801  0E6F  2E71               	goto	u4251
  5802  0E70  2E72               	goto	u4250
  5803  0E71                     u4251:
  5804  0E71  2EB2               	goto	l3420
  5805  0E72                     u4250:
  5806  0E72                     l3408:
  5807                           
  5808                           ;D:\Programas\XC8 compiler\pic\sources\c90\common\doprnt.c: 615:    width = 0;
  5809  0E72  1283               	bcf	3,5	;RP0=0, select bank0
  5810  0E73  1303               	bcf	3,6	;RP1=0, select bank0
  5811  0E74  01B8               	clrf	sprintf@width
  5812  0E75  01B9               	clrf	sprintf@width+1
  5813  0E76                     l3410:
  5814                           
  5815                           ;D:\Programas\XC8 compiler\pic\sources\c90\common\doprnt.c: 617:     width *= 10;
  5816  0E76  300A               	movlw	10
  5817  0E77  00F3               	movwf	___wmul@multiplier
  5818  0E78  3000               	movlw	0
  5819  0E79  00F4               	movwf	___wmul@multiplier+1
  5820  0E7A  1283               	bcf	3,5	;RP0=0, select bank0
  5821  0E7B  1303               	bcf	3,6	;RP1=0, select bank0
  5822  0E7C  0839               	movf	sprintf@width+1,w
  5823  0E7D  00F6               	movwf	___wmul@multiplicand+1
  5824  0E7E  0838               	movf	sprintf@width,w
  5825  0E7F  00F5               	movwf	___wmul@multiplicand
  5826  0E80  160A  118A  241A  120A  158A  	fcall	___wmul
  5827  0E85  0874               	movf	?___wmul+1,w
  5828  0E86  1283               	bcf	3,5	;RP0=0, select bank0
  5829  0E87  1303               	bcf	3,6	;RP1=0, select bank0
  5830  0E88  00B9               	movwf	sprintf@width+1
  5831  0E89  0873               	movf	?___wmul,w
  5832  0E8A  00B8               	movwf	sprintf@width
  5833  0E8B                     l3412:
  5834                           
  5835                           ;D:\Programas\XC8 compiler\pic\sources\c90\common\doprnt.c: 618:        width += *f++ - 
      +                          '0';
  5836  0E8B  0829               	movf	sprintf@f,w
  5837  0E8C  0084               	movwf	4
  5838  0E8D  120A  158A  2000  120A  158A  	fcall	stringdir
  5839  0E92  3ED0               	addlw	208
  5840  0E93  00B0               	movwf	??_sprintf
  5841  0E94  30FF               	movlw	255
  5842  0E95  1803               	skipnc
  5843  0E96  3000               	movlw	0
  5844  0E97  00B1               	movwf	??_sprintf+1
  5845  0E98  0830               	movf	??_sprintf,w
  5846  0E99  07B8               	addwf	sprintf@width,f
  5847  0E9A  1803               	skipnc
  5848  0E9B  0AB9               	incf	sprintf@width+1,f
  5849  0E9C  0831               	movf	??_sprintf+1,w
  5850  0E9D  07B9               	addwf	sprintf@width+1,f
  5851  0E9E                     l3414:
  5852  0E9E  3001               	movlw	1
  5853  0E9F  00B0               	movwf	??_sprintf
  5854  0EA0  0830               	movf	??_sprintf,w
  5855  0EA1  07A9               	addwf	sprintf@f,f
  5856  0EA2                     l3416:
  5857                           
  5858                           ;D:\Programas\XC8 compiler\pic\sources\c90\common\doprnt.c: 619:    } while(isdigit((uns
      +                          igned)*f));
  5859  0EA2  0829               	movf	sprintf@f,w
  5860  0EA3  0084               	movwf	4
  5861  0EA4  120A  158A  2000  120A  158A  	fcall	stringdir
  5862  0EA9  120A  158A  2087  120A  158A  	fcall	_isdigit
  5863  0EAE  1803               	btfsc	3,0
  5864  0EAF  2EB1               	goto	u4261
  5865  0EB0  2EB2               	goto	u4260
  5866  0EB1                     u4261:
  5867  0EB1  2E76               	goto	l3410
  5868  0EB2                     u4260:
  5869  0EB2                     l3420:
  5870  0EB2  3001               	movlw	1
  5871  0EB3  1283               	bcf	3,5	;RP0=0, select bank0
  5872  0EB4  1303               	bcf	3,6	;RP1=0, select bank0
  5873  0EB5  07A9               	addwf	sprintf@f,f
  5874  0EB6  30FF               	movlw	-1
  5875  0EB7  0729               	addwf	sprintf@f,w
  5876  0EB8  0084               	movwf	4
  5877  0EB9  120A  158A  2000  120A  158A  	fcall	stringdir
  5878  0EBE  00BA               	movwf	sprintf@c
  5879  0EBF  00B0               	movwf	??_sprintf
  5880  0EC0  01B1               	clrf	??_sprintf+1
  5881                           
  5882                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5883                           ; Switch size 1, requested type "simple"
  5884                           ; Number of cases is 1, Range of values is 0 to 0
  5885                           ; switch strategies available:
  5886                           ; Name         Instructions Cycles
  5887                           ; simple_byte            4     3 (average)
  5888                           ; direct_byte           11     8 (fixed)
  5889                           ; jumptable            260     6 (fixed)
  5890                           ;	Chosen strategy is simple_byte
  5891  0EC1  0831               	movf	??_sprintf+1,w
  5892  0EC2  3A00               	xorlw	0	; case 0
  5893  0EC3  1903               	skipnz
  5894  0EC4  2EC6               	goto	l3926
  5895  0EC5  2FE9               	goto	l3494
  5896  0EC6                     l3926:
  5897                           
  5898                           ; Switch size 1, requested type "simple"
  5899                           ; Number of cases is 3, Range of values is 0 to 105
  5900                           ; switch strategies available:
  5901                           ; Name         Instructions Cycles
  5902                           ; simple_byte           10     6 (average)
  5903                           ; jumptable            260     6 (fixed)
  5904                           ;	Chosen strategy is simple_byte
  5905  0EC6  0830               	movf	??_sprintf,w
  5906  0EC7  3A00               	xorlw	0	; case 0
  5907  0EC8  1903               	skipnz
  5908  0EC9  2FFB               	goto	l3496
  5909  0ECA  3A64               	xorlw	100	; case 100
  5910  0ECB  1903               	skipnz
  5911  0ECC  2ED1               	goto	l3422
  5912  0ECD  3A0D               	xorlw	13	; case 105
  5913  0ECE  1903               	skipnz
  5914  0ECF  2ED1               	goto	l3422
  5915  0ED0  2FE9               	goto	l3494
  5916  0ED1                     l3422:
  5917                           
  5918                           ;D:\Programas\XC8 compiler\pic\sources\c90\common\doprnt.c: 1279:   {;D:\Programas\XC8 c
      +                          ompiler\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned int)(*(int *)__va_arg
      +                          ((*(int **)ap), (int)0));
  5919  0ED1  0833               	movf	sprintf@ap,w
  5920  0ED2  0084               	movwf	4
  5921  0ED3  1383               	bcf	3,7	;select IRP bank0
  5922  0ED4  0800               	movf	0,w
  5923  0ED5  00B5               	movwf	sprintf@val
  5924  0ED6  0A84               	incf	4,f
  5925  0ED7  0800               	movf	0,w
  5926  0ED8  00B6               	movwf	sprintf@val+1
  5927  0ED9                     l3424:
  5928  0ED9  3002               	movlw	2
  5929  0EDA  00B0               	movwf	??_sprintf
  5930  0EDB  0830               	movf	??_sprintf,w
  5931  0EDC  07B3               	addwf	sprintf@ap,f
  5932  0EDD                     l3426:
  5933                           
  5934                           ;D:\Programas\XC8 compiler\pic\sources\c90\common\doprnt.c: 1287:    if((int)val < 0) {
  5935  0EDD  1FB6               	btfss	sprintf@val+1,7
  5936  0EDE  2EE0               	goto	u4271
  5937  0EDF  2EE1               	goto	u4270
  5938  0EE0                     u4271:
  5939  0EE0  2EEA               	goto	l3432
  5940  0EE1                     u4270:
  5941  0EE1                     l3428:
  5942                           
  5943                           ;D:\Programas\XC8 compiler\pic\sources\c90\common\doprnt.c: 1288:     flag |= 0x03;
  5944  0EE1  3003               	movlw	3
  5945  0EE2  00B0               	movwf	??_sprintf
  5946  0EE3  0830               	movf	??_sprintf,w
  5947  0EE4  04B7               	iorwf	sprintf@flag,f
  5948  0EE5                     l3430:
  5949                           
  5950                           ;D:\Programas\XC8 compiler\pic\sources\c90\common\doprnt.c: 1289:     val = -val;
  5951  0EE5  09B5               	comf	sprintf@val,f
  5952  0EE6  09B6               	comf	sprintf@val+1,f
  5953  0EE7  0AB5               	incf	sprintf@val,f
  5954  0EE8  1903               	skipnz
  5955  0EE9  0AB6               	incf	sprintf@val+1,f
  5956  0EEA                     l3432:
  5957                           
  5958                           ;D:\Programas\XC8 compiler\pic\sources\c90\common\doprnt.c: 1292:   };D:\Programas\XC8 c
      +                          ompiler\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c != sizeof dpowers/sizeof
      +                           dpowers[0] ; c++)
  5959  0EEA  01BA               	clrf	sprintf@c
  5960  0EEB  0ABA               	incf	sprintf@c,f
  5961  0EEC                     l3438:
  5962                           
  5963                           ;D:\Programas\XC8 compiler\pic\sources\c90\common\doprnt.c: 1332:     if(val < dpowers[c
      +                          ])
  5964  0EEC  083A               	movf	sprintf@c,w
  5965  0EED  00B0               	movwf	??_sprintf
  5966  0EEE  0730               	addwf	??_sprintf,w
  5967  0EEF  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  5968  0EF0  0084               	movwf	4
  5969  0EF1  120A  158A  2000  120A  158A  	fcall	stringdir
  5970  0EF6  00B1               	movwf	??_sprintf+1
  5971  0EF7  120A  158A  2000  120A  158A  	fcall	stringdir
  5972  0EFC  00B2               	movwf	??_sprintf+2
  5973  0EFD  0832               	movf	??_sprintf+2,w
  5974  0EFE  0236               	subwf	sprintf@val+1,w
  5975  0EFF  1D03               	skipz
  5976  0F00  2F03               	goto	u4285
  5977  0F01  0831               	movf	??_sprintf+1,w
  5978  0F02  0235               	subwf	sprintf@val,w
  5979  0F03                     u4285:
  5980  0F03  1803               	skipnc
  5981  0F04  2F06               	goto	u4281
  5982  0F05  2F07               	goto	u4280
  5983  0F06                     u4281:
  5984  0F06  2F08               	goto	l3442
  5985  0F07                     u4280:
  5986  0F07  2F12               	goto	l3444
  5987  0F08                     l3442:
  5988  0F08  3001               	movlw	1
  5989  0F09  00B0               	movwf	??_sprintf
  5990  0F0A  0830               	movf	??_sprintf,w
  5991  0F0B  07BA               	addwf	sprintf@c,f
  5992  0F0C  3005               	movlw	5
  5993  0F0D  063A               	xorwf	sprintf@c,w
  5994  0F0E  1D03               	btfss	3,2
  5995  0F0F  2F11               	goto	u4291
  5996  0F10  2F12               	goto	u4290
  5997  0F11                     u4291:
  5998  0F11  2EEC               	goto	l3438
  5999  0F12                     u4290:
  6000  0F12                     l3444:
  6001                           
  6002                           ;D:\Programas\XC8 compiler\pic\sources\c90\common\doprnt.c: 1371:   if(width && flag & 0
      +                          x03)
  6003  0F12  0838               	movf	sprintf@width,w
  6004  0F13  0439               	iorwf	sprintf@width+1,w
  6005  0F14  1903               	btfsc	3,2
  6006  0F15  2F17               	goto	u4301
  6007  0F16  2F18               	goto	u4300
  6008  0F17                     u4301:
  6009  0F17  2F24               	goto	l326
  6010  0F18                     u4300:
  6011  0F18                     l3446:
  6012  0F18  0837               	movf	sprintf@flag,w
  6013  0F19  3903               	andlw	3
  6014  0F1A  1903               	btfsc	3,2
  6015  0F1B  2F1D               	goto	u4311
  6016  0F1C  2F1E               	goto	u4310
  6017  0F1D                     u4311:
  6018  0F1D  2F24               	goto	l326
  6019  0F1E                     u4310:
  6020  0F1E                     l3448:
  6021                           
  6022                           ;D:\Programas\XC8 compiler\pic\sources\c90\common\doprnt.c: 1372:    width--;
  6023  0F1E  30FF               	movlw	255
  6024  0F1F  07B8               	addwf	sprintf@width,f
  6025  0F20  1803               	skipnc
  6026  0F21  0AB9               	incf	sprintf@width+1,f
  6027  0F22  30FF               	movlw	255
  6028  0F23  07B9               	addwf	sprintf@width+1,f
  6029  0F24                     l326:
  6030                           
  6031                           ;D:\Programas\XC8 compiler\pic\sources\c90\common\doprnt.c: 1407:   if(width > c)
  6032  0F24  0839               	movf	sprintf@width+1,w
  6033  0F25  3A80               	xorlw	128
  6034  0F26  3C80               	sublw	128
  6035  0F27  1D03               	skipz
  6036  0F28  2F2B               	goto	u4325
  6037  0F29  0838               	movf	sprintf@width,w
  6038  0F2A  023A               	subwf	sprintf@c,w
  6039  0F2B                     u4325:
  6040  0F2B  1803               	skipnc
  6041  0F2C  2F2E               	goto	u4321
  6042  0F2D  2F2F               	goto	u4320
  6043  0F2E                     u4321:
  6044  0F2E  2F3B               	goto	l3452
  6045  0F2F                     u4320:
  6046  0F2F                     l3450:
  6047                           
  6048                           ;D:\Programas\XC8 compiler\pic\sources\c90\common\doprnt.c: 1408:    width -= c;
  6049  0F2F  1283               	bcf	3,5	;RP0=0, select bank0
  6050  0F30  1303               	bcf	3,6	;RP1=0, select bank0
  6051  0F31  083A               	movf	sprintf@c,w
  6052  0F32  00B0               	movwf	??_sprintf
  6053  0F33  01B1               	clrf	??_sprintf+1
  6054  0F34  0830               	movf	??_sprintf,w
  6055  0F35  02B8               	subwf	sprintf@width,f
  6056  0F36  0831               	movf	??_sprintf+1,w
  6057  0F37  1C03               	skipc
  6058  0F38  03B9               	decf	sprintf@width+1,f
  6059  0F39  02B9               	subwf	sprintf@width+1,f
  6060  0F3A  2F3F               	goto	l3454
  6061  0F3B                     l3452:
  6062                           
  6063                           ;D:\Programas\XC8 compiler\pic\sources\c90\common\doprnt.c: 1410:    width = 0;
  6064  0F3B  1283               	bcf	3,5	;RP0=0, select bank0
  6065  0F3C  1303               	bcf	3,6	;RP1=0, select bank0
  6066  0F3D  01B8               	clrf	sprintf@width
  6067  0F3E  01B9               	clrf	sprintf@width+1
  6068  0F3F                     l3454:
  6069                           
  6070                           ;D:\Programas\XC8 compiler\pic\sources\c90\common\doprnt.c: 1413:   if(flag & 0x04) {
  6071  0F3F  1D37               	btfss	sprintf@flag,2
  6072  0F40  2F42               	goto	u4331
  6073  0F41  2F43               	goto	u4330
  6074  0F42                     u4331:
  6075  0F42  2F72               	goto	l3470
  6076  0F43                     u4330:
  6077  0F43                     l3456:
  6078                           
  6079                           ;D:\Programas\XC8 compiler\pic\sources\c90\common\doprnt.c: 1418:    if(flag & 0x03)
  6080  0F43  0837               	movf	sprintf@flag,w
  6081  0F44  3903               	andlw	3
  6082  0F45  1903               	btfsc	3,2
  6083  0F46  2F48               	goto	u4341
  6084  0F47  2F49               	goto	u4340
  6085  0F48                     u4341:
  6086  0F48  2F54               	goto	l3462
  6087  0F49                     u4340:
  6088  0F49                     l3458:
  6089                           
  6090                           ;D:\Programas\XC8 compiler\pic\sources\c90\common\doprnt.c: 1419:     ((*sp++ = ('-')));
  6091  0F49  302D               	movlw	45
  6092  0F4A  00B0               	movwf	??_sprintf
  6093  0F4B  083B               	movf	sprintf@sp,w
  6094  0F4C  0084               	movwf	4
  6095  0F4D  0830               	movf	??_sprintf,w
  6096  0F4E  1383               	bcf	3,7	;select IRP bank0
  6097  0F4F  0080               	movwf	0
  6098  0F50                     l3460:
  6099  0F50  3001               	movlw	1
  6100  0F51  00B0               	movwf	??_sprintf
  6101  0F52  0830               	movf	??_sprintf,w
  6102  0F53  07BB               	addwf	sprintf@sp,f
  6103  0F54                     l3462:
  6104                           
  6105                           ;D:\Programas\XC8 compiler\pic\sources\c90\common\doprnt.c: 1441:    if(width)
  6106  0F54  0838               	movf	sprintf@width,w
  6107  0F55  0439               	iorwf	sprintf@width+1,w
  6108  0F56  1903               	btfsc	3,2
  6109  0F57  2F59               	goto	u4351
  6110  0F58  2F5A               	goto	u4350
  6111  0F59                     u4351:
  6112  0F59  2FA0               	goto	l3484
  6113  0F5A                     u4350:
  6114  0F5A                     l3464:
  6115                           
  6116                           ;D:\Programas\XC8 compiler\pic\sources\c90\common\doprnt.c: 1443:      ((*sp++ = ('0')))
      +                          ;
  6117  0F5A  3030               	movlw	48
  6118  0F5B  00B0               	movwf	??_sprintf
  6119  0F5C  083B               	movf	sprintf@sp,w
  6120  0F5D  0084               	movwf	4
  6121  0F5E  0830               	movf	??_sprintf,w
  6122  0F5F  1383               	bcf	3,7	;select IRP bank0
  6123  0F60  0080               	movwf	0
  6124  0F61                     l3466:
  6125  0F61  3001               	movlw	1
  6126  0F62  00B0               	movwf	??_sprintf
  6127  0F63  0830               	movf	??_sprintf,w
  6128  0F64  07BB               	addwf	sprintf@sp,f
  6129  0F65                     l3468:
  6130  0F65  30FF               	movlw	255
  6131  0F66  07B8               	addwf	sprintf@width,f
  6132  0F67  1803               	skipnc
  6133  0F68  0AB9               	incf	sprintf@width+1,f
  6134  0F69  30FF               	movlw	255
  6135  0F6A  07B9               	addwf	sprintf@width+1,f
  6136  0F6B  0838               	movf	sprintf@width,w
  6137  0F6C  0439               	iorwf	sprintf@width+1,w
  6138  0F6D  1D03               	btfss	3,2
  6139  0F6E  2F70               	goto	u4361
  6140  0F6F  2F71               	goto	u4360
  6141  0F70                     u4361:
  6142  0F70  2F5A               	goto	l3464
  6143  0F71                     u4360:
  6144  0F71  2FA0               	goto	l3484
  6145  0F72                     l3470:
  6146                           
  6147                           ;D:\Programas\XC8 compiler\pic\sources\c90\common\doprnt.c: 1448:   {;D:\Programas\XC8 c
      +                          ompiler\pic\sources\c90\common\doprnt.c: 1450:    if(width
  6148  0F72  0838               	movf	sprintf@width,w
  6149  0F73  0439               	iorwf	sprintf@width+1,w
  6150  0F74  1903               	btfsc	3,2
  6151  0F75  2F77               	goto	u4371
  6152  0F76  2F78               	goto	u4370
  6153  0F77                     u4371:
  6154  0F77  2F8F               	goto	l3478
  6155  0F78                     u4370:
  6156  0F78                     l3472:
  6157                           
  6158                           ;D:\Programas\XC8 compiler\pic\sources\c90\common\doprnt.c: 1456:      ((*sp++ = (' ')))
      +                          ;
  6159  0F78  3020               	movlw	32
  6160  0F79  00B0               	movwf	??_sprintf
  6161  0F7A  083B               	movf	sprintf@sp,w
  6162  0F7B  0084               	movwf	4
  6163  0F7C  0830               	movf	??_sprintf,w
  6164  0F7D  1383               	bcf	3,7	;select IRP bank0
  6165  0F7E  0080               	movwf	0
  6166  0F7F                     l3474:
  6167  0F7F  3001               	movlw	1
  6168  0F80  00B0               	movwf	??_sprintf
  6169  0F81  0830               	movf	??_sprintf,w
  6170  0F82  07BB               	addwf	sprintf@sp,f
  6171  0F83                     l3476:
  6172  0F83  30FF               	movlw	255
  6173  0F84  07B8               	addwf	sprintf@width,f
  6174  0F85  1803               	skipnc
  6175  0F86  0AB9               	incf	sprintf@width+1,f
  6176  0F87  30FF               	movlw	255
  6177  0F88  07B9               	addwf	sprintf@width+1,f
  6178  0F89  0838               	movf	sprintf@width,w
  6179  0F8A  0439               	iorwf	sprintf@width+1,w
  6180  0F8B  1D03               	btfss	3,2
  6181  0F8C  2F8E               	goto	u4381
  6182  0F8D  2F8F               	goto	u4380
  6183  0F8E                     u4381:
  6184  0F8E  2F78               	goto	l3472
  6185  0F8F                     u4380:
  6186  0F8F                     l3478:
  6187                           
  6188                           ;D:\Programas\XC8 compiler\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  6189  0F8F  0837               	movf	sprintf@flag,w
  6190  0F90  3903               	andlw	3
  6191  0F91  1903               	btfsc	3,2
  6192  0F92  2F94               	goto	u4391
  6193  0F93  2F95               	goto	u4390
  6194  0F94                     u4391:
  6195  0F94  2FA0               	goto	l3484
  6196  0F95                     u4390:
  6197  0F95                     l3480:
  6198                           
  6199                           ;D:\Programas\XC8 compiler\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++ = ('-')));
  6200  0F95  302D               	movlw	45
  6201  0F96  00B0               	movwf	??_sprintf
  6202  0F97  083B               	movf	sprintf@sp,w
  6203  0F98  0084               	movwf	4
  6204  0F99  0830               	movf	??_sprintf,w
  6205  0F9A  1383               	bcf	3,7	;select IRP bank0
  6206  0F9B  0080               	movwf	0
  6207  0F9C                     l3482:
  6208  0F9C  3001               	movlw	1
  6209  0F9D  00B0               	movwf	??_sprintf
  6210  0F9E  0830               	movf	??_sprintf,w
  6211  0F9F  07BB               	addwf	sprintf@sp,f
  6212  0FA0                     l3484:
  6213                           
  6214                           ;D:\Programas\XC8 compiler\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  6215  0FA0  083A               	movf	sprintf@c,w
  6216  0FA1  00B0               	movwf	??_sprintf
  6217  0FA2  0830               	movf	??_sprintf,w
  6218  0FA3  00B4               	movwf	sprintf@prec
  6219                           
  6220                           ;D:\Programas\XC8 compiler\pic\sources\c90\common\doprnt.c: 1500:   while(prec--) {
  6221  0FA4  2FE0               	goto	l3492
  6222  0FA5                     l3486:
  6223                           
  6224                           ;D:\Programas\XC8 compiler\pic\sources\c90\common\doprnt.c: 1504:    {;D:\Programas\XC8 
      +                          compiler\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpowers[(unsigned char)pr
      +                          ec]) % 10 + '0';
  6225  0FA5  300A               	movlw	10
  6226  0FA6  00A3               	movwf	___lwmod@divisor
  6227  0FA7  3000               	movlw	0
  6228  0FA8  00A4               	movwf	___lwmod@divisor+1
  6229  0FA9  0834               	movf	sprintf@prec,w
  6230  0FAA  00B0               	movwf	??_sprintf
  6231  0FAB  0730               	addwf	??_sprintf,w
  6232  0FAC  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  6233  0FAD  0084               	movwf	4
  6234  0FAE  120A  158A  2000  120A  158A  	fcall	stringdir
  6235  0FB3  00F3               	movwf	___lwdiv@divisor
  6236  0FB4  120A  158A  2000  120A  158A  	fcall	stringdir
  6237  0FB9  00F4               	movwf	___lwdiv@divisor+1
  6238  0FBA  0836               	movf	sprintf@val+1,w
  6239  0FBB  00F6               	movwf	___lwdiv@dividend+1
  6240  0FBC  0835               	movf	sprintf@val,w
  6241  0FBD  00F5               	movwf	___lwdiv@dividend
  6242  0FBE  160A  118A  25BB  120A  158A  	fcall	___lwdiv
  6243  0FC3  0874               	movf	?___lwdiv+1,w
  6244  0FC4  1283               	bcf	3,5	;RP0=0, select bank0
  6245  0FC5  1303               	bcf	3,6	;RP1=0, select bank0
  6246  0FC6  00A6               	movwf	___lwmod@dividend+1
  6247  0FC7  0873               	movf	?___lwdiv,w
  6248  0FC8  00A5               	movwf	___lwmod@dividend
  6249  0FC9  160A  118A  24B6  120A  158A  	fcall	___lwmod
  6250  0FCE  1283               	bcf	3,5	;RP0=0, select bank0
  6251  0FCF  1303               	bcf	3,6	;RP1=0, select bank0
  6252  0FD0  0823               	movf	?___lwmod,w
  6253  0FD1  3E30               	addlw	48
  6254  0FD2  00B1               	movwf	??_sprintf+1
  6255  0FD3  0831               	movf	??_sprintf+1,w
  6256  0FD4  00BA               	movwf	sprintf@c
  6257  0FD5                     l3488:
  6258                           
  6259                           ;D:\Programas\XC8 compiler\pic\sources\c90\common\doprnt.c: 1549:    };D:\Programas\XC8 
      +                          compiler\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)));
  6260  0FD5  083A               	movf	sprintf@c,w
  6261  0FD6  00B0               	movwf	??_sprintf
  6262  0FD7  083B               	movf	sprintf@sp,w
  6263  0FD8  0084               	movwf	4
  6264  0FD9  0830               	movf	??_sprintf,w
  6265  0FDA  1383               	bcf	3,7	;select IRP bank0
  6266  0FDB  0080               	movwf	0
  6267  0FDC                     l3490:
  6268  0FDC  3001               	movlw	1
  6269  0FDD  00B0               	movwf	??_sprintf
  6270  0FDE  0830               	movf	??_sprintf,w
  6271  0FDF  07BB               	addwf	sprintf@sp,f
  6272  0FE0                     l3492:
  6273                           
  6274                           ;D:\Programas\XC8 compiler\pic\sources\c90\common\doprnt.c: 1500:   while(prec--) {
  6275  0FE0  30FF               	movlw	255
  6276  0FE1  00B0               	movwf	??_sprintf
  6277  0FE2  0830               	movf	??_sprintf,w
  6278  0FE3  07B4               	addwf	sprintf@prec,f
  6279  0FE4  0A34               	incf	sprintf@prec,w
  6280  0FE5  1D03               	btfss	3,2
  6281  0FE6  2FE8               	goto	u4401
  6282  0FE7  2FE9               	goto	u4400
  6283  0FE8                     u4401:
  6284  0FE8  2FA5               	goto	l3486
  6285  0FE9                     u4400:
  6286  0FE9                     l3494:
  6287                           
  6288                           ;D:\Programas\XC8 compiler\pic\sources\c90\common\doprnt.c: 553:  while((c = *f++)) {
  6289  0FE9  3001               	movlw	1
  6290  0FEA  07A9               	addwf	sprintf@f,f
  6291  0FEB  30FF               	movlw	-1
  6292  0FEC  0729               	addwf	sprintf@f,w
  6293  0FED  0084               	movwf	4
  6294  0FEE  120A  158A  2000  120A  158A  	fcall	stringdir
  6295  0FF3  00B0               	movwf	??_sprintf
  6296  0FF4  0830               	movf	??_sprintf,w
  6297  0FF5  00BA               	movwf	sprintf@c
  6298  0FF6  083A               	movf	sprintf@c,w
  6299  0FF7  1D03               	btfss	3,2
  6300  0FF8  2FFA               	goto	u4411
  6301  0FF9  2FFB               	goto	u4410
  6302  0FFA                     u4411:
  6303  0FFA  2E34               	goto	l3392
  6304  0FFB                     u4410:
  6305  0FFB                     l3496:
  6306                           
  6307                           ;D:\Programas\XC8 compiler\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  6308  0FFB  083B               	movf	sprintf@sp,w
  6309  0FFC  0084               	movwf	4
  6310  0FFD  1383               	bcf	3,7	;select IRP bank0
  6311  0FFE  0180               	clrf	0
  6312  0FFF                     l343:
  6313  0FFF  0008               	return
  6314  1000                     __end_of_sprintf:
  6315                           
  6316                           	psect	text18
  6317  0887                     __ptext18:	
  6318 ;; *************** function _isdigit *****************
  6319 ;; Defined at:
  6320 ;;		line 8 in file "D:\Programas\XC8 compiler\pic\sources\c90\common\isdigit.c"
  6321 ;; Parameters:    Size  Location     Type
  6322 ;;  c               1    wreg     unsigned char 
  6323 ;; Auto vars:     Size  Location     Type
  6324 ;;  c               1    4[COMMON] unsigned char 
  6325 ;; Return value:  Size  Location     Type
  6326 ;;		None               void
  6327 ;; Registers used:
  6328 ;;		wreg, status,2, status,0
  6329 ;; Tracked objects:
  6330 ;;		On entry : 0/0
  6331 ;;		On exit  : 0/0
  6332 ;;		Unchanged: 0/0
  6333 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6334 ;;      Params:         0       0       0       0       0
  6335 ;;      Locals:         2       0       0       0       0
  6336 ;;      Temps:          0       0       0       0       0
  6337 ;;      Totals:         2       0       0       0       0
  6338 ;;Total ram usage:        2 bytes
  6339 ;; Hardware stack levels used: 1
  6340 ;; Hardware stack levels required when called: 1
  6341 ;; This function calls:
  6342 ;;		Nothing
  6343 ;; This function is called by:
  6344 ;;		_sprintf
  6345 ;; This function uses a non-reentrant model
  6346 ;;
  6347                           
  6348                           
  6349                           ;psect for function _isdigit
  6350  0887                     _isdigit:
  6351                           
  6352                           ;incstack = 0
  6353                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  6354                           ;isdigit@c stored from wreg
  6355  0887  00F4               	movwf	isdigit@c
  6356  0888                     l2118:
  6357  0888  01F3               	clrf	_isdigit$768
  6358  0889                     l2120:
  6359  0889  303A               	movlw	58
  6360  088A  0274               	subwf	isdigit@c,w
  6361  088B  1803               	skipnc
  6362  088C  288E               	goto	u2081
  6363  088D  288F               	goto	u2080
  6364  088E                     u2081:
  6365  088E  2897               	goto	l2126
  6366  088F                     u2080:
  6367  088F                     l2122:
  6368  088F  3030               	movlw	48
  6369  0890  0274               	subwf	isdigit@c,w
  6370  0891  1C03               	skipc
  6371  0892  2894               	goto	u2091
  6372  0893  2895               	goto	u2090
  6373  0894                     u2091:
  6374  0894  2897               	goto	l2126
  6375  0895                     u2090:
  6376  0895                     l2124:
  6377  0895  01F3               	clrf	_isdigit$768
  6378  0896  0AF3               	incf	_isdigit$768,f
  6379  0897                     l2126:
  6380  0897  0C73               	rrf	_isdigit$768,w
  6381  0898                     l800:
  6382  0898  0008               	return
  6383  0899                     __end_of_isdigit:
  6384                           
  6385                           	psect	text19
  6386  141A                     __ptext19:	
  6387 ;; *************** function ___wmul *****************
  6388 ;; Defined at:
  6389 ;;		line 15 in file "D:\Programas\XC8 compiler\pic\sources\c90\common\Umul16.c"
  6390 ;; Parameters:    Size  Location     Type
  6391 ;;  multiplier      2    3[COMMON] unsigned int 
  6392 ;;  multiplicand    2    5[COMMON] unsigned int 
  6393 ;; Auto vars:     Size  Location     Type
  6394 ;;  product         2    0[BANK0 ] unsigned int 
  6395 ;; Return value:  Size  Location     Type
  6396 ;;                  2    3[COMMON] unsigned int 
  6397 ;; Registers used:
  6398 ;;		wreg, status,2, status,0
  6399 ;; Tracked objects:
  6400 ;;		On entry : 0/0
  6401 ;;		On exit  : 0/0
  6402 ;;		Unchanged: 0/0
  6403 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6404 ;;      Params:         4       0       0       0       0
  6405 ;;      Locals:         0       2       0       0       0
  6406 ;;      Temps:          0       0       0       0       0
  6407 ;;      Totals:         4       2       0       0       0
  6408 ;;Total ram usage:        6 bytes
  6409 ;; Hardware stack levels used: 1
  6410 ;; Hardware stack levels required when called: 1
  6411 ;; This function calls:
  6412 ;;		Nothing
  6413 ;; This function is called by:
  6414 ;;		_sprintf
  6415 ;; This function uses a non-reentrant model
  6416 ;;
  6417                           
  6418                           
  6419                           ;psect for function ___wmul
  6420  141A                     ___wmul:
  6421  141A                     l3310:	
  6422                           ;incstack = 0
  6423                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  6424                           
  6425  141A  1283               	bcf	3,5	;RP0=0, select bank0
  6426  141B  1303               	bcf	3,6	;RP1=0, select bank0
  6427  141C  01A0               	clrf	___wmul@product
  6428  141D  01A1               	clrf	___wmul@product+1
  6429  141E                     l3312:
  6430  141E  1C73               	btfss	___wmul@multiplier,0
  6431  141F  2C21               	goto	u4081
  6432  1420  2C22               	goto	u4080
  6433  1421                     u4081:
  6434  1421  2C2A               	goto	l347
  6435  1422                     u4080:
  6436  1422                     l3314:
  6437  1422  0875               	movf	___wmul@multiplicand,w
  6438  1423  1283               	bcf	3,5	;RP0=0, select bank0
  6439  1424  1303               	bcf	3,6	;RP1=0, select bank0
  6440  1425  07A0               	addwf	___wmul@product,f
  6441  1426  1803               	skipnc
  6442  1427  0AA1               	incf	___wmul@product+1,f
  6443  1428  0876               	movf	___wmul@multiplicand+1,w
  6444  1429  07A1               	addwf	___wmul@product+1,f
  6445  142A                     l347:
  6446  142A  3001               	movlw	1
  6447  142B                     u4095:
  6448  142B  1003               	clrc
  6449  142C  0DF5               	rlf	___wmul@multiplicand,f
  6450  142D  0DF6               	rlf	___wmul@multiplicand+1,f
  6451  142E  3EFF               	addlw	-1
  6452  142F  1D03               	skipz
  6453  1430  2C2B               	goto	u4095
  6454  1431                     l3316:
  6455  1431  3001               	movlw	1
  6456  1432                     u4105:
  6457  1432  1003               	clrc
  6458  1433  0CF4               	rrf	___wmul@multiplier+1,f
  6459  1434  0CF3               	rrf	___wmul@multiplier,f
  6460  1435  3EFF               	addlw	-1
  6461  1436  1D03               	skipz
  6462  1437  2C32               	goto	u4105
  6463  1438                     l3318:
  6464  1438  0873               	movf	___wmul@multiplier,w
  6465  1439  0474               	iorwf	___wmul@multiplier+1,w
  6466  143A  1D03               	btfss	3,2
  6467  143B  2C3D               	goto	u4111
  6468  143C  2C3E               	goto	u4110
  6469  143D                     u4111:
  6470  143D  2C1E               	goto	l3312
  6471  143E                     u4110:
  6472  143E                     l3320:
  6473  143E  1283               	bcf	3,5	;RP0=0, select bank0
  6474  143F  1303               	bcf	3,6	;RP1=0, select bank0
  6475  1440  0821               	movf	___wmul@product+1,w
  6476  1441  00F4               	movwf	?___wmul+1
  6477  1442  0820               	movf	___wmul@product,w
  6478  1443  00F3               	movwf	?___wmul
  6479  1444                     l349:
  6480  1444  0008               	return
  6481  1445                     __end_of___wmul:
  6482                           
  6483                           	psect	text20
  6484  14B6                     __ptext20:	
  6485 ;; *************** function ___lwmod *****************
  6486 ;; Defined at:
  6487 ;;		line 5 in file "D:\Programas\XC8 compiler\pic\sources\c90\common\lwmod.c"
  6488 ;; Parameters:    Size  Location     Type
  6489 ;;  divisor         2    3[BANK0 ] unsigned int 
  6490 ;;  dividend        2    5[BANK0 ] unsigned int 
  6491 ;; Auto vars:     Size  Location     Type
  6492 ;;  counter         1    8[BANK0 ] unsigned char 
  6493 ;; Return value:  Size  Location     Type
  6494 ;;                  2    3[BANK0 ] unsigned int 
  6495 ;; Registers used:
  6496 ;;		wreg, status,2, status,0
  6497 ;; Tracked objects:
  6498 ;;		On entry : 0/0
  6499 ;;		On exit  : 0/0
  6500 ;;		Unchanged: 0/0
  6501 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6502 ;;      Params:         0       4       0       0       0
  6503 ;;      Locals:         0       1       0       0       0
  6504 ;;      Temps:          0       1       0       0       0
  6505 ;;      Totals:         0       6       0       0       0
  6506 ;;Total ram usage:        6 bytes
  6507 ;; Hardware stack levels used: 1
  6508 ;; Hardware stack levels required when called: 1
  6509 ;; This function calls:
  6510 ;;		Nothing
  6511 ;; This function is called by:
  6512 ;;		_sprintf
  6513 ;; This function uses a non-reentrant model
  6514 ;;
  6515                           
  6516                           
  6517                           ;psect for function ___lwmod
  6518  14B6                     ___lwmod:
  6519  14B6                     l2182:	
  6520                           ;incstack = 0
  6521                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  6522                           
  6523  14B6  1283               	bcf	3,5	;RP0=0, select bank0
  6524  14B7  1303               	bcf	3,6	;RP1=0, select bank0
  6525  14B8  0823               	movf	___lwmod@divisor,w
  6526  14B9  0424               	iorwf	___lwmod@divisor+1,w
  6527  14BA  1903               	btfsc	3,2
  6528  14BB  2CBD               	goto	u2241
  6529  14BC  2CBE               	goto	u2240
  6530  14BD                     u2241:
  6531  14BD  2CED               	goto	l2200
  6532  14BE                     u2240:
  6533  14BE                     l2184:
  6534  14BE  01A8               	clrf	___lwmod@counter
  6535  14BF  0AA8               	incf	___lwmod@counter,f
  6536  14C0  2CCC               	goto	l2190
  6537  14C1                     l2186:
  6538  14C1  3001               	movlw	1
  6539  14C2                     u2255:
  6540  14C2  1003               	clrc
  6541  14C3  0DA3               	rlf	___lwmod@divisor,f
  6542  14C4  0DA4               	rlf	___lwmod@divisor+1,f
  6543  14C5  3EFF               	addlw	-1
  6544  14C6  1D03               	skipz
  6545  14C7  2CC2               	goto	u2255
  6546  14C8                     l2188:
  6547  14C8  3001               	movlw	1
  6548  14C9  00A7               	movwf	??___lwmod
  6549  14CA  0827               	movf	??___lwmod,w
  6550  14CB  07A8               	addwf	___lwmod@counter,f
  6551  14CC                     l2190:
  6552  14CC  1FA4               	btfss	___lwmod@divisor+1,7
  6553  14CD  2CCF               	goto	u2261
  6554  14CE  2CD0               	goto	u2260
  6555  14CF                     u2261:
  6556  14CF  2CC1               	goto	l2186
  6557  14D0                     u2260:
  6558  14D0                     l2192:
  6559  14D0  0824               	movf	___lwmod@divisor+1,w
  6560  14D1  0226               	subwf	___lwmod@dividend+1,w
  6561  14D2  1D03               	skipz
  6562  14D3  2CD6               	goto	u2275
  6563  14D4  0823               	movf	___lwmod@divisor,w
  6564  14D5  0225               	subwf	___lwmod@dividend,w
  6565  14D6                     u2275:
  6566  14D6  1C03               	skipc
  6567  14D7  2CD9               	goto	u2271
  6568  14D8  2CDA               	goto	u2270
  6569  14D9                     u2271:
  6570  14D9  2CE0               	goto	l2196
  6571  14DA                     u2270:
  6572  14DA                     l2194:
  6573  14DA  0823               	movf	___lwmod@divisor,w
  6574  14DB  02A5               	subwf	___lwmod@dividend,f
  6575  14DC  0824               	movf	___lwmod@divisor+1,w
  6576  14DD  1C03               	skipc
  6577  14DE  03A6               	decf	___lwmod@dividend+1,f
  6578  14DF  02A6               	subwf	___lwmod@dividend+1,f
  6579  14E0                     l2196:
  6580  14E0  3001               	movlw	1
  6581  14E1                     u2285:
  6582  14E1  1003               	clrc
  6583  14E2  0CA4               	rrf	___lwmod@divisor+1,f
  6584  14E3  0CA3               	rrf	___lwmod@divisor,f
  6585  14E4  3EFF               	addlw	-1
  6586  14E5  1D03               	skipz
  6587  14E6  2CE1               	goto	u2285
  6588  14E7                     l2198:
  6589  14E7  3001               	movlw	1
  6590  14E8  02A8               	subwf	___lwmod@counter,f
  6591  14E9  1D03               	btfss	3,2
  6592  14EA  2CEC               	goto	u2291
  6593  14EB  2CED               	goto	u2290
  6594  14EC                     u2291:
  6595  14EC  2CD0               	goto	l2192
  6596  14ED                     u2290:
  6597  14ED                     l2200:
  6598  14ED  0826               	movf	___lwmod@dividend+1,w
  6599  14EE  00A4               	movwf	?___lwmod+1
  6600  14EF  0825               	movf	___lwmod@dividend,w
  6601  14F0  00A3               	movwf	?___lwmod
  6602  14F1                     l629:
  6603  14F1  0008               	return
  6604  14F2                     __end_of___lwmod:
  6605                           
  6606                           	psect	text21
  6607  15BB                     __ptext21:	
  6608 ;; *************** function ___lwdiv *****************
  6609 ;; Defined at:
  6610 ;;		line 5 in file "D:\Programas\XC8 compiler\pic\sources\c90\common\lwdiv.c"
  6611 ;; Parameters:    Size  Location     Type
  6612 ;;  divisor         2    3[COMMON] unsigned int 
  6613 ;;  dividend        2    5[COMMON] unsigned int 
  6614 ;; Auto vars:     Size  Location     Type
  6615 ;;  quotient        2    1[BANK0 ] unsigned int 
  6616 ;;  counter         1    0[BANK0 ] unsigned char 
  6617 ;; Return value:  Size  Location     Type
  6618 ;;                  2    3[COMMON] unsigned int 
  6619 ;; Registers used:
  6620 ;;		wreg, status,2, status,0
  6621 ;; Tracked objects:
  6622 ;;		On entry : 0/0
  6623 ;;		On exit  : 0/0
  6624 ;;		Unchanged: 0/0
  6625 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6626 ;;      Params:         4       0       0       0       0
  6627 ;;      Locals:         0       3       0       0       0
  6628 ;;      Temps:          1       0       0       0       0
  6629 ;;      Totals:         5       3       0       0       0
  6630 ;;Total ram usage:        8 bytes
  6631 ;; Hardware stack levels used: 1
  6632 ;; Hardware stack levels required when called: 1
  6633 ;; This function calls:
  6634 ;;		Nothing
  6635 ;; This function is called by:
  6636 ;;		_sprintf
  6637 ;; This function uses a non-reentrant model
  6638 ;;
  6639                           
  6640                           
  6641                           ;psect for function ___lwdiv
  6642  15BB                     ___lwdiv:
  6643  15BB                     l3336:	
  6644                           ;incstack = 0
  6645                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  6646                           
  6647  15BB  1283               	bcf	3,5	;RP0=0, select bank0
  6648  15BC  1303               	bcf	3,6	;RP1=0, select bank0
  6649  15BD  01A1               	clrf	___lwdiv@quotient
  6650  15BE  01A2               	clrf	___lwdiv@quotient+1
  6651  15BF                     l3338:
  6652  15BF  0873               	movf	___lwdiv@divisor,w
  6653  15C0  0474               	iorwf	___lwdiv@divisor+1,w
  6654  15C1  1903               	btfsc	3,2
  6655  15C2  2DC4               	goto	u4151
  6656  15C3  2DC5               	goto	u4150
  6657  15C4                     u4151:
  6658  15C4  2DFC               	goto	l3358
  6659  15C5                     u4150:
  6660  15C5                     l3340:
  6661  15C5  01A0               	clrf	___lwdiv@counter
  6662  15C6  0AA0               	incf	___lwdiv@counter,f
  6663  15C7  2DD3               	goto	l3346
  6664  15C8                     l3342:
  6665  15C8  3001               	movlw	1
  6666  15C9                     u4165:
  6667  15C9  1003               	clrc
  6668  15CA  0DF3               	rlf	___lwdiv@divisor,f
  6669  15CB  0DF4               	rlf	___lwdiv@divisor+1,f
  6670  15CC  3EFF               	addlw	-1
  6671  15CD  1D03               	skipz
  6672  15CE  2DC9               	goto	u4165
  6673  15CF                     l3344:
  6674  15CF  3001               	movlw	1
  6675  15D0  00F7               	movwf	??___lwdiv
  6676  15D1  0877               	movf	??___lwdiv,w
  6677  15D2  07A0               	addwf	___lwdiv@counter,f
  6678  15D3                     l3346:
  6679  15D3  1FF4               	btfss	___lwdiv@divisor+1,7
  6680  15D4  2DD6               	goto	u4171
  6681  15D5  2DD7               	goto	u4170
  6682  15D6                     u4171:
  6683  15D6  2DC8               	goto	l3342
  6684  15D7                     u4170:
  6685  15D7                     l3348:
  6686  15D7  3001               	movlw	1
  6687  15D8                     u4185:
  6688  15D8  1003               	clrc
  6689  15D9  0DA1               	rlf	___lwdiv@quotient,f
  6690  15DA  0DA2               	rlf	___lwdiv@quotient+1,f
  6691  15DB  3EFF               	addlw	-1
  6692  15DC  1D03               	skipz
  6693  15DD  2DD8               	goto	u4185
  6694  15DE  0874               	movf	___lwdiv@divisor+1,w
  6695  15DF  0276               	subwf	___lwdiv@dividend+1,w
  6696  15E0  1D03               	skipz
  6697  15E1  2DE4               	goto	u4195
  6698  15E2  0873               	movf	___lwdiv@divisor,w
  6699  15E3  0275               	subwf	___lwdiv@dividend,w
  6700  15E4                     u4195:
  6701  15E4  1C03               	skipc
  6702  15E5  2DE7               	goto	u4191
  6703  15E6  2DE8               	goto	u4190
  6704  15E7                     u4191:
  6705  15E7  2DEF               	goto	l3354
  6706  15E8                     u4190:
  6707  15E8                     l3350:
  6708  15E8  0873               	movf	___lwdiv@divisor,w
  6709  15E9  02F5               	subwf	___lwdiv@dividend,f
  6710  15EA  0874               	movf	___lwdiv@divisor+1,w
  6711  15EB  1C03               	skipc
  6712  15EC  03F6               	decf	___lwdiv@dividend+1,f
  6713  15ED  02F6               	subwf	___lwdiv@dividend+1,f
  6714  15EE                     l3352:
  6715  15EE  1421               	bsf	___lwdiv@quotient,0
  6716  15EF                     l3354:
  6717  15EF  3001               	movlw	1
  6718  15F0                     u4205:
  6719  15F0  1003               	clrc
  6720  15F1  0CF4               	rrf	___lwdiv@divisor+1,f
  6721  15F2  0CF3               	rrf	___lwdiv@divisor,f
  6722  15F3  3EFF               	addlw	-1
  6723  15F4  1D03               	skipz
  6724  15F5  2DF0               	goto	u4205
  6725  15F6                     l3356:
  6726  15F6  3001               	movlw	1
  6727  15F7  02A0               	subwf	___lwdiv@counter,f
  6728  15F8  1D03               	btfss	3,2
  6729  15F9  2DFB               	goto	u4211
  6730  15FA  2DFC               	goto	u4210
  6731  15FB                     u4211:
  6732  15FB  2DD7               	goto	l3348
  6733  15FC                     u4210:
  6734  15FC                     l3358:
  6735  15FC  0822               	movf	___lwdiv@quotient+1,w
  6736  15FD  00F4               	movwf	?___lwdiv+1
  6737  15FE  0821               	movf	___lwdiv@quotient,w
  6738  15FF  00F3               	movwf	?___lwdiv
  6739  1600                     l619:
  6740  1600  0008               	return
  6741  1601                     __end_of___lwdiv:
  6742                           
  6743                           	psect	text22
  6744  147D                     __ptext22:	
  6745 ;; *************** function _LCD_Print *****************
  6746 ;; Defined at:
  6747 ;;		line 95 in file "./LCD_Lib.c"
  6748 ;; Parameters:    Size  Location     Type
  6749 ;;  LCD_Str         1    wreg     PTR unsigned char 
  6750 ;;		 -> LCD_Cstring(16), 
  6751 ;; Auto vars:     Size  Location     Type
  6752 ;;  LCD_Str         1    1[BANK0 ] PTR unsigned char 
  6753 ;;		 -> LCD_Cstring(16), 
  6754 ;;  i               1    0[BANK0 ] unsigned char 
  6755 ;; Return value:  Size  Location     Type
  6756 ;;                  1    wreg      void 
  6757 ;; Registers used:
  6758 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6759 ;; Tracked objects:
  6760 ;;		On entry : 0/0
  6761 ;;		On exit  : 0/0
  6762 ;;		Unchanged: 0/0
  6763 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6764 ;;      Params:         0       0       0       0       0
  6765 ;;      Locals:         0       2       0       0       0
  6766 ;;      Temps:          2       0       0       0       0
  6767 ;;      Totals:         2       2       0       0       0
  6768 ;;Total ram usage:        4 bytes
  6769 ;; Hardware stack levels used: 1
  6770 ;; Hardware stack levels required when called: 2
  6771 ;; This function calls:
  6772 ;;		_LCD_Write_Nibble
  6773 ;; This function is called by:
  6774 ;;		_imprime_tela_main
  6775 ;;		_imprime_tela_ajuste1
  6776 ;;		_imprime_tela_ajuste2
  6777 ;;		_imprime_tela_ajuste3
  6778 ;;		_imprime_tela_ajuste4
  6779 ;; This function uses a non-reentrant model
  6780 ;;
  6781                           
  6782                           
  6783                           ;psect for function _LCD_Print
  6784  147D                     _LCD_Print:
  6785                           
  6786                           ;incstack = 0
  6787                           ; Regs used in _LCD_Print: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6788                           ;LCD_Print@LCD_Str stored from wreg
  6789  147D  1283               	bcf	3,5	;RP0=0, select bank0
  6790  147E  1303               	bcf	3,6	;RP1=0, select bank0
  6791  147F  00A1               	movwf	LCD_Print@LCD_Str
  6792  1480                     l3380:
  6793                           
  6794                           ;./LCD_Lib.c: 95: void LCD_Print(char* LCD_Str);./LCD_Lib.c: 96: {;./LCD_Lib.c: 97:   ui
      +                          nt8_t i = 0;
  6795  1480  01A0               	clrf	LCD_Print@i
  6796  1481                     l3382:
  6797                           
  6798                           ;./LCD_Lib.c: 98:   RS = 1;
  6799  1481  147A               	bsf	_RS/(0+8),_RS& (0+7)
  6800                           
  6801                           ;./LCD_Lib.c: 99:   while(LCD_Str[i] != '\0')
  6802  1482  2CAA               	goto	l3388
  6803  1483                     l3384:
  6804                           
  6805                           ;./LCD_Lib.c: 100:   {;./LCD_Lib.c: 101:     LCD_Write_Nibble(LCD_Str[i] >> 4);
  6806  1483  0820               	movf	LCD_Print@i,w
  6807  1484  0721               	addwf	LCD_Print@LCD_Str,w
  6808  1485  00F6               	movwf	??_LCD_Print
  6809  1486  0876               	movf	??_LCD_Print,w
  6810  1487  0084               	movwf	4
  6811  1488  0800               	movf	0,w
  6812  1489  00F7               	movwf	??_LCD_Print+1
  6813  148A  3004               	movlw	4
  6814  148B                     u4225:
  6815  148B  1003               	clrc
  6816  148C  0CF7               	rrf	??_LCD_Print+1,f
  6817  148D  3EFF               	addlw	-1
  6818  148E  1D03               	skipz
  6819  148F  2C8B               	goto	u4225
  6820  1490  0877               	movf	??_LCD_Print+1,w
  6821  1491  160A  118A  26A1  160A  118A  	fcall	_LCD_Write_Nibble
  6822                           
  6823                           ;./LCD_Lib.c: 102:     LCD_Write_Nibble(LCD_Str[i++] );
  6824  1496  1283               	bcf	3,5	;RP0=0, select bank0
  6825  1497  1303               	bcf	3,6	;RP1=0, select bank0
  6826  1498  0820               	movf	LCD_Print@i,w
  6827  1499  0721               	addwf	LCD_Print@LCD_Str,w
  6828  149A  00F6               	movwf	??_LCD_Print
  6829  149B  0876               	movf	??_LCD_Print,w
  6830  149C  0084               	movwf	4
  6831  149D  1383               	bcf	3,7	;select IRP bank0
  6832  149E  0800               	movf	0,w
  6833  149F  160A  118A  26A1  160A  118A  	fcall	_LCD_Write_Nibble
  6834  14A4                     l3386:
  6835  14A4  3001               	movlw	1
  6836  14A5  00F6               	movwf	??_LCD_Print
  6837  14A6  0876               	movf	??_LCD_Print,w
  6838  14A7  1283               	bcf	3,5	;RP0=0, select bank0
  6839  14A8  1303               	bcf	3,6	;RP1=0, select bank0
  6840  14A9  07A0               	addwf	LCD_Print@i,f
  6841  14AA                     l3388:
  6842                           
  6843                           ;./LCD_Lib.c: 99:   while(LCD_Str[i] != '\0')
  6844  14AA  0820               	movf	LCD_Print@i,w
  6845  14AB  0721               	addwf	LCD_Print@LCD_Str,w
  6846  14AC  00F6               	movwf	??_LCD_Print
  6847  14AD  0876               	movf	??_LCD_Print,w
  6848  14AE  0084               	movwf	4
  6849  14AF  1383               	bcf	3,7	;select IRP bank0
  6850  14B0  0800               	movf	0,w
  6851  14B1  1D03               	btfss	3,2
  6852  14B2  2CB4               	goto	u4231
  6853  14B3  2CB5               	goto	u4230
  6854  14B4                     u4231:
  6855  14B4  2C83               	goto	l3384
  6856  14B5                     u4230:
  6857  14B5                     l81:
  6858  14B5  0008               	return
  6859  14B6                     __end_of_LCD_Print:
  6860                           
  6861                           	psect	text23
  6862  1445                     __ptext23:	
  6863 ;; *************** function _LCD_Goto *****************
  6864 ;; Defined at:
  6865 ;;		line 69 in file "./LCD_Lib.c"
  6866 ;; Parameters:    Size  Location     Type
  6867 ;;  col             1    wreg     unsigned char 
  6868 ;;  row             1    1[BANK0 ] unsigned char 
  6869 ;; Auto vars:     Size  Location     Type
  6870 ;;  col             1    4[BANK0 ] unsigned char 
  6871 ;; Return value:  Size  Location     Type
  6872 ;;                  1    wreg      void 
  6873 ;; Registers used:
  6874 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6875 ;; Tracked objects:
  6876 ;;		On entry : 0/0
  6877 ;;		On exit  : 0/0
  6878 ;;		Unchanged: 0/0
  6879 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6880 ;;      Params:         0       1       0       0       0
  6881 ;;      Locals:         0       1       0       0       0
  6882 ;;      Temps:          0       2       0       0       0
  6883 ;;      Totals:         0       4       0       0       0
  6884 ;;Total ram usage:        4 bytes
  6885 ;; Hardware stack levels used: 1
  6886 ;; Hardware stack levels required when called: 3
  6887 ;; This function calls:
  6888 ;;		_LCD_Cmd
  6889 ;; This function is called by:
  6890 ;;		_imprime_tela_main
  6891 ;;		_imprime_tela_ajuste1
  6892 ;;		_imprime_tela_ajuste2
  6893 ;;		_imprime_tela_ajuste3
  6894 ;;		_imprime_tela_ajuste4
  6895 ;; This function uses a non-reentrant model
  6896 ;;
  6897                           
  6898                           
  6899                           ;psect for function _LCD_Goto
  6900  1445                     _LCD_Goto:
  6901                           
  6902                           ;incstack = 0
  6903                           ; Regs used in _LCD_Goto: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6904                           ;LCD_Goto@col stored from wreg
  6905  1445  1283               	bcf	3,5	;RP0=0, select bank0
  6906  1446  1303               	bcf	3,6	;RP1=0, select bank0
  6907  1447  00A4               	movwf	LCD_Goto@col
  6908  1448                     l3362:
  6909                           
  6910                           ;./LCD_Lib.c: 69: void LCD_Goto(uint8_t col, uint8_t row);./LCD_Lib.c: 70: {;./LCD_Lib.c
      +                          : 71:   switch(row)
  6911  1448  2C69               	goto	l3372
  6912  1449                     l3364:
  6913                           
  6914                           ;./LCD_Lib.c: 74:       LCD_Cmd(0xC0 + col - 1);
  6915  1449  0824               	movf	LCD_Goto@col,w
  6916  144A  3EBF               	addlw	191
  6917  144B  120A  118A  27CF  160A  118A  	fcall	_LCD_Cmd
  6918                           
  6919                           ;./LCD_Lib.c: 75:       break;
  6920  1450  2C7C               	goto	l72
  6921  1451                     l3366:
  6922                           
  6923                           ;./LCD_Lib.c: 77:       LCD_Cmd(0x94 + col - 1);
  6924  1451  0824               	movf	LCD_Goto@col,w
  6925  1452  3E93               	addlw	147
  6926  1453  120A  118A  27CF  160A  118A  	fcall	_LCD_Cmd
  6927                           
  6928                           ;./LCD_Lib.c: 78:       break;
  6929  1458  2C7C               	goto	l72
  6930  1459                     l3368:
  6931                           
  6932                           ;./LCD_Lib.c: 80:       LCD_Cmd(0xD4 + col - 1);
  6933  1459  0824               	movf	LCD_Goto@col,w
  6934  145A  3ED3               	addlw	211
  6935  145B  120A  118A  27CF  160A  118A  	fcall	_LCD_Cmd
  6936                           
  6937                           ;./LCD_Lib.c: 81:     break;
  6938  1460  2C7C               	goto	l72
  6939  1461                     l3370:
  6940                           
  6941                           ;./LCD_Lib.c: 83:       LCD_Cmd(0x80 + col - 1);
  6942  1461  0824               	movf	LCD_Goto@col,w
  6943  1462  3E7F               	addlw	127
  6944  1463  120A  118A  27CF  160A  118A  	fcall	_LCD_Cmd
  6945                           
  6946                           ;./LCD_Lib.c: 84:   }
  6947  1468  2C7C               	goto	l72
  6948  1469                     l3372:
  6949  1469  0821               	movf	LCD_Goto@row,w
  6950  146A  00A2               	movwf	??_LCD_Goto
  6951  146B  01A3               	clrf	??_LCD_Goto+1
  6952                           
  6953                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6954                           ; Switch size 1, requested type "simple"
  6955                           ; Number of cases is 1, Range of values is 0 to 0
  6956                           ; switch strategies available:
  6957                           ; Name         Instructions Cycles
  6958                           ; simple_byte            4     3 (average)
  6959                           ; direct_byte           11     8 (fixed)
  6960                           ; jumptable            260     6 (fixed)
  6961                           ;	Chosen strategy is simple_byte
  6962  146C  0823               	movf	??_LCD_Goto+1,w
  6963  146D  3A00               	xorlw	0	; case 0
  6964  146E  1903               	skipnz
  6965  146F  2C71               	goto	l3928
  6966  1470  2C61               	goto	l3370
  6967  1471                     l3928:
  6968                           
  6969                           ; Switch size 1, requested type "simple"
  6970                           ; Number of cases is 3, Range of values is 2 to 4
  6971                           ; switch strategies available:
  6972                           ; Name         Instructions Cycles
  6973                           ; simple_byte           10     6 (average)
  6974                           ; direct_byte           20    11 (fixed)
  6975                           ; jumptable            263     9 (fixed)
  6976                           ;	Chosen strategy is simple_byte
  6977  1471  0822               	movf	??_LCD_Goto,w
  6978  1472  3A02               	xorlw	2	; case 2
  6979  1473  1903               	skipnz
  6980  1474  2C49               	goto	l3364
  6981  1475  3A01               	xorlw	1	; case 3
  6982  1476  1903               	skipnz
  6983  1477  2C51               	goto	l3366
  6984  1478  3A07               	xorlw	7	; case 4
  6985  1479  1903               	skipnz
  6986  147A  2C59               	goto	l3368
  6987  147B  2C61               	goto	l3370
  6988  147C                     l72:
  6989  147C  0008               	return
  6990  147D                     __end_of_LCD_Goto:
  6991                           
  6992                           	psect	text24
  6993  05F2                     __ptext24:	
  6994 ;; *************** function ___fldiv *****************
  6995 ;; Defined at:
  6996 ;;		line 8 in file "D:\Programas\XC8 compiler\pic\sources\c90\common\sprcdiv.c"
  6997 ;; Parameters:    Size  Location     Type
  6998 ;;  a               4   10[BANK0 ] void 
  6999 ;;  b               4   14[BANK0 ] void 
  7000 ;; Auto vars:     Size  Location     Type
  7001 ;;  grs             4   30[BANK0 ] unsigned long 
  7002 ;;  rem             4   23[BANK0 ] unsigned long 
  7003 ;;  new_exp         2   28[BANK0 ] int 
  7004 ;;  aexp            1   35[BANK0 ] unsigned char 
  7005 ;;  bexp            1   34[BANK0 ] unsigned char 
  7006 ;;  sign            1   27[BANK0 ] unsigned char 
  7007 ;; Return value:  Size  Location     Type
  7008 ;;                  4   10[BANK0 ] unsigned char 
  7009 ;; Registers used:
  7010 ;;		wreg, status,2, status,0, btemp+1
  7011 ;; Tracked objects:
  7012 ;;		On entry : 0/0
  7013 ;;		On exit  : 0/0
  7014 ;;		Unchanged: 0/0
  7015 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7016 ;;      Params:         0       8       0       0       0
  7017 ;;      Locals:         0      13       0       0       0
  7018 ;;      Temps:          0       5       0       0       0
  7019 ;;      Totals:         0      26       0       0       0
  7020 ;;Total ram usage:       26 bytes
  7021 ;; Hardware stack levels used: 1
  7022 ;; Hardware stack levels required when called: 1
  7023 ;; This function calls:
  7024 ;;		Nothing
  7025 ;; This function is called by:
  7026 ;;		_main
  7027 ;; This function uses a non-reentrant model
  7028 ;;
  7029                           
  7030                           
  7031                           ;psect for function ___fldiv
  7032  05F2                     ___fldiv:
  7033  05F2                     l2994:	
  7034                           ;incstack = 0
  7035                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  7036                           
  7037  05F2  1283               	bcf	3,5	;RP0=0, select bank0
  7038  05F3  1303               	bcf	3,6	;RP1=0, select bank0
  7039  05F4  0831               	movf	___fldiv@b+3,w
  7040  05F5  3980               	andlw	128
  7041  05F6  00B2               	movwf	??___fldiv
  7042  05F7  0832               	movf	??___fldiv,w
  7043  05F8  00BB               	movwf	___fldiv@sign
  7044  05F9                     l2996:
  7045  05F9  0831               	movf	___fldiv@b+3,w
  7046  05FA  00B2               	movwf	??___fldiv
  7047  05FB  0732               	addwf	??___fldiv,w
  7048  05FC  00B3               	movwf	??___fldiv+1
  7049  05FD  0833               	movf	??___fldiv+1,w
  7050  05FE  00C2               	movwf	___fldiv@bexp
  7051  05FF                     l2998:
  7052  05FF  1FB0               	btfss	___fldiv@b+2,7
  7053  0600  2E02               	goto	u3611
  7054  0601  2E03               	goto	u3610
  7055  0602                     u3611:
  7056  0602  2E04               	goto	l3002
  7057  0603                     u3610:
  7058  0603                     l3000:
  7059  0603  1442               	bsf	___fldiv@bexp,0
  7060  0604                     l3002:
  7061  0604  0842               	movf	___fldiv@bexp,w
  7062  0605  1903               	btfsc	3,2
  7063  0606  2E08               	goto	u3621
  7064  0607  2E09               	goto	u3620
  7065  0608                     u3621:
  7066  0608  2E19               	goto	l3012
  7067  0609                     u3620:
  7068  0609                     l3004:
  7069  0609  0A42               	incf	___fldiv@bexp,w
  7070  060A  1D03               	btfss	3,2
  7071  060B  2E0D               	goto	u3631
  7072  060C  2E0E               	goto	u3630
  7073  060D                     u3631:
  7074  060D  2E16               	goto	l3008
  7075  060E                     u3630:
  7076  060E                     l3006:
  7077  060E  3000               	movlw	0
  7078  060F  00B1               	movwf	___fldiv@b+3
  7079  0610  3000               	movlw	0
  7080  0611  00B0               	movwf	___fldiv@b+2
  7081  0612  3000               	movlw	0
  7082  0613  00AF               	movwf	___fldiv@b+1
  7083  0614  3000               	movlw	0
  7084  0615  00AE               	movwf	___fldiv@b
  7085  0616                     l3008:
  7086  0616  17B0               	bsf	___fldiv@b+2,7
  7087  0617                     l3010:
  7088  0617  01B1               	clrf	___fldiv@b+3
  7089  0618  2E21               	goto	l3014
  7090  0619                     l3012:
  7091  0619  3000               	movlw	0
  7092  061A  00B1               	movwf	___fldiv@b+3
  7093  061B  3000               	movlw	0
  7094  061C  00B0               	movwf	___fldiv@b+2
  7095  061D  3000               	movlw	0
  7096  061E  00AF               	movwf	___fldiv@b+1
  7097  061F  3000               	movlw	0
  7098  0620  00AE               	movwf	___fldiv@b
  7099  0621                     l3014:
  7100  0621  082D               	movf	___fldiv@a+3,w
  7101  0622  3980               	andlw	128
  7102  0623  00B2               	movwf	??___fldiv
  7103  0624  0832               	movf	??___fldiv,w
  7104  0625  06BB               	xorwf	___fldiv@sign,f
  7105  0626                     l3016:
  7106  0626  082D               	movf	___fldiv@a+3,w
  7107  0627  00B2               	movwf	??___fldiv
  7108  0628  0732               	addwf	??___fldiv,w
  7109  0629  00B3               	movwf	??___fldiv+1
  7110  062A  0833               	movf	??___fldiv+1,w
  7111  062B  00C3               	movwf	___fldiv@aexp
  7112  062C                     l3018:
  7113  062C  1FAC               	btfss	___fldiv@a+2,7
  7114  062D  2E2F               	goto	u3641
  7115  062E  2E30               	goto	u3640
  7116  062F                     u3641:
  7117  062F  2E31               	goto	l3022
  7118  0630                     u3640:
  7119  0630                     l3020:
  7120  0630  1443               	bsf	___fldiv@aexp,0
  7121  0631                     l3022:
  7122  0631  0843               	movf	___fldiv@aexp,w
  7123  0632  1903               	btfsc	3,2
  7124  0633  2E35               	goto	u3651
  7125  0634  2E36               	goto	u3650
  7126  0635                     u3651:
  7127  0635  2E46               	goto	l3032
  7128  0636                     u3650:
  7129  0636                     l3024:
  7130  0636  0A43               	incf	___fldiv@aexp,w
  7131  0637  1D03               	btfss	3,2
  7132  0638  2E3A               	goto	u3661
  7133  0639  2E3B               	goto	u3660
  7134  063A                     u3661:
  7135  063A  2E43               	goto	l3028
  7136  063B                     u3660:
  7137  063B                     l3026:
  7138  063B  3000               	movlw	0
  7139  063C  00AD               	movwf	___fldiv@a+3
  7140  063D  3000               	movlw	0
  7141  063E  00AC               	movwf	___fldiv@a+2
  7142  063F  3000               	movlw	0
  7143  0640  00AB               	movwf	___fldiv@a+1
  7144  0641  3000               	movlw	0
  7145  0642  00AA               	movwf	___fldiv@a
  7146  0643                     l3028:
  7147  0643  17AC               	bsf	___fldiv@a+2,7
  7148  0644                     l3030:
  7149  0644  01AD               	clrf	___fldiv@a+3
  7150  0645  2E4E               	goto	l696
  7151  0646                     l3032:
  7152  0646  3000               	movlw	0
  7153  0647  00AD               	movwf	___fldiv@a+3
  7154  0648  3000               	movlw	0
  7155  0649  00AC               	movwf	___fldiv@a+2
  7156  064A  3000               	movlw	0
  7157  064B  00AB               	movwf	___fldiv@a+1
  7158  064C  3000               	movlw	0
  7159  064D  00AA               	movwf	___fldiv@a
  7160  064E                     l696:
  7161  064E  082D               	movf	___fldiv@a+3,w
  7162  064F  042C               	iorwf	___fldiv@a+2,w
  7163  0650  042B               	iorwf	___fldiv@a+1,w
  7164  0651  042A               	iorwf	___fldiv@a,w
  7165  0652  1D03               	skipz
  7166  0653  2E55               	goto	u3671
  7167  0654  2E56               	goto	u3670
  7168  0655                     u3671:
  7169  0655  2E6F               	goto	l3042
  7170  0656                     u3670:
  7171  0656                     l3034:
  7172  0656  3000               	movlw	0
  7173  0657  00B1               	movwf	___fldiv@b+3
  7174  0658  3000               	movlw	0
  7175  0659  00B0               	movwf	___fldiv@b+2
  7176  065A  3000               	movlw	0
  7177  065B  00AF               	movwf	___fldiv@b+1
  7178  065C  3000               	movlw	0
  7179  065D  00AE               	movwf	___fldiv@b
  7180  065E  3080               	movlw	128
  7181  065F  04B0               	iorwf	___fldiv@b+2,f
  7182  0660  307F               	movlw	127
  7183  0661  04B1               	iorwf	___fldiv@b+3,f
  7184  0662                     l3036:
  7185  0662  083B               	movf	___fldiv@sign,w
  7186  0663  00B2               	movwf	??___fldiv
  7187  0664  0832               	movf	??___fldiv,w
  7188  0665  04B1               	iorwf	___fldiv@b+3,f
  7189  0666                     l3038:
  7190  0666  0831               	movf	___fldiv@b+3,w
  7191  0667  00AD               	movwf	?___fldiv+3
  7192  0668  0830               	movf	___fldiv@b+2,w
  7193  0669  00AC               	movwf	?___fldiv+2
  7194  066A  082F               	movf	___fldiv@b+1,w
  7195  066B  00AB               	movwf	?___fldiv+1
  7196  066C  082E               	movf	___fldiv@b,w
  7197  066D  00AA               	movwf	?___fldiv
  7198  066E  2FCE               	goto	l698
  7199  066F                     l3042:
  7200  066F  0842               	movf	___fldiv@bexp,w
  7201  0670  1D03               	btfss	3,2
  7202  0671  2E73               	goto	u3681
  7203  0672  2E74               	goto	u3680
  7204  0673                     u3681:
  7205  0673  2E7D               	goto	l3048
  7206  0674                     u3680:
  7207  0674                     l3044:
  7208  0674  3000               	movlw	0
  7209  0675  00AD               	movwf	?___fldiv+3
  7210  0676  3000               	movlw	0
  7211  0677  00AC               	movwf	?___fldiv+2
  7212  0678  3000               	movlw	0
  7213  0679  00AB               	movwf	?___fldiv+1
  7214  067A  3000               	movlw	0
  7215  067B  00AA               	movwf	?___fldiv
  7216  067C  2FCE               	goto	l698
  7217  067D                     l3048:
  7218  067D  0842               	movf	___fldiv@bexp,w
  7219  067E  00B2               	movwf	??___fldiv
  7220  067F  01B3               	clrf	??___fldiv+1
  7221  0680  0833               	movf	??___fldiv+1,w
  7222  0681  00B5               	movwf	??___fldiv+3
  7223  0682  0843               	movf	___fldiv@aexp,w
  7224  0683  0232               	subwf	??___fldiv,w
  7225  0684  00B4               	movwf	??___fldiv+2
  7226  0685  1C03               	skipc
  7227  0686  03B5               	decf	??___fldiv+3,f
  7228  0687  0834               	movf	??___fldiv+2,w
  7229  0688  3E7F               	addlw	127
  7230  0689  00BC               	movwf	___fldiv@new_exp
  7231  068A  0835               	movf	??___fldiv+3,w
  7232  068B  1803               	skipnc
  7233  068C  3E01               	addlw	1
  7234  068D  3E00               	addlw	0
  7235  068E  00BD               	movwf	___fldiv@new_exp+1
  7236  068F                     l3050:
  7237  068F  0831               	movf	___fldiv@b+3,w
  7238  0690  00BA               	movwf	___fldiv@rem+3
  7239  0691  0830               	movf	___fldiv@b+2,w
  7240  0692  00B9               	movwf	___fldiv@rem+2
  7241  0693  082F               	movf	___fldiv@b+1,w
  7242  0694  00B8               	movwf	___fldiv@rem+1
  7243  0695  082E               	movf	___fldiv@b,w
  7244  0696  00B7               	movwf	___fldiv@rem
  7245  0697                     l3052:
  7246  0697  3000               	movlw	0
  7247  0698  00B1               	movwf	___fldiv@b+3
  7248  0699  3000               	movlw	0
  7249  069A  00B0               	movwf	___fldiv@b+2
  7250  069B  3000               	movlw	0
  7251  069C  00AF               	movwf	___fldiv@b+1
  7252  069D  3000               	movlw	0
  7253  069E  00AE               	movwf	___fldiv@b
  7254  069F                     l3054:
  7255  069F  3000               	movlw	0
  7256  06A0  00C1               	movwf	___fldiv@grs+3
  7257  06A1  3000               	movlw	0
  7258  06A2  00C0               	movwf	___fldiv@grs+2
  7259  06A3  3000               	movlw	0
  7260  06A4  00BF               	movwf	___fldiv@grs+1
  7261  06A5  3000               	movlw	0
  7262  06A6  00BE               	movwf	___fldiv@grs
  7263  06A7                     l3056:
  7264  06A7  01C3               	clrf	___fldiv@aexp
  7265  06A8  2EF3               	goto	l3076
  7266  06A9                     l3058:
  7267  06A9  0843               	movf	___fldiv@aexp,w
  7268  06AA  1903               	btfsc	3,2
  7269  06AB  2EAD               	goto	u3691
  7270  06AC  2EAE               	goto	u3690
  7271  06AD                     u3691:
  7272  06AD  2ECE               	goto	l3068
  7273  06AE                     u3690:
  7274  06AE                     l3060:
  7275  06AE  3001               	movlw	1
  7276  06AF  00B2               	movwf	??___fldiv
  7277  06B0                     u3705:
  7278  06B0  1003               	clrc
  7279  06B1  0DB7               	rlf	___fldiv@rem,f
  7280  06B2  0DB8               	rlf	___fldiv@rem+1,f
  7281  06B3  0DB9               	rlf	___fldiv@rem+2,f
  7282  06B4  0DBA               	rlf	___fldiv@rem+3,f
  7283  06B5  0BB2               	decfsz	??___fldiv,f
  7284  06B6  2EB0               	goto	u3705
  7285  06B7  3001               	movlw	1
  7286  06B8  00B2               	movwf	??___fldiv
  7287  06B9                     u3715:
  7288  06B9  1003               	clrc
  7289  06BA  0DAE               	rlf	___fldiv@b,f
  7290  06BB  0DAF               	rlf	___fldiv@b+1,f
  7291  06BC  0DB0               	rlf	___fldiv@b+2,f
  7292  06BD  0DB1               	rlf	___fldiv@b+3,f
  7293  06BE  0BB2               	decfsz	??___fldiv,f
  7294  06BF  2EB9               	goto	u3715
  7295  06C0                     l3062:
  7296  06C0  1FC1               	btfss	___fldiv@grs+3,7
  7297  06C1  2EC3               	goto	u3721
  7298  06C2  2EC4               	goto	u3720
  7299  06C3                     u3721:
  7300  06C3  2EC5               	goto	l3066
  7301  06C4                     u3720:
  7302  06C4                     l3064:
  7303  06C4  142E               	bsf	___fldiv@b,0
  7304  06C5                     l3066:
  7305  06C5  3001               	movlw	1
  7306  06C6  00B2               	movwf	??___fldiv
  7307  06C7                     u3735:
  7308  06C7  1003               	clrc
  7309  06C8  0DBE               	rlf	___fldiv@grs,f
  7310  06C9  0DBF               	rlf	___fldiv@grs+1,f
  7311  06CA  0DC0               	rlf	___fldiv@grs+2,f
  7312  06CB  0DC1               	rlf	___fldiv@grs+3,f
  7313  06CC  0BB2               	decfsz	??___fldiv,f
  7314  06CD  2EC7               	goto	u3735
  7315  06CE                     l3068:
  7316  06CE  082D               	movf	___fldiv@a+3,w
  7317  06CF  023A               	subwf	___fldiv@rem+3,w
  7318  06D0  1D03               	skipz
  7319  06D1  2EDC               	goto	u3745
  7320  06D2  082C               	movf	___fldiv@a+2,w
  7321  06D3  0239               	subwf	___fldiv@rem+2,w
  7322  06D4  1D03               	skipz
  7323  06D5  2EDC               	goto	u3745
  7324  06D6  082B               	movf	___fldiv@a+1,w
  7325  06D7  0238               	subwf	___fldiv@rem+1,w
  7326  06D8  1D03               	skipz
  7327  06D9  2EDC               	goto	u3745
  7328  06DA  082A               	movf	___fldiv@a,w
  7329  06DB  0237               	subwf	___fldiv@rem,w
  7330  06DC                     u3745:
  7331  06DC  1C03               	skipc
  7332  06DD  2EDF               	goto	u3741
  7333  06DE  2EE0               	goto	u3740
  7334  06DF                     u3741:
  7335  06DF  2EEF               	goto	l3074
  7336  06E0                     u3740:
  7337  06E0                     l3070:
  7338  06E0  1741               	bsf	___fldiv@grs+3,6
  7339  06E1                     l3072:
  7340  06E1  082A               	movf	___fldiv@a,w
  7341  06E2  02B7               	subwf	___fldiv@rem,f
  7342  06E3  082B               	movf	___fldiv@a+1,w
  7343  06E4  1C03               	skipc
  7344  06E5  0F2B               	incfsz	___fldiv@a+1,w
  7345  06E6  02B8               	subwf	___fldiv@rem+1,f
  7346  06E7  082C               	movf	___fldiv@a+2,w
  7347  06E8  1C03               	skipc
  7348  06E9  0F2C               	incfsz	___fldiv@a+2,w
  7349  06EA  02B9               	subwf	___fldiv@rem+2,f
  7350  06EB  082D               	movf	___fldiv@a+3,w
  7351  06EC  1C03               	skipc
  7352  06ED  0F2D               	incfsz	___fldiv@a+3,w
  7353  06EE  02BA               	subwf	___fldiv@rem+3,f
  7354  06EF                     l3074:
  7355  06EF  3001               	movlw	1
  7356  06F0  00B2               	movwf	??___fldiv
  7357  06F1  0832               	movf	??___fldiv,w
  7358  06F2  07C3               	addwf	___fldiv@aexp,f
  7359  06F3                     l3076:
  7360  06F3  301A               	movlw	26
  7361  06F4  0243               	subwf	___fldiv@aexp,w
  7362  06F5  1C03               	skipc
  7363  06F6  2EF8               	goto	u3751
  7364  06F7  2EF9               	goto	u3750
  7365  06F8                     u3751:
  7366  06F8  2EA9               	goto	l3058
  7367  06F9                     u3750:
  7368  06F9                     l3078:
  7369  06F9  083A               	movf	___fldiv@rem+3,w
  7370  06FA  0439               	iorwf	___fldiv@rem+2,w
  7371  06FB  0438               	iorwf	___fldiv@rem+1,w
  7372  06FC  0437               	iorwf	___fldiv@rem,w
  7373  06FD  1903               	skipnz
  7374  06FE  2F00               	goto	u3761
  7375  06FF  2F01               	goto	u3760
  7376  0700                     u3761:
  7377  0700  2F20               	goto	l3092
  7378  0701                     u3760:
  7379  0701                     l3080:
  7380  0701  143E               	bsf	___fldiv@grs,0
  7381  0702  2F20               	goto	l3092
  7382  0703                     l3082:
  7383  0703  3001               	movlw	1
  7384  0704  00B2               	movwf	??___fldiv
  7385  0705                     u3775:
  7386  0705  1003               	clrc
  7387  0706  0DAE               	rlf	___fldiv@b,f
  7388  0707  0DAF               	rlf	___fldiv@b+1,f
  7389  0708  0DB0               	rlf	___fldiv@b+2,f
  7390  0709  0DB1               	rlf	___fldiv@b+3,f
  7391  070A  0BB2               	decfsz	??___fldiv,f
  7392  070B  2F05               	goto	u3775
  7393  070C                     l3084:
  7394  070C  1FC1               	btfss	___fldiv@grs+3,7
  7395  070D  2F0F               	goto	u3781
  7396  070E  2F10               	goto	u3780
  7397  070F                     u3781:
  7398  070F  2F11               	goto	l3088
  7399  0710                     u3780:
  7400  0710                     l3086:
  7401  0710  142E               	bsf	___fldiv@b,0
  7402  0711                     l3088:
  7403  0711  3001               	movlw	1
  7404  0712  00B2               	movwf	??___fldiv
  7405  0713                     u3795:
  7406  0713  1003               	clrc
  7407  0714  0DBE               	rlf	___fldiv@grs,f
  7408  0715  0DBF               	rlf	___fldiv@grs+1,f
  7409  0716  0DC0               	rlf	___fldiv@grs+2,f
  7410  0717  0DC1               	rlf	___fldiv@grs+3,f
  7411  0718  0BB2               	decfsz	??___fldiv,f
  7412  0719  2F13               	goto	u3795
  7413  071A                     l3090:
  7414  071A  30FF               	movlw	255
  7415  071B  07BC               	addwf	___fldiv@new_exp,f
  7416  071C  1803               	skipnc
  7417  071D  0ABD               	incf	___fldiv@new_exp+1,f
  7418  071E  30FF               	movlw	255
  7419  071F  07BD               	addwf	___fldiv@new_exp+1,f
  7420  0720                     l3092:
  7421  0720  1FB0               	btfss	___fldiv@b+2,7
  7422  0721  2F23               	goto	u3801
  7423  0722  2F24               	goto	u3800
  7424  0723                     u3801:
  7425  0723  2F03               	goto	l3082
  7426  0724                     u3800:
  7427  0724                     l3094:
  7428  0724  01C3               	clrf	___fldiv@aexp
  7429  0725                     l3096:
  7430  0725  1FC1               	btfss	___fldiv@grs+3,7
  7431  0726  2F28               	goto	u3811
  7432  0727  2F29               	goto	u3810
  7433  0728                     u3811:
  7434  0728  2F45               	goto	l3104
  7435  0729                     u3810:
  7436  0729                     l3098:
  7437  0729  30FF               	movlw	255
  7438  072A  053E               	andwf	___fldiv@grs,w
  7439  072B  00B2               	movwf	??___fldiv
  7440  072C  30FF               	movlw	255
  7441  072D  053F               	andwf	___fldiv@grs+1,w
  7442  072E  00B3               	movwf	??___fldiv+1
  7443  072F  30FF               	movlw	255
  7444  0730  0540               	andwf	___fldiv@grs+2,w
  7445  0731  00B4               	movwf	??___fldiv+2
  7446  0732  307F               	movlw	127
  7447  0733  0541               	andwf	___fldiv@grs+3,w
  7448  0734  00B5               	movwf	??___fldiv+3
  7449  0735  0835               	movf	??___fldiv+3,w
  7450  0736  0434               	iorwf	??___fldiv+2,w
  7451  0737  0433               	iorwf	??___fldiv+1,w
  7452  0738  0432               	iorwf	??___fldiv,w
  7453  0739  1903               	skipnz
  7454  073A  2F3C               	goto	u3821
  7455  073B  2F3D               	goto	u3820
  7456  073C                     u3821:
  7457  073C  2F40               	goto	l712
  7458  073D                     u3820:
  7459  073D                     l3100:
  7460  073D  01C3               	clrf	___fldiv@aexp
  7461  073E  0AC3               	incf	___fldiv@aexp,f
  7462  073F  2F45               	goto	l3104
  7463  0740                     l712:
  7464  0740  1C2E               	btfss	___fldiv@b,0
  7465  0741  2F43               	goto	u3831
  7466  0742  2F44               	goto	u3830
  7467  0743                     u3831:
  7468  0743  2F45               	goto	l3104
  7469  0744                     u3830:
  7470  0744  2F3D               	goto	l3100
  7471  0745                     l3104:
  7472  0745  0843               	movf	___fldiv@aexp,w
  7473  0746  1903               	btfsc	3,2
  7474  0747  2F49               	goto	u3841
  7475  0748  2F4A               	goto	u3840
  7476  0749                     u3841:
  7477  0749  2F7B               	goto	l3114
  7478  074A                     u3840:
  7479  074A                     l3106:
  7480  074A  3001               	movlw	1
  7481  074B  07AE               	addwf	___fldiv@b,f
  7482  074C  3000               	movlw	0
  7483  074D  1803               	skipnc
  7484  074E  3001               	movlw	1
  7485  074F  07AF               	addwf	___fldiv@b+1,f
  7486  0750  3000               	movlw	0
  7487  0751  1803               	skipnc
  7488  0752  3001               	movlw	1
  7489  0753  07B0               	addwf	___fldiv@b+2,f
  7490  0754  3000               	movlw	0
  7491  0755  1803               	skipnc
  7492  0756  3001               	movlw	1
  7493  0757  07B1               	addwf	___fldiv@b+3,f
  7494  0758                     l3108:
  7495  0758  1C31               	btfss	___fldiv@b+3,0
  7496  0759  2F5B               	goto	u3851
  7497  075A  2F5C               	goto	u3850
  7498  075B                     u3851:
  7499  075B  2F7B               	goto	l3114
  7500  075C                     u3850:
  7501  075C                     l3110:
  7502  075C  082E               	movf	___fldiv@b,w
  7503  075D  00B2               	movwf	??___fldiv
  7504  075E  082F               	movf	___fldiv@b+1,w
  7505  075F  00B3               	movwf	??___fldiv+1
  7506  0760  0830               	movf	___fldiv@b+2,w
  7507  0761  00B4               	movwf	??___fldiv+2
  7508  0762  0831               	movf	___fldiv@b+3,w
  7509  0763  00B5               	movwf	??___fldiv+3
  7510  0764  3001               	movlw	1
  7511  0765  00B6               	movwf	??___fldiv+4
  7512  0766                     u3865:
  7513  0766  0D35               	rlf	??___fldiv+3,w
  7514  0767  0CB5               	rrf	??___fldiv+3,f
  7515  0768  0CB4               	rrf	??___fldiv+2,f
  7516  0769  0CB3               	rrf	??___fldiv+1,f
  7517  076A  0CB2               	rrf	??___fldiv,f
  7518  076B                     u3860:
  7519  076B  0BB6               	decfsz	??___fldiv+4,f
  7520  076C  2F66               	goto	u3865
  7521  076D  0835               	movf	??___fldiv+3,w
  7522  076E  00B1               	movwf	___fldiv@b+3
  7523  076F  0834               	movf	??___fldiv+2,w
  7524  0770  00B0               	movwf	___fldiv@b+2
  7525  0771  0833               	movf	??___fldiv+1,w
  7526  0772  00AF               	movwf	___fldiv@b+1
  7527  0773  0832               	movf	??___fldiv,w
  7528  0774  00AE               	movwf	___fldiv@b
  7529  0775                     l3112:
  7530  0775  3001               	movlw	1
  7531  0776  07BC               	addwf	___fldiv@new_exp,f
  7532  0777  1803               	skipnc
  7533  0778  0ABD               	incf	___fldiv@new_exp+1,f
  7534  0779  3000               	movlw	0
  7535  077A  07BD               	addwf	___fldiv@new_exp+1,f
  7536  077B                     l3114:
  7537  077B  083D               	movf	___fldiv@new_exp+1,w
  7538  077C  3A80               	xorlw	128
  7539  077D  00FF               	movwf	btemp+1
  7540  077E  3080               	movlw	128
  7541  077F  027F               	subwf	btemp+1,w
  7542  0780  1D03               	skipz
  7543  0781  2F84               	goto	u3875
  7544  0782  30FF               	movlw	255
  7545  0783  023C               	subwf	___fldiv@new_exp,w
  7546  0784                     u3875:
  7547  0784  1C03               	skipc
  7548  0785  2F87               	goto	u3871
  7549  0786  2F88               	goto	u3870
  7550  0787                     u3871:
  7551  0787  2F96               	goto	l3118
  7552  0788                     u3870:
  7553  0788                     l3116:
  7554  0788  30FF               	movlw	255
  7555  0789  1283               	bcf	3,5	;RP0=0, select bank0
  7556  078A  1303               	bcf	3,6	;RP1=0, select bank0
  7557  078B  00BC               	movwf	___fldiv@new_exp
  7558  078C  3000               	movlw	0
  7559  078D  00BD               	movwf	___fldiv@new_exp+1
  7560  078E  3000               	movlw	0
  7561  078F  00B1               	movwf	___fldiv@b+3
  7562  0790  3000               	movlw	0
  7563  0791  00B0               	movwf	___fldiv@b+2
  7564  0792  3000               	movlw	0
  7565  0793  00AF               	movwf	___fldiv@b+1
  7566  0794  3000               	movlw	0
  7567  0795  00AE               	movwf	___fldiv@b
  7568  0796                     l3118:
  7569  0796  1283               	bcf	3,5	;RP0=0, select bank0
  7570  0797  1303               	bcf	3,6	;RP1=0, select bank0
  7571  0798  083D               	movf	___fldiv@new_exp+1,w
  7572  0799  3A80               	xorlw	128
  7573  079A  00FF               	movwf	btemp+1
  7574  079B  3080               	movlw	128
  7575  079C  027F               	subwf	btemp+1,w
  7576  079D  1D03               	skipz
  7577  079E  2FA1               	goto	u3885
  7578  079F  3001               	movlw	1
  7579  07A0  023C               	subwf	___fldiv@new_exp,w
  7580  07A1                     u3885:
  7581  07A1  1803               	skipnc
  7582  07A2  2FA4               	goto	u3881
  7583  07A3  2FA5               	goto	u3880
  7584  07A4                     u3881:
  7585  07A4  2FB2               	goto	l718
  7586  07A5                     u3880:
  7587  07A5                     l3120:
  7588  07A5  1283               	bcf	3,5	;RP0=0, select bank0
  7589  07A6  1303               	bcf	3,6	;RP1=0, select bank0
  7590  07A7  01BC               	clrf	___fldiv@new_exp
  7591  07A8  01BD               	clrf	___fldiv@new_exp+1
  7592  07A9                     l3122:
  7593  07A9  3000               	movlw	0
  7594  07AA  00B1               	movwf	___fldiv@b+3
  7595  07AB  3000               	movlw	0
  7596  07AC  00B0               	movwf	___fldiv@b+2
  7597  07AD  3000               	movlw	0
  7598  07AE  00AF               	movwf	___fldiv@b+1
  7599  07AF  3000               	movlw	0
  7600  07B0  00AE               	movwf	___fldiv@b
  7601  07B1                     l3124:
  7602  07B1  01BB               	clrf	___fldiv@sign
  7603  07B2                     l718:
  7604  07B2  1283               	bcf	3,5	;RP0=0, select bank0
  7605  07B3  1303               	bcf	3,6	;RP1=0, select bank0
  7606  07B4  083C               	movf	___fldiv@new_exp,w
  7607  07B5  00B2               	movwf	??___fldiv
  7608  07B6  0832               	movf	??___fldiv,w
  7609  07B7  00C2               	movwf	___fldiv@bexp
  7610  07B8                     l3126:
  7611  07B8  1C42               	btfss	___fldiv@bexp,0
  7612  07B9  2FBB               	goto	u3891
  7613  07BA  2FBC               	goto	u3890
  7614  07BB                     u3891:
  7615  07BB  2FBE               	goto	l3130
  7616  07BC                     u3890:
  7617  07BC                     l3128:
  7618  07BC  17B0               	bsf	___fldiv@b+2,7
  7619  07BD  2FC2               	goto	l720
  7620  07BE                     l3130:
  7621  07BE  307F               	movlw	127
  7622  07BF  00B2               	movwf	??___fldiv
  7623  07C0  0832               	movf	??___fldiv,w
  7624  07C1  05B0               	andwf	___fldiv@b+2,f
  7625  07C2                     l720:
  7626  07C2  0842               	movf	___fldiv@bexp,w
  7627  07C3  00B2               	movwf	??___fldiv
  7628  07C4  1003               	clrc
  7629  07C5  0C32               	rrf	??___fldiv,w
  7630  07C6  00B3               	movwf	??___fldiv+1
  7631  07C7  0833               	movf	??___fldiv+1,w
  7632  07C8  00B1               	movwf	___fldiv@b+3
  7633  07C9  083B               	movf	___fldiv@sign,w
  7634  07CA  00B2               	movwf	??___fldiv
  7635  07CB  0832               	movf	??___fldiv,w
  7636  07CC  04B1               	iorwf	___fldiv@b+3,f
  7637  07CD  2E66               	goto	l3038
  7638  07CE                     l698:
  7639  07CE  0008               	return
  7640  07CF                     __end_of___fldiv:
  7641                           
  7642                           	psect	text25
  7643  0986                     __ptext25:	
  7644 ;; *************** function _LCD_Begin *****************
  7645 ;; Defined at:
  7646 ;;		line 106 in file "./LCD_Lib.c"
  7647 ;; Parameters:    Size  Location     Type
  7648 ;;		None
  7649 ;; Auto vars:     Size  Location     Type
  7650 ;;		None
  7651 ;; Return value:  Size  Location     Type
  7652 ;;                  1    wreg      void 
  7653 ;; Registers used:
  7654 ;;		wreg, status,2, status,0, pclath, cstack
  7655 ;; Tracked objects:
  7656 ;;		On entry : 0/0
  7657 ;;		On exit  : 0/0
  7658 ;;		Unchanged: 0/0
  7659 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7660 ;;      Params:         0       0       0       0       0
  7661 ;;      Locals:         0       0       0       0       0
  7662 ;;      Temps:          0       2       0       0       0
  7663 ;;      Totals:         0       2       0       0       0
  7664 ;;Total ram usage:        2 bytes
  7665 ;; Hardware stack levels used: 1
  7666 ;; Hardware stack levels required when called: 3
  7667 ;; This function calls:
  7668 ;;		_LCD_Cmd
  7669 ;; This function is called by:
  7670 ;;		_main
  7671 ;; This function uses a non-reentrant model
  7672 ;;
  7673                           
  7674                           
  7675                           ;psect for function _LCD_Begin
  7676  0986                     _LCD_Begin:
  7677  0986                     l3622:	
  7678                           ;incstack = 0
  7679                           ; Regs used in _LCD_Begin: [wreg+status,2+status,0+pclath+cstack]
  7680                           
  7681                           
  7682                           ;./LCD_Lib.c: 108:   RS = 0;
  7683  0986  107A               	bcf	_RS/(0+8),_RS& (0+7)
  7684                           
  7685                           ;./LCD_Lib.c: 110:   PORTDbits.RD0 = 0;
  7686  0987  1283               	bcf	3,5	;RP0=0, select bank0
  7687  0988  1303               	bcf	3,6	;RP1=0, select bank0
  7688  0989  1008               	bcf	8,0	;volatile
  7689                           
  7690                           ;./LCD_Lib.c: 111:   PORTDbits.RD1 = 0;
  7691  098A  1088               	bcf	8,1	;volatile
  7692                           
  7693                           ;./LCD_Lib.c: 112:   PORTDbits.RD2 = 0;
  7694  098B  1108               	bcf	8,2	;volatile
  7695                           
  7696                           ;./LCD_Lib.c: 113:   PORTDbits.RD3 = 0;
  7697  098C  1188               	bcf	8,3	;volatile
  7698                           
  7699                           ;./LCD_Lib.c: 114:   PORTDbits.RD4 = 0;
  7700  098D  1208               	bcf	8,4	;volatile
  7701                           
  7702                           ;./LCD_Lib.c: 115:   PORTDbits.RD5 = 0;
  7703  098E  1288               	bcf	8,5	;volatile
  7704                           
  7705                           ;./LCD_Lib.c: 116:   TRISD0 = 0;
  7706  098F  1683               	bsf	3,5	;RP0=1, select bank1
  7707  0990  1303               	bcf	3,6	;RP1=0, select bank1
  7708  0991  1008               	bcf	8,0	;volatile
  7709                           
  7710                           ;./LCD_Lib.c: 117:   TRISD1 = 0;
  7711  0992  1088               	bcf	8,1	;volatile
  7712                           
  7713                           ;./LCD_Lib.c: 118:   TRISD2 = 0;
  7714  0993  1108               	bcf	8,2	;volatile
  7715                           
  7716                           ;./LCD_Lib.c: 119:   TRISD3 = 0;
  7717  0994  1188               	bcf	8,3	;volatile
  7718                           
  7719                           ;./LCD_Lib.c: 120:   TRISD4 = 0;
  7720  0995  1208               	bcf	8,4	;volatile
  7721                           
  7722                           ;./LCD_Lib.c: 121:   TRISD5 = 0;
  7723  0996  1288               	bcf	8,5	;volatile
  7724  0997                     l3624:
  7725                           
  7726                           ;./LCD_Lib.c: 123:   _delay((unsigned long)((40)*(4000000/4000.0)));
  7727  0997  3034               	movlw	52
  7728  0998  1283               	bcf	3,5	;RP0=0, select bank0
  7729  0999  1303               	bcf	3,6	;RP1=0, select bank0
  7730  099A  00A2               	movwf	??_LCD_Begin+1
  7731  099B  30F1               	movlw	241
  7732  099C  00A1               	movwf	??_LCD_Begin
  7733  099D                     u5027:
  7734  099D  0BA1               	decfsz	??_LCD_Begin,f
  7735  099E  299D               	goto	u5027
  7736  099F  0BA2               	decfsz	??_LCD_Begin+1,f
  7737  09A0  299D               	goto	u5027
  7738  09A1                     l3626:
  7739                           
  7740                           ;./LCD_Lib.c: 124:   LCD_Cmd(3);
  7741  09A1  3003               	movlw	3
  7742  09A2  120A  118A  27CF  120A  158A  	fcall	_LCD_Cmd
  7743  09A7                     l3628:
  7744                           
  7745                           ;./LCD_Lib.c: 125:   _delay((unsigned long)((5)*(4000000/4000.0)));
  7746  09A7  3007               	movlw	7
  7747  09A8  1283               	bcf	3,5	;RP0=0, select bank0
  7748  09A9  1303               	bcf	3,6	;RP1=0, select bank0
  7749  09AA  00A2               	movwf	??_LCD_Begin+1
  7750  09AB  307C               	movlw	124
  7751  09AC  00A1               	movwf	??_LCD_Begin
  7752  09AD                     u5037:
  7753  09AD  0BA1               	decfsz	??_LCD_Begin,f
  7754  09AE  29AD               	goto	u5037
  7755  09AF  0BA2               	decfsz	??_LCD_Begin+1,f
  7756  09B0  29AD               	goto	u5037
  7757  09B1  0000               	nop
  7758                           
  7759                           ;./LCD_Lib.c: 126:   LCD_Cmd(3);
  7760  09B2  3003               	movlw	3
  7761  09B3  120A  118A  27CF  120A  158A  	fcall	_LCD_Cmd
  7762  09B8                     l3630:
  7763                           
  7764                           ;./LCD_Lib.c: 127:   _delay((unsigned long)((5)*(4000000/4000.0)));
  7765  09B8  3007               	movlw	7
  7766  09B9  1283               	bcf	3,5	;RP0=0, select bank0
  7767  09BA  1303               	bcf	3,6	;RP1=0, select bank0
  7768  09BB  00A2               	movwf	??_LCD_Begin+1
  7769  09BC  307C               	movlw	124
  7770  09BD  00A1               	movwf	??_LCD_Begin
  7771  09BE                     u5047:
  7772  09BE  0BA1               	decfsz	??_LCD_Begin,f
  7773  09BF  29BE               	goto	u5047
  7774  09C0  0BA2               	decfsz	??_LCD_Begin+1,f
  7775  09C1  29BE               	goto	u5047
  7776  09C2  0000               	nop
  7777  09C3                     l3632:
  7778                           
  7779                           ;./LCD_Lib.c: 128:   LCD_Cmd(3);
  7780  09C3  3003               	movlw	3
  7781  09C4  120A  118A  27CF  120A  158A  	fcall	_LCD_Cmd
  7782                           
  7783                           ;./LCD_Lib.c: 129:   _delay((unsigned long)((5)*(4000000/4000.0)));
  7784  09C9  3007               	movlw	7
  7785  09CA  1283               	bcf	3,5	;RP0=0, select bank0
  7786  09CB  1303               	bcf	3,6	;RP1=0, select bank0
  7787  09CC  00A2               	movwf	??_LCD_Begin+1
  7788  09CD  307C               	movlw	124
  7789  09CE  00A1               	movwf	??_LCD_Begin
  7790  09CF                     u5057:
  7791  09CF  0BA1               	decfsz	??_LCD_Begin,f
  7792  09D0  29CF               	goto	u5057
  7793  09D1  0BA2               	decfsz	??_LCD_Begin+1,f
  7794  09D2  29CF               	goto	u5057
  7795  09D3  0000               	nop
  7796  09D4                     l3634:
  7797                           
  7798                           ;./LCD_Lib.c: 130:   LCD_Cmd(0x02);
  7799  09D4  3002               	movlw	2
  7800  09D5  120A  118A  27CF  120A  158A  	fcall	_LCD_Cmd
  7801  09DA                     l3636:
  7802                           
  7803                           ;./LCD_Lib.c: 131:   _delay((unsigned long)((5)*(4000000/4000.0)));
  7804  09DA  3007               	movlw	7
  7805  09DB  1283               	bcf	3,5	;RP0=0, select bank0
  7806  09DC  1303               	bcf	3,6	;RP1=0, select bank0
  7807  09DD  00A2               	movwf	??_LCD_Begin+1
  7808  09DE  307C               	movlw	124
  7809  09DF  00A1               	movwf	??_LCD_Begin
  7810  09E0                     u5067:
  7811  09E0  0BA1               	decfsz	??_LCD_Begin,f
  7812  09E1  29E0               	goto	u5067
  7813  09E2  0BA2               	decfsz	??_LCD_Begin+1,f
  7814  09E3  29E0               	goto	u5067
  7815  09E4  0000               	nop
  7816                           
  7817                           ;./LCD_Lib.c: 132:   LCD_Cmd(0x20 | (2 << 2));
  7818  09E5  3028               	movlw	40
  7819  09E6  120A  118A  27CF  120A  158A  	fcall	_LCD_Cmd
  7820  09EB                     l3638:
  7821                           
  7822                           ;./LCD_Lib.c: 133:   _delay((unsigned long)((50)*(4000000/4000.0)));
  7823  09EB  3041               	movlw	65
  7824  09EC  1283               	bcf	3,5	;RP0=0, select bank0
  7825  09ED  1303               	bcf	3,6	;RP1=0, select bank0
  7826  09EE  00A2               	movwf	??_LCD_Begin+1
  7827  09EF  30ED               	movlw	237
  7828  09F0  00A1               	movwf	??_LCD_Begin
  7829  09F1                     u5077:
  7830  09F1  0BA1               	decfsz	??_LCD_Begin,f
  7831  09F2  29F1               	goto	u5077
  7832  09F3  0BA2               	decfsz	??_LCD_Begin+1,f
  7833  09F4  29F1               	goto	u5077
  7834  09F5  29F6               	nop2
  7835  09F6                     l3640:
  7836                           
  7837                           ;./LCD_Lib.c: 134:   LCD_Cmd(0x0C);
  7838  09F6  300C               	movlw	12
  7839  09F7  120A  118A  27CF  120A  158A  	fcall	_LCD_Cmd
  7840                           
  7841                           ;./LCD_Lib.c: 135:   _delay((unsigned long)((50)*(4000000/4000.0)));
  7842  09FC  3041               	movlw	65
  7843  09FD  1283               	bcf	3,5	;RP0=0, select bank0
  7844  09FE  1303               	bcf	3,6	;RP1=0, select bank0
  7845  09FF  00A2               	movwf	??_LCD_Begin+1
  7846  0A00  30ED               	movlw	237
  7847  0A01  00A1               	movwf	??_LCD_Begin
  7848  0A02                     u5087:
  7849  0A02  0BA1               	decfsz	??_LCD_Begin,f
  7850  0A03  2A02               	goto	u5087
  7851  0A04  0BA2               	decfsz	??_LCD_Begin+1,f
  7852  0A05  2A02               	goto	u5087
  7853  0A06  2A07               	nop2
  7854  0A07                     l3642:
  7855                           
  7856                           ;./LCD_Lib.c: 136:   LCD_Cmd(0x01);
  7857  0A07  3001               	movlw	1
  7858  0A08  120A  118A  27CF  120A  158A  	fcall	_LCD_Cmd
  7859  0A0D                     l3644:
  7860                           
  7861                           ;./LCD_Lib.c: 137:   _delay((unsigned long)((50)*(4000000/4000.0)));
  7862  0A0D  3041               	movlw	65
  7863  0A0E  1283               	bcf	3,5	;RP0=0, select bank0
  7864  0A0F  1303               	bcf	3,6	;RP1=0, select bank0
  7865  0A10  00A2               	movwf	??_LCD_Begin+1
  7866  0A11  30ED               	movlw	237
  7867  0A12  00A1               	movwf	??_LCD_Begin
  7868  0A13                     u5097:
  7869  0A13  0BA1               	decfsz	??_LCD_Begin,f
  7870  0A14  2A13               	goto	u5097
  7871  0A15  0BA2               	decfsz	??_LCD_Begin+1,f
  7872  0A16  2A13               	goto	u5097
  7873  0A17  2A18               	nop2
  7874                           
  7875                           ;./LCD_Lib.c: 138:   LCD_Cmd(0x04 | 0x02);
  7876  0A18  3006               	movlw	6
  7877  0A19  120A  118A  27CF  120A  158A  	fcall	_LCD_Cmd
  7878  0A1E                     l3646:
  7879                           
  7880                           ;./LCD_Lib.c: 139:   _delay((unsigned long)((50)*(4000000/4000.0)));
  7881  0A1E  3041               	movlw	65
  7882  0A1F  1283               	bcf	3,5	;RP0=0, select bank0
  7883  0A20  1303               	bcf	3,6	;RP1=0, select bank0
  7884  0A21  00A2               	movwf	??_LCD_Begin+1
  7885  0A22  30ED               	movlw	237
  7886  0A23  00A1               	movwf	??_LCD_Begin
  7887  0A24                     u5107:
  7888  0A24  0BA1               	decfsz	??_LCD_Begin,f
  7889  0A25  2A24               	goto	u5107
  7890  0A26  0BA2               	decfsz	??_LCD_Begin+1,f
  7891  0A27  2A24               	goto	u5107
  7892  0A28  2A29               	nop2
  7893  0A29                     l84:
  7894  0A29  0008               	return
  7895  0A2A                     __end_of_LCD_Begin:
  7896                           
  7897                           	psect	text26
  7898  07CF                     __ptext26:	
  7899 ;; *************** function _LCD_Cmd *****************
  7900 ;; Defined at:
  7901 ;;		line 60 in file "./LCD_Lib.c"
  7902 ;; Parameters:    Size  Location     Type
  7903 ;;  Command         1    wreg     unsigned char 
  7904 ;; Auto vars:     Size  Location     Type
  7905 ;;  Command         1    0[BANK0 ] unsigned char 
  7906 ;; Return value:  Size  Location     Type
  7907 ;;                  1    wreg      void 
  7908 ;; Registers used:
  7909 ;;		wreg, status,2, status,0, pclath, cstack
  7910 ;; Tracked objects:
  7911 ;;		On entry : 0/0
  7912 ;;		On exit  : 0/0
  7913 ;;		Unchanged: 0/0
  7914 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7915 ;;      Params:         0       0       0       0       0
  7916 ;;      Locals:         0       1       0       0       0
  7917 ;;      Temps:          2       0       0       0       0
  7918 ;;      Totals:         2       1       0       0       0
  7919 ;;Total ram usage:        3 bytes
  7920 ;; Hardware stack levels used: 1
  7921 ;; Hardware stack levels required when called: 2
  7922 ;; This function calls:
  7923 ;;		_LCD_Write_Nibble
  7924 ;; This function is called by:
  7925 ;;		_LCD_Goto
  7926 ;;		_LCD_Begin
  7927 ;;		_ajustes
  7928 ;; This function uses a non-reentrant model
  7929 ;;
  7930                           
  7931                           
  7932                           ;psect for function _LCD_Cmd
  7933  07CF                     _LCD_Cmd:
  7934                           
  7935                           ;incstack = 0
  7936                           ; Regs used in _LCD_Cmd: [wreg+status,2+status,0+pclath+cstack]
  7937                           ;LCD_Cmd@Command stored from wreg
  7938  07CF  1283               	bcf	3,5	;RP0=0, select bank0
  7939  07D0  1303               	bcf	3,6	;RP1=0, select bank0
  7940  07D1  00A0               	movwf	LCD_Cmd@Command
  7941  07D2                     l3300:
  7942                           
  7943                           ;./LCD_Lib.c: 60: void LCD_Cmd(uint8_t Command);./LCD_Lib.c: 61: {;./LCD_Lib.c: 62:   RS
      +                           = 0;
  7944  07D2  107A               	bcf	_RS/(0+8),_RS& (0+7)
  7945  07D3                     l3302:
  7946                           
  7947                           ;./LCD_Lib.c: 63:   LCD_Write_Nibble(Command >> 4);
  7948  07D3  0820               	movf	LCD_Cmd@Command,w
  7949  07D4  00F6               	movwf	??_LCD_Cmd
  7950  07D5  3004               	movlw	4
  7951  07D6                     u4055:
  7952  07D6  1003               	clrc
  7953  07D7  0CF6               	rrf	??_LCD_Cmd,f
  7954  07D8  3EFF               	addlw	-1
  7955  07D9  1D03               	skipz
  7956  07DA  2FD6               	goto	u4055
  7957  07DB  0876               	movf	??_LCD_Cmd,w
  7958  07DC  160A  118A  26A1  120A  118A  	fcall	_LCD_Write_Nibble
  7959                           
  7960                           ;./LCD_Lib.c: 64:   LCD_Write_Nibble(Command);
  7961  07E1  1283               	bcf	3,5	;RP0=0, select bank0
  7962  07E2  1303               	bcf	3,6	;RP1=0, select bank0
  7963  07E3  0820               	movf	LCD_Cmd@Command,w
  7964  07E4  160A  118A  26A1  120A  118A  	fcall	_LCD_Write_Nibble
  7965  07E9                     l3304:
  7966                           
  7967                           ;./LCD_Lib.c: 65:   if((Command == 0x01) || (Command == 0x02))
  7968  07E9  1283               	bcf	3,5	;RP0=0, select bank0
  7969  07EA  1303               	bcf	3,6	;RP1=0, select bank0
  7970  07EB  0320               	decf	LCD_Cmd@Command,w
  7971  07EC  1903               	btfsc	3,2
  7972  07ED  2FEF               	goto	u4061
  7973  07EE  2FF0               	goto	u4060
  7974  07EF                     u4061:
  7975  07EF  2FF6               	goto	l3308
  7976  07F0                     u4060:
  7977  07F0                     l3306:
  7978  07F0  3002               	movlw	2
  7979  07F1  0620               	xorwf	LCD_Cmd@Command,w
  7980  07F2  1D03               	btfss	3,2
  7981  07F3  2FF5               	goto	u4071
  7982  07F4  2FF6               	goto	u4070
  7983  07F5                     u4071:
  7984  07F5  2FFF               	goto	l63
  7985  07F6                     u4070:
  7986  07F6                     l3308:
  7987                           
  7988                           ;./LCD_Lib.c: 66:     _delay((unsigned long)((2)*(4000000/4000.0)));
  7989  07F6  3003               	movlw	3
  7990  07F7  00F7               	movwf	??_LCD_Cmd+1
  7991  07F8  3097               	movlw	151
  7992  07F9  00F6               	movwf	??_LCD_Cmd
  7993  07FA                     u5117:
  7994  07FA  0BF6               	decfsz	??_LCD_Cmd,f
  7995  07FB  2FFA               	goto	u5117
  7996  07FC  0BF7               	decfsz	??_LCD_Cmd+1,f
  7997  07FD  2FFA               	goto	u5117
  7998  07FE  2FFF               	nop2
  7999  07FF                     l63:
  8000  07FF  0008               	return
  8001  0800                     __end_of_LCD_Cmd:
  8002                           
  8003                           	psect	text27
  8004  16A1                     __ptext27:	
  8005 ;; *************** function _LCD_Write_Nibble *****************
  8006 ;; Defined at:
  8007 ;;		line 43 in file "./LCD_Lib.c"
  8008 ;; Parameters:    Size  Location     Type
  8009 ;;  n               1    wreg     unsigned char 
  8010 ;; Auto vars:     Size  Location     Type
  8011 ;;  n               1    5[COMMON] unsigned char 
  8012 ;; Return value:  Size  Location     Type
  8013 ;;                  1    wreg      void 
  8014 ;; Registers used:
  8015 ;;		wreg, status,2, status,0
  8016 ;; Tracked objects:
  8017 ;;		On entry : 0/0
  8018 ;;		On exit  : 0/0
  8019 ;;		Unchanged: 0/0
  8020 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8021 ;;      Params:         0       0       0       0       0
  8022 ;;      Locals:         1       0       0       0       0
  8023 ;;      Temps:          2       0       0       0       0
  8024 ;;      Totals:         3       0       0       0       0
  8025 ;;Total ram usage:        3 bytes
  8026 ;; Hardware stack levels used: 1
  8027 ;; Hardware stack levels required when called: 1
  8028 ;; This function calls:
  8029 ;;		Nothing
  8030 ;; This function is called by:
  8031 ;;		_LCD_Cmd
  8032 ;;		_LCD_Print
  8033 ;;		_LCD_PutC
  8034 ;; This function uses a non-reentrant model
  8035 ;;
  8036                           
  8037                           
  8038                           ;psect for function _LCD_Write_Nibble
  8039  16A1                     _LCD_Write_Nibble:
  8040                           
  8041                           ;incstack = 0
  8042                           ; Regs used in _LCD_Write_Nibble: [wreg+status,2+status,0]
  8043                           ;LCD_Write_Nibble@n stored from wreg
  8044  16A1  00F5               	movwf	LCD_Write_Nibble@n
  8045  16A2                     l3284:
  8046                           
  8047                           ;./LCD_Lib.c: 43: void LCD_Write_Nibble(uint8_t n);./LCD_Lib.c: 44: {;./LCD_Lib.c: 45:  
      +                           PORTDbits.RD0 = RS;
  8048  16A2  187A               	btfsc	_RS/(0+8),_RS& (0+7)
  8049  16A3  2EA5               	goto	u4011
  8050  16A4  2EA9               	goto	u4010
  8051  16A5                     u4011:
  8052  16A5  1283               	bcf	3,5	;RP0=0, select bank0
  8053  16A6  1303               	bcf	3,6	;RP1=0, select bank0
  8054  16A7  1408               	bsf	8,0	;volatile
  8055  16A8  2EAC               	goto	u4024
  8056  16A9                     u4010:
  8057  16A9  1283               	bcf	3,5	;RP0=0, select bank0
  8058  16AA  1303               	bcf	3,6	;RP1=0, select bank0
  8059  16AB  1008               	bcf	8,0	;volatile
  8060  16AC                     u4024:
  8061  16AC                     l3286:
  8062                           
  8063                           ;./LCD_Lib.c: 46:   PORTDbits.RD2 = n & 0x01;
  8064  16AC  0875               	movf	LCD_Write_Nibble@n,w
  8065  16AD  3901               	andlw	1
  8066  16AE  00F3               	movwf	??_LCD_Write_Nibble
  8067  16AF  0DF3               	rlf	??_LCD_Write_Nibble,f
  8068  16B0  0DF3               	rlf	??_LCD_Write_Nibble,f
  8069  16B1  0808               	movf	8,w	;volatile
  8070  16B2  0673               	xorwf	??_LCD_Write_Nibble,w
  8071  16B3  39FB               	andlw	-5
  8072  16B4  0673               	xorwf	??_LCD_Write_Nibble,w
  8073  16B5  0088               	movwf	8	;volatile
  8074                           
  8075                           ;./LCD_Lib.c: 47:   PORTDbits.RD3 = (n >> 1) & 0x01;
  8076  16B6  0875               	movf	LCD_Write_Nibble@n,w
  8077  16B7  00F3               	movwf	??_LCD_Write_Nibble
  8078  16B8  1003               	clrc
  8079  16B9  0C73               	rrf	??_LCD_Write_Nibble,w
  8080  16BA  3901               	andlw	1
  8081  16BB  00F4               	movwf	??_LCD_Write_Nibble+1
  8082  16BC  0DF4               	rlf	??_LCD_Write_Nibble+1,f
  8083  16BD  0DF4               	rlf	??_LCD_Write_Nibble+1,f
  8084  16BE  0DF4               	rlf	??_LCD_Write_Nibble+1,f
  8085  16BF  0808               	movf	8,w	;volatile
  8086  16C0  0674               	xorwf	??_LCD_Write_Nibble+1,w
  8087  16C1  39F7               	andlw	-9
  8088  16C2  0674               	xorwf	??_LCD_Write_Nibble+1,w
  8089  16C3  0088               	movwf	8	;volatile
  8090                           
  8091                           ;./LCD_Lib.c: 48:   PORTDbits.RD4 = (n >> 2) & 0x01;
  8092  16C4  0875               	movf	LCD_Write_Nibble@n,w
  8093  16C5  00F3               	movwf	??_LCD_Write_Nibble
  8094  16C6  3002               	movlw	2
  8095  16C7                     u4035:
  8096  16C7  1003               	clrc
  8097  16C8  0CF3               	rrf	??_LCD_Write_Nibble,f
  8098  16C9  3EFF               	addlw	-1
  8099  16CA  1D03               	skipz
  8100  16CB  2EC7               	goto	u4035
  8101  16CC  0873               	movf	??_LCD_Write_Nibble,w
  8102  16CD  3901               	andlw	1
  8103  16CE  00F4               	movwf	??_LCD_Write_Nibble+1
  8104  16CF  0EF4               	swapf	??_LCD_Write_Nibble+1,f
  8105  16D0  0808               	movf	8,w	;volatile
  8106  16D1  0674               	xorwf	??_LCD_Write_Nibble+1,w
  8107  16D2  39EF               	andlw	-17
  8108  16D3  0674               	xorwf	??_LCD_Write_Nibble+1,w
  8109  16D4  0088               	movwf	8	;volatile
  8110                           
  8111                           ;./LCD_Lib.c: 49:   PORTDbits.RD5 = (n >> 3) & 0x01;
  8112  16D5  0875               	movf	LCD_Write_Nibble@n,w
  8113  16D6  00F3               	movwf	??_LCD_Write_Nibble
  8114  16D7  3003               	movlw	3
  8115  16D8                     u4045:
  8116  16D8  1003               	clrc
  8117  16D9  0CF3               	rrf	??_LCD_Write_Nibble,f
  8118  16DA  3EFF               	addlw	-1
  8119  16DB  1D03               	skipz
  8120  16DC  2ED8               	goto	u4045
  8121  16DD  0873               	movf	??_LCD_Write_Nibble,w
  8122  16DE  3901               	andlw	1
  8123  16DF  00F4               	movwf	??_LCD_Write_Nibble+1
  8124  16E0  0EF4               	swapf	??_LCD_Write_Nibble+1,f
  8125  16E1  0DF4               	rlf	??_LCD_Write_Nibble+1,f
  8126  16E2  0808               	movf	8,w	;volatile
  8127  16E3  0674               	xorwf	??_LCD_Write_Nibble+1,w
  8128  16E4  39DF               	andlw	-33
  8129  16E5  0674               	xorwf	??_LCD_Write_Nibble+1,w
  8130  16E6  0088               	movwf	8	;volatile
  8131  16E7                     l3288:
  8132                           
  8133                           ;./LCD_Lib.c: 52:   PORTDbits.RD1 = 0;
  8134  16E7  1088               	bcf	8,1	;volatile
  8135  16E8                     l3290:
  8136                           
  8137                           ;./LCD_Lib.c: 53:   _delay((unsigned long)((1)*(4000000/4000000.0)));
  8138  16E8  0000               	nop
  8139  16E9                     l3292:
  8140                           
  8141                           ;./LCD_Lib.c: 54:   PORTDbits.RD1 = 1;
  8142  16E9  1283               	bcf	3,5	;RP0=0, select bank0
  8143  16EA  1303               	bcf	3,6	;RP1=0, select bank0
  8144  16EB  1488               	bsf	8,1	;volatile
  8145  16EC                     l3294:
  8146                           
  8147                           ;./LCD_Lib.c: 55:   _delay((unsigned long)((1)*(4000000/4000000.0)));
  8148  16EC  0000               	nop
  8149  16ED                     l3296:
  8150                           
  8151                           ;./LCD_Lib.c: 56:   PORTDbits.RD1 = 0;
  8152  16ED  1283               	bcf	3,5	;RP0=0, select bank0
  8153  16EE  1303               	bcf	3,6	;RP1=0, select bank0
  8154  16EF  1088               	bcf	8,1	;volatile
  8155  16F0                     l3298:
  8156                           
  8157                           ;./LCD_Lib.c: 57:   _delay((unsigned long)((100)*(4000000/4000000.0)));
  8158  16F0  3021               	movlw	33
  8159  16F1  00F3               	movwf	??_LCD_Write_Nibble
  8160  16F2                     u5127:
  8161  16F2  0BF3               	decfsz	??_LCD_Write_Nibble,f
  8162  16F3  2EF2               	goto	u5127
  8163  16F4                     l57:
  8164  16F4  0008               	return
  8165  16F5                     __end_of_LCD_Write_Nibble:
  8166                           
  8167                           	psect	text28
  8168  0899                     __ptext28:	
  8169 ;; *************** function _my_isr_routine *****************
  8170 ;; Defined at:
  8171 ;;		line 356 in file "main.c"
  8172 ;; Parameters:    Size  Location     Type
  8173 ;;		None
  8174 ;; Auto vars:     Size  Location     Type
  8175 ;;		None
  8176 ;; Return value:  Size  Location     Type
  8177 ;;                  1    wreg      void 
  8178 ;; Registers used:
  8179 ;;		wreg, status,2, btemp+1
  8180 ;; Tracked objects:
  8181 ;;		On entry : 0/0
  8182 ;;		On exit  : 0/0
  8183 ;;		Unchanged: 0/0
  8184 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8185 ;;      Params:         0       0       0       0       0
  8186 ;;      Locals:         0       0       0       0       0
  8187 ;;      Temps:          3       0       0       0       0
  8188 ;;      Totals:         3       0       0       0       0
  8189 ;;Total ram usage:        3 bytes
  8190 ;; Hardware stack levels used: 1
  8191 ;; This function calls:
  8192 ;;		Nothing
  8193 ;; This function is called by:
  8194 ;;		Interrupt level 1
  8195 ;; This function uses a non-reentrant model
  8196 ;;
  8197                           
  8198                           
  8199                           ;psect for function _my_isr_routine
  8200  0899                     _my_isr_routine:
  8201  0899                     i1l3140:
  8202                           
  8203                           ;main.c: 358:     if (INTCONbits.T0IF)
  8204  0899  1D0B               	btfss	11,2	;volatile
  8205  089A  289C               	goto	u391_21
  8206  089B  289D               	goto	u391_20
  8207  089C                     u391_21:
  8208  089C  28FF               	goto	i1l197
  8209  089D                     u391_20:
  8210  089D                     i1l3142:
  8211                           
  8212                           ;main.c: 359:     {;main.c: 361:         TMR0=256-125;
  8213  089D  3083               	movlw	131
  8214  089E  0081               	movwf	1	;volatile
  8215                           
  8216                           ;main.c: 362:         TMR0_aux++;
  8217  089F  3001               	movlw	1
  8218  08A0  1683               	bsf	3,5	;RP0=1, select bank1
  8219  08A1  1303               	bcf	3,6	;RP1=0, select bank1
  8220  08A2  07CC               	addwf	_TMR0_aux^(0+128),f
  8221  08A3  1803               	skipnc
  8222  08A4  0ACD               	incf	(_TMR0_aux+1)^(0+128),f
  8223  08A5  3000               	movlw	0
  8224  08A6  07CD               	addwf	(_TMR0_aux+1)^(0+128),f
  8225  08A7                     i1l3144:
  8226                           
  8227                           ;main.c: 365:         if(TMR0_aux>125)
  8228  08A7  084D               	movf	(_TMR0_aux+1)^(0+128),w
  8229  08A8  3A80               	xorlw	128
  8230  08A9  00FF               	movwf	btemp+1
  8231  08AA  3080               	movlw	128
  8232  08AB  027F               	subwf	btemp+1,w
  8233  08AC  1D03               	skipz
  8234  08AD  28B0               	goto	u392_25
  8235  08AE  307E               	movlw	126
  8236  08AF  024C               	subwf	_TMR0_aux^(0+128),w
  8237  08B0                     u392_25:
  8238  08B0  1C03               	skipc
  8239  08B1  28B3               	goto	u392_21
  8240  08B2  28B4               	goto	u392_20
  8241  08B3                     u392_21:
  8242  08B3  28FE               	goto	i1l3166
  8243  08B4                     u392_20:
  8244  08B4                     i1l3146:
  8245                           
  8246                           ;main.c: 366:         {;main.c: 367:             TMR0_aux=0;
  8247  08B4  1683               	bsf	3,5	;RP0=1, select bank1
  8248  08B5  1303               	bcf	3,6	;RP1=0, select bank1
  8249  08B6  01CC               	clrf	_TMR0_aux^(0+128)
  8250  08B7  01CD               	clrf	(_TMR0_aux+1)^(0+128)
  8251  08B8                     i1l3148:
  8252                           
  8253                           ;main.c: 368:             Segundos++;
  8254  08B8  3001               	movlw	1
  8255  08B9  07CA               	addwf	_Segundos^(0+128),f
  8256  08BA  1803               	skipnc
  8257  08BB  0ACB               	incf	(_Segundos+1)^(0+128),f
  8258  08BC  3000               	movlw	0
  8259  08BD  07CB               	addwf	(_Segundos+1)^(0+128),f
  8260  08BE                     i1l3150:
  8261                           
  8262                           ;main.c: 370:             if(Segundos>59)
  8263  08BE  084B               	movf	(_Segundos+1)^(0+128),w
  8264  08BF  3A80               	xorlw	128
  8265  08C0  00FF               	movwf	btemp+1
  8266  08C1  3080               	movlw	128
  8267  08C2  027F               	subwf	btemp+1,w
  8268  08C3  1D03               	skipz
  8269  08C4  28C7               	goto	u393_25
  8270  08C5  303C               	movlw	60
  8271  08C6  024A               	subwf	_Segundos^(0+128),w
  8272  08C7                     u393_25:
  8273  08C7  1C03               	skipc
  8274  08C8  28CA               	goto	u393_21
  8275  08C9  28CB               	goto	u393_20
  8276  08CA                     u393_21:
  8277  08CA  28FE               	goto	i1l3166
  8278  08CB                     u393_20:
  8279  08CB                     i1l3152:
  8280                           
  8281                           ;main.c: 371:             {;main.c: 372:                 Segundos=0;
  8282  08CB  1683               	bsf	3,5	;RP0=1, select bank1
  8283  08CC  1303               	bcf	3,6	;RP1=0, select bank1
  8284  08CD  01CA               	clrf	_Segundos^(0+128)
  8285  08CE  01CB               	clrf	(_Segundos+1)^(0+128)
  8286  08CF                     i1l3154:
  8287                           
  8288                           ;main.c: 373:                 Minutos++;
  8289  08CF  3001               	movlw	1
  8290  08D0  07F8               	addwf	_Minutos,f
  8291  08D1  1803               	skipnc
  8292  08D2  0AF9               	incf	_Minutos+1,f
  8293  08D3  3000               	movlw	0
  8294  08D4  07F9               	addwf	_Minutos+1,f
  8295  08D5                     i1l3156:
  8296                           
  8297                           ;main.c: 375:                 if(Minutos>59)
  8298  08D5  0879               	movf	_Minutos+1,w
  8299  08D6  3A80               	xorlw	128
  8300  08D7  00FF               	movwf	btemp+1
  8301  08D8  3080               	movlw	128
  8302  08D9  027F               	subwf	btemp+1,w
  8303  08DA  1D03               	skipz
  8304  08DB  28DE               	goto	u394_25
  8305  08DC  303C               	movlw	60
  8306  08DD  0278               	subwf	_Minutos,w
  8307  08DE                     u394_25:
  8308  08DE  1C03               	skipc
  8309  08DF  28E1               	goto	u394_21
  8310  08E0  28E2               	goto	u394_20
  8311  08E1                     u394_21:
  8312  08E1  28FE               	goto	i1l3166
  8313  08E2                     u394_20:
  8314  08E2                     i1l3158:
  8315                           
  8316                           ;main.c: 376:                 {;main.c: 377:                     Minutos=0;
  8317  08E2  01F8               	clrf	_Minutos
  8318  08E3  01F9               	clrf	_Minutos+1
  8319  08E4                     i1l3160:
  8320                           
  8321                           ;main.c: 378:                     Horas++;
  8322  08E4  3001               	movlw	1
  8323  08E5  1283               	bcf	3,5	;RP0=0, select bank0
  8324  08E6  1303               	bcf	3,6	;RP1=0, select bank0
  8325  08E7  07ED               	addwf	_Horas,f
  8326  08E8  1803               	skipnc
  8327  08E9  0AEE               	incf	_Horas+1,f
  8328  08EA  3000               	movlw	0
  8329  08EB  07EE               	addwf	_Horas+1,f
  8330  08EC                     i1l3162:
  8331                           
  8332                           ;main.c: 379:                     if(Horas>23)
  8333  08EC  086E               	movf	_Horas+1,w
  8334  08ED  3A80               	xorlw	128
  8335  08EE  00FF               	movwf	btemp+1
  8336  08EF  3080               	movlw	128
  8337  08F0  027F               	subwf	btemp+1,w
  8338  08F1  1D03               	skipz
  8339  08F2  28F5               	goto	u395_25
  8340  08F3  3018               	movlw	24
  8341  08F4  026D               	subwf	_Horas,w
  8342  08F5                     u395_25:
  8343  08F5  1C03               	skipc
  8344  08F6  28F8               	goto	u395_21
  8345  08F7  28F9               	goto	u395_20
  8346  08F8                     u395_21:
  8347  08F8  28FE               	goto	i1l194
  8348  08F9                     u395_20:
  8349  08F9                     i1l3164:
  8350                           
  8351                           ;main.c: 380:                         Horas=0;
  8352  08F9  1283               	bcf	3,5	;RP0=0, select bank0
  8353  08FA  1303               	bcf	3,6	;RP1=0, select bank0
  8354  08FB  01ED               	clrf	_Horas
  8355  08FC  01EE               	clrf	_Horas+1
  8356  08FD  28FE               	goto	i1l3166
  8357  08FE                     i1l194:	
  8358                           ;main.c: 383:             }
  8359                           
  8360  08FE                     i1l3166:
  8361                           
  8362                           ;main.c: 386:     INTCONbits.T0IF=0;
  8363  08FE  110B               	bcf	11,2	;volatile
  8364  08FF                     i1l197:
  8365  08FF  0872               	movf	??_my_isr_routine+2,w
  8366  0900  1283               	bcf	3,5	;RP0=0, select bank0
  8367  0901  1303               	bcf	3,6	;RP1=0, select bank0
  8368  0902  00FF               	movwf	btemp+1
  8369  0903  0871               	movf	??_my_isr_routine+1,w
  8370  0904  008A               	movwf	10
  8371  0905  0E70               	swapf	??_my_isr_routine,w
  8372  0906  0083               	movwf	3
  8373  0907  0EFE               	swapf	btemp,f
  8374  0908  0E7E               	swapf	btemp,w
  8375  0909  0009               	retfie
  8376  090A                     __end_of_my_isr_routine:
  8377  007E                     btemp	set	126	;btemp
  8378  007E                     wtemp0	set	126
  8379                           
  8380                           	psect	intentry
  8381  0004                     __pintentry:	
  8382                           ;incstack = 0
  8383                           ; Regs used in _my_isr_routine: [wreg+status,2+btemp+1]
  8384                           
  8385  0004                     interrupt_function:
  8386  007E                     saved_w	set	btemp
  8387  0004  00FE               	movwf	btemp
  8388  0005  0E03               	swapf	3,w
  8389  0006  00F0               	movwf	??_my_isr_routine
  8390  0007  080A               	movf	10,w
  8391  0008  00F1               	movwf	??_my_isr_routine+1
  8392  0009  1283               	bcf	3,5	;RP0=0, select bank0
  8393  000A  1303               	bcf	3,6	;RP1=0, select bank0
  8394  000B  087F               	movf	btemp+1,w
  8395  000C  00F2               	movwf	??_my_isr_routine+2
  8396  000D  120A  158A  2899   	ljmp	_my_isr_routine
  8397                           
  8398                           	psect	config
  8399                           
  8400                           ;Config register CONFIG @ 0x2007
  8401                           ;	Oscillator Selection bits
  8402                           ;	FOSC = XT, XT oscillator
  8403                           ;	Watchdog Timer Enable bit
  8404                           ;	WDTE = OFF, WDT disabled
  8405                           ;	Power-up Timer Enable bit
  8406                           ;	PWRTE = ON, PWRT enabled
  8407                           ;	FLASH Program Memory Code Protection bits
  8408                           ;	CP = OFF, Code protection off
  8409                           ;	Brown-out Reset Enable bit
  8410                           ;	BOREN = ON, BOR enabled
  8411                           ;	Low Voltage In-Circuit Serial Programming Enable bit
  8412                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
  8413                           ;	Data EE Memory Code Protection
  8414                           ;	CPD = OFF, Code Protection off
  8415                           ;	FLASH Program Memory Write Enable
  8416                           ;	WRT = ON, Unprotected program memory may be written to by EECON control
  8417                           ;	In-Circuit Debugger Mode bit
  8418                           ;	DEBUG = 0x1, unprogrammed default
  8419  2007                     	org	8199
  8420  2007  3FF1               	dw	16369

Data Sizes:
    Strings     113
    Constant    10
    Data        0
    BSS         28
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80     77      79
    BANK1            80     38      62
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    frexp@eptr	PTR int  size(1) Largest target is 2
		 -> trunc@expon(BANK0[2]), 

    sprintf@f	PTR const unsigned char  size(1) Largest target is 23
		 -> STR_9(CODE[20]), STR_8(CODE[11]), STR_7(CODE[20]), STR_6(CODE[12]), 
		 -> STR_5(CODE[20]), STR_4(CODE[15]), STR_3(CODE[20]), STR_2(CODE[12]), 
		 -> STR_1(CODE[23]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 16
		 -> LCD_Cstring(BANK1[16]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    ajustes@min_max	PTR int  size(1) Largest target is 2
		 -> main@min_max(BANK1[2]), 

    ajustes@hora_max	PTR int  size(1) Largest target is 2
		 -> main@hora_max(BANK1[2]), 

    ajustes@min_min	PTR int  size(1) Largest target is 2
		 -> main@min_min(BANK1[2]), 

    ajustes@hora_min	PTR int  size(1) Largest target is 2
		 -> main@hora_min(BANK1[2]), 

    ajustes@temp	PTR int  size(1) Largest target is 2
		 -> main@temp(BANK1[2]), 

    LCD_Print@LCD_Str	PTR unsigned char  size(1) Largest target is 16
		 -> LCD_Cstring(BANK1[16]), 


Critical Paths under _main in COMMON

    _round->_trunc
    _trunc->___xxtofl
    _frexp->___fleq
    ___fltol->___xxtofl
    ___flsub->_trunc
    ___fladd->___xxtofl
    _imprime_tela_main->_LCD_Print
    _ajustes->_LCD_Cmd
    _imprime_tela_ajuste4->_LCD_Print
    _imprime_tela_ajuste3->_LCD_Print
    _imprime_tela_ajuste2->_LCD_Print
    _imprime_tela_ajuste1->_LCD_Print
    _sprintf->___lwdiv
    ___lwmod->___lwdiv
    _LCD_Print->_LCD_Write_Nibble
    _LCD_Goto->_LCD_Cmd
    ___fldiv->___xxtofl
    _LCD_Begin->_LCD_Cmd
    _LCD_Cmd->_LCD_Write_Nibble

Critical Paths under _my_isr_routine in COMMON

    None.

Critical Paths under _main in BANK0

    _round->_trunc
    _trunc->___fltol
    _frexp->___fleq
    ___fltol->___fladd
    ___flsub->_trunc
    ___fladd->___fldiv
    _imprime_tela_main->_sprintf
    _ajustes->_imprime_tela_ajuste3
    _ajustes->_imprime_tela_ajuste4
    _imprime_tela_ajuste4->_sprintf
    _imprime_tela_ajuste3->_sprintf
    _imprime_tela_ajuste2->_sprintf
    _imprime_tela_ajuste1->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _LCD_Goto->_LCD_Cmd
    ___fldiv->___xxtofl
    _LCD_Begin->_LCD_Cmd

Critical Paths under _my_isr_routine in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_round
    _round->___flsub

Critical Paths under _my_isr_routine in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _my_isr_routine in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _my_isr_routine in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                22    22      0   44304
                                             16 BANK1     22    22      0
                          _LCD_Begin
                            ___fladd
                            ___fldiv
                            ___fltol
                           ___xxtofl
                            _ajustes
                       _atualiza_ADC
                 _controle_aquecedor
                  _imprime_tela_main
                              _round
 ---------------------------------------------------------------------------------
 (1) _round                                                8     4      4    7717
                                              8 BANK1      8     4      4
                            ___fladd
                            ___fldiv (ARG)
                            ___flsub
                              _trunc
 ---------------------------------------------------------------------------------
 (2) _trunc                                               11     7      4    2389
                                              7 COMMON     1     1      0
                                             67 BANK0     10     6      4
                            ___fltol
                           ___xxtofl
                              _frexp
 ---------------------------------------------------------------------------------
 (3) _frexp                                                7     2      5     928
                                              8 BANK0      7     2      5
                             ___fleq
 ---------------------------------------------------------------------------------
 (4) ___fleq                                              12     4      8     450
                                              3 COMMON     4     4      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     656
                                              3 COMMON     4     0      4
                                              0 BANK0     10    10      0
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             11     7      4     381
                                             56 BANK0     11     7      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2637
                                              0 BANK1      8     0      8
                            ___fladd
                              _trunc (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    2440
                                             36 BANK0     20    12      8
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _imprime_tela_main                                    1     1      0    5427
                                             28 BANK0      1     1      0
                           _LCD_Goto
                          _LCD_Print
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _controle_aquecedor                                  11     1     10     754
                                              3 COMMON     1     1      0
                                              0 BANK0     10     0     10
 ---------------------------------------------------------------------------------
 (1) _atualiza_ADC                                         1     1      0       0
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ajustes                                              9     5      4   24821
                                             33 BANK0      9     5      4
                            _LCD_Cmd
               _imprime_tela_ajuste1
               _imprime_tela_ajuste2
               _imprime_tela_ajuste3
               _imprime_tela_ajuste4
 ---------------------------------------------------------------------------------
 (2) _imprime_tela_ajuste4                                 5     1      4    6029
                                             28 BANK0      5     1      4
                           _LCD_Goto
                          _LCD_Print
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _imprime_tela_ajuste3                                 5     1      4    6029
                                             28 BANK0      5     1      4
                           _LCD_Goto
                          _LCD_Print
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _imprime_tela_ajuste2                                 1     1      0    5427
                                             28 BANK0      1     1      0
                           _LCD_Goto
                          _LCD_Print
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _imprime_tela_ajuste1                                 3     1      2    5638
                                             28 BANK0      3     1      2
                           _LCD_Goto
                          _LCD_Print
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             27    20      7    3574
                                              9 BANK0     19    12      7
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              2     2      0      68
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     316
                                              3 COMMON     4     0      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     311
                                              3 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     421
                                              3 COMMON     5     1      4
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _LCD_Print                                            4     4      0     640
                                              6 COMMON     2     2      0
                                              0 BANK0      2     2      0
                   _LCD_Write_Nibble
 ---------------------------------------------------------------------------------
 (2) _LCD_Goto                                             4     3      1    1213
                                              1 BANK0      4     3      1
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (1) ___fldiv                                             26    18      8    1273
                                             10 BANK0     26    18      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _LCD_Begin                                            2     2      0     248
                                              1 BANK0      2     2      0
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (3) _LCD_Cmd                                              3     3      0     248
                                              6 COMMON     2     2      0
                                              0 BANK0      1     1      0
                   _LCD_Write_Nibble
 ---------------------------------------------------------------------------------
 (3) _LCD_Write_Nibble                                     3     3      0     124
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _my_isr_routine                                       3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Begin
     _LCD_Cmd
       _LCD_Write_Nibble
   ___fladd
     ___fldiv (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___fldiv
   ___fltol
     ___fladd (ARG)
     ___fldiv (ARG)
     ___xxtofl (ARG)
   ___xxtofl
   _ajustes
     _LCD_Cmd
     _imprime_tela_ajuste1
       _LCD_Goto
         _LCD_Cmd
       _LCD_Print
         _LCD_Write_Nibble
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
         _isdigit
     _imprime_tela_ajuste2
       _LCD_Goto
       _LCD_Print
       _sprintf
     _imprime_tela_ajuste3
       _LCD_Goto
       _LCD_Print
       _sprintf
     _imprime_tela_ajuste4
       _LCD_Goto
       _LCD_Print
       _sprintf
   _atualiza_ADC
   _controle_aquecedor
   _imprime_tela_main
     _LCD_Goto
     _LCD_Print
     _sprintf
   _round
     ___fladd
     ___fldiv (ARG)
     ___flsub (ARG)
       ___fladd
       _trunc (ARG)
         ___fltol
         ___xxtofl
         _frexp
           ___fleq
     _trunc (ARG)

 _my_isr_routine (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       1       0        7.1%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      98       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4D      4F       5       98.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     26      3E       7       77.5%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      98      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sat Jul 24 02:01:42 2021

                   ___fldiv@aexp 0043                     ___fldiv@bexp 0042                                pc 0002  
                   ___fldiv@sign 003B                               l63 07FF                               l72 147C  
                             l57 16F4                               l81 14B5                               l84 0A29  
                             _RS 03D0                               fsr 0004              ___wmul@multiplicand 0075  
                    ajustes@temp 0049                              l102 13F8                              l111 1534  
                            l105 17A3                              l114 1577                              l108 1419  
                            l204 0E27                              l117 15BA                              l161 0CA4  
                            l155 0369                              l308 0E4A                              l326 0F24  
                            l343 0FFF                              l347 142A                              l540 0970  
                            l516 166F                              l349 1444                              l533 0985  
                            l517 168B                              l518 16A0                              l543 0985  
                            l720 07C2                              l712 0740                              l800 0898  
                            l640 03CD                              l619 1600                              l811 17FF  
                            l644 0474                              l629 14F1                              l661 053F  
                            l653 05F1                              l805 0BB0                              l718 07B2  
                            l646 044B                              l671 0585                              l665 0563  
                            l682 05E5                              l674 05C3                              l818 1748  
                            l683 05F1                              l780 0A4E                              l686 1650  
                            l782 0AE5                              l696 064E                              l793 0AAF  
                            l698 07CE                              l794 0ABB                              l786 0A93  
                            fsr0 0004                              indf 0000                  __end_of_LCD_Cmd 0800  
                   ___fltol@exp1 0062                             l3000 0603                             l2200 14ED  
                           l2120 0889                             l3010 0617                             l3002 0604  
                           l2122 088F                             l3100 073D                             l3020 0630  
                           l3004 0609                             l3012 0619                             l2124 0895  
                           l3110 075C                             l3030 0644                             l3022 0631  
                           l3014 0621                             l3006 060E                             l2126 0897  
                           l2118 0888                             l3120 07A5                             l3112 0775  
                           l3104 0745                             l3024 0636                             l3032 0646  
                           l3016 0626                             l3008 0616                             l2400 038F  
                           l3130 07BE                             l3122 07A9                             l3106 074A  
                           l3114 077B                             l3050 068F                             l3034 0656  
                           l3042 066F                             l3026 063B                             l3018 062C  
                           l2410 03A5                             l2402 0391                             l3300 07D2  
                           l3124 07B1                             l3116 0788                             l3108 0758  
                           l3060 06AE                             l3052 0697                             l3044 0674  
                           l3036 0662                             l3028 0643                             l2500 04B4  
                           l2420 03BA                             l2412 03AB                             l2404 0399  
                           l3302 07D3                             l3126 07B8                             l3118 0796  
                           l3070 06E0                             l3062 06C0                             l3054 069F  
                           l3038 0666                             l2190 14CC                             l2182 14B6  
                           l3310 141A                             l2510 0517                             l2502 04B5  
                           l2430 03D7                             l2422 03C2                             l2414 03AF  
                           l2406 039E                             l2350 0917                             l3304 07E9  
                           l3128 07BC                             l3080 0701                             l3072 06E1  
                           l3064 06C4                             l3056 06A7                             l3048 067D  
                           l2192 14D0                             l2184 14BE                             l3320 143E  
                           l3312 141E                             l3400 0E4B                             l2520 054C  
                           l2512 051D                             l2504 04BE                             l2440 03EB  
                           l2432 03DB                             l2424 03C3                             l2416 03B0  
                           l2408 03A4                             l2360 093E                             l3306 07F0  
                           l3090 071A                             l3082 0703                             l3074 06EF  
                           l3066 06C5                             l3058 06A9                             l2194 14DA  
                           l2186 14C1                             l3314 1422                             l3410 0E76  
                           l2530 0567                             l2514 0522                             l2506 04C3  
                           l2450 03FF                             l2442 03EF                             l2434 03DF  
                           l2418 03B5                             l2426 03C5                             l2370 094C  
                           l2362 0940                             l2354 0920                             l3330 169D  
                           l3308 07F6                             l3084 070C                             l3092 0720  
                           l3068 06CE                             l3076 06F3                             l3340 15C5  
                           l2196 14E0                             l2188 14C8                             l3316 1431  
                           l3412 0E8B                             l3420 0EB2                             l3404 0E4F  
                           l2532 056A                             l2524 0555                             l2508 04D9  
                           l2516 0531                             l2540 0577                             l2460 0413  
                           l2452 0403                             l2444 03F3                             l2436 03E3  
                           l2428 03D3                             l2380 0975                             l2364 0944  
                           l2372 095E                             l2356 0935                             l2348 090A  
                           l3332 169F                             l3324 1651                             l3094 0724  
                           l3086 0710                             l3078 06F9                             l3350 15E8  
                           l3342 15C8                             l2198 14E7                             l3318 1438  
                           l3430 0EE5                             l3422 0ED1                             l3414 0E9E  
                           l3406 0E62                             l2550 058A                             l2542 0578  
                           l2534 056C                             l2526 055E                             l2518 0547  
                           l2470 0458                             l2454 0407                             l2446 03F7  
                           l2438 03E7                             l2462 0417                             l2390 037B  
                           l2382 097A                             l2358 0936                             l3510 0A32  
                           l3326 1667                             l3096 0725                             l3088 0711  
                           l3352 15EE                             l3344 15CF                             l3336 15BB  
                           l3432 0EEA                             l3424 0ED9                             l3416 0EA2  
                           l3408 0E72                             l3600 1594                             l2560 05C8  
                           l2552 058F                             l2544 057C                             l2536 0571  
                           l2528 0562                             l2472 045A                             l2480 046C  
                           l2464 0418                             l2456 040B                             l2448 03FB  
                           l2392 037C                             l2384 036A                             l3520 0A5F  
                           l3512 0A36                             l3328 1683                             l3290 16E8  
                           l3098 0729                             l3370 1461                             l3362 1448  
                           l3354 15EF                             l3346 15D3                             l3338 15BF  
                           l3450 0F2F                             l3442 0F08                             l3426 0EDD  
                           l3602 15A0                             l2570 05DF                             l2562 05CD  
                           l2554 059D                             l2546 0582                             l2538 0573  
                           l2490 049D                             l2482 0478                             l2474 045E  
                           l2466 042F                             l2458 040F                             l2394 0381  
                           l2386 0371                             l2378 0965                             l3530 0A8A  
                           l3522 0A64                             l3514 0A46                             l3292 16E9  
                           l3284 16A2                             l3364 1449                             l3372 1469  
                           l3380 1480                             l3356 15F6                             l3348 15D7  
                           l3460 0F50                             l3452 0F3B                             l3444 0F12  
                           l3428 0EE1                             l3700 0111                             l2724 13EA  
                           l2572 05E1                             l2564 05D5                             l2556 05A1  
                           l2492 04A1                             l2484 047D                             l2476 045F  
                           l2468 044F                             l2396 0386                             l2388 0377  
                           l3540 0ABD                             l3532 0A9A                             l3524 0A71  
                           l3516 0A56                             l3508 0A2D                             l3612 17C6  
                           l3604 17A4                             l3294 16EC                             l3286 16AC  
                           l3630 09B8                             l3622 0986                             l3366 1451  
                           l3382 1481                             l3358 15FC                             l3462 0F54  
                           l3470 0F72                             l3454 0F3F                             l3446 0F18  
                           l3438 0EEC                             l3390 0E2F                             l3710 0140  
                           l3702 0120                             l2726 13EE                             l2574 05EC  
                           l2566 05DA                             l2558 05BF                             l2494 04A5  
                           l2478 0468                             l2398 038E                             l3542 0AD3  
                           l3534 0AA5                             l3526 0A78                             l3614 17CF  
                           l3606 17B7                             l3296 16ED                             l3288 16E7  
                           l3640 09F6                             l3632 09C3                             l3624 0997  
                           l3368 1459                             l3384 1483                             l3480 0F95  
                           l3472 0F78                             l3464 0F5A                             l3456 0F43  
                           l3448 0F1E                             l3392 0E34                             l3720 0174  
                           l3704 0125                             l3712 0142                             l2728 13F2  
                           l2904 0C08                             l2576 05F0                             l2568 05DB  
                           l2496 04AE                             l2488 0486                             l3544 0AD8  
                           l3536 0AA9                             l3528 0A7C                             l3560 1736  
                           l3552 16F5                             l3616 17D0                             l3608 17BD  
                           l3298 16F0                             l3642 0A07                             l3634 09D4  
                           l3626 09A1                             l3386 14A4                             l3490 0FDC  
                           l3482 0F9C                             l3474 0F7F                             l3466 0F61  
                           l3458 0F49                             l3394 0E3A                             l3570 1403  
                           l3730 01CB                             l3722 0183                             l3714 0148  
                           l3706 012B                             l2906 0C14                             l3650 1753  
                           l2498 04B0                             l2674 1601                             l3546 0ADC  
                           l3538 0AB3                             l3562 1743                             l3554 1710  
                           l3618 17F7                             l3810 0CB1                             l3644 0A0D  
                           l3636 09DA                             l3628 09A7                             l3388 14AA  
                           l3492 0FE0                             l3476 0F83                             l3468 0F65  
                           l3484 0FA0                             l3396 0E41                             l3572 1413  
                           l3580 150E                             l3740 020E                             l3724 0199  
                           l3732 01D3                             l3716 014E                             l3708 0133  
                           l3660 0030                             l2916 0C33                             l2908 0C22  
                           l3652 1773                             l2676 1605                             l3548 0ADD  
                           l3564 1747                             l3820 0CC3                             l3812 0CB2  
                           l3804 0CA5                             l3646 0A1E                             l3638 09EB  
                           l3486 0FA5                             l3478 0F8F                             l3398 0E46  
                           l3494 0FE9                             l3582 151A                             l3574 14F2  
                           l3590 1551                             l3750 024E                             l3742 0214  
                           l3734 01D9                             l3726 019F                             l3718 0164  
                           l3670 0073                             l3662 003F                             l2918 0C3F  
                           l3654 1779                             l3558 1719                             l3830 0CD0  
                           l3822 0CC5                             l3814 0CB6                             l3806 0CAF  
                           l3488 0FD5                             l3496 0FFB                             l3568 13F9  
                           l3576 14FC                             l3592 155D                             l3584 1535  
                           l3760 029F                             l3752 0254                             l3744 022B  
                           l3736 01E9                             l3728 01B6                             l3680 00B3  
                           l3672 008A                             l3664 004F                             l2960 0C7A  
                           l2880 0BE1                             l3656 1785                             l3648 1749  
                           l3840 0D7B                             l3832 0D32                             l3824 0CC7  
                           l3816 0CBA                             l3808 0CB0                             l3578 1508  
                           l3586 153F                             l3594 1578                             l3770 02DF  
                           l3762 02A5                             l3754 026A                             l3746 0240  
                           l3738 01F8                             l3690 00E2                             l3682 00B8  
                           l3674 009F                             l3666 005E                             l3658 002A  
                           l2970 0C95                             l2946 0C5F                             l2938 0C4E  
                           l2874 0BB1                             l3850 0E0B                             l3842 0DA1  
                           l3834 0D49                             l3826 0CC9                             l3818 0CBF  
                           l3924 0E5D                             l3588 154B                             l3596 1582  
                           l3780 0331                             l3772 02EF                             l3764 02BC  
                           l3756 027A                             l3748 0248                             l3692 00EA  
                           l3684 00C8                             l3668 006D                             l3676 00A7  
                           l2948 0C6B                             l2876 0BC1                             l3852 0E23  
                           l3844 0DA7                             l3836 0D70                             l3828 0CCB  
                           l3926 0EC6                             l3598 158E                             l3782 0346  
                           l3774 02FE                             l3766 02D1                             l3758 0289  
                           l3694 00F7                             l3686 00D7                             l3678 00AD  
                           l2894 0C03                             l2886 0BE8                             l2878 0BD1  
                           l3846 0DAB                             l3838 0D75                             l3928 1471  
                           l3776 0314                             l3784 034E                             l3768 02D9  
                           l3688 00DC                             l3696 00FB                             l2968 0C89  
                           l2888 0BF4                             l3792 0AE6                             l3848 0DC3  
              ?_LCD_Write_Nibble 0070                             l2994 05F2                             l3786 0354  
                           l3778 031A                             l3698 0101                             l3794 0B32  
                           l2996 05F9                             l3788 0363                             l3796 0B7D  
                           l2998 05FF                             STR_1 0810                             STR_2 086A  
                           STR_3 083B                             STR_4 084F                             STR_5 0827  
                           STR_6 085E                             STR_7 0827                             STR_8 0876  
                           STR_9 0827                             u3000 05BF                             u3001 05BE  
                           u3010 05C8                             u3011 05C7                             u3020 05CD  
                           u3021 05CC                             u3030 05DA                             u3031 05D9  
                           u2240 14BE                             u2080 088F                             u3040 05DF  
                           u2241 14BD                             u2081 088E                             u3041 05DE  
                           u4010 16A9                             u2090 0895                             u3050 05F0  
                           u4011 16A5                             u2091 0894                             u3051 05EF  
                           u2260 14D0                             u2500 0917                             u2261 14CF  
                           u2501 0916                             u2270 14DA                             u4110 143E  
                           u3230 13F8                             u2510 092E                             u2271 14D9  
                           u2255 14C2                             u4111 143D                             u3231 13F7  
                           u4024 16AC                             u2600 037B                             u2520 0944  
                           u4120 1667                             u4105 1432                             u2601 037A  
                           u2521 0943                             u4121 1666                             u4210 15FC  
                           u2290 14ED                             u2610 0381                             u2530 094B  
                           u4130 1683                             u4035 16C7                             u4211 15FB  
                           u2291 14EC                             u2275 14D6                             u2611 0380  
                           u2531 094A                             u2515 0929                             u4131 1682  
                           u4060 07F0                             u4300 0F18                             u3500 0C14  
                           u2700 043A                             u2620 0386                             u4140 169D  
                           u4045 16D8                             u4061 07EF                             u4205 15F0  
                           u2285 14E1                             u4301 0F17                             u3501 0C13  
                           u2701 0438                             u2621 0385                             u4141 169C  
                           u4070 07F6                             u4230 14B5                             u4150 15C5  
                           u4310 0F1E                             u3510 0C22                             u2710 043B  
                           u2630 03A4                             u2550 095D                             u4071 07F5  
                           u4055 07D6                             u4231 14B4                             u4151 15C4  
                           u4311 0F1D                             u5007 02F7                             u3511 0C21  
                           u2631 03A3                             u2551 095C                             u4080 1422  
                           u4400 0FE9                             u4320 0F2F                             u4240 0E3A  
                           u3600 0CA3                             u3520 0C32                             u2800 04A5  
                           u2720 044F                             u2640 03AF                             u2560 0964  
                           u4225 148B                             u4081 1421                             u4401 0FE8  
                           u4321 0F2E                             u4241 0E39                             u5017 035C  
                           u3601 0CA2                             u3521 0C31                             u3505 0C10  
                           u2801 04A4                             u2721 044E                             u2641 03AE  
                           u2561 0963                             u2545 094D                             u4145 1699  
                           u3610 0603                             u4170 15D7                             u4410 0FFB  
                           u4330 0F43                             u4250 0E72                             u3530 0C3F  
                           u3450 0BC1                             u2810 04B4                             u2730 045E  
                           u2650 03B5                             u5107 0A24                             u5027 099D  
                           u3611 0602                             u4171 15D6                             u4411 0FFA  
                           u4331 0F42                             u4251 0E71                             u3531 0C3E  
                           u3515 0C1E                             u3451 0BC0                             u2811 04B3  
                           u2731 045D                             u2651 03B4                             u3620 0609  
                           u4340 0F49                             u4260 0EB2                             u3540 0C4D  
                           u3460 0BD1                             u2900 0562                             u2660 03BA  
                           u2580 0975                             u4500 0AA9                             u4420 0A32  
                           u5117 07FA                             u5037 09AD                             u3621 0608  
                           u4165 15C9                             u4341 0F48                             u4325 0F2B  
                           u4261 0EB1                             u3605 0C9F                             u3541 0C4C  
                           u3525 0C2E                             u3461 0BD0                             u2901 0561  
                           u2661 03B9                             u2581 0974                             u4501 0AA8  
                           u4421 0A31                             u3630 060E                             u4190 15E8  
                           u4350 0F5A                             u4270 0EE1                             u3550 0C5E  
                           u3470 0BE1                             u2910 0567                             u2830 04D9  
                           u2750 0474                             u2670 03D3                             u2590 097A  
                           u4510 0AAF                             u4430 0A36                             u5127 16F2  
                           u5047 09BE                             u3631 060D                             u4191 15E7  
                           u4095 142B                             u4351 0F59                             u4271 0EE0  
                           u3551 0C5D                             u3535 0C3B                             u3471 0BE0  
                           u3455 0BBD                             u2911 0566                             u2831 04D8  
                           u2751 0473                             u2671 03D2                             u2591 0979  
                           u2575 0967                             u4511 0AAE                             u4431 0A35  
                           u3800 0724                             u3720 06C4                             u3640 0630  
                           u4360 0F71                             u4280 0F07                             u4600 009F  
                           u3560 0C6B                             u3480 0BF4                             u2920 0571  
                           u2760 0478                             u2680 03D7                             u4520 0AB3  
                           u4440 0A56                             u5057 09CF                             u3801 0723  
                           u3721 06C3                             u3705 06B0                             u3641 062F  
                           u4185 15D8                             u4361 0F70                             u4281 0F06  
                           u4601 009E                             u3561 0C6A                             u3545 0C49  
                           u3481 0BF3                             u3465 0BCD                             u2921 0570  
                           u2841 04F0                             u2833 04D5                             u2825 04B7  
                           u2761 0477                             u2745 0461                             u2681 03D6  
                           u4521 0AB2                             u4441 0A55                             u3810 0729  
                           u3650 0636                             u4370 0F78                             u4290 0F12  
                           u4610 00AD                             u3570 0C79                             u3490 0C02  
                           u2930 0577                             u2850 0504                             u2842 04F1  
                           u2770 047D                             u2690 042F                             u4530 0AC8  
                           u5067 09E0                             u3811 0728                             u3715 06B9  
                           u3651 0635                             u4195 15E4                             u4371 0F77  
                           u4291 0F11                             u4611 00AC                             u3571 0C78  
                           u3555 0C5A                             u3491 0C01                             u3475 0BDD  
                           u2931 0576                             u2851 0505                             u2843 04F6  
                           u2771 047C                             u2691 042E                             u3820 073D  
                           u3740 06E0                             u3660 063B                             u4380 0F8F  
                           u4700 01D9                             u4620 00E2                             u3580 0C88  
                           u2940 057C                             u2860 0522                             u2852 050A  
                           u2844 04F7                             u4540 0AD8                             u4460 0A77  
                           u5077 09F1                             u3821 073C                             u3741 06DF  
                           u3661 063A                             u4381 0F8E                             u4285 0F03  
                           u4701 01D8                             u4621 00E1                             u4605 009B  
                           u3581 0C87                             u3565 0C67                             u3485 0BF0  
                           u2941 057B                             u2861 0521                             u2853 050B  
                           u2845 04FC                             u2781 048F                             u4541 0AD7  
                           u4461 0A76                             u3830 0744                             u3750 06F9  
                           u3670 0656                             u4390 0F95                             u4710 0214  
                           u4630 00F7                             u3590 0C95                             u2950 0582  
                           u2870 0547                             u2846 04FD                             u2790 04A1  
                           u2782 0496                             u4550 0ADC                             u5087 0A02  
                           u3831 0743                             u3751 06F8                             u3735 06C7  
                           u3671 0655                             u4391 0F94                             u4711 0213  
                           u4631 00F6                             u3591 0C94                             u3575 0C75  
                           u3495 0BFE                             u2951 0581                             u2871 0546  
                           u2791 04A0                             u2783 049D                             u2695 042B  
                           u4551 0ADB                             u4535 0AC3                             u4455 0A69  
                           u3840 074A                             u3760 0701                             u3680 0674  
                           u4720 0240                             u4640 0101                             u2960 0589  
                           u2880 054C                             u4480 0A99                             u4560 1710  
                           u5097 0A13                             u3841 0749                             u3761 0700  
                           u3745 06DC                             u3681 0673                             u4721 023F  
                           u4641 0100                             u3585 0C84                             u2961 0588  
                           u2881 054B                             u4481 0A98                             u4561 170F  
                           u3850 075C                             u3690 06AE                             u4730 024E  
                           u4650 012B                             u2970 058F                             u4570 17BD  
                           u4810 0D7B                             u3851 075B                             u3691 06AD  
                           u4731 024D                             u4651 012A                             u4635 00F3  
                           u3595 0C91                             u2971 058E                             u4475 0A8B  
                           u4571 17BC                             u4811 0D7A                             u3860 076B  
                           u3780 0710                             u4740 02A5                             u4660 0140  
                           u2980 05A1                             u4580 17CF                             u4820 0DA7  
                           u3781 070F                             u4741 02A4                             u4725 023C  
                           u4661 013F                             u2981 05A0                             u4581 17CE  
                           u4821 0DA6                             u3870 0788                             u4750 02D1  
                           u4670 0148                             u4590 0073                             u2990 05B0  
                           u4830 0DAB                             u3871 0787                             u3775 0705  
                           u4751 02D0                             u4671 0147                             u4591 0072  
                           u2895 0557                             u4495 0A9E                             u4831 0DAA  
                           u3880 07A5                             u4760 02DF                             u4680 019F  
                           u4840 0DC3                             u3881 07A4                             u3865 0766  
                           u4761 02DE                             u4681 019E                             u4665 013C  
                           u4841 0DC2                             u3890 07BC                             u4770 031A  
                           u4690 01CB                             u4850 0E23                             u3891 07BB  
                           u3875 0784                             u3795 0713                             u4771 0319  
                           u4755 02CD                             u4691 01CA                             u4907 00D0  
                           u2995 05AB                             u4851 0E22                             u4780 0346  
                           u3885 07A1                             u4781 0345                             u4917 0109  
                           u4845 0DBF                             u4790 0354                             u4791 0353  
                           u4695 01C7                             u4927 0119                             u4855 0E1F  
                           u4785 0342                             u4937 016C                             u4947 017C  
                           u4867 13F0                             u4957 01E1                             u4877 0047  
                           u4967 01F1                             u4887 0057                             u4977 0272  
                           u4897 00C0                             u4987 0282                             u4997 02E7  
                           _TMR0 0001                      main@min_max 00C2                      main@min_min 00BE  
             ??_LCD_Write_Nibble 0073                             _main 0CA5               __size_of_LCD_Begin 00A4  
                           btemp 007E               __size_of_LCD_Print 0039                             start 0010  
                ___fldiv@new_exp 003C                    ?_atualiza_ADC 0070                      LCD_Goto@col 0024  
                    LCD_Goto@row 0021                 __end_of_LCD_Goto 147D         imprime_tela_ajuste1@temp 003C  
                  ___fltol@sign1 0061                  __end_of___fladd 05F2                            ?_main 0070  
                __end_of___fldiv 07CF                  __end_of___flsub 1651                  __end_of___fltol 0986  
                __end_of___lwdiv 1601                  __end_of___lwmod 14F2                            i1l194 08FE  
                          i1l197 08FF                            _TRISA 0085                            _TRISB 0086  
                          _TRISC 0087                            _TRISD 0088                            _TRISE 0089  
                   main@hora_max 00C0                     main@hora_min 00BC                            _Horas 006D  
                __end_of_ajustes 036A       controle_aquecedor@hora_max 0026       controle_aquecedor@hora_min 0022  
                __end_of_dpowers 0810                            _frexp 16F5                            _errno 00C6  
                __end_of_isdigit 0899                   ajustes@min_max 0044                   ajustes@min_min 0042  
                          _round 0AE6                            _trunc 17A4                   __pbitbssCOMMON 03D0  
                          pclath 000A                            status 0003                            wtemp0 007E  
                __end_of_sprintf 1000                   ??_atualiza_ADC 0073                  __initialization 0013  
                   __end_of_main 0E2C       __end_of_controle_aquecedor 0CA5                           ??_main 00B0  
              __end_of_LCD_Begin 0A2A             _imprime_tela_ajuste1 13F9             _imprime_tela_ajuste2 14F2  
           _imprime_tela_ajuste3 1535             _imprime_tela_ajuste4 1578                        ??_LCD_Cmd 0076  
              __end_of_LCD_Print 14B6                           _ADCON0 001F                           _ADCON1 009F  
                         ?_frexp 0028                           _ADRESH 001E                           _ADRESL 009E  
                         ?_round 00A8                           ?_trunc 0063                           i1l3140 0899  
                         i1l3150 08BE                           i1l3142 089D                           i1l3160 08E4  
                         i1l3152 08CB                           i1l3144 08A7                           i1l3162 08EC  
                         i1l3154 08CF                           i1l3146 08B4                           i1l3164 08F9  
                         i1l3156 08D5                           i1l3148 08B8                           i1l3158 08E2  
                         i1l3166 08FE                           _INTCON 000B                           u391_20 089D  
                         u391_21 089C                           u392_20 08B4                           u392_21 08B3  
                         u392_25 08B0                           u393_20 08CB                           u393_21 08CA  
                         u393_25 08C7                           u394_20 08E2                           u394_21 08E1  
                         u394_25 08DE                           u395_20 08F9                           u395_21 08F8  
                         u395_25 08F5                           _TRISD0 0440                           _TRISD1 0441  
                         _TRISD2 0442                           _TRISD3 0443                           _TRISD4 0444  
                         _TRISD5 0445                 __end_of___xxtofl 0AE6                           ___fleq 1651  
                      ??___fladd 004C                           ___wmul 141A                        ??___fldiv 0032  
                      ??___flsub 0078                        ??___fltol 005C                        ??___lwdiv 0077  
                      ??___lwmod 0027                  ajustes@hora_max 0043                  ajustes@hora_min 0041  
          ?_imprime_tela_ajuste1 003C            ?_imprime_tela_ajuste2 0070            ?_imprime_tela_ajuste3 003C  
          ?_imprime_tela_ajuste4 003C                        ??_ajustes 0045                        ??_isdigit 0073  
                         saved_w 007E                           round@f 00AC                           round@x 00A8  
                      ??_sprintf 0030                           trunc@i 0067                           trunc@x 0063  
                   ___xxtofl@arg 0026                     ___xxtofl@exp 0025                     ___xxtofl@val 0073  
                     ___fleq@ff1 0020                       ___fleq@ff2 0024          __end_of__initialization 0023  
                      ?_LCD_Goto 0021                       ___fltol@f1 0058                   __pcstackCOMMON 0070  
                  __end_of_frexp 1749                   LCD_Cmd@Command 0020                    __end_of_round 0BB1  
                  __end_of_trunc 1800             __end_of_atualiza_ADC 13F9                          ??_frexp 002D  
                   sprintf@width 0038                          ??_round 0078                          ??_trunc 0077  
                     __pbssBANK0 006D                       __pbssBANK1 00C6                       ??_LCD_Goto 0022  
                     __pmaintext 0CA5                          ?___fleq 0020                          ?___wmul 0073  
      __size_of_LCD_Write_Nibble 0054                       __pintentry 0004           ??_imprime_tela_ajuste1 003E  
         ??_imprime_tela_ajuste2 003C           ??_imprime_tela_ajuste3 0040           ??_imprime_tela_ajuste4 0040  
                        _LCD_Cmd 07CF                        ?___xxtofl 0073          __size_of_my_isr_routine 0071  
                     __stringtab 0800                          _Minutos 0078                  __size_of___fleq 0050  
                        ___fladd 036A                          ___fldiv 05F2                          ___flsub 1601  
                        ___fltol 090A                  __size_of___wmul 002B                          ___lwdiv 15BB  
                        ___lwmod 14B6                      _Temperatura 00C8                          __ptext1 0AE6  
                        __ptext2 17A4                          __ptext3 16F5                          __ptext4 1651  
                        __ptext5 0A2A                          __ptext6 090A                          __ptext7 1601  
                        __ptext8 036A                          __ptext9 1749                          _ajustes 0027  
                        _dpowers 0806                          _isdigit 0887                       ??___xxtofl 0020  
                      _LCD_Begin 0986                        _LCD_Print 147D                          _sprintf 0E2C  
                        clrloop0 13E3             end_of_initialization 0023               _controle_aquecedor 0BB1  
            ?_controle_aquecedor 0020                LCD_Write_Nibble@n 0075            __size_of_atualiza_ADC 000F  
                      _PORTBbits 0006                        _PORTCbits 0007                        _PORTDbits 0008  
           ??_controle_aquecedor 0073                      ___fladd@grs 0057                    ___xxtofl@sign 0024  
                     ?_LCD_Begin 0070                      ___fldiv@grs 003E                      ___fldiv@rem 0037  
                     ?_LCD_Print 0070           controle_aquecedor@temp 0020                __size_of_LCD_Goto 0038  
                   _atualiza_ADC 13EA                 _LCD_Write_Nibble 16A1                       LCD_Print@i 0020  
                 __end_of___fleq 16A1                   __end_of___wmul 1445              start_initialization 0013  
                 _my_isr_routine 0899                       frexp@value 0028                         ??___fleq 0073  
                       ??___wmul 0077                        ___fladd@a 0048                        ___fladd@b 0044  
                       ?_LCD_Cmd 0070                        ___fldiv@a 002A                        ___fldiv@b 002E  
                    __pbssCOMMON 0078                        ___flsub@a 00A0                        ___flsub@b 00A4  
                      ___latbits 0002                    __pcstackBANK0 0020                    __pcstackBANK1 00A0  
         __end_of_my_isr_routine 090A                      ??_LCD_Begin 0021                __size_of___xxtofl 00BC  
                    ??_LCD_Print 0076                _imprime_tela_main 1749                      sprintf@flag 0037  
             ?_imprime_tela_main 0070                      sprintf@prec 0034                        _main$1008 00B4  
                      _main$1009 00B8                 ___lwdiv@dividend 0075              ??_imprime_tela_main 003C  
                       ?___fladd 0044                         ?___fldiv 002A                         ?___flsub 00A0  
                       ?___fltol 0058                         ?___lwdiv 0073                         ?___lwmod 0023  
               LCD_Print@LCD_Str 0021                        __pstrings 0800                         ?_ajustes 0041  
  __size_of_imprime_tela_ajuste1 0021    __size_of_imprime_tela_ajuste2 0043    __size_of_imprime_tela_ajuste3 0043  
  __size_of_imprime_tela_ajuste4 0043                         ?_isdigit 0070  imprime_tela_ajuste3@minutos_min 003E  
                ?_my_isr_routine 0070        __end_of_imprime_tela_main 17A4                 ___lwdiv@quotient 0021  
                       ?_sprintf 0029                   __size_of_frexp 0054                   __size_of_round 00CB  
                 __size_of_trunc 005C                interrupt_function 0004                         _LCD_Goto 1445  
                 ___wmul@product 0020                        clear_ram0 13E2                         _TMR0_aux 00CC  
                    _LCD_Cstring 00CE                       _ADCON0bits 001F                      __stringbase 0805  
              ___wmul@multiplier 0073        controle_aquecedor@min_max 0028        controle_aquecedor@min_min 0024  
               __size_of_LCD_Cmd 0031  imprime_tela_ajuste4@minutos_max 003E         __end_of_LCD_Write_Nibble 16F5  
                      frexp@eptr 002C                         _Segundos 00CA                 __size_of___fladd 0288  
               __size_of___fldiv 01DD                 __size_of___flsub 0050                 __size_of___fltol 007C  
               __size_of___lwdiv 0046                 __size_of___lwmod 003C               __end_of__stringtab 0806  
                    _isdigit$768 0073                 __size_of_ajustes 0343                       sprintf@val 0035  
                       ___xxtofl 0A2A      __size_of_controle_aquecedor 00F4                 __size_of_isdigit 0012  
                ___lwdiv@divisor 0073                  ___lwdiv@counter 0020       __size_of_imprime_tela_main 005B  
                       __ptext10 0BB1                         __ptext11 13EA                         __ptext20 14B6  
                       __ptext12 0027                         __ptext21 15BB                         __ptext13 1578  
                       __ptext22 147D                         __ptext14 1535                         __ptext23 1445  
                       __ptext15 14F2                         __ptext24 05F2                         __ptext16 13F9  
                       __ptext25 0986                         __ptext17 0E2C                         __ptext26 07CF  
                       __ptext18 0887                         __ptext27 16A1                         __ptext19 141A  
                       __ptext28 0899                 __size_of_sprintf 01D4                       trunc@expon 006B  
                  __size_of_main 0187                         main@temp 00C4                       _INTCONbits 000B  
                       isdigit@c 0074                         intlevel1 0000                        sprintf@ap 0033  
                      sprintf@sp 003B                 ___lwmod@dividend 0025                        stringcode 0800  
               ??_my_isr_routine 0070                       _OPTION_REG 0081                         sprintf@c 003A  
                       sprintf@f 0029                  ___lwmod@divisor 0023                  ___lwmod@counter 0028  
                       stringdir 0800    imprime_tela_ajuste3@horas_min 003C                         stringtab 0800  
                  ___fladd@signs 0054    imprime_tela_ajuste4@horas_max 003C     __end_of_imprime_tela_ajuste1 141A  
   __end_of_imprime_tela_ajuste2 1535     __end_of_imprime_tela_ajuste3 1578     __end_of_imprime_tela_ajuste4 15BB  
                   ___fladd@aexp 0055                     ___fladd@bexp 0056  
