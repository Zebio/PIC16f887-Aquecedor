

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Wed Aug 04 15:21:28 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F877
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bitbssCOMMON,global,bit,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	maintext,global,class=CODE,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2,group=3
    16                           	psect	text2,local,class=CODE,merge=1,delta=2,group=3
    17                           	psect	text3,local,class=CODE,merge=1,delta=2,group=3
    18                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    32                           	psect	text18,local,class=CODE,merge=1,delta=2,group=3
    33                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text22,local,class=CODE,merge=1,delta=2
    37                           	psect	text23,local,class=CODE,merge=1,delta=2
    38                           	psect	text24,local,class=CODE,merge=1,delta=2,group=2
    39                           	psect	text25,local,class=CODE,merge=1,delta=2
    40                           	psect	text26,local,class=CODE,merge=1,delta=2
    41                           	psect	text27,local,class=CODE,merge=1,delta=2
    42                           	psect	text28,local,class=CODE,merge=1,delta=2
    43                           	psect	intentry,global,class=CODE,delta=2
    44                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    45                           	dabs	1,0x7E,2
    46  0000                     
    47                           ; Version 2.20
    48                           ; Generated 12/02/2020 GMT
    49                           ; 
    50                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    51                           ; All rights reserved.
    52                           ; 
    53                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    54                           ; 
    55                           ; Redistribution and use in source and binary forms, with or without modification, are
    56                           ; permitted provided that the following conditions are met:
    57                           ; 
    58                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    59                           ;        conditions and the following disclaimer.
    60                           ; 
    61                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    62                           ;        of conditions and the following disclaimer in the documentation and/or other
    63                           ;        materials provided with the distribution.
    64                           ; 
    65                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    66                           ;        software without specific prior written permission.
    67                           ; 
    68                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    69                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    70                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    71                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    72                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    73                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    74                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    75                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    76                           ; 
    77                           ; 
    78                           ; Code-generator required, PIC16F877 Definitions
    79                           ; 
    80                           ; SFR Addresses
    81  0000                     	;# 
    82  0001                     	;# 
    83  0002                     	;# 
    84  0003                     	;# 
    85  0004                     	;# 
    86  0005                     	;# 
    87  0006                     	;# 
    88  0007                     	;# 
    89  0008                     	;# 
    90  0009                     	;# 
    91  000A                     	;# 
    92  000B                     	;# 
    93  000C                     	;# 
    94  000D                     	;# 
    95  000E                     	;# 
    96  000E                     	;# 
    97  000F                     	;# 
    98  0010                     	;# 
    99  0011                     	;# 
   100  0012                     	;# 
   101  0013                     	;# 
   102  0014                     	;# 
   103  0015                     	;# 
   104  0015                     	;# 
   105  0016                     	;# 
   106  0017                     	;# 
   107  0018                     	;# 
   108  0019                     	;# 
   109  001A                     	;# 
   110  001B                     	;# 
   111  001B                     	;# 
   112  001C                     	;# 
   113  001D                     	;# 
   114  001E                     	;# 
   115  001F                     	;# 
   116  0081                     	;# 
   117  0085                     	;# 
   118  0086                     	;# 
   119  0087                     	;# 
   120  0088                     	;# 
   121  0089                     	;# 
   122  008C                     	;# 
   123  008D                     	;# 
   124  008E                     	;# 
   125  0091                     	;# 
   126  0092                     	;# 
   127  0093                     	;# 
   128  0094                     	;# 
   129  0098                     	;# 
   130  0099                     	;# 
   131  009E                     	;# 
   132  009F                     	;# 
   133  010C                     	;# 
   134  010D                     	;# 
   135  010E                     	;# 
   136  010F                     	;# 
   137  018C                     	;# 
   138  018D                     	;# 
   139  0000                     	;# 
   140  0001                     	;# 
   141  0002                     	;# 
   142  0003                     	;# 
   143  0004                     	;# 
   144  0005                     	;# 
   145  0006                     	;# 
   146  0007                     	;# 
   147  0008                     	;# 
   148  0009                     	;# 
   149  000A                     	;# 
   150  000B                     	;# 
   151  000C                     	;# 
   152  000D                     	;# 
   153  000E                     	;# 
   154  000E                     	;# 
   155  000F                     	;# 
   156  0010                     	;# 
   157  0011                     	;# 
   158  0012                     	;# 
   159  0013                     	;# 
   160  0014                     	;# 
   161  0015                     	;# 
   162  0015                     	;# 
   163  0016                     	;# 
   164  0017                     	;# 
   165  0018                     	;# 
   166  0019                     	;# 
   167  001A                     	;# 
   168  001B                     	;# 
   169  001B                     	;# 
   170  001C                     	;# 
   171  001D                     	;# 
   172  001E                     	;# 
   173  001F                     	;# 
   174  0081                     	;# 
   175  0085                     	;# 
   176  0086                     	;# 
   177  0087                     	;# 
   178  0088                     	;# 
   179  0089                     	;# 
   180  008C                     	;# 
   181  008D                     	;# 
   182  008E                     	;# 
   183  0091                     	;# 
   184  0092                     	;# 
   185  0093                     	;# 
   186  0094                     	;# 
   187  0098                     	;# 
   188  0099                     	;# 
   189  009E                     	;# 
   190  009F                     	;# 
   191  010C                     	;# 
   192  010D                     	;# 
   193  010E                     	;# 
   194  010F                     	;# 
   195  018C                     	;# 
   196  018D                     	;# 
   197                           
   198                           	psect	strings
   199  0800                     __pstrings:
   200  0800                     stringtab:
   201  0800                     __stringtab:
   202  0800                     stringcode:	
   203                           ;	String table - string pointers are 1 byte each
   204                           
   205  0800                     stringdir:
   206  0800  3008               	movlw	high stringdir
   207  0801  008A               	movwf	10
   208  0802  0804               	movf	4,w
   209  0803  0A84               	incf	4,f
   210  0804  0782               	addwf	2,f
   211  0805                     __stringbase:
   212  0805  3400               	retlw	0
   213  0806                     __end_of__stringtab:
   214  0806                     _dpowers:
   215  0806  3401               	retlw	1
   216  0807  3400               	retlw	0
   217  0808  340A               	retlw	10
   218  0809  3400               	retlw	0
   219  080A  3464               	retlw	100
   220  080B  3400               	retlw	0
   221  080C  34E8               	retlw	232
   222  080D  3403               	retlw	3
   223  080E  3410               	retlw	16
   224  080F  3427               	retlw	39
   225  0810                     __end_of_dpowers:
   226  0007                     _PORTCbits	set	7
   227  001E                     _ADRESH	set	30
   228  001F                     _ADCON0	set	31
   229  000B                     _INTCON	set	11
   230  0001                     _TMR0	set	1
   231  000B                     _INTCONbits	set	11
   232  0006                     _PORTBbits	set	6
   233  001F                     _ADCON0bits	set	31
   234  0008                     _PORTDbits	set	8
   235  009E                     _ADRESL	set	158
   236  009F                     _ADCON1	set	159
   237  0089                     _TRISE	set	137
   238  0088                     _TRISD	set	136
   239  0087                     _TRISC	set	135
   240  0086                     _TRISB	set	134
   241  0085                     _TRISA	set	133
   242  0081                     _OPTION_REG	set	129
   243  0445                     _TRISD5	set	1093
   244  0444                     _TRISD4	set	1092
   245  0443                     _TRISD3	set	1091
   246  0442                     _TRISD2	set	1090
   247  0441                     _TRISD1	set	1089
   248  0440                     _TRISD0	set	1088
   249  0810                     STR_1:
   250  0810  3448               	retlw	72	;'H'
   251  0811  346F               	retlw	111	;'o'
   252  0812  342E               	retlw	46	;'.'
   253  0813  343A               	retlw	58	;':'
   254  0814  3420               	retlw	32	;' '
   255  0815  3425               	retlw	37	;'%'
   256  0816  3430               	retlw	48	;'0'
   257  0817  3432               	retlw	50	;'2'
   258  0818  3464               	retlw	100	;'d'
   259  0819  343A               	retlw	58	;':'
   260  081A  3425               	retlw	37	;'%'
   261  081B  3430               	retlw	48	;'0'
   262  081C  3432               	retlw	50	;'2'
   263  081D  3464               	retlw	100	;'d'
   264  081E  343A               	retlw	58	;':'
   265  081F  3425               	retlw	37	;'%'
   266  0820  3430               	retlw	48	;'0'
   267  0821  3432               	retlw	50	;'2'
   268  0822  3464               	retlw	100	;'d'
   269  0823  3420               	retlw	32	;' '
   270  0824  3420               	retlw	32	;' '
   271  0825  3420               	retlw	32	;' '
   272  0826  3400               	retlw	0
   273  0827                     STR_5:
   274  0827  3420               	retlw	32	;' '
   275  0828  3420               	retlw	32	;' '
   276  0829  3420               	retlw	32	;' '
   277  082A  3420               	retlw	32	;' '
   278  082B  3420               	retlw	32	;' '
   279  082C  3425               	retlw	37	;'%'
   280  082D  3430               	retlw	48	;'0'
   281  082E  3432               	retlw	50	;'2'
   282  082F  3464               	retlw	100	;'d'
   283  0830  343A               	retlw	58	;':'
   284  0831  3425               	retlw	37	;'%'
   285  0832  3430               	retlw	48	;'0'
   286  0833  3432               	retlw	50	;'2'
   287  0834  3464               	retlw	100	;'d'
   288  0835  3420               	retlw	32	;' '
   289  0836  3420               	retlw	32	;' '
   290  0837  3420               	retlw	32	;' '
   291  0838  3420               	retlw	32	;' '
   292  0839  3420               	retlw	32	;' '
   293  083A  3400               	retlw	0
   294  083B                     STR_3:
   295  083B  3454               	retlw	84	;'T'
   296  083C  3465               	retlw	101	;'e'
   297  083D  346D               	retlw	109	;'m'
   298  083E  3470               	retlw	112	;'p'
   299  083F  342E               	retlw	46	;'.'
   300  0840  3420               	retlw	32	;' '
   301  0841  3444               	retlw	68	;'D'
   302  0842  3465               	retlw	101	;'e'
   303  0843  3473               	retlw	115	;'s'
   304  0844  343A               	retlw	58	;':'
   305  0845  3420               	retlw	32	;' '
   306  0846  3425               	retlw	37	;'%'
   307  0847  3430               	retlw	48	;'0'
   308  0848  3432               	retlw	50	;'2'
   309  0849  3464               	retlw	100	;'d'
   310  084A  34DF               	retlw	-33
   311  084B  3463               	retlw	99	;'c'
   312  084C  3420               	retlw	32	;' '
   313  084D  3420               	retlw	32	;' '
   314  084E  3400               	retlw	0
   315  084F                     STR_4:
   316  084F  3448               	retlw	72	;'H'
   317  0850  346F               	retlw	111	;'o'
   318  0851  3472               	retlw	114	;'r'
   319  0852  3461               	retlw	97	;'a'
   320  0853  3472               	retlw	114	;'r'
   321  0854  3469               	retlw	105	;'i'
   322  0855  346F               	retlw	111	;'o'
   323  0856  3420               	retlw	32	;' '
   324  0857  3441               	retlw	65	;'A'
   325  0858  3474               	retlw	116	;'t'
   326  0859  3475               	retlw	117	;'u'
   327  085A  3461               	retlw	97	;'a'
   328  085B  346C               	retlw	108	;'l'
   329  085C  343A               	retlw	58	;':'
   330  085D  3400               	retlw	0
   331  085E                     STR_6:
   332  085E  3453               	retlw	83	;'S'
   333  085F  3474               	retlw	116	;'t'
   334  0860  3461               	retlw	97	;'a'
   335  0861  3472               	retlw	114	;'r'
   336  0862  3474               	retlw	116	;'t'
   337  0863  3420               	retlw	32	;' '
   338  0864  3474               	retlw	116	;'t'
   339  0865  3469               	retlw	105	;'i'
   340  0866  346D               	retlw	109	;'m'
   341  0867  3465               	retlw	101	;'e'
   342  0868  343A               	retlw	58	;':'
   343  0869  3400               	retlw	0
   344  086A                     STR_2:
   345  086A  3454               	retlw	84	;'T'
   346  086B  3465               	retlw	101	;'e'
   347  086C  342E               	retlw	46	;'.'
   348  086D  343A               	retlw	58	;':'
   349  086E  3420               	retlw	32	;' '
   350  086F  3425               	retlw	37	;'%'
   351  0870  3430               	retlw	48	;'0'
   352  0871  3432               	retlw	50	;'2'
   353  0872  3464               	retlw	100	;'d'
   354  0873  34DF               	retlw	-33
   355  0874  3463               	retlw	99	;'c'
   356  0875  3400               	retlw	0
   357  0876                     STR_8:
   358  0876  3453               	retlw	83	;'S'
   359  0877  3474               	retlw	116	;'t'
   360  0878  346F               	retlw	111	;'o'
   361  0879  3470               	retlw	112	;'p'
   362  087A  3420               	retlw	32	;' '
   363  087B  3474               	retlw	116	;'t'
   364  087C  3469               	retlw	105	;'i'
   365  087D  346D               	retlw	109	;'m'
   366  087E  3465               	retlw	101	;'e'
   367  087F  343A               	retlw	58	;':'
   368  0880  3400               	retlw	0
   369  0827                     
   370                           	psect	cinit
   371  0013                     start_initialization:	
   372                           ; #config settings
   373                           
   374  0013                     __initialization:
   375                           
   376                           ; Clear objects allocated to BITCOMMON
   377  0013  01FA               	clrf	(__pbitbssCOMMON/(0+8))& (0+127)
   378                           
   379                           ; Clear objects allocated to COMMON
   380  0014  01F8               	clrf	__pbssCOMMON& (0+127)
   381  0015  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   382                           
   383                           ; Clear objects allocated to BANK0
   384  0016  1283               	bcf	3,5	;RP0=0, select bank0
   385  0017  1303               	bcf	3,6	;RP1=0, select bank0
   386  0018  01ED               	clrf	__pbssBANK0& (0+127)
   387  0019  01EE               	clrf	(__pbssBANK0+1)& (0+127)
   388                           
   389                           ; Clear objects allocated to BANK1
   390  001A  1383               	bcf	3,7	;select IRP bank0
   391  001B  30C6               	movlw	low __pbssBANK1
   392  001C  0084               	movwf	4
   393  001D  30DE               	movlw	low (__pbssBANK1+24)
   394  001E  120A  158A  2084  120A  118A  	fcall	clear_ram0
   395  0023                     end_of_initialization:	
   396                           ;End of C runtime variable initialization code
   397                           
   398  0023                     __end_of__initialization:
   399  0023  0183               	clrf	3
   400  0024  120A  158A  2CA7   	ljmp	_main	;jump to C main() function
   401                           
   402                           	psect	bitbssCOMMON
   403  03D0                     __pbitbssCOMMON:
   404  03D0                     _RS:
   405  03D0                     	ds	1
   406                           
   407                           	psect	bssCOMMON
   408  0078                     __pbssCOMMON:
   409  0078                     _Minutos:
   410  0078                     	ds	2
   411                           
   412                           	psect	bssBANK0
   413  006D                     __pbssBANK0:
   414  006D                     _Horas:
   415  006D                     	ds	2
   416                           
   417                           	psect	bssBANK1
   418  00C6                     __pbssBANK1:
   419  00C6                     _errno:
   420  00C6                     	ds	2
   421  00C8                     _Temperatura:
   422  00C8                     	ds	2
   423  00CA                     _Segundos:
   424  00CA                     	ds	2
   425  00CC                     _TMR0_aux:
   426  00CC                     	ds	2
   427  00CE                     _LCD_Cstring:
   428  00CE                     	ds	16
   429                           
   430                           	psect	clrtext
   431  0884                     clear_ram0:	
   432                           ;	Called with FSR containing the base address, and
   433                           ;	W with the last address+1
   434                           
   435  0884  0064               	clrwdt	;clear the watchdog before getting into this loop
   436  0885                     clrloop0:
   437  0885  0180               	clrf	0	;clear RAM location pointed to by FSR
   438  0886  0A84               	incf	4,f	;increment pointer
   439  0887  0604               	xorwf	4,w	;XOR with final address
   440  0888  1903               	btfsc	3,2	;have we reached the end yet?
   441  0889  3400               	retlw	0	;all done for this memory range, return
   442  088A  0604               	xorwf	4,w	;XOR again to restore value
   443  088B  2885               	goto	clrloop0	;do the next byte
   444                           
   445                           	psect	cstackBANK1
   446  00A0                     __pcstackBANK1:
   447  00A0                     ?___flsub:
   448  00A0                     ___flsub@a:	
   449                           ; 4 bytes @ 0x0
   450                           
   451                           
   452                           ; 4 bytes @ 0x0
   453  00A0                     	ds	4
   454  00A4                     ___flsub@b:
   455                           
   456                           ; 4 bytes @ 0x4
   457  00A4                     	ds	4
   458  00A8                     ?_round:
   459  00A8                     round@x:	
   460                           ; 4 bytes @ 0x8
   461                           
   462                           
   463                           ; 4 bytes @ 0x8
   464  00A8                     	ds	4
   465  00AC                     round@f:
   466                           
   467                           ; 4 bytes @ 0xC
   468  00AC                     	ds	4
   469  00B0                     ??_main:
   470                           
   471                           ; 1 bytes @ 0x10
   472  00B0                     	ds	4
   473  00B4                     _main$1008:
   474                           
   475                           ; 4 bytes @ 0x14
   476  00B4                     	ds	4
   477  00B8                     _main$1009:
   478                           
   479                           ; 4 bytes @ 0x18
   480  00B8                     	ds	4
   481  00BC                     main@hora_min:
   482                           
   483                           ; 2 bytes @ 0x1C
   484  00BC                     	ds	2
   485  00BE                     main@min_min:
   486                           
   487                           ; 2 bytes @ 0x1E
   488  00BE                     	ds	2
   489  00C0                     main@hora_max:
   490                           
   491                           ; 2 bytes @ 0x20
   492  00C0                     	ds	2
   493  00C2                     main@min_max:
   494                           
   495                           ; 2 bytes @ 0x22
   496  00C2                     	ds	2
   497  00C4                     main@temp:
   498                           
   499                           ; 2 bytes @ 0x24
   500  00C4                     	ds	2
   501                           
   502                           	psect	cstackCOMMON
   503  0070                     __pcstackCOMMON:
   504  0070                     ?_isdigit:
   505  0070                     ?_LCD_Write_Nibble:	
   506                           ; 1 bit 
   507                           
   508  0070                     ?_LCD_Cmd:	
   509                           ; 1 bytes @ 0x0
   510                           
   511  0070                     ?_LCD_Print:	
   512                           ; 1 bytes @ 0x0
   513                           
   514  0070                     ?_LCD_Begin:	
   515                           ; 1 bytes @ 0x0
   516                           
   517  0070                     ?_atualiza_ADC:	
   518                           ; 1 bytes @ 0x0
   519                           
   520  0070                     ?_imprime_tela_main:	
   521                           ; 1 bytes @ 0x0
   522                           
   523  0070                     ?_imprime_tela_ajuste2:	
   524                           ; 1 bytes @ 0x0
   525                           
   526  0070                     ?_my_isr_routine:	
   527                           ; 1 bytes @ 0x0
   528                           
   529  0070                     ??_my_isr_routine:	
   530                           ; 1 bytes @ 0x0
   531                           
   532  0070                     ?_main:	
   533                           ; 1 bytes @ 0x0
   534                           
   535                           
   536                           ; 1 bytes @ 0x0
   537  0070                     	ds	3
   538  0073                     ??_isdigit:
   539  0073                     ??_LCD_Write_Nibble:	
   540                           ; 1 bytes @ 0x3
   541                           
   542  0073                     ??_atualiza_ADC:	
   543                           ; 1 bytes @ 0x3
   544                           
   545  0073                     ??_controle_aquecedor:	
   546                           ; 1 bytes @ 0x3
   547                           
   548  0073                     ??___fleq:	
   549                           ; 1 bytes @ 0x3
   550                           
   551  0073                     ?___wmul:	
   552                           ; 1 bytes @ 0x3
   553                           
   554  0073                     ?___lwdiv:	
   555                           ; 2 bytes @ 0x3
   556                           
   557  0073                     ?___xxtofl:	
   558                           ; 2 bytes @ 0x3
   559                           
   560  0073                     _isdigit$768:	
   561                           ; 4 bytes @ 0x3
   562                           
   563  0073                     ___wmul@multiplier:	
   564                           ; 1 bytes @ 0x3
   565                           
   566  0073                     ___lwdiv@divisor:	
   567                           ; 2 bytes @ 0x3
   568                           
   569  0073                     ___xxtofl@val:	
   570                           ; 2 bytes @ 0x3
   571                           
   572                           
   573                           ; 4 bytes @ 0x3
   574  0073                     	ds	1
   575  0074                     isdigit@c:
   576                           
   577                           ; 1 bytes @ 0x4
   578  0074                     	ds	1
   579  0075                     LCD_Write_Nibble@n:
   580  0075                     ___wmul@multiplicand:	
   581                           ; 1 bytes @ 0x5
   582                           
   583  0075                     ___lwdiv@dividend:	
   584                           ; 2 bytes @ 0x5
   585                           
   586                           
   587                           ; 2 bytes @ 0x5
   588  0075                     	ds	1
   589  0076                     ??_LCD_Cmd:
   590  0076                     ??_LCD_Print:	
   591                           ; 1 bytes @ 0x6
   592                           
   593                           
   594                           ; 1 bytes @ 0x6
   595  0076                     	ds	1
   596  0077                     ??_trunc:
   597  0077                     ??___wmul:	
   598                           ; 1 bytes @ 0x7
   599                           
   600  0077                     ??___lwdiv:	
   601                           ; 1 bytes @ 0x7
   602                           
   603                           
   604                           ; 1 bytes @ 0x7
   605  0077                     	ds	1
   606  0078                     ??_round:
   607  0078                     ??___flsub:	
   608                           ; 1 bytes @ 0x8
   609                           
   610                           
   611                           	psect	cstackBANK0
   612  0020                     __pcstackBANK0:	
   613                           ; 1 bytes @ 0x8
   614                           
   615  0020                     ?___fleq:
   616  0020                     ??___xxtofl:	
   617                           ; 1 bit 
   618                           
   619  0020                     ?_controle_aquecedor:	
   620                           ; 1 bytes @ 0x0
   621                           
   622  0020                     LCD_Cmd@Command:	
   623                           ; 2 bytes @ 0x0
   624                           
   625  0020                     LCD_Print@i:	
   626                           ; 1 bytes @ 0x0
   627                           
   628  0020                     ___lwdiv@counter:	
   629                           ; 1 bytes @ 0x0
   630                           
   631  0020                     controle_aquecedor@temp:	
   632                           ; 1 bytes @ 0x0
   633                           
   634  0020                     ___wmul@product:	
   635                           ; 2 bytes @ 0x0
   636                           
   637  0020                     ___fleq@ff1:	
   638                           ; 2 bytes @ 0x0
   639                           
   640                           
   641                           ; 4 bytes @ 0x0
   642  0020                     	ds	1
   643  0021                     ?_LCD_Goto:
   644  0021                     ??_LCD_Begin:	
   645                           ; 1 bytes @ 0x1
   646                           
   647  0021                     LCD_Goto@row:	
   648                           ; 1 bytes @ 0x1
   649                           
   650  0021                     LCD_Print@LCD_Str:	
   651                           ; 1 bytes @ 0x1
   652                           
   653  0021                     ___lwdiv@quotient:	
   654                           ; 1 bytes @ 0x1
   655                           
   656                           
   657                           ; 2 bytes @ 0x1
   658  0021                     	ds	1
   659  0022                     ??_LCD_Goto:
   660  0022                     controle_aquecedor@hora_min:	
   661                           ; 1 bytes @ 0x2
   662                           
   663                           
   664                           ; 2 bytes @ 0x2
   665  0022                     	ds	1
   666  0023                     ?___lwmod:
   667  0023                     ___lwmod@divisor:	
   668                           ; 2 bytes @ 0x3
   669                           
   670                           
   671                           ; 2 bytes @ 0x3
   672  0023                     	ds	1
   673  0024                     LCD_Goto@col:
   674  0024                     ___xxtofl@sign:	
   675                           ; 1 bytes @ 0x4
   676                           
   677  0024                     controle_aquecedor@min_min:	
   678                           ; 1 bytes @ 0x4
   679                           
   680  0024                     ___fleq@ff2:	
   681                           ; 2 bytes @ 0x4
   682                           
   683                           
   684                           ; 4 bytes @ 0x4
   685  0024                     	ds	1
   686  0025                     ___xxtofl@exp:
   687  0025                     ___lwmod@dividend:	
   688                           ; 1 bytes @ 0x5
   689                           
   690                           
   691                           ; 2 bytes @ 0x5
   692  0025                     	ds	1
   693  0026                     controle_aquecedor@hora_max:
   694  0026                     ___xxtofl@arg:	
   695                           ; 2 bytes @ 0x6
   696                           
   697                           
   698                           ; 4 bytes @ 0x6
   699  0026                     	ds	1
   700  0027                     ??___lwmod:
   701                           
   702                           ; 1 bytes @ 0x7
   703  0027                     	ds	1
   704  0028                     ?_frexp:
   705  0028                     ___lwmod@counter:	
   706                           ; 4 bytes @ 0x8
   707                           
   708  0028                     controle_aquecedor@min_max:	
   709                           ; 1 bytes @ 0x8
   710                           
   711  0028                     frexp@value:	
   712                           ; 2 bytes @ 0x8
   713                           
   714                           
   715                           ; 4 bytes @ 0x8
   716  0028                     	ds	1
   717  0029                     ?_sprintf:
   718  0029                     sprintf@f:	
   719                           ; 2 bytes @ 0x9
   720                           
   721                           
   722                           ; 1 bytes @ 0x9
   723  0029                     	ds	1
   724  002A                     ?___fldiv:
   725  002A                     ___fldiv@a:	
   726                           ; 4 bytes @ 0xA
   727                           
   728                           
   729                           ; 4 bytes @ 0xA
   730  002A                     	ds	2
   731  002C                     frexp@eptr:
   732                           
   733                           ; 1 bytes @ 0xC
   734  002C                     	ds	1
   735  002D                     ??_frexp:
   736                           
   737                           ; 1 bytes @ 0xD
   738  002D                     	ds	1
   739  002E                     ___fldiv@b:
   740                           
   741                           ; 4 bytes @ 0xE
   742  002E                     	ds	2
   743  0030                     ??_sprintf:
   744                           
   745                           ; 1 bytes @ 0x10
   746  0030                     	ds	2
   747  0032                     ??___fldiv:
   748                           
   749                           ; 1 bytes @ 0x12
   750  0032                     	ds	1
   751  0033                     sprintf@ap:
   752                           
   753                           ; 1 bytes @ 0x13
   754  0033                     	ds	1
   755  0034                     sprintf@prec:
   756                           
   757                           ; 1 bytes @ 0x14
   758  0034                     	ds	1
   759  0035                     sprintf@val:
   760                           
   761                           ; 2 bytes @ 0x15
   762  0035                     	ds	2
   763  0037                     sprintf@flag:
   764  0037                     ___fldiv@rem:	
   765                           ; 1 bytes @ 0x17
   766                           
   767                           
   768                           ; 4 bytes @ 0x17
   769  0037                     	ds	1
   770  0038                     sprintf@width:
   771                           
   772                           ; 2 bytes @ 0x18
   773  0038                     	ds	2
   774  003A                     sprintf@c:
   775                           
   776                           ; 1 bytes @ 0x1A
   777  003A                     	ds	1
   778  003B                     sprintf@sp:
   779  003B                     ___fldiv@sign:	
   780                           ; 1 bytes @ 0x1B
   781                           
   782                           
   783                           ; 1 bytes @ 0x1B
   784  003B                     	ds	1
   785  003C                     ??_imprime_tela_main:
   786  003C                     ?_imprime_tela_ajuste1:	
   787                           ; 1 bytes @ 0x1C
   788                           
   789  003C                     ??_imprime_tela_ajuste2:	
   790                           ; 1 bytes @ 0x1C
   791                           
   792  003C                     ?_imprime_tela_ajuste3:	
   793                           ; 1 bytes @ 0x1C
   794                           
   795  003C                     ?_imprime_tela_ajuste4:	
   796                           ; 1 bytes @ 0x1C
   797                           
   798  003C                     imprime_tela_ajuste1@temp:	
   799                           ; 1 bytes @ 0x1C
   800                           
   801  003C                     imprime_tela_ajuste3@horas_min:	
   802                           ; 2 bytes @ 0x1C
   803                           
   804  003C                     imprime_tela_ajuste4@horas_max:	
   805                           ; 2 bytes @ 0x1C
   806                           
   807  003C                     ___fldiv@new_exp:	
   808                           ; 2 bytes @ 0x1C
   809                           
   810                           
   811                           ; 2 bytes @ 0x1C
   812  003C                     	ds	2
   813  003E                     ??_imprime_tela_ajuste1:
   814  003E                     imprime_tela_ajuste3@minutos_min:	
   815                           ; 1 bytes @ 0x1E
   816                           
   817  003E                     imprime_tela_ajuste4@minutos_max:	
   818                           ; 2 bytes @ 0x1E
   819                           
   820  003E                     ___fldiv@grs:	
   821                           ; 2 bytes @ 0x1E
   822                           
   823                           
   824                           ; 4 bytes @ 0x1E
   825  003E                     	ds	2
   826  0040                     ??_imprime_tela_ajuste3:
   827  0040                     ??_imprime_tela_ajuste4:	
   828                           ; 1 bytes @ 0x20
   829                           
   830                           
   831                           ; 1 bytes @ 0x20
   832  0040                     	ds	1
   833  0041                     ?_ajustes:
   834  0041                     ajustes@hora_min:	
   835                           ; 1 bytes @ 0x21
   836                           
   837                           
   838                           ; 1 bytes @ 0x21
   839  0041                     	ds	1
   840  0042                     ajustes@min_min:
   841  0042                     ___fldiv@bexp:	
   842                           ; 1 bytes @ 0x22
   843                           
   844                           
   845                           ; 1 bytes @ 0x22
   846  0042                     	ds	1
   847  0043                     ajustes@hora_max:
   848  0043                     ___fldiv@aexp:	
   849                           ; 1 bytes @ 0x23
   850                           
   851                           
   852                           ; 1 bytes @ 0x23
   853  0043                     	ds	1
   854  0044                     ?___fladd:
   855  0044                     ajustes@min_max:	
   856                           ; 4 bytes @ 0x24
   857                           
   858  0044                     ___fladd@b:	
   859                           ; 1 bytes @ 0x24
   860                           
   861                           
   862                           ; 4 bytes @ 0x24
   863  0044                     	ds	1
   864  0045                     ??_ajustes:
   865                           
   866                           ; 1 bytes @ 0x25
   867  0045                     	ds	3
   868  0048                     ___fladd@a:
   869                           
   870                           ; 4 bytes @ 0x28
   871  0048                     	ds	1
   872  0049                     ajustes@temp:
   873                           
   874                           ; 1 bytes @ 0x29
   875  0049                     	ds	3
   876  004C                     ??___fladd:
   877                           
   878                           ; 1 bytes @ 0x2C
   879  004C                     	ds	8
   880  0054                     ___fladd@signs:
   881                           
   882                           ; 1 bytes @ 0x34
   883  0054                     	ds	1
   884  0055                     ___fladd@aexp:
   885                           
   886                           ; 1 bytes @ 0x35
   887  0055                     	ds	1
   888  0056                     ___fladd@bexp:
   889                           
   890                           ; 1 bytes @ 0x36
   891  0056                     	ds	1
   892  0057                     ___fladd@grs:
   893                           
   894                           ; 1 bytes @ 0x37
   895  0057                     	ds	1
   896  0058                     ?___fltol:
   897  0058                     ___fltol@f1:	
   898                           ; 4 bytes @ 0x38
   899                           
   900                           
   901                           ; 4 bytes @ 0x38
   902  0058                     	ds	4
   903  005C                     ??___fltol:
   904                           
   905                           ; 1 bytes @ 0x3C
   906  005C                     	ds	5
   907  0061                     ___fltol@sign1:
   908                           
   909                           ; 1 bytes @ 0x41
   910  0061                     	ds	1
   911  0062                     ___fltol@exp1:
   912                           
   913                           ; 1 bytes @ 0x42
   914  0062                     	ds	1
   915  0063                     ?_trunc:
   916  0063                     trunc@x:	
   917                           ; 4 bytes @ 0x43
   918                           
   919                           
   920                           ; 4 bytes @ 0x43
   921  0063                     	ds	4
   922  0067                     trunc@i:
   923                           
   924                           ; 4 bytes @ 0x47
   925  0067                     	ds	4
   926  006B                     trunc@expon:
   927                           
   928                           ; 2 bytes @ 0x4B
   929  006B                     	ds	2
   930                           
   931                           	psect	maintext
   932  0CA7                     __pmaintext:	
   933 ;;
   934 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   935 ;;
   936 ;; *************** function _main *****************
   937 ;; Defined at:
   938 ;;		line 398 in file "main.c"
   939 ;; Parameters:    Size  Location     Type
   940 ;;		None
   941 ;; Auto vars:     Size  Location     Type
   942 ;;  temp            2   36[BANK1 ] int 
   943 ;;  min_max         2   34[BANK1 ] int 
   944 ;;  hora_max        2   32[BANK1 ] int 
   945 ;;  min_min         2   30[BANK1 ] int 
   946 ;;  hora_min        2   28[BANK1 ] int 
   947 ;; Return value:  Size  Location     Type
   948 ;;                  1    wreg      void 
   949 ;; Registers used:
   950 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   951 ;; Tracked objects:
   952 ;;		On entry : B00/0
   953 ;;		On exit  : 0/0
   954 ;;		Unchanged: 0/0
   955 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   956 ;;      Params:         0       0       0       0       0
   957 ;;      Locals:         0       0      18       0       0
   958 ;;      Temps:          0       0       4       0       0
   959 ;;      Totals:         0       0      22       0       0
   960 ;;Total ram usage:       22 bytes
   961 ;; Hardware stack levels required when called: 6
   962 ;; This function calls:
   963 ;;		_LCD_Begin
   964 ;;		___fladd
   965 ;;		___fldiv
   966 ;;		___fltol
   967 ;;		___xxtofl
   968 ;;		_ajustes
   969 ;;		_atualiza_ADC
   970 ;;		_controle_aquecedor
   971 ;;		_imprime_tela_main
   972 ;;		_round
   973 ;; This function is called by:
   974 ;;		Startup code after reset
   975 ;; This function uses a non-reentrant model
   976 ;;
   977                           
   978                           
   979                           ;psect for function _main
   980  0CA7                     _main:
   981  0CA7                     l3758:	
   982                           ;incstack = 0
   983                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   984                           
   985                           
   986                           ;main.c: 400:     OPTION_REG =0b01010101;
   987  0CA7  3055               	movlw	85
   988  0CA8  1683               	bsf	3,5	;RP0=1, select bank1
   989  0CA9  1303               	bcf	3,6	;RP1=0, select bank1
   990  0CAA  0081               	movwf	1	;volatile
   991                           
   992                           ;main.c: 401:     INTCON =0b10100000;
   993  0CAB  30A0               	movlw	160
   994  0CAC  008B               	movwf	11	;volatile
   995                           
   996                           ;main.c: 402:     TRISA =0b00000001;
   997  0CAD  3001               	movlw	1
   998  0CAE  0085               	movwf	5	;volatile
   999                           
  1000                           ;main.c: 403:     TRISB =0b00010011;
  1001  0CAF  3013               	movlw	19
  1002  0CB0  0086               	movwf	6	;volatile
  1003  0CB1                     l3760:
  1004                           
  1005                           ;main.c: 404:     TRISC =0b00000000;
  1006  0CB1  0187               	clrf	7	;volatile
  1007  0CB2                     l3762:
  1008                           
  1009                           ;main.c: 405:     TRISD =0b00000000;
  1010  0CB2  0188               	clrf	8	;volatile
  1011  0CB3                     l3764:
  1012                           
  1013                           ;main.c: 406:     TRISE =0b00000000;
  1014  0CB3  0189               	clrf	9	;volatile
  1015  0CB4                     l3766:
  1016                           
  1017                           ;main.c: 407:     ADCON0 =0b00000001;
  1018  0CB4  3001               	movlw	1
  1019  0CB5  1283               	bcf	3,5	;RP0=0, select bank0
  1020  0CB6  1303               	bcf	3,6	;RP1=0, select bank0
  1021  0CB7  009F               	movwf	31	;volatile
  1022  0CB8                     l3768:
  1023                           
  1024                           ;main.c: 408:     ADCON1 =0b10001110;
  1025  0CB8  308E               	movlw	142
  1026  0CB9  1683               	bsf	3,5	;RP0=1, select bank1
  1027  0CBA  1303               	bcf	3,6	;RP1=0, select bank1
  1028  0CBB  009F               	movwf	31	;volatile
  1029  0CBC                     l3770:
  1030                           
  1031                           ;main.c: 410:     LCD_Begin();
  1032  0CBC  120A  158A  2188  120A  158A  	fcall	_LCD_Begin
  1033  0CC1                     l3772:
  1034                           
  1035                           ;main.c: 412:     int temp =25;
  1036  0CC1  3019               	movlw	25
  1037  0CC2  1683               	bsf	3,5	;RP0=1, select bank1
  1038  0CC3  1303               	bcf	3,6	;RP1=0, select bank1
  1039  0CC4  00C4               	movwf	main@temp^(0+128)
  1040  0CC5  3000               	movlw	0
  1041  0CC6  00C5               	movwf	(main@temp^(0+128)+1)
  1042  0CC7                     l3774:
  1043                           
  1044                           ;main.c: 413:     int hora_min =0;
  1045  0CC7  01BC               	clrf	main@hora_min^(0+128)
  1046  0CC8  01BD               	clrf	(main@hora_min+1)^(0+128)
  1047  0CC9                     l3776:
  1048                           
  1049                           ;main.c: 414:     int min_min =0;
  1050  0CC9  01BE               	clrf	main@min_min^(0+128)
  1051  0CCA  01BF               	clrf	(main@min_min+1)^(0+128)
  1052  0CCB                     l3778:
  1053                           
  1054                           ;main.c: 415:     int hora_max =0;
  1055  0CCB  01C0               	clrf	main@hora_max^(0+128)
  1056  0CCC  01C1               	clrf	(main@hora_max+1)^(0+128)
  1057  0CCD                     l3780:
  1058                           
  1059                           ;main.c: 416:     int min_max =0;
  1060  0CCD  01C2               	clrf	main@min_max^(0+128)
  1061  0CCE  01C3               	clrf	(main@min_max+1)^(0+128)
  1062  0CCF                     l3782:
  1063                           
  1064                           ;main.c: 418:     {;main.c: 419:         atualiza_ADC();
  1065  0CCF  120A  158A  208C  120A  158A  	fcall	_atualiza_ADC
  1066  0CD4                     l3784:
  1067                           
  1068                           ;main.c: 422:         Temperatura=round(((ADRESL + (ADRESH *256))/2.046)-50);
  1069  0CD4  1283               	bcf	3,5	;RP0=0, select bank0
  1070  0CD5  1303               	bcf	3,6	;RP1=0, select bank0
  1071  0CD6  081E               	movf	30,w	;volatile
  1072  0CD7  1683               	bsf	3,5	;RP0=1, select bank1
  1073  0CD8  1303               	bcf	3,6	;RP1=0, select bank1
  1074  0CD9  00B0               	movwf	??_main^(0+128)
  1075  0CDA  01B1               	clrf	(??_main^(0+128)+1)
  1076  0CDB  0830               	movf	??_main^(0+128),w
  1077  0CDC  00B1               	movwf	(??_main^(0+128)+1)
  1078  0CDD  01B0               	clrf	??_main^(0+128)
  1079  0CDE  081E               	movf	30,w	;volatile
  1080  0CDF  0730               	addwf	??_main^(0+128),w
  1081  0CE0  00F3               	movwf	___xxtofl@val
  1082  0CE1  0831               	movf	(??_main+1)^(0+128),w
  1083  0CE2  1803               	skipnc
  1084  0CE3  0A31               	incf	(??_main+1)^(0+128),w
  1085  0CE4  00F4               	movwf	___xxtofl@val+1
  1086  0CE5  01F5               	clrf	___xxtofl@val+2
  1087  0CE6  1BF4               	btfsc	___xxtofl@val+1,7
  1088  0CE7  03F5               	decf	___xxtofl@val+2,f
  1089  0CE8  0875               	movf	___xxtofl@val+2,w
  1090  0CE9  00F6               	movwf	___xxtofl@val+3
  1091  0CEA  3001               	movlw	1
  1092  0CEB  120A  158A  222C  120A  158A  	fcall	___xxtofl
  1093  0CF0  0876               	movf	?___xxtofl+3,w
  1094  0CF1  1283               	bcf	3,5	;RP0=0, select bank0
  1095  0CF2  1303               	bcf	3,6	;RP1=0, select bank0
  1096  0CF3  00B1               	movwf	___fldiv@b+3
  1097  0CF4  0875               	movf	?___xxtofl+2,w
  1098  0CF5  00B0               	movwf	___fldiv@b+2
  1099  0CF6  0874               	movf	?___xxtofl+1,w
  1100  0CF7  00AF               	movwf	___fldiv@b+1
  1101  0CF8  0873               	movf	?___xxtofl,w
  1102  0CF9  00AE               	movwf	___fldiv@b
  1103  0CFA  3040               	movlw	64
  1104  0CFB  00AD               	movwf	___fldiv@a+3
  1105  0CFC  3002               	movlw	2
  1106  0CFD  00AC               	movwf	___fldiv@a+2
  1107  0CFE  30F1               	movlw	241
  1108  0CFF  00AB               	movwf	___fldiv@a+1
  1109  0D00  30AA               	movlw	170
  1110  0D01  00AA               	movwf	___fldiv@a
  1111  0D02  120A  118A  25B3  120A  158A  	fcall	___fldiv
  1112  0D07  1283               	bcf	3,5	;RP0=0, select bank0
  1113  0D08  1303               	bcf	3,6	;RP1=0, select bank0
  1114  0D09  082D               	movf	?___fldiv+3,w
  1115  0D0A  00CB               	movwf	___fladd@a+3
  1116  0D0B  082C               	movf	?___fldiv+2,w
  1117  0D0C  00CA               	movwf	___fladd@a+2
  1118  0D0D  082B               	movf	?___fldiv+1,w
  1119  0D0E  00C9               	movwf	___fladd@a+1
  1120  0D0F  082A               	movf	?___fldiv,w
  1121  0D10  00C8               	movwf	___fladd@a
  1122  0D11  30C2               	movlw	194
  1123  0D12  00C7               	movwf	___fladd@b+3
  1124  0D13  3048               	movlw	72
  1125  0D14  00C6               	movwf	___fladd@b+2
  1126  0D15  3000               	movlw	0
  1127  0D16  00C5               	movwf	___fladd@b+1
  1128  0D17  3000               	movlw	0
  1129  0D18  00C4               	movwf	___fladd@b
  1130  0D19  120A  118A  232B  120A  158A  	fcall	___fladd
  1131  0D1E  1283               	bcf	3,5	;RP0=0, select bank0
  1132  0D1F  1303               	bcf	3,6	;RP1=0, select bank0
  1133  0D20  0847               	movf	?___fladd+3,w
  1134  0D21  1683               	bsf	3,5	;RP0=1, select bank1
  1135  0D22  1303               	bcf	3,6	;RP1=0, select bank1
  1136  0D23  00B7               	movwf	(_main$1008+3)^(0+128)
  1137  0D24  1283               	bcf	3,5	;RP0=0, select bank0
  1138  0D25  1303               	bcf	3,6	;RP1=0, select bank0
  1139  0D26  0846               	movf	?___fladd+2,w
  1140  0D27  1683               	bsf	3,5	;RP0=1, select bank1
  1141  0D28  1303               	bcf	3,6	;RP1=0, select bank1
  1142  0D29  00B6               	movwf	(_main$1008+2)^(0+128)
  1143  0D2A  1283               	bcf	3,5	;RP0=0, select bank0
  1144  0D2B  1303               	bcf	3,6	;RP1=0, select bank0
  1145  0D2C  0845               	movf	?___fladd+1,w
  1146  0D2D  1683               	bsf	3,5	;RP0=1, select bank1
  1147  0D2E  1303               	bcf	3,6	;RP1=0, select bank1
  1148  0D2F  00B5               	movwf	(_main$1008+1)^(0+128)
  1149  0D30  1283               	bcf	3,5	;RP0=0, select bank0
  1150  0D31  1303               	bcf	3,6	;RP1=0, select bank0
  1151  0D32  0844               	movf	?___fladd,w
  1152  0D33  1683               	bsf	3,5	;RP0=1, select bank1
  1153  0D34  1303               	bcf	3,6	;RP1=0, select bank1
  1154  0D35  00B4               	movwf	_main$1008^(0+128)
  1155  0D36                     l3786:
  1156                           
  1157                           ;main.c: 422:         Temperatura=round(((ADRESL + (ADRESH *256))/2.046)-50);
  1158  0D36  0837               	movf	(_main$1008+3)^(0+128),w
  1159  0D37  00AB               	movwf	(round@x+3)^(0+128)
  1160  0D38  0836               	movf	(_main$1008+2)^(0+128),w
  1161  0D39  00AA               	movwf	(round@x+2)^(0+128)
  1162  0D3A  0835               	movf	(_main$1008+1)^(0+128),w
  1163  0D3B  00A9               	movwf	(round@x+1)^(0+128)
  1164  0D3C  0834               	movf	_main$1008^(0+128),w
  1165  0D3D  00A8               	movwf	round@x^(0+128)
  1166  0D3E  120A  158A  22E8  120A  158A  	fcall	_round
  1167  0D43  1683               	bsf	3,5	;RP0=1, select bank1
  1168  0D44  1303               	bcf	3,6	;RP1=0, select bank1
  1169  0D45  082B               	movf	(?_round+3)^(0+128),w
  1170  0D46  00BB               	movwf	(_main$1009+3)^(0+128)
  1171  0D47  082A               	movf	(?_round+2)^(0+128),w
  1172  0D48  00BA               	movwf	(_main$1009+2)^(0+128)
  1173  0D49  0829               	movf	(?_round+1)^(0+128),w
  1174  0D4A  00B9               	movwf	(_main$1009+1)^(0+128)
  1175  0D4B  0828               	movf	?_round^(0+128),w
  1176  0D4C  00B8               	movwf	_main$1009^(0+128)
  1177  0D4D                     l3788:
  1178                           
  1179                           ;main.c: 422:         Temperatura=round(((ADRESL + (ADRESH *256))/2.046)-50);
  1180  0D4D  083B               	movf	(_main$1009+3)^(0+128),w
  1181  0D4E  1283               	bcf	3,5	;RP0=0, select bank0
  1182  0D4F  1303               	bcf	3,6	;RP1=0, select bank0
  1183  0D50  00DB               	movwf	___fltol@f1+3
  1184  0D51  1683               	bsf	3,5	;RP0=1, select bank1
  1185  0D52  1303               	bcf	3,6	;RP1=0, select bank1
  1186  0D53  083A               	movf	(_main$1009+2)^(0+128),w
  1187  0D54  1283               	bcf	3,5	;RP0=0, select bank0
  1188  0D55  1303               	bcf	3,6	;RP1=0, select bank0
  1189  0D56  00DA               	movwf	___fltol@f1+2
  1190  0D57  1683               	bsf	3,5	;RP0=1, select bank1
  1191  0D58  1303               	bcf	3,6	;RP1=0, select bank1
  1192  0D59  0839               	movf	(_main$1009+1)^(0+128),w
  1193  0D5A  1283               	bcf	3,5	;RP0=0, select bank0
  1194  0D5B  1303               	bcf	3,6	;RP1=0, select bank0
  1195  0D5C  00D9               	movwf	___fltol@f1+1
  1196  0D5D  1683               	bsf	3,5	;RP0=1, select bank1
  1197  0D5E  1303               	bcf	3,6	;RP1=0, select bank1
  1198  0D5F  0838               	movf	_main$1009^(0+128),w
  1199  0D60  1283               	bcf	3,5	;RP0=0, select bank0
  1200  0D61  1303               	bcf	3,6	;RP1=0, select bank0
  1201  0D62  00D8               	movwf	___fltol@f1
  1202  0D63  120A  158A  210C  120A  158A  	fcall	___fltol
  1203  0D68  1283               	bcf	3,5	;RP0=0, select bank0
  1204  0D69  1303               	bcf	3,6	;RP1=0, select bank0
  1205  0D6A  0859               	movf	?___fltol+1,w
  1206  0D6B  1683               	bsf	3,5	;RP0=1, select bank1
  1207  0D6C  1303               	bcf	3,6	;RP1=0, select bank1
  1208  0D6D  00C9               	movwf	(_Temperatura+1)^(0+128)
  1209  0D6E  1283               	bcf	3,5	;RP0=0, select bank0
  1210  0D6F  1303               	bcf	3,6	;RP1=0, select bank0
  1211  0D70  0858               	movf	?___fltol,w
  1212  0D71  1683               	bsf	3,5	;RP0=1, select bank1
  1213  0D72  1303               	bcf	3,6	;RP1=0, select bank1
  1214  0D73  00C8               	movwf	_Temperatura^(0+128)
  1215  0D74                     l3790:
  1216                           
  1217                           ;main.c: 425:         imprime_tela_main();
  1218  0D74  160A  118A  27A5  120A  158A  	fcall	_imprime_tela_main
  1219  0D79                     l3792:
  1220                           
  1221                           ;main.c: 426:         if(PORTBbits.RB0==0)
  1222  0D79  1283               	bcf	3,5	;RP0=0, select bank0
  1223  0D7A  1303               	bcf	3,6	;RP1=0, select bank0
  1224  0D7B  1806               	btfsc	6,0	;volatile
  1225  0D7C  2D7E               	goto	u4791
  1226  0D7D  2D7F               	goto	u4790
  1227  0D7E                     u4791:
  1228  0D7E  2DA5               	goto	l3796
  1229  0D7F                     u4790:
  1230  0D7F                     l3794:
  1231                           
  1232                           ;main.c: 427:             ajustes(&temp,&hora_min,&min_min,&hora_max,&min_max);
  1233  0D7F  30BC               	movlw	(low (main@hora_min| 0))& (0+255)
  1234  0D80  1683               	bsf	3,5	;RP0=1, select bank1
  1235  0D81  1303               	bcf	3,6	;RP1=0, select bank1
  1236  0D82  00B0               	movwf	??_main^(0+128)
  1237  0D83  0830               	movf	??_main^(0+128),w
  1238  0D84  1283               	bcf	3,5	;RP0=0, select bank0
  1239  0D85  1303               	bcf	3,6	;RP1=0, select bank0
  1240  0D86  00C1               	movwf	ajustes@hora_min
  1241  0D87  30BE               	movlw	(low (main@min_min| 0))& (0+255)
  1242  0D88  1683               	bsf	3,5	;RP0=1, select bank1
  1243  0D89  1303               	bcf	3,6	;RP1=0, select bank1
  1244  0D8A  00B1               	movwf	(??_main+1)^(0+128)
  1245  0D8B  0831               	movf	(??_main+1)^(0+128),w
  1246  0D8C  1283               	bcf	3,5	;RP0=0, select bank0
  1247  0D8D  1303               	bcf	3,6	;RP1=0, select bank0
  1248  0D8E  00C2               	movwf	ajustes@min_min
  1249  0D8F  30C0               	movlw	(low (main@hora_max| 0))& (0+255)
  1250  0D90  1683               	bsf	3,5	;RP0=1, select bank1
  1251  0D91  1303               	bcf	3,6	;RP1=0, select bank1
  1252  0D92  00B2               	movwf	(??_main+2)^(0+128)
  1253  0D93  0832               	movf	(??_main+2)^(0+128),w
  1254  0D94  1283               	bcf	3,5	;RP0=0, select bank0
  1255  0D95  1303               	bcf	3,6	;RP1=0, select bank0
  1256  0D96  00C3               	movwf	ajustes@hora_max
  1257  0D97  30C2               	movlw	(low (main@min_max| 0))& (0+255)
  1258  0D98  1683               	bsf	3,5	;RP0=1, select bank1
  1259  0D99  1303               	bcf	3,6	;RP1=0, select bank1
  1260  0D9A  00B3               	movwf	(??_main+3)^(0+128)
  1261  0D9B  0833               	movf	(??_main+3)^(0+128),w
  1262  0D9C  1283               	bcf	3,5	;RP0=0, select bank0
  1263  0D9D  1303               	bcf	3,6	;RP1=0, select bank0
  1264  0D9E  00C4               	movwf	ajustes@min_max
  1265  0D9F  30C4               	movlw	(low (main@temp| 0))& (0+255)
  1266  0DA0  120A  118A  2027  120A  158A  	fcall	_ajustes
  1267  0DA5                     l3796:
  1268                           
  1269                           ;main.c: 429:         if(PORTBbits.RB4==0)
  1270  0DA5  1283               	bcf	3,5	;RP0=0, select bank0
  1271  0DA6  1303               	bcf	3,6	;RP1=0, select bank0
  1272  0DA7  1A06               	btfsc	6,4	;volatile
  1273  0DA8  2DAA               	goto	u4801
  1274  0DA9  2DAB               	goto	u4800
  1275  0DAA                     u4801:
  1276  0DAA  2E27               	goto	l204
  1277  0DAB                     u4800:
  1278  0DAB                     l3798:
  1279                           
  1280                           ;main.c: 430:         {;main.c: 431:             if (Temperatura<(temp-5))
  1281  0DAB  1683               	bsf	3,5	;RP0=1, select bank1
  1282  0DAC  1303               	bcf	3,6	;RP1=0, select bank1
  1283  0DAD  0844               	movf	main@temp^(0+128),w
  1284  0DAE  3EFB               	addlw	251
  1285  0DAF  00B0               	movwf	??_main^(0+128)
  1286  0DB0  0845               	movf	(main@temp+1)^(0+128),w
  1287  0DB1  1803               	skipnc
  1288  0DB2  3E01               	addlw	1
  1289  0DB3  3EFF               	addlw	255
  1290  0DB4  00B1               	movwf	(??_main+1)^(0+128)
  1291  0DB5  0849               	movf	(_Temperatura+1)^(0+128),w
  1292  0DB6  3A80               	xorlw	128
  1293  0DB7  00B2               	movwf	(??_main+2)^(0+128)
  1294  0DB8  0831               	movf	(??_main+1)^(0+128),w
  1295  0DB9  3A80               	xorlw	128
  1296  0DBA  0232               	subwf	(??_main+2)^(0+128),w
  1297  0DBB  1D03               	skipz
  1298  0DBC  2DBF               	goto	u4815
  1299  0DBD  0830               	movf	??_main^(0+128),w
  1300  0DBE  0248               	subwf	_Temperatura^(0+128),w
  1301  0DBF                     u4815:
  1302  0DBF  1803               	skipnc
  1303  0DC0  2DC2               	goto	u4811
  1304  0DC1  2DC3               	goto	u4810
  1305  0DC2                     u4811:
  1306  0DC2  2E0B               	goto	l3802
  1307  0DC3                     u4810:
  1308  0DC3                     l3800:
  1309                           
  1310                           ;main.c: 432:                 PORTCbits.RC0 = controle_aquecedor(temp,hora_min,min_min,h
      +                          ora_max,min_max);
  1311  0DC3  1683               	bsf	3,5	;RP0=1, select bank1
  1312  0DC4  1303               	bcf	3,6	;RP1=0, select bank1
  1313  0DC5  0845               	movf	(main@temp+1)^(0+128),w
  1314  0DC6  1283               	bcf	3,5	;RP0=0, select bank0
  1315  0DC7  1303               	bcf	3,6	;RP1=0, select bank0
  1316  0DC8  00A1               	movwf	controle_aquecedor@temp+1
  1317  0DC9  1683               	bsf	3,5	;RP0=1, select bank1
  1318  0DCA  1303               	bcf	3,6	;RP1=0, select bank1
  1319  0DCB  0844               	movf	main@temp^(0+128),w
  1320  0DCC  1283               	bcf	3,5	;RP0=0, select bank0
  1321  0DCD  1303               	bcf	3,6	;RP1=0, select bank0
  1322  0DCE  00A0               	movwf	controle_aquecedor@temp
  1323  0DCF  1683               	bsf	3,5	;RP0=1, select bank1
  1324  0DD0  1303               	bcf	3,6	;RP1=0, select bank1
  1325  0DD1  083D               	movf	(main@hora_min+1)^(0+128),w
  1326  0DD2  1283               	bcf	3,5	;RP0=0, select bank0
  1327  0DD3  1303               	bcf	3,6	;RP1=0, select bank0
  1328  0DD4  00A3               	movwf	controle_aquecedor@hora_min+1
  1329  0DD5  1683               	bsf	3,5	;RP0=1, select bank1
  1330  0DD6  1303               	bcf	3,6	;RP1=0, select bank1
  1331  0DD7  083C               	movf	main@hora_min^(0+128),w
  1332  0DD8  1283               	bcf	3,5	;RP0=0, select bank0
  1333  0DD9  1303               	bcf	3,6	;RP1=0, select bank0
  1334  0DDA  00A2               	movwf	controle_aquecedor@hora_min
  1335  0DDB  1683               	bsf	3,5	;RP0=1, select bank1
  1336  0DDC  1303               	bcf	3,6	;RP1=0, select bank1
  1337  0DDD  083F               	movf	(main@min_min+1)^(0+128),w
  1338  0DDE  1283               	bcf	3,5	;RP0=0, select bank0
  1339  0DDF  1303               	bcf	3,6	;RP1=0, select bank0
  1340  0DE0  00A5               	movwf	controle_aquecedor@min_min+1
  1341  0DE1  1683               	bsf	3,5	;RP0=1, select bank1
  1342  0DE2  1303               	bcf	3,6	;RP1=0, select bank1
  1343  0DE3  083E               	movf	main@min_min^(0+128),w
  1344  0DE4  1283               	bcf	3,5	;RP0=0, select bank0
  1345  0DE5  1303               	bcf	3,6	;RP1=0, select bank0
  1346  0DE6  00A4               	movwf	controle_aquecedor@min_min
  1347  0DE7  1683               	bsf	3,5	;RP0=1, select bank1
  1348  0DE8  1303               	bcf	3,6	;RP1=0, select bank1
  1349  0DE9  0841               	movf	(main@hora_max+1)^(0+128),w
  1350  0DEA  1283               	bcf	3,5	;RP0=0, select bank0
  1351  0DEB  1303               	bcf	3,6	;RP1=0, select bank0
  1352  0DEC  00A7               	movwf	controle_aquecedor@hora_max+1
  1353  0DED  1683               	bsf	3,5	;RP0=1, select bank1
  1354  0DEE  1303               	bcf	3,6	;RP1=0, select bank1
  1355  0DEF  0840               	movf	main@hora_max^(0+128),w
  1356  0DF0  1283               	bcf	3,5	;RP0=0, select bank0
  1357  0DF1  1303               	bcf	3,6	;RP1=0, select bank0
  1358  0DF2  00A6               	movwf	controle_aquecedor@hora_max
  1359  0DF3  1683               	bsf	3,5	;RP0=1, select bank1
  1360  0DF4  1303               	bcf	3,6	;RP1=0, select bank1
  1361  0DF5  0843               	movf	(main@min_max+1)^(0+128),w
  1362  0DF6  1283               	bcf	3,5	;RP0=0, select bank0
  1363  0DF7  1303               	bcf	3,6	;RP1=0, select bank0
  1364  0DF8  00A9               	movwf	controle_aquecedor@min_max+1
  1365  0DF9  1683               	bsf	3,5	;RP0=1, select bank1
  1366  0DFA  1303               	bcf	3,6	;RP1=0, select bank1
  1367  0DFB  0842               	movf	main@min_max^(0+128),w
  1368  0DFC  1283               	bcf	3,5	;RP0=0, select bank0
  1369  0DFD  1303               	bcf	3,6	;RP1=0, select bank0
  1370  0DFE  00A8               	movwf	controle_aquecedor@min_max
  1371  0DFF  120A  158A  23B3  120A  158A  	fcall	_controle_aquecedor
  1372  0E04  1283               	bcf	3,5	;RP0=0, select bank0
  1373  0E05  1303               	bcf	3,6	;RP1=0, select bank0
  1374  0E06  0807               	movf	7,w	;volatile
  1375  0E07  0620               	xorwf	?_controle_aquecedor,w
  1376  0E08  39FE               	andlw	-2
  1377  0E09  0620               	xorwf	?_controle_aquecedor,w
  1378  0E0A  0087               	movwf	7	;volatile
  1379  0E0B                     l3802:
  1380                           
  1381                           ;main.c: 433:             if (Temperatura>(temp+5))
  1382  0E0B  1683               	bsf	3,5	;RP0=1, select bank1
  1383  0E0C  1303               	bcf	3,6	;RP1=0, select bank1
  1384  0E0D  0844               	movf	main@temp^(0+128),w
  1385  0E0E  3E05               	addlw	5
  1386  0E0F  00B0               	movwf	??_main^(0+128)
  1387  0E10  0845               	movf	(main@temp+1)^(0+128),w
  1388  0E11  1803               	skipnc
  1389  0E12  3E01               	addlw	1
  1390  0E13  3E00               	addlw	0
  1391  0E14  00B1               	movwf	(??_main+1)^(0+128)
  1392  0E15  0831               	movf	(??_main+1)^(0+128),w
  1393  0E16  3A80               	xorlw	128
  1394  0E17  00B2               	movwf	(??_main+2)^(0+128)
  1395  0E18  0849               	movf	(_Temperatura+1)^(0+128),w
  1396  0E19  3A80               	xorlw	128
  1397  0E1A  0232               	subwf	(??_main+2)^(0+128),w
  1398  0E1B  1D03               	skipz
  1399  0E1C  2E1F               	goto	u4825
  1400  0E1D  0848               	movf	_Temperatura^(0+128),w
  1401  0E1E  0230               	subwf	??_main^(0+128),w
  1402  0E1F                     u4825:
  1403  0E1F  1803               	skipnc
  1404  0E20  2E22               	goto	u4821
  1405  0E21  2E23               	goto	u4820
  1406  0E22                     u4821:
  1407  0E22  2CCF               	goto	l3782
  1408  0E23                     u4820:
  1409  0E23                     l3804:
  1410                           
  1411                           ;main.c: 434:                 PORTCbits.RC0 = 0;
  1412  0E23  1283               	bcf	3,5	;RP0=0, select bank0
  1413  0E24  1303               	bcf	3,6	;RP1=0, select bank0
  1414  0E25  1007               	bcf	7,0	;volatile
  1415  0E26  2CCF               	goto	l3782
  1416  0E27                     l204:	
  1417                           ;main.c: 436:         else
  1418                           
  1419                           
  1420                           ;main.c: 437:             PORTCbits.RC0=0;
  1421  0E27  1007               	bcf	7,0	;volatile
  1422  0E28  2CCF               	goto	l3782
  1423  0E29  120A  118A  2810   	ljmp	start
  1424  0E2C                     __end_of_main:
  1425                           
  1426                           	psect	text1
  1427  0AE8                     __ptext1:	
  1428 ;; *************** function _round *****************
  1429 ;; Defined at:
  1430 ;;		line 6 in file "D:\Programas\XC8 compiler\pic\sources\c90\common\round.c"
  1431 ;; Parameters:    Size  Location     Type
  1432 ;;  x               4    8[BANK1 ] void 
  1433 ;; Auto vars:     Size  Location     Type
  1434 ;;  f               4   12[BANK1 ] void 
  1435 ;; Return value:  Size  Location     Type
  1436 ;;                  4    8[BANK1 ] void 
  1437 ;; Registers used:
  1438 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1439 ;; Tracked objects:
  1440 ;;		On entry : 0/0
  1441 ;;		On exit  : 0/0
  1442 ;;		Unchanged: 0/0
  1443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1444 ;;      Params:         0       0       4       0       0
  1445 ;;      Locals:         0       0       4       0       0
  1446 ;;      Temps:          0       0       0       0       0
  1447 ;;      Totals:         0       0       8       0       0
  1448 ;;Total ram usage:        8 bytes
  1449 ;; Hardware stack levels used: 1
  1450 ;; Hardware stack levels required when called: 4
  1451 ;; This function calls:
  1452 ;;		___fladd
  1453 ;;		___flsub
  1454 ;;		_trunc
  1455 ;; This function is called by:
  1456 ;;		_main
  1457 ;; This function uses a non-reentrant model
  1458 ;;
  1459                           
  1460                           
  1461                           ;psect for function _round
  1462  0AE8                     _round:
  1463  0AE8                     l3746:	
  1464                           ;incstack = 0
  1465                           ; Regs used in _round: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1466                           
  1467  0AE8  1683               	bsf	3,5	;RP0=1, select bank1
  1468  0AE9  1303               	bcf	3,6	;RP1=0, select bank1
  1469  0AEA  082B               	movf	(round@x+3)^(0+128),w
  1470  0AEB  1283               	bcf	3,5	;RP0=0, select bank0
  1471  0AEC  1303               	bcf	3,6	;RP1=0, select bank0
  1472  0AED  00E6               	movwf	trunc@x+3
  1473  0AEE  1683               	bsf	3,5	;RP0=1, select bank1
  1474  0AEF  1303               	bcf	3,6	;RP1=0, select bank1
  1475  0AF0  082A               	movf	(round@x+2)^(0+128),w
  1476  0AF1  1283               	bcf	3,5	;RP0=0, select bank0
  1477  0AF2  1303               	bcf	3,6	;RP1=0, select bank0
  1478  0AF3  00E5               	movwf	trunc@x+2
  1479  0AF4  1683               	bsf	3,5	;RP0=1, select bank1
  1480  0AF5  1303               	bcf	3,6	;RP1=0, select bank1
  1481  0AF6  0829               	movf	(round@x+1)^(0+128),w
  1482  0AF7  1283               	bcf	3,5	;RP0=0, select bank0
  1483  0AF8  1303               	bcf	3,6	;RP1=0, select bank0
  1484  0AF9  00E4               	movwf	trunc@x+1
  1485  0AFA  1683               	bsf	3,5	;RP0=1, select bank1
  1486  0AFB  1303               	bcf	3,6	;RP1=0, select bank1
  1487  0AFC  0828               	movf	round@x^(0+128),w
  1488  0AFD  1283               	bcf	3,5	;RP0=0, select bank0
  1489  0AFE  1303               	bcf	3,6	;RP1=0, select bank0
  1490  0AFF  00E3               	movwf	trunc@x
  1491  0B00  120A  118A  2790  120A  158A  	fcall	_trunc
  1492  0B05  1283               	bcf	3,5	;RP0=0, select bank0
  1493  0B06  1303               	bcf	3,6	;RP1=0, select bank0
  1494  0B07  0866               	movf	?_trunc+3,w
  1495  0B08  1683               	bsf	3,5	;RP0=1, select bank1
  1496  0B09  1303               	bcf	3,6	;RP1=0, select bank1
  1497  0B0A  00A3               	movwf	(___flsub@a+3)^(0+128)
  1498  0B0B  1283               	bcf	3,5	;RP0=0, select bank0
  1499  0B0C  1303               	bcf	3,6	;RP1=0, select bank0
  1500  0B0D  0865               	movf	?_trunc+2,w
  1501  0B0E  1683               	bsf	3,5	;RP0=1, select bank1
  1502  0B0F  1303               	bcf	3,6	;RP1=0, select bank1
  1503  0B10  00A2               	movwf	(___flsub@a+2)^(0+128)
  1504  0B11  1283               	bcf	3,5	;RP0=0, select bank0
  1505  0B12  1303               	bcf	3,6	;RP1=0, select bank0
  1506  0B13  0864               	movf	?_trunc+1,w
  1507  0B14  1683               	bsf	3,5	;RP0=1, select bank1
  1508  0B15  1303               	bcf	3,6	;RP1=0, select bank1
  1509  0B16  00A1               	movwf	(___flsub@a+1)^(0+128)
  1510  0B17  1283               	bcf	3,5	;RP0=0, select bank0
  1511  0B18  1303               	bcf	3,6	;RP1=0, select bank0
  1512  0B19  0863               	movf	?_trunc,w
  1513  0B1A  1683               	bsf	3,5	;RP0=1, select bank1
  1514  0B1B  1303               	bcf	3,6	;RP1=0, select bank1
  1515  0B1C  00A0               	movwf	___flsub@a^(0+128)
  1516  0B1D  082B               	movf	(round@x+3)^(0+128),w
  1517  0B1E  00A7               	movwf	(___flsub@b+3)^(0+128)
  1518  0B1F  082A               	movf	(round@x+2)^(0+128),w
  1519  0B20  00A6               	movwf	(___flsub@b+2)^(0+128)
  1520  0B21  0829               	movf	(round@x+1)^(0+128),w
  1521  0B22  00A5               	movwf	(___flsub@b+1)^(0+128)
  1522  0B23  0828               	movf	round@x^(0+128),w
  1523  0B24  00A4               	movwf	___flsub@b^(0+128)
  1524  0B25  160A  118A  265D  120A  158A  	fcall	___flsub
  1525  0B2A  1683               	bsf	3,5	;RP0=1, select bank1
  1526  0B2B  1303               	bcf	3,6	;RP1=0, select bank1
  1527  0B2C  0823               	movf	(?___flsub+3)^(0+128),w
  1528  0B2D  00AF               	movwf	(round@f+3)^(0+128)
  1529  0B2E  0822               	movf	(?___flsub+2)^(0+128),w
  1530  0B2F  00AE               	movwf	(round@f+2)^(0+128)
  1531  0B30  0821               	movf	(?___flsub+1)^(0+128),w
  1532  0B31  00AD               	movwf	(round@f+1)^(0+128)
  1533  0B32  0820               	movf	?___flsub^(0+128),w
  1534  0B33  00AC               	movwf	round@f^(0+128)
  1535  0B34                     l3748:
  1536  0B34  082F               	movf	(round@f+3)^(0+128),w
  1537  0B35  1283               	bcf	3,5	;RP0=0, select bank0
  1538  0B36  1303               	bcf	3,6	;RP1=0, select bank0
  1539  0B37  00C7               	movwf	___fladd@b+3
  1540  0B38  1683               	bsf	3,5	;RP0=1, select bank1
  1541  0B39  1303               	bcf	3,6	;RP1=0, select bank1
  1542  0B3A  082E               	movf	(round@f+2)^(0+128),w
  1543  0B3B  1283               	bcf	3,5	;RP0=0, select bank0
  1544  0B3C  1303               	bcf	3,6	;RP1=0, select bank0
  1545  0B3D  00C6               	movwf	___fladd@b+2
  1546  0B3E  1683               	bsf	3,5	;RP0=1, select bank1
  1547  0B3F  1303               	bcf	3,6	;RP1=0, select bank1
  1548  0B40  082D               	movf	(round@f+1)^(0+128),w
  1549  0B41  1283               	bcf	3,5	;RP0=0, select bank0
  1550  0B42  1303               	bcf	3,6	;RP1=0, select bank0
  1551  0B43  00C5               	movwf	___fladd@b+1
  1552  0B44  1683               	bsf	3,5	;RP0=1, select bank1
  1553  0B45  1303               	bcf	3,6	;RP1=0, select bank1
  1554  0B46  082C               	movf	round@f^(0+128),w
  1555  0B47  1283               	bcf	3,5	;RP0=0, select bank0
  1556  0B48  1303               	bcf	3,6	;RP1=0, select bank0
  1557  0B49  00C4               	movwf	___fladd@b
  1558  0B4A  1683               	bsf	3,5	;RP0=1, select bank1
  1559  0B4B  1303               	bcf	3,6	;RP1=0, select bank1
  1560  0B4C  082B               	movf	(round@x+3)^(0+128),w
  1561  0B4D  1283               	bcf	3,5	;RP0=0, select bank0
  1562  0B4E  1303               	bcf	3,6	;RP1=0, select bank0
  1563  0B4F  00CB               	movwf	___fladd@a+3
  1564  0B50  1683               	bsf	3,5	;RP0=1, select bank1
  1565  0B51  1303               	bcf	3,6	;RP1=0, select bank1
  1566  0B52  082A               	movf	(round@x+2)^(0+128),w
  1567  0B53  1283               	bcf	3,5	;RP0=0, select bank0
  1568  0B54  1303               	bcf	3,6	;RP1=0, select bank0
  1569  0B55  00CA               	movwf	___fladd@a+2
  1570  0B56  1683               	bsf	3,5	;RP0=1, select bank1
  1571  0B57  1303               	bcf	3,6	;RP1=0, select bank1
  1572  0B58  0829               	movf	(round@x+1)^(0+128),w
  1573  0B59  1283               	bcf	3,5	;RP0=0, select bank0
  1574  0B5A  1303               	bcf	3,6	;RP1=0, select bank0
  1575  0B5B  00C9               	movwf	___fladd@a+1
  1576  0B5C  1683               	bsf	3,5	;RP0=1, select bank1
  1577  0B5D  1303               	bcf	3,6	;RP1=0, select bank1
  1578  0B5E  0828               	movf	round@x^(0+128),w
  1579  0B5F  1283               	bcf	3,5	;RP0=0, select bank0
  1580  0B60  1303               	bcf	3,6	;RP1=0, select bank0
  1581  0B61  00C8               	movwf	___fladd@a
  1582  0B62  120A  118A  232B  120A  158A  	fcall	___fladd
  1583  0B67  1283               	bcf	3,5	;RP0=0, select bank0
  1584  0B68  1303               	bcf	3,6	;RP1=0, select bank0
  1585  0B69  0847               	movf	?___fladd+3,w
  1586  0B6A  1683               	bsf	3,5	;RP0=1, select bank1
  1587  0B6B  1303               	bcf	3,6	;RP1=0, select bank1
  1588  0B6C  00AB               	movwf	(round@x+3)^(0+128)
  1589  0B6D  1283               	bcf	3,5	;RP0=0, select bank0
  1590  0B6E  1303               	bcf	3,6	;RP1=0, select bank0
  1591  0B6F  0846               	movf	?___fladd+2,w
  1592  0B70  1683               	bsf	3,5	;RP0=1, select bank1
  1593  0B71  1303               	bcf	3,6	;RP1=0, select bank1
  1594  0B72  00AA               	movwf	(round@x+2)^(0+128)
  1595  0B73  1283               	bcf	3,5	;RP0=0, select bank0
  1596  0B74  1303               	bcf	3,6	;RP1=0, select bank0
  1597  0B75  0845               	movf	?___fladd+1,w
  1598  0B76  1683               	bsf	3,5	;RP0=1, select bank1
  1599  0B77  1303               	bcf	3,6	;RP1=0, select bank1
  1600  0B78  00A9               	movwf	(round@x+1)^(0+128)
  1601  0B79  1283               	bcf	3,5	;RP0=0, select bank0
  1602  0B7A  1303               	bcf	3,6	;RP1=0, select bank0
  1603  0B7B  0844               	movf	?___fladd,w
  1604  0B7C  1683               	bsf	3,5	;RP0=1, select bank1
  1605  0B7D  1303               	bcf	3,6	;RP1=0, select bank1
  1606  0B7E  00A8               	movwf	round@x^(0+128)
  1607  0B7F                     l3750:
  1608  0B7F  082B               	movf	(round@x+3)^(0+128),w
  1609  0B80  1283               	bcf	3,5	;RP0=0, select bank0
  1610  0B81  1303               	bcf	3,6	;RP1=0, select bank0
  1611  0B82  00E6               	movwf	trunc@x+3
  1612  0B83  1683               	bsf	3,5	;RP0=1, select bank1
  1613  0B84  1303               	bcf	3,6	;RP1=0, select bank1
  1614  0B85  082A               	movf	(round@x+2)^(0+128),w
  1615  0B86  1283               	bcf	3,5	;RP0=0, select bank0
  1616  0B87  1303               	bcf	3,6	;RP1=0, select bank0
  1617  0B88  00E5               	movwf	trunc@x+2
  1618  0B89  1683               	bsf	3,5	;RP0=1, select bank1
  1619  0B8A  1303               	bcf	3,6	;RP1=0, select bank1
  1620  0B8B  0829               	movf	(round@x+1)^(0+128),w
  1621  0B8C  1283               	bcf	3,5	;RP0=0, select bank0
  1622  0B8D  1303               	bcf	3,6	;RP1=0, select bank0
  1623  0B8E  00E4               	movwf	trunc@x+1
  1624  0B8F  1683               	bsf	3,5	;RP0=1, select bank1
  1625  0B90  1303               	bcf	3,6	;RP1=0, select bank1
  1626  0B91  0828               	movf	round@x^(0+128),w
  1627  0B92  1283               	bcf	3,5	;RP0=0, select bank0
  1628  0B93  1303               	bcf	3,6	;RP1=0, select bank0
  1629  0B94  00E3               	movwf	trunc@x
  1630  0B95  120A  118A  2790  120A  158A  	fcall	_trunc
  1631  0B9A  1283               	bcf	3,5	;RP0=0, select bank0
  1632  0B9B  1303               	bcf	3,6	;RP1=0, select bank0
  1633  0B9C  0866               	movf	?_trunc+3,w
  1634  0B9D  1683               	bsf	3,5	;RP0=1, select bank1
  1635  0B9E  1303               	bcf	3,6	;RP1=0, select bank1
  1636  0B9F  00AB               	movwf	(?_round+3)^(0+128)
  1637  0BA0  1283               	bcf	3,5	;RP0=0, select bank0
  1638  0BA1  1303               	bcf	3,6	;RP1=0, select bank0
  1639  0BA2  0865               	movf	?_trunc+2,w
  1640  0BA3  1683               	bsf	3,5	;RP0=1, select bank1
  1641  0BA4  1303               	bcf	3,6	;RP1=0, select bank1
  1642  0BA5  00AA               	movwf	(?_round+2)^(0+128)
  1643  0BA6  1283               	bcf	3,5	;RP0=0, select bank0
  1644  0BA7  1303               	bcf	3,6	;RP1=0, select bank0
  1645  0BA8  0864               	movf	?_trunc+1,w
  1646  0BA9  1683               	bsf	3,5	;RP0=1, select bank1
  1647  0BAA  1303               	bcf	3,6	;RP1=0, select bank1
  1648  0BAB  00A9               	movwf	(?_round+1)^(0+128)
  1649  0BAC  1283               	bcf	3,5	;RP0=0, select bank0
  1650  0BAD  1303               	bcf	3,6	;RP1=0, select bank0
  1651  0BAE  0863               	movf	?_trunc,w
  1652  0BAF  1683               	bsf	3,5	;RP0=1, select bank1
  1653  0BB0  1303               	bcf	3,6	;RP1=0, select bank1
  1654  0BB1  00A8               	movwf	?_round^(0+128)
  1655  0BB2                     l805:
  1656  0BB2  0008               	return
  1657  0BB3                     __end_of_round:
  1658                           
  1659                           	psect	text2
  1660  0790                     __ptext2:	
  1661 ;; *************** function _trunc *****************
  1662 ;; Defined at:
  1663 ;;		line 13 in file "D:\Programas\XC8 compiler\pic\sources\c90\common\trunc.c"
  1664 ;; Parameters:    Size  Location     Type
  1665 ;;  x               4   67[BANK0 ] void 
  1666 ;; Auto vars:     Size  Location     Type
  1667 ;;  i               4   71[BANK0 ] void 
  1668 ;;  expon           2   75[BANK0 ] int 
  1669 ;; Return value:  Size  Location     Type
  1670 ;;                  4   67[BANK0 ] int 
  1671 ;; Registers used:
  1672 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1673 ;; Tracked objects:
  1674 ;;		On entry : 0/0
  1675 ;;		On exit  : 0/0
  1676 ;;		Unchanged: 0/0
  1677 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1678 ;;      Params:         0       4       0       0       0
  1679 ;;      Locals:         0       6       0       0       0
  1680 ;;      Temps:          1       0       0       0       0
  1681 ;;      Totals:         1      10       0       0       0
  1682 ;;Total ram usage:       11 bytes
  1683 ;; Hardware stack levels used: 1
  1684 ;; Hardware stack levels required when called: 3
  1685 ;; This function calls:
  1686 ;;		___fltol
  1687 ;;		___xxtofl
  1688 ;;		_frexp
  1689 ;; This function is called by:
  1690 ;;		_round
  1691 ;; This function uses a non-reentrant model
  1692 ;;
  1693                           
  1694                           
  1695                           ;psect for function _trunc
  1696  0790                     _trunc:
  1697  0790                     l3572:	
  1698                           ;incstack = 0
  1699                           ; Regs used in _trunc: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1700                           
  1701  0790  1283               	bcf	3,5	;RP0=0, select bank0
  1702  0791  1303               	bcf	3,6	;RP1=0, select bank0
  1703  0792  0866               	movf	trunc@x+3,w
  1704  0793  00AB               	movwf	frexp@value+3
  1705  0794  0865               	movf	trunc@x+2,w
  1706  0795  00AA               	movwf	frexp@value+2
  1707  0796  0864               	movf	trunc@x+1,w
  1708  0797  00A9               	movwf	frexp@value+1
  1709  0798  0863               	movf	trunc@x,w
  1710  0799  00A8               	movwf	frexp@value
  1711  079A  306B               	movlw	(low (trunc@expon| 0))& (0+255)
  1712  079B  00F7               	movwf	??_trunc
  1713  079C  0877               	movf	??_trunc,w
  1714  079D  00AC               	movwf	frexp@eptr
  1715  079E  160A  118A  2751  120A  118A  	fcall	_frexp
  1716  07A3                     l3574:
  1717  07A3  1283               	bcf	3,5	;RP0=0, select bank0
  1718  07A4  1303               	bcf	3,6	;RP1=0, select bank0
  1719  07A5  1FEC               	btfss	trunc@expon+1,7
  1720  07A6  2FA8               	goto	u4551
  1721  07A7  2FA9               	goto	u4550
  1722  07A8                     u4551:
  1723  07A8  2FB2               	goto	l3580
  1724  07A9                     u4550:
  1725  07A9                     l3576:
  1726  07A9  3000               	movlw	0
  1727  07AA  00E6               	movwf	?_trunc+3
  1728  07AB  3000               	movlw	0
  1729  07AC  00E5               	movwf	?_trunc+2
  1730  07AD  3000               	movlw	0
  1731  07AE  00E4               	movwf	?_trunc+1
  1732  07AF  3000               	movlw	0
  1733  07B0  00E3               	movwf	?_trunc
  1734  07B1  2FEB               	goto	l811
  1735  07B2                     l3580:
  1736  07B2  3000               	movlw	0
  1737  07B3  026C               	subwf	trunc@expon+1,w
  1738  07B4  301D               	movlw	29
  1739  07B5  1903               	skipnz
  1740  07B6  026B               	subwf	trunc@expon,w
  1741  07B7  1C03               	skipc
  1742  07B8  2FBA               	goto	u4561
  1743  07B9  2FBB               	goto	u4560
  1744  07BA                     u4561:
  1745  07BA  2FBC               	goto	l3584
  1746  07BB                     u4560:
  1747  07BB                     l3582:
  1748  07BB  2FEB               	goto	l811
  1749  07BC                     l3584:
  1750  07BC  0866               	movf	trunc@x+3,w
  1751  07BD  00DB               	movwf	___fltol@f1+3
  1752  07BE  0865               	movf	trunc@x+2,w
  1753  07BF  00DA               	movwf	___fltol@f1+2
  1754  07C0  0864               	movf	trunc@x+1,w
  1755  07C1  00D9               	movwf	___fltol@f1+1
  1756  07C2  0863               	movf	trunc@x,w
  1757  07C3  00D8               	movwf	___fltol@f1
  1758  07C4  120A  158A  210C  120A  118A  	fcall	___fltol
  1759  07C9  1283               	bcf	3,5	;RP0=0, select bank0
  1760  07CA  1303               	bcf	3,6	;RP1=0, select bank0
  1761  07CB  085B               	movf	?___fltol+3,w
  1762  07CC  00F6               	movwf	___xxtofl@val+3
  1763  07CD  085A               	movf	?___fltol+2,w
  1764  07CE  00F5               	movwf	___xxtofl@val+2
  1765  07CF  0859               	movf	?___fltol+1,w
  1766  07D0  00F4               	movwf	___xxtofl@val+1
  1767  07D1  0858               	movf	?___fltol,w
  1768  07D2  00F3               	movwf	___xxtofl@val
  1769  07D3  3001               	movlw	1
  1770  07D4  120A  158A  222C  120A  118A  	fcall	___xxtofl
  1771  07D9  0876               	movf	?___xxtofl+3,w
  1772  07DA  1283               	bcf	3,5	;RP0=0, select bank0
  1773  07DB  1303               	bcf	3,6	;RP1=0, select bank0
  1774  07DC  00EA               	movwf	trunc@i+3
  1775  07DD  0875               	movf	?___xxtofl+2,w
  1776  07DE  00E9               	movwf	trunc@i+2
  1777  07DF  0874               	movf	?___xxtofl+1,w
  1778  07E0  00E8               	movwf	trunc@i+1
  1779  07E1  0873               	movf	?___xxtofl,w
  1780  07E2  00E7               	movwf	trunc@i
  1781  07E3                     l3586:
  1782  07E3  086A               	movf	trunc@i+3,w
  1783  07E4  00E6               	movwf	?_trunc+3
  1784  07E5  0869               	movf	trunc@i+2,w
  1785  07E6  00E5               	movwf	?_trunc+2
  1786  07E7  0868               	movf	trunc@i+1,w
  1787  07E8  00E4               	movwf	?_trunc+1
  1788  07E9  0867               	movf	trunc@i,w
  1789  07EA  00E3               	movwf	?_trunc
  1790  07EB                     l811:
  1791  07EB  0008               	return
  1792  07EC                     __end_of_trunc:
  1793                           
  1794                           	psect	text3
  1795  1751                     __ptext3:	
  1796 ;; *************** function _frexp *****************
  1797 ;; Defined at:
  1798 ;;		line 254 in file "D:\Programas\XC8 compiler\pic\sources\c90\common\frexp.c"
  1799 ;; Parameters:    Size  Location     Type
  1800 ;;  value           4    8[BANK0 ] int 
  1801 ;;  eptr            1   12[BANK0 ] PTR int 
  1802 ;;		 -> trunc@expon(2), 
  1803 ;; Auto vars:     Size  Location     Type
  1804 ;;		None
  1805 ;; Return value:  Size  Location     Type
  1806 ;;                  4    8[BANK0 ] PTR int 
  1807 ;; Registers used:
  1808 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1809 ;; Tracked objects:
  1810 ;;		On entry : 0/0
  1811 ;;		On exit  : 0/0
  1812 ;;		Unchanged: 0/0
  1813 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1814 ;;      Params:         0       5       0       0       0
  1815 ;;      Locals:         0       0       0       0       0
  1816 ;;      Temps:          0       2       0       0       0
  1817 ;;      Totals:         0       7       0       0       0
  1818 ;;Total ram usage:        7 bytes
  1819 ;; Hardware stack levels used: 1
  1820 ;; Hardware stack levels required when called: 2
  1821 ;; This function calls:
  1822 ;;		___fleq
  1823 ;; This function is called by:
  1824 ;;		_trunc
  1825 ;; This function uses a non-reentrant model
  1826 ;;
  1827                           
  1828                           
  1829                           ;psect for function _frexp
  1830  1751                     _frexp:
  1831  1751                     l3520:	
  1832                           ;incstack = 0
  1833                           ; Regs used in _frexp: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1834                           
  1835  1751  1283               	bcf	3,5	;RP0=0, select bank0
  1836  1752  1303               	bcf	3,6	;RP1=0, select bank0
  1837  1753  082B               	movf	frexp@value+3,w
  1838  1754  00A3               	movwf	___fleq@ff1+3
  1839  1755  082A               	movf	frexp@value+2,w
  1840  1756  00A2               	movwf	___fleq@ff1+2
  1841  1757  0829               	movf	frexp@value+1,w
  1842  1758  00A1               	movwf	___fleq@ff1+1
  1843  1759  0828               	movf	frexp@value,w
  1844  175A  00A0               	movwf	___fleq@ff1
  1845  175B  3000               	movlw	0
  1846  175C  00A7               	movwf	___fleq@ff2+3
  1847  175D  3000               	movlw	0
  1848  175E  00A6               	movwf	___fleq@ff2+2
  1849  175F  3000               	movlw	0
  1850  1760  00A5               	movwf	___fleq@ff2+1
  1851  1761  3000               	movlw	0
  1852  1762  00A4               	movwf	___fleq@ff2
  1853  1763  160A  118A  26AD  160A  118A  	fcall	___fleq
  1854  1768  1C03               	btfss	3,0
  1855  1769  2F6B               	goto	u4541
  1856  176A  2F6C               	goto	u4540
  1857  176B                     u4541:
  1858  176B  2F75               	goto	l3526
  1859  176C                     u4540:
  1860  176C                     l3522:
  1861  176C  1283               	bcf	3,5	;RP0=0, select bank0
  1862  176D  1303               	bcf	3,6	;RP1=0, select bank0
  1863  176E  082C               	movf	frexp@eptr,w
  1864  176F  0084               	movwf	4
  1865  1770  1383               	bcf	3,7	;select IRP bank0
  1866  1771  0180               	clrf	0
  1867  1772  0A84               	incf	4,f
  1868  1773  0180               	clrf	0
  1869  1774  2FA4               	goto	l818
  1870  1775                     l3526:
  1871  1775  1283               	bcf	3,5	;RP0=0, select bank0
  1872  1776  1303               	bcf	3,6	;RP1=0, select bank0
  1873  1777  082B               	movf	frexp@value+3,w
  1874  1778  397F               	andlw	127
  1875  1779  00AD               	movwf	??_frexp
  1876  177A  01AE               	clrf	??_frexp+1
  1877  177B  1003               	clrc
  1878  177C  0DAD               	rlf	??_frexp,f
  1879  177D  0DAE               	rlf	??_frexp+1,f
  1880  177E  082C               	movf	frexp@eptr,w
  1881  177F  0084               	movwf	4
  1882  1780  082D               	movf	??_frexp,w
  1883  1781  1383               	bcf	3,7	;select IRP bank0
  1884  1782  0080               	movwf	0
  1885  1783  0A84               	incf	4,f
  1886  1784  082E               	movf	??_frexp+1,w
  1887  1785  0080               	movwf	0
  1888  1786  0D2A               	rlf	frexp@value+2,w
  1889  1787  0D2A               	rlf	frexp@value+2,w
  1890  1788  3901               	andlw	1
  1891  1789  00AD               	movwf	??_frexp
  1892  178A  01AE               	clrf	??_frexp+1
  1893  178B  082C               	movf	frexp@eptr,w
  1894  178C  0084               	movwf	4
  1895  178D  082D               	movf	??_frexp,w
  1896  178E  0480               	iorwf	0,f
  1897  178F  0A84               	incf	4,f
  1898  1790  082E               	movf	??_frexp+1,w
  1899  1791  0480               	iorwf	0,f
  1900  1792                     l3528:
  1901  1792  082C               	movf	frexp@eptr,w
  1902  1793  0084               	movwf	4
  1903  1794  3082               	movlw	130
  1904  1795  0780               	addwf	0,f
  1905  1796  0F84               	incfsz	4,f
  1906  1797  0800               	movf	0,w
  1907  1798  1803               	skipnc
  1908  1799  0A00               	incf	0,w
  1909  179A  00FF               	movwf	btemp+1
  1910  179B  30FF               	movlw	255
  1911  179C  077F               	addwf	btemp+1,w
  1912  179D  0080               	movwf	0
  1913  179E  0384               	decf	4,f
  1914  179F                     l3530:
  1915  179F  082B               	movf	frexp@value+3,w
  1916  17A0  3980               	andlw	-128
  1917  17A1  383F               	iorlw	63
  1918  17A2  00AB               	movwf	frexp@value+3
  1919  17A3                     l3532:
  1920  17A3  13AA               	bcf	frexp@value+2,7
  1921  17A4                     l818:
  1922  17A4  0008               	return
  1923  17A5                     __end_of_frexp:
  1924                           
  1925                           	psect	text4
  1926  16AD                     __ptext4:	
  1927 ;; *************** function ___fleq *****************
  1928 ;; Defined at:
  1929 ;;		line 4 in file "D:\Programas\XC8 compiler\pic\sources\c90\common\fleq.c"
  1930 ;; Parameters:    Size  Location     Type
  1931 ;;  ff1             4    0[BANK0 ] PTR int 
  1932 ;;  ff2             4    4[BANK0 ] PTR int 
  1933 ;; Auto vars:     Size  Location     Type
  1934 ;;		None
  1935 ;; Return value:  Size  Location     Type
  1936 ;;		None               void
  1937 ;; Registers used:
  1938 ;;		wreg, status,2, status,0
  1939 ;; Tracked objects:
  1940 ;;		On entry : 0/0
  1941 ;;		On exit  : 0/0
  1942 ;;		Unchanged: 0/0
  1943 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1944 ;;      Params:         0       8       0       0       0
  1945 ;;      Locals:         0       0       0       0       0
  1946 ;;      Temps:          4       0       0       0       0
  1947 ;;      Totals:         4       8       0       0       0
  1948 ;;Total ram usage:       12 bytes
  1949 ;; Hardware stack levels used: 1
  1950 ;; Hardware stack levels required when called: 1
  1951 ;; This function calls:
  1952 ;;		Nothing
  1953 ;; This function is called by:
  1954 ;;		_frexp
  1955 ;; This function uses a non-reentrant model
  1956 ;;
  1957                           
  1958                           
  1959                           ;psect for function ___fleq
  1960  16AD                     ___fleq:
  1961  16AD                     l3292:	
  1962                           ;incstack = 0
  1963                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  1964                           
  1965  16AD  3000               	movlw	0
  1966  16AE  1283               	bcf	3,5	;RP0=0, select bank0
  1967  16AF  1303               	bcf	3,6	;RP1=0, select bank0
  1968  16B0  0520               	andwf	___fleq@ff1,w
  1969  16B1  00F3               	movwf	??___fleq
  1970  16B2  3000               	movlw	0
  1971  16B3  0521               	andwf	___fleq@ff1+1,w
  1972  16B4  00F4               	movwf	??___fleq+1
  1973  16B5  3080               	movlw	128
  1974  16B6  0522               	andwf	___fleq@ff1+2,w
  1975  16B7  00F5               	movwf	??___fleq+2
  1976  16B8  307F               	movlw	127
  1977  16B9  0523               	andwf	___fleq@ff1+3,w
  1978  16BA  00F6               	movwf	??___fleq+3
  1979  16BB  0876               	movf	??___fleq+3,w
  1980  16BC  0475               	iorwf	??___fleq+2,w
  1981  16BD  0474               	iorwf	??___fleq+1,w
  1982  16BE  0473               	iorwf	??___fleq,w
  1983  16BF  1D03               	skipz
  1984  16C0  2EC2               	goto	u4101
  1985  16C1  2EC3               	goto	u4100
  1986  16C2                     u4101:
  1987  16C2  2ECB               	goto	l516
  1988  16C3                     u4100:
  1989  16C3                     l3294:
  1990  16C3  3000               	movlw	0
  1991  16C4  00A3               	movwf	___fleq@ff1+3
  1992  16C5  3000               	movlw	0
  1993  16C6  00A2               	movwf	___fleq@ff1+2
  1994  16C7  3000               	movlw	0
  1995  16C8  00A1               	movwf	___fleq@ff1+1
  1996  16C9  3000               	movlw	0
  1997  16CA  00A0               	movwf	___fleq@ff1
  1998  16CB                     l516:
  1999  16CB  3000               	movlw	0
  2000  16CC  0524               	andwf	___fleq@ff2,w
  2001  16CD  00F3               	movwf	??___fleq
  2002  16CE  3000               	movlw	0
  2003  16CF  0525               	andwf	___fleq@ff2+1,w
  2004  16D0  00F4               	movwf	??___fleq+1
  2005  16D1  3080               	movlw	128
  2006  16D2  0526               	andwf	___fleq@ff2+2,w
  2007  16D3  00F5               	movwf	??___fleq+2
  2008  16D4  307F               	movlw	127
  2009  16D5  0527               	andwf	___fleq@ff2+3,w
  2010  16D6  00F6               	movwf	??___fleq+3
  2011  16D7  0876               	movf	??___fleq+3,w
  2012  16D8  0475               	iorwf	??___fleq+2,w
  2013  16D9  0474               	iorwf	??___fleq+1,w
  2014  16DA  0473               	iorwf	??___fleq,w
  2015  16DB  1D03               	skipz
  2016  16DC  2EDE               	goto	u4111
  2017  16DD  2EDF               	goto	u4110
  2018  16DE                     u4111:
  2019  16DE  2EE7               	goto	l517
  2020  16DF                     u4110:
  2021  16DF                     l3296:
  2022  16DF  3000               	movlw	0
  2023  16E0  00A7               	movwf	___fleq@ff2+3
  2024  16E1  3000               	movlw	0
  2025  16E2  00A6               	movwf	___fleq@ff2+2
  2026  16E3  3000               	movlw	0
  2027  16E4  00A5               	movwf	___fleq@ff2+1
  2028  16E5  3000               	movlw	0
  2029  16E6  00A4               	movwf	___fleq@ff2
  2030  16E7                     l517:
  2031  16E7  0827               	movf	___fleq@ff2+3,w
  2032  16E8  0623               	xorwf	___fleq@ff1+3,w
  2033  16E9  1D03               	skipz
  2034  16EA  2EF5               	goto	u4125
  2035  16EB  0826               	movf	___fleq@ff2+2,w
  2036  16EC  0622               	xorwf	___fleq@ff1+2,w
  2037  16ED  1D03               	skipz
  2038  16EE  2EF5               	goto	u4125
  2039  16EF  0825               	movf	___fleq@ff2+1,w
  2040  16F0  0621               	xorwf	___fleq@ff1+1,w
  2041  16F1  1D03               	skipz
  2042  16F2  2EF5               	goto	u4125
  2043  16F3  0824               	movf	___fleq@ff2,w
  2044  16F4  0620               	xorwf	___fleq@ff1,w
  2045  16F5                     u4125:
  2046  16F5  1903               	skipnz
  2047  16F6  2EF8               	goto	u4121
  2048  16F7  2EF9               	goto	u4120
  2049  16F8                     u4121:
  2050  16F8  2EFB               	goto	l3300
  2051  16F9                     u4120:
  2052  16F9                     l3298:
  2053  16F9  1003               	clrc
  2054  16FA  2EFC               	goto	l518
  2055  16FB                     l3300:
  2056  16FB  1403               	setc
  2057  16FC                     l518:
  2058  16FC  0008               	return
  2059  16FD                     __end_of___fleq:
  2060                           
  2061                           	psect	text5
  2062  0A2C                     __ptext5:	
  2063 ;; *************** function ___xxtofl *****************
  2064 ;; Defined at:
  2065 ;;		line 10 in file "D:\Programas\XC8 compiler\pic\sources\c90\common\xxtofl.c"
  2066 ;; Parameters:    Size  Location     Type
  2067 ;;  sign            1    wreg     unsigned char 
  2068 ;;  val             4    3[COMMON] long 
  2069 ;; Auto vars:     Size  Location     Type
  2070 ;;  sign            1    4[BANK0 ] unsigned char 
  2071 ;;  arg             4    6[BANK0 ] unsigned long 
  2072 ;;  exp             1    5[BANK0 ] unsigned char 
  2073 ;; Return value:  Size  Location     Type
  2074 ;;                  4    3[COMMON] unsigned char 
  2075 ;; Registers used:
  2076 ;;		wreg, status,2, status,0
  2077 ;; Tracked objects:
  2078 ;;		On entry : 0/0
  2079 ;;		On exit  : 0/0
  2080 ;;		Unchanged: 0/0
  2081 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2082 ;;      Params:         4       0       0       0       0
  2083 ;;      Locals:         0       6       0       0       0
  2084 ;;      Temps:          0       4       0       0       0
  2085 ;;      Totals:         4      10       0       0       0
  2086 ;;Total ram usage:       14 bytes
  2087 ;; Hardware stack levels used: 1
  2088 ;; Hardware stack levels required when called: 1
  2089 ;; This function calls:
  2090 ;;		Nothing
  2091 ;; This function is called by:
  2092 ;;		_main
  2093 ;;		_trunc
  2094 ;; This function uses a non-reentrant model
  2095 ;;
  2096                           
  2097                           
  2098                           ;psect for function ___xxtofl
  2099  0A2C                     ___xxtofl:
  2100                           
  2101                           ;incstack = 0
  2102                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  2103                           ;___xxtofl@sign stored from wreg
  2104  0A2C  1283               	bcf	3,5	;RP0=0, select bank0
  2105  0A2D  1303               	bcf	3,6	;RP1=0, select bank0
  2106  0A2E  00A4               	movwf	___xxtofl@sign
  2107  0A2F                     l3476:
  2108  0A2F  0824               	movf	___xxtofl@sign,w
  2109  0A30  1903               	btfsc	3,2
  2110  0A31  2A33               	goto	u4401
  2111  0A32  2A34               	goto	u4400
  2112  0A33                     u4401:
  2113  0A33  2A48               	goto	l3482
  2114  0A34                     u4400:
  2115  0A34                     l3478:
  2116  0A34  1FF6               	btfss	___xxtofl@val+3,7
  2117  0A35  2A37               	goto	u4411
  2118  0A36  2A38               	goto	u4410
  2119  0A37                     u4411:
  2120  0A37  2A48               	goto	l3482
  2121  0A38                     u4410:
  2122  0A38                     l3480:
  2123  0A38  0973               	comf	___xxtofl@val,w
  2124  0A39  00A6               	movwf	___xxtofl@arg
  2125  0A3A  0974               	comf	___xxtofl@val+1,w
  2126  0A3B  00A7               	movwf	___xxtofl@arg+1
  2127  0A3C  0975               	comf	___xxtofl@val+2,w
  2128  0A3D  00A8               	movwf	___xxtofl@arg+2
  2129  0A3E  0976               	comf	___xxtofl@val+3,w
  2130  0A3F  00A9               	movwf	___xxtofl@arg+3
  2131  0A40  0AA6               	incf	___xxtofl@arg,f
  2132  0A41  1903               	skipnz
  2133  0A42  0AA7               	incf	___xxtofl@arg+1,f
  2134  0A43  1903               	skipnz
  2135  0A44  0AA8               	incf	___xxtofl@arg+2,f
  2136  0A45  1903               	skipnz
  2137  0A46  0AA9               	incf	___xxtofl@arg+3,f
  2138  0A47  2A50               	goto	l780
  2139  0A48                     l3482:
  2140  0A48  0876               	movf	___xxtofl@val+3,w
  2141  0A49  00A9               	movwf	___xxtofl@arg+3
  2142  0A4A  0875               	movf	___xxtofl@val+2,w
  2143  0A4B  00A8               	movwf	___xxtofl@arg+2
  2144  0A4C  0874               	movf	___xxtofl@val+1,w
  2145  0A4D  00A7               	movwf	___xxtofl@arg+1
  2146  0A4E  0873               	movf	___xxtofl@val,w
  2147  0A4F  00A6               	movwf	___xxtofl@arg
  2148  0A50                     l780:
  2149  0A50  0876               	movf	___xxtofl@val+3,w
  2150  0A51  0475               	iorwf	___xxtofl@val+2,w
  2151  0A52  0474               	iorwf	___xxtofl@val+1,w
  2152  0A53  0473               	iorwf	___xxtofl@val,w
  2153  0A54  1D03               	skipz
  2154  0A55  2A57               	goto	u4421
  2155  0A56  2A58               	goto	u4420
  2156  0A57                     u4421:
  2157  0A57  2A61               	goto	l3488
  2158  0A58                     u4420:
  2159  0A58                     l3484:
  2160  0A58  3000               	movlw	0
  2161  0A59  00F6               	movwf	?___xxtofl+3
  2162  0A5A  3000               	movlw	0
  2163  0A5B  00F5               	movwf	?___xxtofl+2
  2164  0A5C  3000               	movlw	0
  2165  0A5D  00F4               	movwf	?___xxtofl+1
  2166  0A5E  3000               	movlw	0
  2167  0A5F  00F3               	movwf	?___xxtofl
  2168  0A60  2AE7               	goto	l782
  2169  0A61                     l3488:
  2170  0A61  3096               	movlw	150
  2171  0A62  00A0               	movwf	??___xxtofl
  2172  0A63  0820               	movf	??___xxtofl,w
  2173  0A64  00A5               	movwf	___xxtofl@exp
  2174  0A65  2A73               	goto	l3492
  2175  0A66                     l3490:
  2176  0A66  3001               	movlw	1
  2177  0A67  00A0               	movwf	??___xxtofl
  2178  0A68  0820               	movf	??___xxtofl,w
  2179  0A69  07A5               	addwf	___xxtofl@exp,f
  2180  0A6A  3001               	movlw	1
  2181  0A6B                     u4435:
  2182  0A6B  1003               	clrc
  2183  0A6C  0CA9               	rrf	___xxtofl@arg+3,f
  2184  0A6D  0CA8               	rrf	___xxtofl@arg+2,f
  2185  0A6E  0CA7               	rrf	___xxtofl@arg+1,f
  2186  0A6F  0CA6               	rrf	___xxtofl@arg,f
  2187  0A70  3EFF               	addlw	-1
  2188  0A71  1D03               	skipz
  2189  0A72  2A6B               	goto	u4435
  2190  0A73                     l3492:
  2191  0A73  30FE               	movlw	254
  2192  0A74  0529               	andwf	___xxtofl@arg+3,w
  2193  0A75  1D03               	btfss	3,2
  2194  0A76  2A78               	goto	u4441
  2195  0A77  2A79               	goto	u4440
  2196  0A78                     u4441:
  2197  0A78  2A66               	goto	l3490
  2198  0A79                     u4440:
  2199  0A79  2A95               	goto	l786
  2200  0A7A                     l3494:
  2201  0A7A  3001               	movlw	1
  2202  0A7B  00A0               	movwf	??___xxtofl
  2203  0A7C  0820               	movf	??___xxtofl,w
  2204  0A7D  07A5               	addwf	___xxtofl@exp,f
  2205  0A7E                     l3496:
  2206  0A7E  3001               	movlw	1
  2207  0A7F  07A6               	addwf	___xxtofl@arg,f
  2208  0A80  3000               	movlw	0
  2209  0A81  1803               	skipnc
  2210  0A82  3001               	movlw	1
  2211  0A83  07A7               	addwf	___xxtofl@arg+1,f
  2212  0A84  3000               	movlw	0
  2213  0A85  1803               	skipnc
  2214  0A86  3001               	movlw	1
  2215  0A87  07A8               	addwf	___xxtofl@arg+2,f
  2216  0A88  3000               	movlw	0
  2217  0A89  1803               	skipnc
  2218  0A8A  3001               	movlw	1
  2219  0A8B  07A9               	addwf	___xxtofl@arg+3,f
  2220  0A8C                     l3498:
  2221  0A8C  3001               	movlw	1
  2222  0A8D                     u4455:
  2223  0A8D  1003               	clrc
  2224  0A8E  0CA9               	rrf	___xxtofl@arg+3,f
  2225  0A8F  0CA8               	rrf	___xxtofl@arg+2,f
  2226  0A90  0CA7               	rrf	___xxtofl@arg+1,f
  2227  0A91  0CA6               	rrf	___xxtofl@arg,f
  2228  0A92  3EFF               	addlw	-1
  2229  0A93  1D03               	skipz
  2230  0A94  2A8D               	goto	u4455
  2231  0A95                     l786:
  2232  0A95  30FF               	movlw	255
  2233  0A96  0529               	andwf	___xxtofl@arg+3,w
  2234  0A97  1D03               	btfss	3,2
  2235  0A98  2A9A               	goto	u4461
  2236  0A99  2A9B               	goto	u4460
  2237  0A9A                     u4461:
  2238  0A9A  2A7A               	goto	l3494
  2239  0A9B                     u4460:
  2240  0A9B  2AA7               	goto	l3502
  2241  0A9C                     l3500:
  2242  0A9C  3001               	movlw	1
  2243  0A9D  02A5               	subwf	___xxtofl@exp,f
  2244  0A9E  3001               	movlw	1
  2245  0A9F  00A0               	movwf	??___xxtofl
  2246  0AA0                     u4475:
  2247  0AA0  1003               	clrc
  2248  0AA1  0DA6               	rlf	___xxtofl@arg,f
  2249  0AA2  0DA7               	rlf	___xxtofl@arg+1,f
  2250  0AA3  0DA8               	rlf	___xxtofl@arg+2,f
  2251  0AA4  0DA9               	rlf	___xxtofl@arg+3,f
  2252  0AA5  0BA0               	decfsz	??___xxtofl,f
  2253  0AA6  2AA0               	goto	u4475
  2254  0AA7                     l3502:
  2255  0AA7  1BA8               	btfsc	___xxtofl@arg+2,7
  2256  0AA8  2AAA               	goto	u4481
  2257  0AA9  2AAB               	goto	u4480
  2258  0AAA                     u4481:
  2259  0AAA  2AB1               	goto	l793
  2260  0AAB                     u4480:
  2261  0AAB                     l3504:
  2262  0AAB  3002               	movlw	2
  2263  0AAC  0225               	subwf	___xxtofl@exp,w
  2264  0AAD  1803               	skipnc
  2265  0AAE  2AB0               	goto	u4491
  2266  0AAF  2AB1               	goto	u4490
  2267  0AB0                     u4491:
  2268  0AB0  2A9C               	goto	l3500
  2269  0AB1                     u4490:
  2270  0AB1                     l793:
  2271  0AB1  1825               	btfsc	___xxtofl@exp,0
  2272  0AB2  2AB4               	goto	u4501
  2273  0AB3  2AB5               	goto	u4500
  2274  0AB4                     u4501:
  2275  0AB4  2ABD               	goto	l794
  2276  0AB5                     u4500:
  2277  0AB5                     l3506:
  2278  0AB5  30FF               	movlw	255
  2279  0AB6  05A6               	andwf	___xxtofl@arg,f
  2280  0AB7  30FF               	movlw	255
  2281  0AB8  05A7               	andwf	___xxtofl@arg+1,f
  2282  0AB9  307F               	movlw	127
  2283  0ABA  05A8               	andwf	___xxtofl@arg+2,f
  2284  0ABB  30FF               	movlw	255
  2285  0ABC  05A9               	andwf	___xxtofl@arg+3,f
  2286  0ABD                     l794:
  2287  0ABD  1003               	clrc
  2288  0ABE  0CA5               	rrf	___xxtofl@exp,f
  2289  0ABF                     l3508:
  2290  0ABF  0825               	movf	___xxtofl@exp,w
  2291  0AC0  00A0               	movwf	??___xxtofl
  2292  0AC1  01A1               	clrf	??___xxtofl+1
  2293  0AC2  01A2               	clrf	??___xxtofl+2
  2294  0AC3  01A3               	clrf	??___xxtofl+3
  2295  0AC4  3018               	movlw	24
  2296  0AC5                     u4515:
  2297  0AC5  1003               	clrc
  2298  0AC6  0DA0               	rlf	??___xxtofl,f
  2299  0AC7  0DA1               	rlf	??___xxtofl+1,f
  2300  0AC8  0DA2               	rlf	??___xxtofl+2,f
  2301  0AC9  0DA3               	rlf	??___xxtofl+3,f
  2302  0ACA                     u4510:
  2303  0ACA  3EFF               	addlw	-1
  2304  0ACB  1D03               	skipz
  2305  0ACC  2AC5               	goto	u4515
  2306  0ACD  0820               	movf	??___xxtofl,w
  2307  0ACE  04A6               	iorwf	___xxtofl@arg,f
  2308  0ACF  0821               	movf	??___xxtofl+1,w
  2309  0AD0  04A7               	iorwf	___xxtofl@arg+1,f
  2310  0AD1  0822               	movf	??___xxtofl+2,w
  2311  0AD2  04A8               	iorwf	___xxtofl@arg+2,f
  2312  0AD3  0823               	movf	??___xxtofl+3,w
  2313  0AD4  04A9               	iorwf	___xxtofl@arg+3,f
  2314  0AD5                     l3510:
  2315  0AD5  0824               	movf	___xxtofl@sign,w
  2316  0AD6  1903               	btfsc	3,2
  2317  0AD7  2AD9               	goto	u4521
  2318  0AD8  2ADA               	goto	u4520
  2319  0AD9                     u4521:
  2320  0AD9  2ADF               	goto	l3516
  2321  0ADA                     u4520:
  2322  0ADA                     l3512:
  2323  0ADA  1FF6               	btfss	___xxtofl@val+3,7
  2324  0ADB  2ADD               	goto	u4531
  2325  0ADC  2ADE               	goto	u4530
  2326  0ADD                     u4531:
  2327  0ADD  2ADF               	goto	l3516
  2328  0ADE                     u4530:
  2329  0ADE                     l3514:
  2330  0ADE  17A9               	bsf	___xxtofl@arg+3,7
  2331  0ADF                     l3516:
  2332  0ADF  0829               	movf	___xxtofl@arg+3,w
  2333  0AE0  00F6               	movwf	?___xxtofl+3
  2334  0AE1  0828               	movf	___xxtofl@arg+2,w
  2335  0AE2  00F5               	movwf	?___xxtofl+2
  2336  0AE3  0827               	movf	___xxtofl@arg+1,w
  2337  0AE4  00F4               	movwf	?___xxtofl+1
  2338  0AE5  0826               	movf	___xxtofl@arg,w
  2339  0AE6  00F3               	movwf	?___xxtofl
  2340  0AE7                     l782:
  2341  0AE7  0008               	return
  2342  0AE8                     __end_of___xxtofl:
  2343                           
  2344                           	psect	text6
  2345  090C                     __ptext6:	
  2346 ;; *************** function ___fltol *****************
  2347 ;; Defined at:
  2348 ;;		line 43 in file "D:\Programas\XC8 compiler\pic\sources\c90\common\fltol.c"
  2349 ;; Parameters:    Size  Location     Type
  2350 ;;  f1              4   56[BANK0 ] unsigned char 
  2351 ;; Auto vars:     Size  Location     Type
  2352 ;;  exp1            1   66[BANK0 ] unsigned char 
  2353 ;;  sign1           1   65[BANK0 ] unsigned char 
  2354 ;; Return value:  Size  Location     Type
  2355 ;;                  4   56[BANK0 ] long 
  2356 ;; Registers used:
  2357 ;;		wreg, status,2, status,0
  2358 ;; Tracked objects:
  2359 ;;		On entry : 0/0
  2360 ;;		On exit  : 0/0
  2361 ;;		Unchanged: 0/0
  2362 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2363 ;;      Params:         0       4       0       0       0
  2364 ;;      Locals:         0       2       0       0       0
  2365 ;;      Temps:          0       5       0       0       0
  2366 ;;      Totals:         0      11       0       0       0
  2367 ;;Total ram usage:       11 bytes
  2368 ;; Hardware stack levels used: 1
  2369 ;; Hardware stack levels required when called: 1
  2370 ;; This function calls:
  2371 ;;		Nothing
  2372 ;; This function is called by:
  2373 ;;		_main
  2374 ;;		_trunc
  2375 ;; This function uses a non-reentrant model
  2376 ;;
  2377                           
  2378                           
  2379                           ;psect for function ___fltol
  2380  090C                     ___fltol:
  2381  090C                     l2332:	
  2382                           ;incstack = 0
  2383                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  2384                           
  2385  090C  1003               	clrc
  2386  090D  1283               	bcf	3,5	;RP0=0, select bank0
  2387  090E  1303               	bcf	3,6	;RP1=0, select bank0
  2388  090F  0D5A               	rlf	___fltol@f1+2,w
  2389  0910  0D5B               	rlf	___fltol@f1+3,w
  2390  0911  00DC               	movwf	??___fltol
  2391  0912  085C               	movf	??___fltol,w
  2392  0913  00E2               	movwf	___fltol@exp1
  2393  0914  0862               	movf	___fltol@exp1,w
  2394  0915  1D03               	btfss	3,2
  2395  0916  2918               	goto	u2491
  2396  0917  2919               	goto	u2490
  2397  0918                     u2491:
  2398  0918  2922               	goto	l2338
  2399  0919                     u2490:
  2400  0919                     l2334:
  2401  0919  3000               	movlw	0
  2402  091A  00DB               	movwf	?___fltol+3
  2403  091B  3000               	movlw	0
  2404  091C  00DA               	movwf	?___fltol+2
  2405  091D  3000               	movlw	0
  2406  091E  00D9               	movwf	?___fltol+1
  2407  091F  3000               	movlw	0
  2408  0920  00D8               	movwf	?___fltol
  2409  0921  2987               	goto	l533
  2410  0922                     l2338:
  2411  0922  0858               	movf	___fltol@f1,w
  2412  0923  00DC               	movwf	??___fltol
  2413  0924  0859               	movf	___fltol@f1+1,w
  2414  0925  00DD               	movwf	??___fltol+1
  2415  0926  085A               	movf	___fltol@f1+2,w
  2416  0927  00DE               	movwf	??___fltol+2
  2417  0928  085B               	movf	___fltol@f1+3,w
  2418  0929  00DF               	movwf	??___fltol+3
  2419  092A  301F               	movlw	31
  2420  092B                     u2505:
  2421  092B  1003               	clrc
  2422  092C  0CDF               	rrf	??___fltol+3,f
  2423  092D  0CDE               	rrf	??___fltol+2,f
  2424  092E  0CDD               	rrf	??___fltol+1,f
  2425  092F  0CDC               	rrf	??___fltol,f
  2426  0930                     u2500:
  2427  0930  3EFF               	addlw	-1
  2428  0931  1D03               	skipz
  2429  0932  292B               	goto	u2505
  2430  0933  085C               	movf	??___fltol,w
  2431  0934  00E0               	movwf	??___fltol+4
  2432  0935  0860               	movf	??___fltol+4,w
  2433  0936  00E1               	movwf	___fltol@sign1
  2434  0937                     l2340:
  2435  0937  17DA               	bsf	___fltol@f1+2,7
  2436  0938                     l2342:
  2437  0938  30FF               	movlw	255
  2438  0939  05D8               	andwf	___fltol@f1,f
  2439  093A  30FF               	movlw	255
  2440  093B  05D9               	andwf	___fltol@f1+1,f
  2441  093C  30FF               	movlw	255
  2442  093D  05DA               	andwf	___fltol@f1+2,f
  2443  093E  3000               	movlw	0
  2444  093F  05DB               	andwf	___fltol@f1+3,f
  2445  0940                     l2344:
  2446  0940  3096               	movlw	150
  2447  0941  02E2               	subwf	___fltol@exp1,f
  2448  0942                     l2346:
  2449  0942  1FE2               	btfss	___fltol@exp1,7
  2450  0943  2945               	goto	u2511
  2451  0944  2946               	goto	u2510
  2452  0945                     u2511:
  2453  0945  2960               	goto	l2356
  2454  0946                     u2510:
  2455  0946                     l2348:
  2456  0946  0862               	movf	___fltol@exp1,w
  2457  0947  3A80               	xorlw	128
  2458  0948  3E97               	addlw	151
  2459  0949  1803               	skipnc
  2460  094A  294C               	goto	u2521
  2461  094B  294D               	goto	u2520
  2462  094C                     u2521:
  2463  094C  294E               	goto	l2354
  2464  094D                     u2520:
  2465  094D  2919               	goto	l2334
  2466  094E                     l2354:
  2467  094E  3001               	movlw	1
  2468  094F                     u2535:
  2469  094F  1003               	clrc
  2470  0950  0CDB               	rrf	___fltol@f1+3,f
  2471  0951  0CDA               	rrf	___fltol@f1+2,f
  2472  0952  0CD9               	rrf	___fltol@f1+1,f
  2473  0953  0CD8               	rrf	___fltol@f1,f
  2474  0954  3EFF               	addlw	-1
  2475  0955  1D03               	skipz
  2476  0956  294F               	goto	u2535
  2477  0957  3001               	movlw	1
  2478  0958  00DC               	movwf	??___fltol
  2479  0959  085C               	movf	??___fltol,w
  2480  095A  07E2               	addwf	___fltol@exp1,f
  2481  095B  1D03               	btfss	3,2
  2482  095C  295E               	goto	u2541
  2483  095D  295F               	goto	u2540
  2484  095E                     u2541:
  2485  095E  294E               	goto	l2354
  2486  095F                     u2540:
  2487  095F  2977               	goto	l2364
  2488  0960                     l2356:
  2489  0960  3020               	movlw	32
  2490  0961  0262               	subwf	___fltol@exp1,w
  2491  0962  1C03               	skipc
  2492  0963  2965               	goto	u2551
  2493  0964  2966               	goto	u2550
  2494  0965                     u2551:
  2495  0965  2972               	goto	l540
  2496  0966                     u2550:
  2497  0966  2919               	goto	l2334
  2498  0967                     l2362:
  2499  0967  3001               	movlw	1
  2500  0968  00DC               	movwf	??___fltol
  2501  0969                     u2565:
  2502  0969  1003               	clrc
  2503  096A  0DD8               	rlf	___fltol@f1,f
  2504  096B  0DD9               	rlf	___fltol@f1+1,f
  2505  096C  0DDA               	rlf	___fltol@f1+2,f
  2506  096D  0DDB               	rlf	___fltol@f1+3,f
  2507  096E  0BDC               	decfsz	??___fltol,f
  2508  096F  2969               	goto	u2565
  2509  0970  3001               	movlw	1
  2510  0971  02E2               	subwf	___fltol@exp1,f
  2511  0972                     l540:
  2512  0972  0862               	movf	___fltol@exp1,w
  2513  0973  1D03               	btfss	3,2
  2514  0974  2976               	goto	u2571
  2515  0975  2977               	goto	u2570
  2516  0976                     u2571:
  2517  0976  2967               	goto	l2362
  2518  0977                     u2570:
  2519  0977                     l2364:
  2520  0977  0861               	movf	___fltol@sign1,w
  2521  0978  1903               	btfsc	3,2
  2522  0979  297B               	goto	u2581
  2523  097A  297C               	goto	u2580
  2524  097B                     u2581:
  2525  097B  2987               	goto	l543
  2526  097C                     u2580:
  2527  097C                     l2366:
  2528  097C  09D8               	comf	___fltol@f1,f
  2529  097D  09D9               	comf	___fltol@f1+1,f
  2530  097E  09DA               	comf	___fltol@f1+2,f
  2531  097F  09DB               	comf	___fltol@f1+3,f
  2532  0980  0AD8               	incf	___fltol@f1,f
  2533  0981  1903               	skipnz
  2534  0982  0AD9               	incf	___fltol@f1+1,f
  2535  0983  1903               	skipnz
  2536  0984  0ADA               	incf	___fltol@f1+2,f
  2537  0985  1903               	skipnz
  2538  0986  0ADB               	incf	___fltol@f1+3,f
  2539  0987                     l543:
  2540  0987                     l533:
  2541  0987  0008               	return
  2542  0988                     __end_of___fltol:
  2543                           
  2544                           	psect	text7
  2545  165D                     __ptext7:	
  2546 ;; *************** function ___flsub *****************
  2547 ;; Defined at:
  2548 ;;		line 242 in file "D:\Programas\XC8 compiler\pic\sources\c90\common\sprcadd.c"
  2549 ;; Parameters:    Size  Location     Type
  2550 ;;  a               4    0[BANK1 ] long 
  2551 ;;  b               4    4[BANK1 ] long 
  2552 ;; Auto vars:     Size  Location     Type
  2553 ;;		None
  2554 ;; Return value:  Size  Location     Type
  2555 ;;                  4    0[BANK1 ] long 
  2556 ;; Registers used:
  2557 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2558 ;; Tracked objects:
  2559 ;;		On entry : 0/0
  2560 ;;		On exit  : 0/0
  2561 ;;		Unchanged: 0/0
  2562 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2563 ;;      Params:         0       0       8       0       0
  2564 ;;      Locals:         0       0       0       0       0
  2565 ;;      Temps:          0       0       0       0       0
  2566 ;;      Totals:         0       0       8       0       0
  2567 ;;Total ram usage:        8 bytes
  2568 ;; Hardware stack levels used: 1
  2569 ;; Hardware stack levels required when called: 2
  2570 ;; This function calls:
  2571 ;;		___fladd
  2572 ;; This function is called by:
  2573 ;;		_round
  2574 ;; This function uses a non-reentrant model
  2575 ;;
  2576                           
  2577                           
  2578                           ;psect for function ___flsub
  2579  165D                     ___flsub:
  2580  165D                     l2658:	
  2581                           ;incstack = 0
  2582                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2583                           
  2584  165D  3080               	movlw	128
  2585  165E  1683               	bsf	3,5	;RP0=1, select bank1
  2586  165F  1303               	bcf	3,6	;RP1=0, select bank1
  2587  1660  06A3               	xorwf	(___flsub@a+3)^(0+128),f
  2588  1661                     l2660:
  2589  1661  0827               	movf	(___flsub@b+3)^(0+128),w
  2590  1662  1283               	bcf	3,5	;RP0=0, select bank0
  2591  1663  1303               	bcf	3,6	;RP1=0, select bank0
  2592  1664  00C7               	movwf	___fladd@b+3
  2593  1665  1683               	bsf	3,5	;RP0=1, select bank1
  2594  1666  1303               	bcf	3,6	;RP1=0, select bank1
  2595  1667  0826               	movf	(___flsub@b+2)^(0+128),w
  2596  1668  1283               	bcf	3,5	;RP0=0, select bank0
  2597  1669  1303               	bcf	3,6	;RP1=0, select bank0
  2598  166A  00C6               	movwf	___fladd@b+2
  2599  166B  1683               	bsf	3,5	;RP0=1, select bank1
  2600  166C  1303               	bcf	3,6	;RP1=0, select bank1
  2601  166D  0825               	movf	(___flsub@b+1)^(0+128),w
  2602  166E  1283               	bcf	3,5	;RP0=0, select bank0
  2603  166F  1303               	bcf	3,6	;RP1=0, select bank0
  2604  1670  00C5               	movwf	___fladd@b+1
  2605  1671  1683               	bsf	3,5	;RP0=1, select bank1
  2606  1672  1303               	bcf	3,6	;RP1=0, select bank1
  2607  1673  0824               	movf	___flsub@b^(0+128),w
  2608  1674  1283               	bcf	3,5	;RP0=0, select bank0
  2609  1675  1303               	bcf	3,6	;RP1=0, select bank0
  2610  1676  00C4               	movwf	___fladd@b
  2611  1677  1683               	bsf	3,5	;RP0=1, select bank1
  2612  1678  1303               	bcf	3,6	;RP1=0, select bank1
  2613  1679  0823               	movf	(___flsub@a+3)^(0+128),w
  2614  167A  1283               	bcf	3,5	;RP0=0, select bank0
  2615  167B  1303               	bcf	3,6	;RP1=0, select bank0
  2616  167C  00CB               	movwf	___fladd@a+3
  2617  167D  1683               	bsf	3,5	;RP0=1, select bank1
  2618  167E  1303               	bcf	3,6	;RP1=0, select bank1
  2619  167F  0822               	movf	(___flsub@a+2)^(0+128),w
  2620  1680  1283               	bcf	3,5	;RP0=0, select bank0
  2621  1681  1303               	bcf	3,6	;RP1=0, select bank0
  2622  1682  00CA               	movwf	___fladd@a+2
  2623  1683  1683               	bsf	3,5	;RP0=1, select bank1
  2624  1684  1303               	bcf	3,6	;RP1=0, select bank1
  2625  1685  0821               	movf	(___flsub@a+1)^(0+128),w
  2626  1686  1283               	bcf	3,5	;RP0=0, select bank0
  2627  1687  1303               	bcf	3,6	;RP1=0, select bank0
  2628  1688  00C9               	movwf	___fladd@a+1
  2629  1689  1683               	bsf	3,5	;RP0=1, select bank1
  2630  168A  1303               	bcf	3,6	;RP1=0, select bank1
  2631  168B  0820               	movf	___flsub@a^(0+128),w
  2632  168C  1283               	bcf	3,5	;RP0=0, select bank0
  2633  168D  1303               	bcf	3,6	;RP1=0, select bank0
  2634  168E  00C8               	movwf	___fladd@a
  2635  168F  120A  118A  232B  160A  118A  	fcall	___fladd
  2636  1694  1283               	bcf	3,5	;RP0=0, select bank0
  2637  1695  1303               	bcf	3,6	;RP1=0, select bank0
  2638  1696  0847               	movf	?___fladd+3,w
  2639  1697  1683               	bsf	3,5	;RP0=1, select bank1
  2640  1698  1303               	bcf	3,6	;RP1=0, select bank1
  2641  1699  00A3               	movwf	(?___flsub+3)^(0+128)
  2642  169A  1283               	bcf	3,5	;RP0=0, select bank0
  2643  169B  1303               	bcf	3,6	;RP1=0, select bank0
  2644  169C  0846               	movf	?___fladd+2,w
  2645  169D  1683               	bsf	3,5	;RP0=1, select bank1
  2646  169E  1303               	bcf	3,6	;RP1=0, select bank1
  2647  169F  00A2               	movwf	(?___flsub+2)^(0+128)
  2648  16A0  1283               	bcf	3,5	;RP0=0, select bank0
  2649  16A1  1303               	bcf	3,6	;RP1=0, select bank0
  2650  16A2  0845               	movf	?___fladd+1,w
  2651  16A3  1683               	bsf	3,5	;RP0=1, select bank1
  2652  16A4  1303               	bcf	3,6	;RP1=0, select bank1
  2653  16A5  00A1               	movwf	(?___flsub+1)^(0+128)
  2654  16A6  1283               	bcf	3,5	;RP0=0, select bank0
  2655  16A7  1303               	bcf	3,6	;RP1=0, select bank0
  2656  16A8  0844               	movf	?___fladd,w
  2657  16A9  1683               	bsf	3,5	;RP0=1, select bank1
  2658  16AA  1303               	bcf	3,6	;RP1=0, select bank1
  2659  16AB  00A0               	movwf	?___flsub^(0+128)
  2660  16AC                     l686:
  2661  16AC  0008               	return
  2662  16AD                     __end_of___flsub:
  2663                           
  2664                           	psect	text8
  2665  032B                     __ptext8:	
  2666 ;; *************** function ___fladd *****************
  2667 ;; Defined at:
  2668 ;;		line 10 in file "D:\Programas\XC8 compiler\pic\sources\c90\common\sprcadd.c"
  2669 ;; Parameters:    Size  Location     Type
  2670 ;;  b               4   36[BANK0 ] long 
  2671 ;;  a               4   40[BANK0 ] long 
  2672 ;; Auto vars:     Size  Location     Type
  2673 ;;  grs             1   55[BANK0 ] unsigned char 
  2674 ;;  bexp            1   54[BANK0 ] unsigned char 
  2675 ;;  aexp            1   53[BANK0 ] unsigned char 
  2676 ;;  signs           1   52[BANK0 ] unsigned char 
  2677 ;; Return value:  Size  Location     Type
  2678 ;;                  4   36[BANK0 ] unsigned char 
  2679 ;; Registers used:
  2680 ;;		wreg, status,2, status,0, btemp+1
  2681 ;; Tracked objects:
  2682 ;;		On entry : 0/0
  2683 ;;		On exit  : 0/0
  2684 ;;		Unchanged: 0/0
  2685 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2686 ;;      Params:         0       8       0       0       0
  2687 ;;      Locals:         0       4       0       0       0
  2688 ;;      Temps:          0       8       0       0       0
  2689 ;;      Totals:         0      20       0       0       0
  2690 ;;Total ram usage:       20 bytes
  2691 ;; Hardware stack levels used: 1
  2692 ;; Hardware stack levels required when called: 1
  2693 ;; This function calls:
  2694 ;;		Nothing
  2695 ;; This function is called by:
  2696 ;;		_main
  2697 ;;		___flsub
  2698 ;;		_round
  2699 ;; This function uses a non-reentrant model
  2700 ;;
  2701                           
  2702                           
  2703                           ;psect for function ___fladd
  2704  032B                     ___fladd:
  2705  032B                     l2368:	
  2706                           ;incstack = 0
  2707                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  2708                           
  2709  032B  1283               	bcf	3,5	;RP0=0, select bank0
  2710  032C  1303               	bcf	3,6	;RP1=0, select bank0
  2711  032D  0847               	movf	___fladd@b+3,w
  2712  032E  3980               	andlw	128
  2713  032F  00CC               	movwf	??___fladd
  2714  0330  084C               	movf	??___fladd,w
  2715  0331  00D4               	movwf	___fladd@signs
  2716  0332                     l2370:
  2717  0332  0847               	movf	___fladd@b+3,w
  2718  0333  00CC               	movwf	??___fladd
  2719  0334  074C               	addwf	??___fladd,w
  2720  0335  00CD               	movwf	??___fladd+1
  2721  0336  084D               	movf	??___fladd+1,w
  2722  0337  00D6               	movwf	___fladd@bexp
  2723  0338                     l2372:
  2724  0338  1FC6               	btfss	___fladd@b+2,7
  2725  0339  2B3B               	goto	u2591
  2726  033A  2B3C               	goto	u2590
  2727  033B                     u2591:
  2728  033B  2B3D               	goto	l2376
  2729  033C                     u2590:
  2730  033C                     l2374:
  2731  033C  1456               	bsf	___fladd@bexp,0
  2732  033D                     l2376:
  2733  033D  0856               	movf	___fladd@bexp,w
  2734  033E  1903               	btfsc	3,2
  2735  033F  2B41               	goto	u2601
  2736  0340  2B42               	goto	u2600
  2737  0341                     u2601:
  2738  0341  2B52               	goto	l2386
  2739  0342                     u2600:
  2740  0342                     l2378:
  2741  0342  0A56               	incf	___fladd@bexp,w
  2742  0343  1D03               	btfss	3,2
  2743  0344  2B46               	goto	u2611
  2744  0345  2B47               	goto	u2610
  2745  0346                     u2611:
  2746  0346  2B4F               	goto	l2382
  2747  0347                     u2610:
  2748  0347                     l2380:
  2749  0347  3000               	movlw	0
  2750  0348  00C7               	movwf	___fladd@b+3
  2751  0349  3000               	movlw	0
  2752  034A  00C6               	movwf	___fladd@b+2
  2753  034B  3000               	movlw	0
  2754  034C  00C5               	movwf	___fladd@b+1
  2755  034D  3000               	movlw	0
  2756  034E  00C4               	movwf	___fladd@b
  2757  034F                     l2382:
  2758  034F  17C6               	bsf	___fladd@b+2,7
  2759  0350                     l2384:
  2760  0350  01C7               	clrf	___fladd@b+3
  2761  0351  2B5A               	goto	l2388
  2762  0352                     l2386:
  2763  0352  3000               	movlw	0
  2764  0353  00C7               	movwf	___fladd@b+3
  2765  0354  3000               	movlw	0
  2766  0355  00C6               	movwf	___fladd@b+2
  2767  0356  3000               	movlw	0
  2768  0357  00C5               	movwf	___fladd@b+1
  2769  0358  3000               	movlw	0
  2770  0359  00C4               	movwf	___fladd@b
  2771  035A                     l2388:
  2772  035A  084B               	movf	___fladd@a+3,w
  2773  035B  3980               	andlw	128
  2774  035C  00CC               	movwf	??___fladd
  2775  035D  084C               	movf	??___fladd,w
  2776  035E  00D5               	movwf	___fladd@aexp
  2777  035F                     l2390:
  2778  035F  0855               	movf	___fladd@aexp,w
  2779  0360  0654               	xorwf	___fladd@signs,w
  2780  0361  1903               	skipnz
  2781  0362  2B64               	goto	u2621
  2782  0363  2B65               	goto	u2620
  2783  0364                     u2621:
  2784  0364  2B66               	goto	l2394
  2785  0365                     u2620:
  2786  0365                     l2392:
  2787  0365  1754               	bsf	___fladd@signs,6
  2788  0366                     l2394:
  2789  0366  084B               	movf	___fladd@a+3,w
  2790  0367  00CC               	movwf	??___fladd
  2791  0368  074C               	addwf	??___fladd,w
  2792  0369  00CD               	movwf	??___fladd+1
  2793  036A  084D               	movf	??___fladd+1,w
  2794  036B  00D5               	movwf	___fladd@aexp
  2795  036C                     l2396:
  2796  036C  1FCA               	btfss	___fladd@a+2,7
  2797  036D  2B6F               	goto	u2631
  2798  036E  2B70               	goto	u2630
  2799  036F                     u2631:
  2800  036F  2B71               	goto	l2400
  2801  0370                     u2630:
  2802  0370                     l2398:
  2803  0370  1455               	bsf	___fladd@aexp,0
  2804  0371                     l2400:
  2805  0371  0855               	movf	___fladd@aexp,w
  2806  0372  1903               	btfsc	3,2
  2807  0373  2B75               	goto	u2641
  2808  0374  2B76               	goto	u2640
  2809  0375                     u2641:
  2810  0375  2B86               	goto	l2410
  2811  0376                     u2640:
  2812  0376                     l2402:
  2813  0376  0A55               	incf	___fladd@aexp,w
  2814  0377  1D03               	btfss	3,2
  2815  0378  2B7A               	goto	u2651
  2816  0379  2B7B               	goto	u2650
  2817  037A                     u2651:
  2818  037A  2B83               	goto	l2406
  2819  037B                     u2650:
  2820  037B                     l2404:
  2821  037B  3000               	movlw	0
  2822  037C  00CB               	movwf	___fladd@a+3
  2823  037D  3000               	movlw	0
  2824  037E  00CA               	movwf	___fladd@a+2
  2825  037F  3000               	movlw	0
  2826  0380  00C9               	movwf	___fladd@a+1
  2827  0381  3000               	movlw	0
  2828  0382  00C8               	movwf	___fladd@a
  2829  0383                     l2406:
  2830  0383  17CA               	bsf	___fladd@a+2,7
  2831  0384                     l2408:
  2832  0384  01CB               	clrf	___fladd@a+3
  2833  0385  2B8E               	goto	l640
  2834  0386                     l2410:
  2835  0386  3000               	movlw	0
  2836  0387  00CB               	movwf	___fladd@a+3
  2837  0388  3000               	movlw	0
  2838  0389  00CA               	movwf	___fladd@a+2
  2839  038A  3000               	movlw	0
  2840  038B  00C9               	movwf	___fladd@a+1
  2841  038C  3000               	movlw	0
  2842  038D  00C8               	movwf	___fladd@a
  2843  038E                     l640:
  2844  038E  0856               	movf	___fladd@bexp,w
  2845  038F  0255               	subwf	___fladd@aexp,w
  2846  0390  1803               	skipnc
  2847  0391  2B93               	goto	u2661
  2848  0392  2B94               	goto	u2660
  2849  0393                     u2661:
  2850  0393  2BD8               	goto	l2446
  2851  0394                     u2660:
  2852  0394                     l2412:
  2853  0394  1F54               	btfss	___fladd@signs,6
  2854  0395  2B97               	goto	u2671
  2855  0396  2B98               	goto	u2670
  2856  0397                     u2671:
  2857  0397  2B9C               	goto	l2416
  2858  0398                     u2670:
  2859  0398                     l2414:
  2860  0398  3080               	movlw	128
  2861  0399  00CC               	movwf	??___fladd
  2862  039A  084C               	movf	??___fladd,w
  2863  039B  06D4               	xorwf	___fladd@signs,f
  2864  039C                     l2416:
  2865  039C  0856               	movf	___fladd@bexp,w
  2866  039D  00CC               	movwf	??___fladd
  2867  039E  084C               	movf	??___fladd,w
  2868  039F  00D7               	movwf	___fladd@grs
  2869  03A0                     l2418:
  2870  03A0  0855               	movf	___fladd@aexp,w
  2871  03A1  00CC               	movwf	??___fladd
  2872  03A2  084C               	movf	??___fladd,w
  2873  03A3  00D6               	movwf	___fladd@bexp
  2874  03A4                     l2420:
  2875  03A4  0857               	movf	___fladd@grs,w
  2876  03A5  00CC               	movwf	??___fladd
  2877  03A6  084C               	movf	??___fladd,w
  2878  03A7  00D5               	movwf	___fladd@aexp
  2879  03A8                     l2422:
  2880  03A8  0844               	movf	___fladd@b,w
  2881  03A9  00CC               	movwf	??___fladd
  2882  03AA  084C               	movf	??___fladd,w
  2883  03AB  00D7               	movwf	___fladd@grs
  2884  03AC                     l2424:
  2885  03AC  0848               	movf	___fladd@a,w
  2886  03AD  00CC               	movwf	??___fladd
  2887  03AE  084C               	movf	??___fladd,w
  2888  03AF  00C4               	movwf	___fladd@b
  2889  03B0                     l2426:
  2890  03B0  0857               	movf	___fladd@grs,w
  2891  03B1  00CC               	movwf	??___fladd
  2892  03B2  084C               	movf	??___fladd,w
  2893  03B3  00C8               	movwf	___fladd@a
  2894  03B4                     l2428:
  2895  03B4  0845               	movf	___fladd@b+1,w
  2896  03B5  00CC               	movwf	??___fladd
  2897  03B6  084C               	movf	??___fladd,w
  2898  03B7  00D7               	movwf	___fladd@grs
  2899  03B8                     l2430:
  2900  03B8  0849               	movf	___fladd@a+1,w
  2901  03B9  00CC               	movwf	??___fladd
  2902  03BA  084C               	movf	??___fladd,w
  2903  03BB  00C5               	movwf	___fladd@b+1
  2904  03BC                     l2432:
  2905  03BC  0857               	movf	___fladd@grs,w
  2906  03BD  00CC               	movwf	??___fladd
  2907  03BE  084C               	movf	??___fladd,w
  2908  03BF  00C9               	movwf	___fladd@a+1
  2909  03C0                     l2434:
  2910  03C0  0846               	movf	___fladd@b+2,w
  2911  03C1  00CC               	movwf	??___fladd
  2912  03C2  084C               	movf	??___fladd,w
  2913  03C3  00D7               	movwf	___fladd@grs
  2914  03C4                     l2436:
  2915  03C4  084A               	movf	___fladd@a+2,w
  2916  03C5  00CC               	movwf	??___fladd
  2917  03C6  084C               	movf	??___fladd,w
  2918  03C7  00C6               	movwf	___fladd@b+2
  2919  03C8                     l2438:
  2920  03C8  0857               	movf	___fladd@grs,w
  2921  03C9  00CC               	movwf	??___fladd
  2922  03CA  084C               	movf	??___fladd,w
  2923  03CB  00CA               	movwf	___fladd@a+2
  2924  03CC                     l2440:
  2925  03CC  0847               	movf	___fladd@b+3,w
  2926  03CD  00CC               	movwf	??___fladd
  2927  03CE  084C               	movf	??___fladd,w
  2928  03CF  00D7               	movwf	___fladd@grs
  2929  03D0                     l2442:
  2930  03D0  084B               	movf	___fladd@a+3,w
  2931  03D1  00CC               	movwf	??___fladd
  2932  03D2  084C               	movf	??___fladd,w
  2933  03D3  00C7               	movwf	___fladd@b+3
  2934  03D4                     l2444:
  2935  03D4  0857               	movf	___fladd@grs,w
  2936  03D5  00CC               	movwf	??___fladd
  2937  03D6  084C               	movf	??___fladd,w
  2938  03D7  00CB               	movwf	___fladd@a+3
  2939  03D8                     l2446:
  2940  03D8  01D7               	clrf	___fladd@grs
  2941  03D9                     l2448:
  2942  03D9  0855               	movf	___fladd@aexp,w
  2943  03DA  00CC               	movwf	??___fladd
  2944  03DB  01CD               	clrf	??___fladd+1
  2945  03DC  084D               	movf	??___fladd+1,w
  2946  03DD  00CF               	movwf	??___fladd+3
  2947  03DE  0856               	movf	___fladd@bexp,w
  2948  03DF  024C               	subwf	??___fladd,w
  2949  03E0  00CE               	movwf	??___fladd+2
  2950  03E1  1C03               	skipc
  2951  03E2  03CF               	decf	??___fladd+3,f
  2952  03E3  084F               	movf	??___fladd+3,w
  2953  03E4  3A80               	xorlw	128
  2954  03E5  00FF               	movwf	btemp+1
  2955  03E6  3080               	movlw	128
  2956  03E7  027F               	subwf	btemp+1,w
  2957  03E8  1D03               	skipz
  2958  03E9  2BEC               	goto	u2685
  2959  03EA  301A               	movlw	26
  2960  03EB  024E               	subwf	??___fladd+2,w
  2961  03EC                     u2685:
  2962  03EC  1C03               	skipc
  2963  03ED  2BEF               	goto	u2681
  2964  03EE  2BF0               	goto	u2680
  2965  03EF                     u2681:
  2966  03EF  2C2D               	goto	l2464
  2967  03F0                     u2680:
  2968  03F0                     l2450:
  2969  03F0  1283               	bcf	3,5	;RP0=0, select bank0
  2970  03F1  1303               	bcf	3,6	;RP1=0, select bank0
  2971  03F2  0847               	movf	___fladd@b+3,w
  2972  03F3  0446               	iorwf	___fladd@b+2,w
  2973  03F4  0445               	iorwf	___fladd@b+1,w
  2974  03F5  0444               	iorwf	___fladd@b,w
  2975  03F6  1D03               	skipz
  2976  03F7  2BF9               	goto	u2691
  2977  03F8  2BFB               	goto	u2690
  2978  03F9                     u2691:
  2979  03F9  3001               	movlw	1
  2980  03FA  2BFC               	goto	u2700
  2981  03FB                     u2690:
  2982  03FB  3000               	movlw	0
  2983  03FC                     u2700:
  2984  03FC  00CC               	movwf	??___fladd
  2985  03FD  084C               	movf	??___fladd,w
  2986  03FE  00D7               	movwf	___fladd@grs
  2987  03FF  3000               	movlw	0
  2988  0400  00C7               	movwf	___fladd@b+3
  2989  0401  3000               	movlw	0
  2990  0402  00C6               	movwf	___fladd@b+2
  2991  0403  3000               	movlw	0
  2992  0404  00C5               	movwf	___fladd@b+1
  2993  0405  3000               	movlw	0
  2994  0406  00C4               	movwf	___fladd@b
  2995  0407  0855               	movf	___fladd@aexp,w
  2996  0408  00CC               	movwf	??___fladd
  2997  0409  084C               	movf	??___fladd,w
  2998  040A  00D6               	movwf	___fladd@bexp
  2999  040B  2C35               	goto	l644
  3000  040C                     l646:
  3001  040C  1C57               	btfss	___fladd@grs,0
  3002  040D  2C0F               	goto	u2711
  3003  040E  2C10               	goto	u2710
  3004  040F                     u2711:
  3005  040F  2C19               	goto	l2454
  3006  0410                     u2710:
  3007  0410                     l2452:
  3008  0410  0857               	movf	___fladd@grs,w
  3009  0411  00CC               	movwf	??___fladd
  3010  0412  1003               	clrc
  3011  0413  0C4C               	rrf	??___fladd,w
  3012  0414  3801               	iorlw	1
  3013  0415  00CD               	movwf	??___fladd+1
  3014  0416  084D               	movf	??___fladd+1,w
  3015  0417  00D7               	movwf	___fladd@grs
  3016  0418  2C1B               	goto	l2456
  3017  0419                     l2454:
  3018  0419  1003               	clrc
  3019  041A  0CD7               	rrf	___fladd@grs,f
  3020  041B                     l2456:
  3021  041B  1C44               	btfss	___fladd@b,0
  3022  041C  2C1E               	goto	u2721
  3023  041D  2C1F               	goto	u2720
  3024  041E                     u2721:
  3025  041E  2C20               	goto	l2460
  3026  041F                     u2720:
  3027  041F                     l2458:
  3028  041F  17D7               	bsf	___fladd@grs,7
  3029  0420                     l2460:
  3030  0420  3001               	movlw	1
  3031  0421  00CC               	movwf	??___fladd
  3032  0422                     u2735:
  3033  0422  0D47               	rlf	___fladd@b+3,w
  3034  0423  0CC7               	rrf	___fladd@b+3,f
  3035  0424  0CC6               	rrf	___fladd@b+2,f
  3036  0425  0CC5               	rrf	___fladd@b+1,f
  3037  0426  0CC4               	rrf	___fladd@b,f
  3038  0427  0BCC               	decfsz	??___fladd& (0+127),f
  3039  0428  2C22               	goto	u2735
  3040  0429                     l2462:
  3041  0429  3001               	movlw	1
  3042  042A  00CC               	movwf	??___fladd
  3043  042B  084C               	movf	??___fladd,w
  3044  042C  07D6               	addwf	___fladd@bexp,f
  3045  042D                     l2464:
  3046  042D  1283               	bcf	3,5	;RP0=0, select bank0
  3047  042E  1303               	bcf	3,6	;RP1=0, select bank0
  3048  042F  0855               	movf	___fladd@aexp,w
  3049  0430  0256               	subwf	___fladd@bexp,w
  3050  0431  1C03               	skipc
  3051  0432  2C34               	goto	u2741
  3052  0433  2C35               	goto	u2740
  3053  0434                     u2741:
  3054  0434  2C0C               	goto	l646
  3055  0435                     u2740:
  3056  0435                     l644:
  3057  0435  1B54               	btfsc	___fladd@signs,6
  3058  0436  2C38               	goto	u2751
  3059  0437  2C39               	goto	u2750
  3060  0438                     u2751:
  3061  0438  2C84               	goto	l2490
  3062  0439                     u2750:
  3063  0439                     l2466:
  3064  0439  0856               	movf	___fladd@bexp,w
  3065  043A  1D03               	btfss	3,2
  3066  043B  2C3D               	goto	u2761
  3067  043C  2C3E               	goto	u2760
  3068  043D                     u2761:
  3069  043D  2C47               	goto	l2472
  3070  043E                     u2760:
  3071  043E                     l2468:
  3072  043E  3000               	movlw	0
  3073  043F  00C7               	movwf	?___fladd+3
  3074  0440  3000               	movlw	0
  3075  0441  00C6               	movwf	?___fladd+2
  3076  0442  3000               	movlw	0
  3077  0443  00C5               	movwf	?___fladd+1
  3078  0444  3000               	movlw	0
  3079  0445  00C4               	movwf	?___fladd
  3080  0446  2DB2               	goto	l653
  3081  0447                     l2472:
  3082  0447  0848               	movf	___fladd@a,w
  3083  0448  07C4               	addwf	___fladd@b,f
  3084  0449  0849               	movf	___fladd@a+1,w
  3085  044A  1103               	clrz
  3086  044B  1803               	skipnc
  3087  044C  3E01               	addlw	1
  3088  044D  1903               	skipnz
  3089  044E  2C50               	goto	u2771
  3090  044F  07C5               	addwf	___fladd@b+1,f
  3091  0450                     u2771:
  3092  0450  084A               	movf	___fladd@a+2,w
  3093  0451  1103               	clrz
  3094  0452  1803               	skipnc
  3095  0453  3E01               	addlw	1
  3096  0454  1903               	skipnz
  3097  0455  2C57               	goto	u2772
  3098  0456  07C6               	addwf	___fladd@b+2,f
  3099  0457                     u2772:
  3100  0457  084B               	movf	___fladd@a+3,w
  3101  0458  1103               	clrz
  3102  0459  1803               	skipnc
  3103  045A  3E01               	addlw	1
  3104  045B  1903               	skipnz
  3105  045C  2C5E               	goto	u2773
  3106  045D  07C7               	addwf	___fladd@b+3,f
  3107  045E                     u2773:
  3108  045E                     l2474:
  3109  045E  1C47               	btfss	___fladd@b+3,0
  3110  045F  2C61               	goto	u2781
  3111  0460  2C62               	goto	u2780
  3112  0461                     u2781:
  3113  0461  2D38               	goto	l2524
  3114  0462                     u2780:
  3115  0462                     l2476:
  3116  0462  1C57               	btfss	___fladd@grs,0
  3117  0463  2C65               	goto	u2791
  3118  0464  2C66               	goto	u2790
  3119  0465                     u2791:
  3120  0465  2C6F               	goto	l2480
  3121  0466                     u2790:
  3122  0466                     l2478:
  3123  0466  0857               	movf	___fladd@grs,w
  3124  0467  00CC               	movwf	??___fladd
  3125  0468  1003               	clrc
  3126  0469  0C4C               	rrf	??___fladd,w
  3127  046A  3801               	iorlw	1
  3128  046B  00CD               	movwf	??___fladd+1
  3129  046C  084D               	movf	??___fladd+1,w
  3130  046D  00D7               	movwf	___fladd@grs
  3131  046E  2C71               	goto	l2482
  3132  046F                     l2480:
  3133  046F  1003               	clrc
  3134  0470  0CD7               	rrf	___fladd@grs,f
  3135  0471                     l2482:
  3136  0471  1C44               	btfss	___fladd@b,0
  3137  0472  2C74               	goto	u2801
  3138  0473  2C75               	goto	u2800
  3139  0474                     u2801:
  3140  0474  2C76               	goto	l2486
  3141  0475                     u2800:
  3142  0475                     l2484:
  3143  0475  17D7               	bsf	___fladd@grs,7
  3144  0476                     l2486:
  3145  0476  3001               	movlw	1
  3146  0477  00CC               	movwf	??___fladd
  3147  0478                     u2815:
  3148  0478  0D47               	rlf	___fladd@b+3,w
  3149  0479  0CC7               	rrf	___fladd@b+3,f
  3150  047A  0CC6               	rrf	___fladd@b+2,f
  3151  047B  0CC5               	rrf	___fladd@b+1,f
  3152  047C  0CC4               	rrf	___fladd@b,f
  3153  047D  0BCC               	decfsz	??___fladd& (0+127),f
  3154  047E  2C78               	goto	u2815
  3155  047F                     l2488:
  3156  047F  3001               	movlw	1
  3157  0480  00CC               	movwf	??___fladd
  3158  0481  084C               	movf	??___fladd,w
  3159  0482  07D6               	addwf	___fladd@bexp,f
  3160  0483  2D38               	goto	l2524
  3161  0484                     l2490:
  3162  0484  0847               	movf	___fladd@b+3,w
  3163  0485  3A80               	xorlw	128
  3164  0486  00FF               	movwf	btemp+1
  3165  0487  084B               	movf	___fladd@a+3,w
  3166  0488  3A80               	xorlw	128
  3167  0489  027F               	subwf	btemp+1,w
  3168  048A  1D03               	skipz
  3169  048B  2C96               	goto	u2823
  3170  048C  084A               	movf	___fladd@a+2,w
  3171  048D  0246               	subwf	___fladd@b+2,w
  3172  048E  1D03               	skipz
  3173  048F  2C96               	goto	u2823
  3174  0490  0849               	movf	___fladd@a+1,w
  3175  0491  0245               	subwf	___fladd@b+1,w
  3176  0492  1D03               	skipz
  3177  0493  2C96               	goto	u2823
  3178  0494  0848               	movf	___fladd@a,w
  3179  0495  0244               	subwf	___fladd@b,w
  3180  0496                     u2823:
  3181  0496  1803               	skipnc
  3182  0497  2C99               	goto	u2821
  3183  0498  2C9A               	goto	u2820
  3184  0499                     u2821:
  3185  0499  2CF2               	goto	l2500
  3186  049A                     u2820:
  3187  049A                     l2492:
  3188  049A  30FF               	movlw	255
  3189  049B  00CC               	movwf	??___fladd
  3190  049C  30FF               	movlw	255
  3191  049D  00CD               	movwf	??___fladd+1
  3192  049E  30FF               	movlw	255
  3193  049F  00CE               	movwf	??___fladd+2
  3194  04A0  30FF               	movlw	255
  3195  04A1  00CF               	movwf	??___fladd+3
  3196  04A2  0848               	movf	___fladd@a,w
  3197  04A3  00D0               	movwf	??___fladd+4
  3198  04A4  0849               	movf	___fladd@a+1,w
  3199  04A5  00D1               	movwf	??___fladd+5
  3200  04A6  084A               	movf	___fladd@a+2,w
  3201  04A7  00D2               	movwf	??___fladd+6
  3202  04A8  084B               	movf	___fladd@a+3,w
  3203  04A9  00D3               	movwf	??___fladd+7
  3204  04AA  0844               	movf	___fladd@b,w
  3205  04AB  02D0               	subwf	??___fladd+4,f
  3206  04AC  0845               	movf	___fladd@b+1,w
  3207  04AD  1C03               	skipc
  3208  04AE  0F45               	incfsz	___fladd@b+1,w
  3209  04AF  2CB1               	goto	u2831
  3210  04B0  2CB2               	goto	u2832
  3211  04B1                     u2831:
  3212  04B1  02D1               	subwf	??___fladd+5,f
  3213  04B2                     u2832:
  3214  04B2  0846               	movf	___fladd@b+2,w
  3215  04B3  1C03               	skipc
  3216  04B4  0F46               	incfsz	___fladd@b+2,w
  3217  04B5  2CB7               	goto	u2833
  3218  04B6  2CB8               	goto	u2834
  3219  04B7                     u2833:
  3220  04B7  02D2               	subwf	??___fladd+6,f
  3221  04B8                     u2834:
  3222  04B8  0847               	movf	___fladd@b+3,w
  3223  04B9  1C03               	skipc
  3224  04BA  0F47               	incfsz	___fladd@b+3,w
  3225  04BB  2CBD               	goto	u2835
  3226  04BC  2CBE               	goto	u2836
  3227  04BD                     u2835:
  3228  04BD  02D3               	subwf	??___fladd+7,f
  3229  04BE                     u2836:
  3230  04BE  0850               	movf	??___fladd+4,w
  3231  04BF  07CC               	addwf	??___fladd,f
  3232  04C0  0851               	movf	??___fladd+5,w
  3233  04C1  1803               	skipnc
  3234  04C2  0F51               	incfsz	??___fladd+5,w
  3235  04C3  2CC5               	goto	u2840
  3236  04C4  2CC6               	goto	u2841
  3237  04C5                     u2840:
  3238  04C5  07CD               	addwf	??___fladd+1,f
  3239  04C6                     u2841:
  3240  04C6  0852               	movf	??___fladd+6,w
  3241  04C7  1803               	skipnc
  3242  04C8  0F52               	incfsz	??___fladd+6,w
  3243  04C9  2CCB               	goto	u2842
  3244  04CA  2CCC               	goto	u2843
  3245  04CB                     u2842:
  3246  04CB  07CE               	addwf	??___fladd+2,f
  3247  04CC                     u2843:
  3248  04CC  0853               	movf	??___fladd+7,w
  3249  04CD  1803               	skipnc
  3250  04CE  0A53               	incf	??___fladd+7,w
  3251  04CF  07CF               	addwf	??___fladd+3,f
  3252  04D0  084F               	movf	??___fladd+3,w
  3253  04D1  00C7               	movwf	___fladd@b+3
  3254  04D2  084E               	movf	??___fladd+2,w
  3255  04D3  00C6               	movwf	___fladd@b+2
  3256  04D4  084D               	movf	??___fladd+1,w
  3257  04D5  00C5               	movwf	___fladd@b+1
  3258  04D6  084C               	movf	??___fladd,w
  3259  04D7  00C4               	movwf	___fladd@b
  3260  04D8                     l2494:
  3261  04D8  3080               	movlw	128
  3262  04D9  00CC               	movwf	??___fladd
  3263  04DA  084C               	movf	??___fladd,w
  3264  04DB  06D4               	xorwf	___fladd@signs,f
  3265  04DC  09D7               	comf	___fladd@grs,f
  3266  04DD  0AD7               	incf	___fladd@grs,f
  3267  04DE                     l2496:
  3268  04DE  0857               	movf	___fladd@grs,w
  3269  04DF  1D03               	btfss	3,2
  3270  04E0  2CE2               	goto	u2851
  3271  04E1  2CE3               	goto	u2850
  3272  04E2                     u2851:
  3273  04E2  2D00               	goto	l661
  3274  04E3                     u2850:
  3275  04E3                     l2498:
  3276  04E3  3001               	movlw	1
  3277  04E4  07C4               	addwf	___fladd@b,f
  3278  04E5  3000               	movlw	0
  3279  04E6  1803               	skipnc
  3280  04E7  3001               	movlw	1
  3281  04E8  07C5               	addwf	___fladd@b+1,f
  3282  04E9  3000               	movlw	0
  3283  04EA  1803               	skipnc
  3284  04EB  3001               	movlw	1
  3285  04EC  07C6               	addwf	___fladd@b+2,f
  3286  04ED  3000               	movlw	0
  3287  04EE  1803               	skipnc
  3288  04EF  3001               	movlw	1
  3289  04F0  07C7               	addwf	___fladd@b+3,f
  3290  04F1  2D00               	goto	l661
  3291  04F2                     l2500:
  3292  04F2  0848               	movf	___fladd@a,w
  3293  04F3  02C4               	subwf	___fladd@b,f
  3294  04F4  0849               	movf	___fladd@a+1,w
  3295  04F5  1C03               	skipc
  3296  04F6  0F49               	incfsz	___fladd@a+1,w
  3297  04F7  02C5               	subwf	___fladd@b+1,f
  3298  04F8  084A               	movf	___fladd@a+2,w
  3299  04F9  1C03               	skipc
  3300  04FA  0F4A               	incfsz	___fladd@a+2,w
  3301  04FB  02C6               	subwf	___fladd@b+2,f
  3302  04FC  084B               	movf	___fladd@a+3,w
  3303  04FD  1C03               	skipc
  3304  04FE  0F4B               	incfsz	___fladd@a+3,w
  3305  04FF  02C7               	subwf	___fladd@b+3,f
  3306  0500                     l661:
  3307  0500  0847               	movf	___fladd@b+3,w
  3308  0501  0446               	iorwf	___fladd@b+2,w
  3309  0502  0445               	iorwf	___fladd@b+1,w
  3310  0503  0444               	iorwf	___fladd@b,w
  3311  0504  1D03               	skipz
  3312  0505  2D07               	goto	u2861
  3313  0506  2D08               	goto	u2860
  3314  0507                     u2861:
  3315  0507  2D34               	goto	l2522
  3316  0508                     u2860:
  3317  0508                     l2502:
  3318  0508  0857               	movf	___fladd@grs,w
  3319  0509  1D03               	btfss	3,2
  3320  050A  2D0C               	goto	u2871
  3321  050B  2D0D               	goto	u2870
  3322  050C                     u2871:
  3323  050C  2D34               	goto	l2522
  3324  050D                     u2870:
  3325  050D                     l2504:
  3326  050D  3000               	movlw	0
  3327  050E  00C7               	movwf	?___fladd+3
  3328  050F  3000               	movlw	0
  3329  0510  00C6               	movwf	?___fladd+2
  3330  0511  3000               	movlw	0
  3331  0512  00C5               	movwf	?___fladd+1
  3332  0513  3000               	movlw	0
  3333  0514  00C4               	movwf	?___fladd
  3334  0515  2DB2               	goto	l653
  3335  0516                     l2508:
  3336  0516  3001               	movlw	1
  3337  0517  00CC               	movwf	??___fladd
  3338  0518                     u2885:
  3339  0518  1003               	clrc
  3340  0519  0DC4               	rlf	___fladd@b,f
  3341  051A  0DC5               	rlf	___fladd@b+1,f
  3342  051B  0DC6               	rlf	___fladd@b+2,f
  3343  051C  0DC7               	rlf	___fladd@b+3,f
  3344  051D  0BCC               	decfsz	??___fladd,f
  3345  051E  2D18               	goto	u2885
  3346  051F                     l2510:
  3347  051F  1FD7               	btfss	___fladd@grs,7
  3348  0520  2D22               	goto	u2891
  3349  0521  2D23               	goto	u2890
  3350  0522                     u2891:
  3351  0522  2D24               	goto	l665
  3352  0523                     u2890:
  3353  0523                     l2512:
  3354  0523  1444               	bsf	___fladd@b,0
  3355  0524                     l665:
  3356  0524  1C57               	btfss	___fladd@grs,0
  3357  0525  2D27               	goto	u2901
  3358  0526  2D28               	goto	u2900
  3359  0527                     u2901:
  3360  0527  2D2B               	goto	l2516
  3361  0528                     u2900:
  3362  0528                     l2514:
  3363  0528  1403               	setc
  3364  0529  0DD7               	rlf	___fladd@grs,f
  3365  052A  2D2D               	goto	l2518
  3366  052B                     l2516:
  3367  052B  1003               	clrc
  3368  052C  0DD7               	rlf	___fladd@grs,f
  3369  052D                     l2518:
  3370  052D  0856               	movf	___fladd@bexp,w
  3371  052E  1903               	btfsc	3,2
  3372  052F  2D31               	goto	u2911
  3373  0530  2D32               	goto	u2910
  3374  0531                     u2911:
  3375  0531  2D34               	goto	l2522
  3376  0532                     u2910:
  3377  0532                     l2520:
  3378  0532  3001               	movlw	1
  3379  0533  02D6               	subwf	___fladd@bexp,f
  3380  0534                     l2522:
  3381  0534  1FC6               	btfss	___fladd@b+2,7
  3382  0535  2D37               	goto	u2921
  3383  0536  2D38               	goto	u2920
  3384  0537                     u2921:
  3385  0537  2D16               	goto	l2508
  3386  0538                     u2920:
  3387  0538                     l2524:
  3388  0538  01D5               	clrf	___fladd@aexp
  3389  0539                     l2526:
  3390  0539  1FD7               	btfss	___fladd@grs,7
  3391  053A  2D3C               	goto	u2931
  3392  053B  2D3D               	goto	u2930
  3393  053C                     u2931:
  3394  053C  2D4B               	goto	l2534
  3395  053D                     u2930:
  3396  053D                     l2528:
  3397  053D  0857               	movf	___fladd@grs,w
  3398  053E  397F               	andlw	127
  3399  053F  1903               	btfsc	3,2
  3400  0540  2D42               	goto	u2941
  3401  0541  2D43               	goto	u2940
  3402  0542                     u2941:
  3403  0542  2D46               	goto	l671
  3404  0543                     u2940:
  3405  0543                     l2530:
  3406  0543  01D5               	clrf	___fladd@aexp
  3407  0544  0AD5               	incf	___fladd@aexp,f
  3408  0545  2D4B               	goto	l2534
  3409  0546                     l671:
  3410  0546  1C44               	btfss	___fladd@b,0
  3411  0547  2D49               	goto	u2951
  3412  0548  2D4A               	goto	u2950
  3413  0549                     u2951:
  3414  0549  2D4B               	goto	l2534
  3415  054A                     u2950:
  3416  054A  2D43               	goto	l2530
  3417  054B                     l2534:
  3418  054B  0855               	movf	___fladd@aexp,w
  3419  054C  1903               	btfsc	3,2
  3420  054D  2D4F               	goto	u2961
  3421  054E  2D50               	goto	u2960
  3422  054F                     u2961:
  3423  054F  2D84               	goto	l674
  3424  0550                     u2960:
  3425  0550                     l2536:
  3426  0550  3001               	movlw	1
  3427  0551  07C4               	addwf	___fladd@b,f
  3428  0552  3000               	movlw	0
  3429  0553  1803               	skipnc
  3430  0554  3001               	movlw	1
  3431  0555  07C5               	addwf	___fladd@b+1,f
  3432  0556  3000               	movlw	0
  3433  0557  1803               	skipnc
  3434  0558  3001               	movlw	1
  3435  0559  07C6               	addwf	___fladd@b+2,f
  3436  055A  3000               	movlw	0
  3437  055B  1803               	skipnc
  3438  055C  3001               	movlw	1
  3439  055D  07C7               	addwf	___fladd@b+3,f
  3440  055E                     l2538:
  3441  055E  1C47               	btfss	___fladd@b+3,0
  3442  055F  2D61               	goto	u2971
  3443  0560  2D62               	goto	u2970
  3444  0561                     u2971:
  3445  0561  2D84               	goto	l674
  3446  0562                     u2970:
  3447  0562                     l2540:
  3448  0562  0844               	movf	___fladd@b,w
  3449  0563  00CC               	movwf	??___fladd
  3450  0564  0845               	movf	___fladd@b+1,w
  3451  0565  00CD               	movwf	??___fladd+1
  3452  0566  0846               	movf	___fladd@b+2,w
  3453  0567  00CE               	movwf	??___fladd+2
  3454  0568  0847               	movf	___fladd@b+3,w
  3455  0569  00CF               	movwf	??___fladd+3
  3456  056A  3001               	movlw	1
  3457  056B  00D0               	movwf	??___fladd+4
  3458  056C                     u2985:
  3459  056C  0D4F               	rlf	??___fladd+3,w
  3460  056D  0CCF               	rrf	??___fladd+3,f
  3461  056E  0CCE               	rrf	??___fladd+2,f
  3462  056F  0CCD               	rrf	??___fladd+1,f
  3463  0570  0CCC               	rrf	??___fladd,f
  3464  0571                     u2980:
  3465  0571  0BD0               	decfsz	??___fladd+4,f
  3466  0572  2D6C               	goto	u2985
  3467  0573  084F               	movf	??___fladd+3,w
  3468  0574  00C7               	movwf	___fladd@b+3
  3469  0575  084E               	movf	??___fladd+2,w
  3470  0576  00C6               	movwf	___fladd@b+2
  3471  0577  084D               	movf	??___fladd+1,w
  3472  0578  00C5               	movwf	___fladd@b+1
  3473  0579  084C               	movf	??___fladd,w
  3474  057A  00C4               	movwf	___fladd@b
  3475  057B  0A56               	incf	___fladd@bexp,w
  3476  057C  1903               	btfsc	3,2
  3477  057D  2D7F               	goto	u2991
  3478  057E  2D80               	goto	u2990
  3479  057F                     u2991:
  3480  057F  2D84               	goto	l674
  3481  0580                     u2990:
  3482  0580                     l2542:
  3483  0580  3001               	movlw	1
  3484  0581  00CC               	movwf	??___fladd
  3485  0582  084C               	movf	??___fladd,w
  3486  0583  07D6               	addwf	___fladd@bexp,f
  3487  0584                     l674:
  3488  0584  0A56               	incf	___fladd@bexp,w
  3489  0585  1903               	btfsc	3,2
  3490  0586  2D88               	goto	u3001
  3491  0587  2D89               	goto	u3000
  3492  0588                     u3001:
  3493  0588  2D8E               	goto	l2546
  3494  0589                     u3000:
  3495  0589                     l2544:
  3496  0589  0856               	movf	___fladd@bexp,w
  3497  058A  1D03               	btfss	3,2
  3498  058B  2D8D               	goto	u3011
  3499  058C  2D8E               	goto	u3010
  3500  058D                     u3011:
  3501  058D  2D9C               	goto	l2552
  3502  058E                     u3010:
  3503  058E                     l2546:
  3504  058E  3000               	movlw	0
  3505  058F  00C7               	movwf	___fladd@b+3
  3506  0590  3000               	movlw	0
  3507  0591  00C6               	movwf	___fladd@b+2
  3508  0592  3000               	movlw	0
  3509  0593  00C5               	movwf	___fladd@b+1
  3510  0594  3000               	movlw	0
  3511  0595  00C4               	movwf	___fladd@b
  3512  0596                     l2548:
  3513  0596  0856               	movf	___fladd@bexp,w
  3514  0597  1D03               	btfss	3,2
  3515  0598  2D9A               	goto	u3021
  3516  0599  2D9B               	goto	u3020
  3517  059A                     u3021:
  3518  059A  2D9C               	goto	l2552
  3519  059B                     u3020:
  3520  059B                     l2550:
  3521  059B  01D4               	clrf	___fladd@signs
  3522  059C                     l2552:
  3523  059C  1C56               	btfss	___fladd@bexp,0
  3524  059D  2D9F               	goto	u3031
  3525  059E  2DA0               	goto	u3030
  3526  059F                     u3031:
  3527  059F  2DA2               	goto	l2556
  3528  05A0                     u3030:
  3529  05A0                     l2554:
  3530  05A0  17C6               	bsf	___fladd@b+2,7
  3531  05A1  2DA6               	goto	l682
  3532  05A2                     l2556:
  3533  05A2  307F               	movlw	127
  3534  05A3  00CC               	movwf	??___fladd
  3535  05A4  084C               	movf	??___fladd,w
  3536  05A5  05C6               	andwf	___fladd@b+2,f
  3537  05A6                     l682:
  3538  05A6  0856               	movf	___fladd@bexp,w
  3539  05A7  00CC               	movwf	??___fladd
  3540  05A8  1003               	clrc
  3541  05A9  0C4C               	rrf	??___fladd,w
  3542  05AA  00CD               	movwf	??___fladd+1
  3543  05AB  084D               	movf	??___fladd+1,w
  3544  05AC  00C7               	movwf	___fladd@b+3
  3545  05AD                     l2558:
  3546  05AD  1FD4               	btfss	___fladd@signs,7
  3547  05AE  2DB0               	goto	u3041
  3548  05AF  2DB1               	goto	u3040
  3549  05B0                     u3041:
  3550  05B0  2DB2               	goto	l683
  3551  05B1                     u3040:
  3552  05B1                     l2560:
  3553  05B1  17C7               	bsf	___fladd@b+3,7
  3554  05B2                     l683:
  3555  05B2                     l653:
  3556  05B2  0008               	return
  3557  05B3                     __end_of___fladd:
  3558                           
  3559                           	psect	text9
  3560  17A5                     __ptext9:	
  3561 ;; *************** function _imprime_tela_main *****************
  3562 ;; Defined at:
  3563 ;;		line 89 in file "main.c"
  3564 ;; Parameters:    Size  Location     Type
  3565 ;;		None
  3566 ;; Auto vars:     Size  Location     Type
  3567 ;;		None
  3568 ;; Return value:  Size  Location     Type
  3569 ;;                  1    wreg      void 
  3570 ;; Registers used:
  3571 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3572 ;; Tracked objects:
  3573 ;;		On entry : 0/0
  3574 ;;		On exit  : 0/0
  3575 ;;		Unchanged: 0/0
  3576 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3577 ;;      Params:         0       0       0       0       0
  3578 ;;      Locals:         0       0       0       0       0
  3579 ;;      Temps:          0       1       0       0       0
  3580 ;;      Totals:         0       1       0       0       0
  3581 ;;Total ram usage:        1 bytes
  3582 ;; Hardware stack levels used: 1
  3583 ;; Hardware stack levels required when called: 4
  3584 ;; This function calls:
  3585 ;;		_LCD_Goto
  3586 ;;		_LCD_Print
  3587 ;;		_sprintf
  3588 ;; This function is called by:
  3589 ;;		_main
  3590 ;; This function uses a non-reentrant model
  3591 ;;
  3592                           
  3593                           
  3594                           ;psect for function _imprime_tela_main
  3595  17A5                     _imprime_tela_main:
  3596  17A5                     l3616:	
  3597                           ;incstack = 0
  3598                           ; Regs used in _imprime_tela_main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3599                           
  3600                           
  3601                           ;main.c: 91:     LCD_Goto(1, 1);
  3602  17A5  1283               	bcf	3,5	;RP0=0, select bank0
  3603  17A6  1303               	bcf	3,6	;RP1=0, select bank0
  3604  17A7  01A1               	clrf	LCD_Goto@row
  3605  17A8  0AA1               	incf	LCD_Goto@row,f
  3606  17A9  3001               	movlw	1
  3607  17AA  160A  118A  24A1  160A  118A  	fcall	_LCD_Goto
  3608  17AF                     l3618:
  3609                           
  3610                           ;main.c: 92:     sprintf(LCD_Cstring,"Ho.: %02d:%02d:%02d   ",Horas,Minutos,Segundos);
  3611  17AF  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  3612  17B0  1283               	bcf	3,5	;RP0=0, select bank0
  3613  17B1  1303               	bcf	3,6	;RP1=0, select bank0
  3614  17B2  00BC               	movwf	??_imprime_tela_main
  3615  17B3  083C               	movf	??_imprime_tela_main,w
  3616  17B4  00A9               	movwf	sprintf@f
  3617  17B5  086E               	movf	_Horas+1,w
  3618  17B6  00AB               	movwf	?_sprintf+2
  3619  17B7  086D               	movf	_Horas,w
  3620  17B8  00AA               	movwf	?_sprintf+1
  3621  17B9  0879               	movf	_Minutos+1,w
  3622  17BA  00AD               	movwf	?_sprintf+4
  3623  17BB  0878               	movf	_Minutos,w
  3624  17BC  00AC               	movwf	?_sprintf+3
  3625  17BD  1683               	bsf	3,5	;RP0=1, select bank1
  3626  17BE  1303               	bcf	3,6	;RP1=0, select bank1
  3627  17BF  084B               	movf	(_Segundos+1)^(0+128),w
  3628  17C0  1283               	bcf	3,5	;RP0=0, select bank0
  3629  17C1  1303               	bcf	3,6	;RP1=0, select bank0
  3630  17C2  00AF               	movwf	?_sprintf+6
  3631  17C3  1683               	bsf	3,5	;RP0=1, select bank1
  3632  17C4  1303               	bcf	3,6	;RP1=0, select bank1
  3633  17C5  084A               	movf	_Segundos^(0+128),w
  3634  17C6  1283               	bcf	3,5	;RP0=0, select bank0
  3635  17C7  1303               	bcf	3,6	;RP1=0, select bank0
  3636  17C8  00AE               	movwf	?_sprintf+5
  3637  17C9  30CE               	movlw	(low (_LCD_Cstring| 0))& (0+255)
  3638  17CA  120A  158A  262C  160A  118A  	fcall	_sprintf
  3639  17CF                     l3620:
  3640                           
  3641                           ;main.c: 93:     LCD_Print(LCD_Cstring);
  3642  17CF  30CE               	movlw	(low (_LCD_Cstring| 0))& (0+255)
  3643  17D0  160A  118A  24D9  160A  118A  	fcall	_LCD_Print
  3644  17D5                     l3622:
  3645                           
  3646                           ;main.c: 95:     LCD_Goto(1, 2);
  3647  17D5  3002               	movlw	2
  3648  17D6  1283               	bcf	3,5	;RP0=0, select bank0
  3649  17D7  1303               	bcf	3,6	;RP1=0, select bank0
  3650  17D8  00BC               	movwf	??_imprime_tela_main
  3651  17D9  083C               	movf	??_imprime_tela_main,w
  3652  17DA  00A1               	movwf	LCD_Goto@row
  3653  17DB  3001               	movlw	1
  3654  17DC  160A  118A  24A1  160A  118A  	fcall	_LCD_Goto
  3655  17E1                     l3624:
  3656                           
  3657                           ;main.c: 96:     sprintf(LCD_Cstring,"Te.: %02d\337c",Temperatura);
  3658  17E1  3065               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  3659  17E2  1283               	bcf	3,5	;RP0=0, select bank0
  3660  17E3  1303               	bcf	3,6	;RP1=0, select bank0
  3661  17E4  00BC               	movwf	??_imprime_tela_main
  3662  17E5  083C               	movf	??_imprime_tela_main,w
  3663  17E6  00A9               	movwf	sprintf@f
  3664  17E7  1683               	bsf	3,5	;RP0=1, select bank1
  3665  17E8  1303               	bcf	3,6	;RP1=0, select bank1
  3666  17E9  0849               	movf	(_Temperatura+1)^(0+128),w
  3667  17EA  1283               	bcf	3,5	;RP0=0, select bank0
  3668  17EB  1303               	bcf	3,6	;RP1=0, select bank0
  3669  17EC  00AB               	movwf	?_sprintf+2
  3670  17ED  1683               	bsf	3,5	;RP0=1, select bank1
  3671  17EE  1303               	bcf	3,6	;RP1=0, select bank1
  3672  17EF  0848               	movf	_Temperatura^(0+128),w
  3673  17F0  1283               	bcf	3,5	;RP0=0, select bank0
  3674  17F1  1303               	bcf	3,6	;RP1=0, select bank0
  3675  17F2  00AA               	movwf	?_sprintf+1
  3676  17F3  30CE               	movlw	(low (_LCD_Cstring| 0))& (0+255)
  3677  17F4  120A  158A  262C  160A  118A  	fcall	_sprintf
  3678                           
  3679                           ;main.c: 97:     LCD_Print(LCD_Cstring);
  3680  17F9  30CE               	movlw	(low (_LCD_Cstring| 0))& (0+255)
  3681  17FA  160A  118A  24D9  160A  118A  	fcall	_LCD_Print
  3682  17FF                     l105:
  3683  17FF  0008               	return
  3684  1800                     __end_of_imprime_tela_main:
  3685                           
  3686                           	psect	text10
  3687  0BB3                     __ptext10:	
  3688 ;; *************** function _controle_aquecedor *****************
  3689 ;; Defined at:
  3690 ;;		line 267 in file "main.c"
  3691 ;; Parameters:    Size  Location     Type
  3692 ;;  temp            2    0[BANK0 ] int 
  3693 ;;  hora_min        2    2[BANK0 ] int 
  3694 ;;  min_min         2    4[BANK0 ] int 
  3695 ;;  hora_max        2    6[BANK0 ] int 
  3696 ;;  min_max         2    8[BANK0 ] int 
  3697 ;; Auto vars:     Size  Location     Type
  3698 ;;		None
  3699 ;; Return value:  Size  Location     Type
  3700 ;;                  2    0[BANK0 ] int 
  3701 ;; Registers used:
  3702 ;;		wreg, status,2
  3703 ;; Tracked objects:
  3704 ;;		On entry : 0/0
  3705 ;;		On exit  : 0/0
  3706 ;;		Unchanged: 0/0
  3707 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3708 ;;      Params:         0      10       0       0       0
  3709 ;;      Locals:         0       0       0       0       0
  3710 ;;      Temps:          1       0       0       0       0
  3711 ;;      Totals:         1      10       0       0       0
  3712 ;;Total ram usage:       11 bytes
  3713 ;; Hardware stack levels used: 1
  3714 ;; Hardware stack levels required when called: 1
  3715 ;; This function calls:
  3716 ;;		Nothing
  3717 ;; This function is called by:
  3718 ;;		_main
  3719 ;; This function uses a non-reentrant model
  3720 ;;
  3721                           
  3722                           
  3723                           ;psect for function _controle_aquecedor
  3724  0BB3                     _controle_aquecedor:
  3725  0BB3                     l2844:	
  3726                           ;incstack = 0
  3727                           ; Regs used in _controle_aquecedor: [wreg+status,2]
  3728                           
  3729                           
  3730                           ;main.c: 267: int controle_aquecedor(int temp,int hora_min,int min_min,int hora_max,int 
      +                          min_max);main.c: 268: {;main.c: 269:     if(hora_min<hora_max)
  3731  0BB3  1283               	bcf	3,5	;RP0=0, select bank0
  3732  0BB4  1303               	bcf	3,6	;RP1=0, select bank0
  3733  0BB5  0823               	movf	controle_aquecedor@hora_min+1,w
  3734  0BB6  3A80               	xorlw	128
  3735  0BB7  00F3               	movwf	??_controle_aquecedor
  3736  0BB8  0827               	movf	controle_aquecedor@hora_max+1,w
  3737  0BB9  3A80               	xorlw	128
  3738  0BBA  0273               	subwf	??_controle_aquecedor,w
  3739  0BBB  1D03               	skipz
  3740  0BBC  2BBF               	goto	u3445
  3741  0BBD  0826               	movf	controle_aquecedor@hora_max,w
  3742  0BBE  0222               	subwf	controle_aquecedor@hora_min,w
  3743  0BBF                     u3445:
  3744  0BBF  1803               	skipnc
  3745  0BC0  2BC2               	goto	u3441
  3746  0BC1  2BC3               	goto	u3440
  3747  0BC2                     u3441:
  3748  0BC2  2C50               	goto	l2908
  3749  0BC3                     u3440:
  3750  0BC3                     l2846:
  3751                           
  3752                           ;main.c: 270:     {;main.c: 271:         if(Horas>hora_min)
  3753  0BC3  1283               	bcf	3,5	;RP0=0, select bank0
  3754  0BC4  1303               	bcf	3,6	;RP1=0, select bank0
  3755  0BC5  0823               	movf	controle_aquecedor@hora_min+1,w
  3756  0BC6  3A80               	xorlw	128
  3757  0BC7  00F3               	movwf	??_controle_aquecedor
  3758  0BC8  086E               	movf	_Horas+1,w
  3759  0BC9  3A80               	xorlw	128
  3760  0BCA  0273               	subwf	??_controle_aquecedor,w
  3761  0BCB  1D03               	skipz
  3762  0BCC  2BCF               	goto	u3455
  3763  0BCD  086D               	movf	_Horas,w
  3764  0BCE  0222               	subwf	controle_aquecedor@hora_min,w
  3765  0BCF                     u3455:
  3766  0BCF  1803               	skipnc
  3767  0BD0  2BD2               	goto	u3451
  3768  0BD1  2BD3               	goto	u3450
  3769  0BD2                     u3451:
  3770  0BD2  2C0A               	goto	l2874
  3771  0BD3                     u3450:
  3772  0BD3                     l2848:
  3773                           
  3774                           ;main.c: 272:         {;main.c: 273:             if(Horas<hora_max)
  3775  0BD3  1283               	bcf	3,5	;RP0=0, select bank0
  3776  0BD4  1303               	bcf	3,6	;RP1=0, select bank0
  3777  0BD5  086E               	movf	_Horas+1,w
  3778  0BD6  3A80               	xorlw	128
  3779  0BD7  00F3               	movwf	??_controle_aquecedor
  3780  0BD8  0827               	movf	controle_aquecedor@hora_max+1,w
  3781  0BD9  3A80               	xorlw	128
  3782  0BDA  0273               	subwf	??_controle_aquecedor,w
  3783  0BDB  1D03               	skipz
  3784  0BDC  2BDF               	goto	u3465
  3785  0BDD  0826               	movf	controle_aquecedor@hora_max,w
  3786  0BDE  026D               	subwf	_Horas,w
  3787  0BDF                     u3465:
  3788  0BDF  1803               	skipnc
  3789  0BE0  2BE2               	goto	u3461
  3790  0BE1  2BE3               	goto	u3460
  3791  0BE2                     u3461:
  3792  0BE2  2BEA               	goto	l2856
  3793  0BE3                     u3460:
  3794  0BE3                     l2850:
  3795                           
  3796                           ;main.c: 274:             {;main.c: 275:                 return 1;
  3797  0BE3  3001               	movlw	1
  3798  0BE4  1283               	bcf	3,5	;RP0=0, select bank0
  3799  0BE5  1303               	bcf	3,6	;RP1=0, select bank0
  3800  0BE6  00A0               	movwf	?_controle_aquecedor
  3801  0BE7  3000               	movlw	0
  3802  0BE8  00A1               	movwf	?_controle_aquecedor+1
  3803  0BE9  2CA6               	goto	l161
  3804  0BEA                     l2856:
  3805  0BEA  1283               	bcf	3,5	;RP0=0, select bank0
  3806  0BEB  1303               	bcf	3,6	;RP1=0, select bank0
  3807  0BEC  0827               	movf	controle_aquecedor@hora_max+1,w
  3808  0BED  066E               	xorwf	_Horas+1,w
  3809  0BEE  1D03               	skipz
  3810  0BEF  2BF2               	goto	u3475
  3811  0BF0  0826               	movf	controle_aquecedor@hora_max,w
  3812  0BF1  066D               	xorwf	_Horas,w
  3813  0BF2                     u3475:
  3814  0BF2  1D03               	skipz
  3815  0BF3  2BF5               	goto	u3471
  3816  0BF4  2BF6               	goto	u3470
  3817  0BF5                     u3471:
  3818  0BF5  2C05               	goto	l2864
  3819  0BF6                     u3470:
  3820  0BF6                     l2858:
  3821                           
  3822                           ;main.c: 278:             {;main.c: 279:                 if (Minutos<min_max)
  3823  0BF6  0879               	movf	_Minutos+1,w
  3824  0BF7  3A80               	xorlw	128
  3825  0BF8  00F3               	movwf	??_controle_aquecedor
  3826  0BF9  0829               	movf	controle_aquecedor@min_max+1,w
  3827  0BFA  3A80               	xorlw	128
  3828  0BFB  0273               	subwf	??_controle_aquecedor,w
  3829  0BFC  1D03               	skipz
  3830  0BFD  2C00               	goto	u3485
  3831  0BFE  0828               	movf	controle_aquecedor@min_max,w
  3832  0BFF  0278               	subwf	_Minutos,w
  3833  0C00                     u3485:
  3834  0C00  1803               	skipnc
  3835  0C01  2C03               	goto	u3481
  3836  0C02  2C04               	goto	u3480
  3837  0C03                     u3481:
  3838  0C03  2C05               	goto	l2864
  3839  0C04                     u3480:
  3840  0C04  2BE3               	goto	l2850
  3841  0C05                     l2864:
  3842                           
  3843                           ;main.c: 283:                 return 0;
  3844  0C05  1283               	bcf	3,5	;RP0=0, select bank0
  3845  0C06  1303               	bcf	3,6	;RP1=0, select bank0
  3846  0C07  01A0               	clrf	?_controle_aquecedor
  3847  0C08  01A1               	clrf	?_controle_aquecedor+1
  3848  0C09  2CA6               	goto	l161
  3849  0C0A                     l2874:
  3850  0C0A  1283               	bcf	3,5	;RP0=0, select bank0
  3851  0C0B  1303               	bcf	3,6	;RP1=0, select bank0
  3852  0C0C  0823               	movf	controle_aquecedor@hora_min+1,w
  3853  0C0D  066E               	xorwf	_Horas+1,w
  3854  0C0E  1D03               	skipz
  3855  0C0F  2C12               	goto	u3495
  3856  0C10  0822               	movf	controle_aquecedor@hora_min,w
  3857  0C11  066D               	xorwf	_Horas,w
  3858  0C12                     u3495:
  3859  0C12  1D03               	skipz
  3860  0C13  2C15               	goto	u3491
  3861  0C14  2C16               	goto	u3490
  3862  0C15                     u3491:
  3863  0C15  2C05               	goto	l2864
  3864  0C16                     u3490:
  3865  0C16                     l2876:
  3866                           
  3867                           ;main.c: 292:         {;main.c: 293:             if (Minutos>min_min)
  3868  0C16  0825               	movf	controle_aquecedor@min_min+1,w
  3869  0C17  3A80               	xorlw	128
  3870  0C18  00F3               	movwf	??_controle_aquecedor
  3871  0C19  0879               	movf	_Minutos+1,w
  3872  0C1A  3A80               	xorlw	128
  3873  0C1B  0273               	subwf	??_controle_aquecedor,w
  3874  0C1C  1D03               	skipz
  3875  0C1D  2C20               	goto	u3505
  3876  0C1E  0878               	movf	_Minutos,w
  3877  0C1F  0224               	subwf	controle_aquecedor@min_min,w
  3878  0C20                     u3505:
  3879  0C20  1803               	skipnc
  3880  0C21  2C23               	goto	u3501
  3881  0C22  2C24               	goto	u3500
  3882  0C23                     u3501:
  3883  0C23  2CA6               	goto	l161
  3884  0C24                     u3500:
  3885  0C24                     l2878:
  3886                           
  3887                           ;main.c: 294:             {;main.c: 295:                 if(Horas<hora_max)
  3888  0C24  1283               	bcf	3,5	;RP0=0, select bank0
  3889  0C25  1303               	bcf	3,6	;RP1=0, select bank0
  3890  0C26  086E               	movf	_Horas+1,w
  3891  0C27  3A80               	xorlw	128
  3892  0C28  00F3               	movwf	??_controle_aquecedor
  3893  0C29  0827               	movf	controle_aquecedor@hora_max+1,w
  3894  0C2A  3A80               	xorlw	128
  3895  0C2B  0273               	subwf	??_controle_aquecedor,w
  3896  0C2C  1D03               	skipz
  3897  0C2D  2C30               	goto	u3515
  3898  0C2E  0826               	movf	controle_aquecedor@hora_max,w
  3899  0C2F  026D               	subwf	_Horas,w
  3900  0C30                     u3515:
  3901  0C30  1803               	skipnc
  3902  0C31  2C33               	goto	u3511
  3903  0C32  2C34               	goto	u3510
  3904  0C33                     u3511:
  3905  0C33  2C35               	goto	l2886
  3906  0C34                     u3510:
  3907  0C34  2BE3               	goto	l2850
  3908  0C35                     l2886:
  3909  0C35  1283               	bcf	3,5	;RP0=0, select bank0
  3910  0C36  1303               	bcf	3,6	;RP1=0, select bank0
  3911  0C37  0827               	movf	controle_aquecedor@hora_max+1,w
  3912  0C38  066E               	xorwf	_Horas+1,w
  3913  0C39  1D03               	skipz
  3914  0C3A  2C3D               	goto	u3525
  3915  0C3B  0826               	movf	controle_aquecedor@hora_max,w
  3916  0C3C  066D               	xorwf	_Horas,w
  3917  0C3D                     u3525:
  3918  0C3D  1D03               	skipz
  3919  0C3E  2C40               	goto	u3521
  3920  0C3F  2C41               	goto	u3520
  3921  0C40                     u3521:
  3922  0C40  2C05               	goto	l2864
  3923  0C41                     u3520:
  3924  0C41                     l2888:
  3925                           
  3926                           ;main.c: 300:                 {;main.c: 301:                     if (Minutos<min_max)
  3927  0C41  0879               	movf	_Minutos+1,w
  3928  0C42  3A80               	xorlw	128
  3929  0C43  00F3               	movwf	??_controle_aquecedor
  3930  0C44  0829               	movf	controle_aquecedor@min_max+1,w
  3931  0C45  3A80               	xorlw	128
  3932  0C46  0273               	subwf	??_controle_aquecedor,w
  3933  0C47  1D03               	skipz
  3934  0C48  2C4B               	goto	u3535
  3935  0C49  0828               	movf	controle_aquecedor@min_max,w
  3936  0C4A  0278               	subwf	_Minutos,w
  3937  0C4B                     u3535:
  3938  0C4B  1803               	skipnc
  3939  0C4C  2C4E               	goto	u3531
  3940  0C4D  2C4F               	goto	u3530
  3941  0C4E                     u3531:
  3942  0C4E  2C05               	goto	l2864
  3943  0C4F                     u3530:
  3944  0C4F  2BE3               	goto	l2850
  3945  0C50                     l2908:
  3946                           
  3947                           ;main.c: 319:     {;main.c: 320:         if (Horas>hora_min)
  3948  0C50  1283               	bcf	3,5	;RP0=0, select bank0
  3949  0C51  1303               	bcf	3,6	;RP1=0, select bank0
  3950  0C52  0823               	movf	controle_aquecedor@hora_min+1,w
  3951  0C53  3A80               	xorlw	128
  3952  0C54  00F3               	movwf	??_controle_aquecedor
  3953  0C55  086E               	movf	_Horas+1,w
  3954  0C56  3A80               	xorlw	128
  3955  0C57  0273               	subwf	??_controle_aquecedor,w
  3956  0C58  1D03               	skipz
  3957  0C59  2C5C               	goto	u3545
  3958  0C5A  086D               	movf	_Horas,w
  3959  0C5B  0222               	subwf	controle_aquecedor@hora_min,w
  3960  0C5C                     u3545:
  3961  0C5C  1803               	skipnc
  3962  0C5D  2C5F               	goto	u3541
  3963  0C5E  2C60               	goto	u3540
  3964  0C5F                     u3541:
  3965  0C5F  2C61               	goto	l2916
  3966  0C60                     u3540:
  3967  0C60  2BE3               	goto	l2850
  3968  0C61                     l2916:
  3969  0C61  1283               	bcf	3,5	;RP0=0, select bank0
  3970  0C62  1303               	bcf	3,6	;RP1=0, select bank0
  3971  0C63  0823               	movf	controle_aquecedor@hora_min+1,w
  3972  0C64  066E               	xorwf	_Horas+1,w
  3973  0C65  1D03               	skipz
  3974  0C66  2C69               	goto	u3555
  3975  0C67  0822               	movf	controle_aquecedor@hora_min,w
  3976  0C68  066D               	xorwf	_Horas,w
  3977  0C69                     u3555:
  3978  0C69  1D03               	skipz
  3979  0C6A  2C6C               	goto	u3551
  3980  0C6B  2C6D               	goto	u3550
  3981  0C6C                     u3551:
  3982  0C6C  2C7C               	goto	l2930
  3983  0C6D                     u3550:
  3984  0C6D                     l2918:
  3985                           
  3986                           ;main.c: 325:         {;main.c: 326:             if (Minutos>min_min)
  3987  0C6D  0825               	movf	controle_aquecedor@min_min+1,w
  3988  0C6E  3A80               	xorlw	128
  3989  0C6F  00F3               	movwf	??_controle_aquecedor
  3990  0C70  0879               	movf	_Minutos+1,w
  3991  0C71  3A80               	xorlw	128
  3992  0C72  0273               	subwf	??_controle_aquecedor,w
  3993  0C73  1D03               	skipz
  3994  0C74  2C77               	goto	u3565
  3995  0C75  0878               	movf	_Minutos,w
  3996  0C76  0224               	subwf	controle_aquecedor@min_min,w
  3997  0C77                     u3565:
  3998  0C77  1803               	skipnc
  3999  0C78  2C7A               	goto	u3561
  4000  0C79  2C7B               	goto	u3560
  4001  0C7A                     u3561:
  4002  0C7A  2C05               	goto	l2864
  4003  0C7B                     u3560:
  4004  0C7B  2BE3               	goto	l2850
  4005  0C7C                     l2930:
  4006                           
  4007                           ;main.c: 336:         {;main.c: 337:             if(Horas<hora_max)
  4008  0C7C  086E               	movf	_Horas+1,w
  4009  0C7D  3A80               	xorlw	128
  4010  0C7E  00F3               	movwf	??_controle_aquecedor
  4011  0C7F  0827               	movf	controle_aquecedor@hora_max+1,w
  4012  0C80  3A80               	xorlw	128
  4013  0C81  0273               	subwf	??_controle_aquecedor,w
  4014  0C82  1D03               	skipz
  4015  0C83  2C86               	goto	u3575
  4016  0C84  0826               	movf	controle_aquecedor@hora_max,w
  4017  0C85  026D               	subwf	_Horas,w
  4018  0C86                     u3575:
  4019  0C86  1803               	skipnc
  4020  0C87  2C89               	goto	u3571
  4021  0C88  2C8A               	goto	u3570
  4022  0C89                     u3571:
  4023  0C89  2C8B               	goto	l2938
  4024  0C8A                     u3570:
  4025  0C8A  2BE3               	goto	l2850
  4026  0C8B                     l2938:
  4027  0C8B  1283               	bcf	3,5	;RP0=0, select bank0
  4028  0C8C  1303               	bcf	3,6	;RP1=0, select bank0
  4029  0C8D  0827               	movf	controle_aquecedor@hora_max+1,w
  4030  0C8E  066E               	xorwf	_Horas+1,w
  4031  0C8F  1D03               	skipz
  4032  0C90  2C93               	goto	u3585
  4033  0C91  0826               	movf	controle_aquecedor@hora_max,w
  4034  0C92  066D               	xorwf	_Horas,w
  4035  0C93                     u3585:
  4036  0C93  1D03               	skipz
  4037  0C94  2C96               	goto	u3581
  4038  0C95  2C97               	goto	u3580
  4039  0C96                     u3581:
  4040  0C96  2C05               	goto	l2864
  4041  0C97                     u3580:
  4042  0C97                     l2940:
  4043                           
  4044                           ;main.c: 342:             {;main.c: 343:                 if (Minutos<min_min)
  4045  0C97  0879               	movf	_Minutos+1,w
  4046  0C98  3A80               	xorlw	128
  4047  0C99  00F3               	movwf	??_controle_aquecedor
  4048  0C9A  0825               	movf	controle_aquecedor@min_min+1,w
  4049  0C9B  3A80               	xorlw	128
  4050  0C9C  0273               	subwf	??_controle_aquecedor,w
  4051  0C9D  1D03               	skipz
  4052  0C9E  2CA1               	goto	u3595
  4053  0C9F  0824               	movf	controle_aquecedor@min_min,w
  4054  0CA0  0278               	subwf	_Minutos,w
  4055  0CA1                     u3595:
  4056  0CA1  1803               	skipnc
  4057  0CA2  2CA4               	goto	u3591
  4058  0CA3  2CA5               	goto	u3590
  4059  0CA4                     u3591:
  4060  0CA4  2C05               	goto	l2864
  4061  0CA5                     u3590:
  4062  0CA5  2BE3               	goto	l2850
  4063  0CA6                     l161:
  4064  0CA6  0008               	return
  4065  0CA7                     __end_of_controle_aquecedor:
  4066                           
  4067                           	psect	text11
  4068  088C                     __ptext11:	
  4069 ;; *************** function _atualiza_ADC *****************
  4070 ;; Defined at:
  4071 ;;		line 79 in file "main.c"
  4072 ;; Parameters:    Size  Location     Type
  4073 ;;		None
  4074 ;; Auto vars:     Size  Location     Type
  4075 ;;		None
  4076 ;; Return value:  Size  Location     Type
  4077 ;;                  1    wreg      void 
  4078 ;; Registers used:
  4079 ;;		wreg
  4080 ;; Tracked objects:
  4081 ;;		On entry : 0/0
  4082 ;;		On exit  : 0/0
  4083 ;;		Unchanged: 0/0
  4084 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4085 ;;      Params:         0       0       0       0       0
  4086 ;;      Locals:         0       0       0       0       0
  4087 ;;      Temps:          1       0       0       0       0
  4088 ;;      Totals:         1       0       0       0       0
  4089 ;;Total ram usage:        1 bytes
  4090 ;; Hardware stack levels used: 1
  4091 ;; Hardware stack levels required when called: 1
  4092 ;; This function calls:
  4093 ;;		Nothing
  4094 ;; This function is called by:
  4095 ;;		_main
  4096 ;; This function uses a non-reentrant model
  4097 ;;
  4098                           
  4099                           
  4100                           ;psect for function _atualiza_ADC
  4101  088C                     _atualiza_ADC:
  4102  088C                     l2708:	
  4103                           ;incstack = 0
  4104                           ; Regs used in _atualiza_ADC: [wreg]
  4105                           
  4106                           
  4107                           ;main.c: 81:     ADCON0bits.GO_nDONE=1;
  4108  088C  1283               	bcf	3,5	;RP0=0, select bank0
  4109  088D  1303               	bcf	3,6	;RP1=0, select bank0
  4110  088E  151F               	bsf	31,2	;volatile
  4111                           
  4112                           ;main.c: 82:     while(ADCON0bits.GO_nDONE)
  4113  088F  2894               	goto	l2712
  4114  0890                     l2710:
  4115                           
  4116                           ;main.c: 83:     {;main.c: 84:         _delay((unsigned long)((10)*(4000000/4000000.0)))
      +                          ;
  4117  0890  3003               	movlw	3
  4118  0891  00F3               	movwf	??_atualiza_ADC
  4119  0892                     u4837:
  4120  0892  0BF3               	decfsz	??_atualiza_ADC,f
  4121  0893  2892               	goto	u4837
  4122  0894                     l2712:
  4123                           
  4124                           ;main.c: 82:     while(ADCON0bits.GO_nDONE)
  4125  0894  1283               	bcf	3,5	;RP0=0, select bank0
  4126  0895  1303               	bcf	3,6	;RP1=0, select bank0
  4127  0896  191F               	btfsc	31,2	;volatile
  4128  0897  2899               	goto	u3221
  4129  0898  289A               	goto	u3220
  4130  0899                     u3221:
  4131  0899  2890               	goto	l2710
  4132  089A                     u3220:
  4133  089A                     l102:
  4134  089A  0008               	return
  4135  089B                     __end_of_atualiza_ADC:
  4136                           
  4137                           	psect	text12
  4138  0027                     __ptext12:	
  4139 ;; *************** function _ajustes *****************
  4140 ;; Defined at:
  4141 ;;		line 146 in file "main.c"
  4142 ;; Parameters:    Size  Location     Type
  4143 ;;  temp            1    wreg     PTR int 
  4144 ;;		 -> main@temp(2), 
  4145 ;;  hora_min        1   33[BANK0 ] PTR int 
  4146 ;;		 -> main@hora_min(2), 
  4147 ;;  min_min         1   34[BANK0 ] PTR int 
  4148 ;;		 -> main@min_min(2), 
  4149 ;;  hora_max        1   35[BANK0 ] PTR int 
  4150 ;;		 -> main@hora_max(2), 
  4151 ;;  min_max         1   36[BANK0 ] PTR int 
  4152 ;;		 -> main@min_max(2), 
  4153 ;; Auto vars:     Size  Location     Type
  4154 ;;  temp            1   41[BANK0 ] PTR int 
  4155 ;;		 -> main@temp(2), 
  4156 ;; Return value:  Size  Location     Type
  4157 ;;                  1    wreg      void 
  4158 ;; Registers used:
  4159 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4160 ;; Tracked objects:
  4161 ;;		On entry : 0/0
  4162 ;;		On exit  : 0/0
  4163 ;;		Unchanged: 0/0
  4164 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4165 ;;      Params:         0       4       0       0       0
  4166 ;;      Locals:         0       1       0       0       0
  4167 ;;      Temps:          0       4       0       0       0
  4168 ;;      Totals:         0       9       0       0       0
  4169 ;;Total ram usage:        9 bytes
  4170 ;; Hardware stack levels used: 1
  4171 ;; Hardware stack levels required when called: 5
  4172 ;; This function calls:
  4173 ;;		_LCD_Cmd
  4174 ;;		_imprime_tela_ajuste1
  4175 ;;		_imprime_tela_ajuste2
  4176 ;;		_imprime_tela_ajuste3
  4177 ;;		_imprime_tela_ajuste4
  4178 ;; This function is called by:
  4179 ;;		_main
  4180 ;; This function uses a non-reentrant model
  4181 ;;
  4182                           
  4183                           
  4184                           ;psect for function _ajustes
  4185  0027                     _ajustes:
  4186                           
  4187                           ;incstack = 0
  4188                           ; Regs used in _ajustes: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4189                           ;ajustes@temp stored from wreg
  4190  0027  1283               	bcf	3,5	;RP0=0, select bank0
  4191  0028  1303               	bcf	3,6	;RP1=0, select bank0
  4192  0029  00C9               	movwf	ajustes@temp
  4193  002A                     l3626:
  4194                           
  4195                           ;main.c: 146: void ajustes(int *temp,int *hora_min,int *min_min,int *hora_max,int *min_m
      +                          ax);main.c: 147: {;main.c: 148:     LCD_Cmd(0x01);
  4196  002A  3001               	movlw	1
  4197  002B  160A  118A  2470  120A  118A  	fcall	_LCD_Cmd
  4198  0030                     l3628:
  4199                           
  4200                           ;main.c: 149:     imprime_tela_ajuste1(*temp);
  4201  0030  1283               	bcf	3,5	;RP0=0, select bank0
  4202  0031  1303               	bcf	3,6	;RP1=0, select bank0
  4203  0032  0849               	movf	ajustes@temp,w
  4204  0033  0084               	movwf	4
  4205  0034  1383               	bcf	3,7	;select IRP bank0
  4206  0035  0800               	movf	0,w
  4207  0036  00BC               	movwf	imprime_tela_ajuste1@temp
  4208  0037  0A84               	incf	4,f
  4209  0038  0800               	movf	0,w
  4210  0039  00BD               	movwf	imprime_tela_ajuste1@temp+1
  4211  003A  160A  118A  2424  120A  118A  	fcall	_imprime_tela_ajuste1
  4212  003F                     l3630:
  4213                           
  4214                           ;main.c: 150:     _delay((unsigned long)((300)*(4000000/4000.0)));
  4215  003F  3002               	movlw	2
  4216  0040  1283               	bcf	3,5	;RP0=0, select bank0
  4217  0041  1303               	bcf	3,6	;RP1=0, select bank0
  4218  0042  00C7               	movwf	??_ajustes+2
  4219  0043  3086               	movlw	134
  4220  0044  00C6               	movwf	??_ajustes+1
  4221  0045  3098               	movlw	152
  4222  0046  00C5               	movwf	??_ajustes
  4223  0047                     u4847:
  4224  0047  0BC5               	decfsz	??_ajustes,f
  4225  0048  2847               	goto	u4847
  4226  0049  0BC6               	decfsz	??_ajustes+1,f
  4227  004A  2847               	goto	u4847
  4228  004B  0BC7               	decfsz	??_ajustes+2,f
  4229  004C  2847               	goto	u4847
  4230  004D  0000               	nop
  4231                           
  4232                           ;main.c: 151:     while(PORTBbits.RB0!=0)
  4233  004E  28A3               	goto	l3642
  4234  004F                     l121:
  4235                           
  4236                           ;main.c: 152:     {;main.c: 153:         if(PORTBbits.RB1==0)
  4237  004F  1886               	btfsc	6,1	;volatile
  4238  0050  2852               	goto	u4571
  4239  0051  2853               	goto	u4570
  4240  0052                     u4571:
  4241  0052  28A3               	goto	l3642
  4242  0053                     u4570:
  4243  0053                     l3632:
  4244                           
  4245                           ;main.c: 154:         {;main.c: 155:             *temp=*temp+1;
  4246  0053  0849               	movf	ajustes@temp,w
  4247  0054  0084               	movwf	4
  4248  0055  1383               	bcf	3,7	;select IRP bank0
  4249  0056  0800               	movf	0,w
  4250  0057  00C5               	movwf	??_ajustes
  4251  0058  0A84               	incf	4,f
  4252  0059  0800               	movf	0,w
  4253  005A  00C6               	movwf	??_ajustes+1
  4254  005B  0845               	movf	??_ajustes,w
  4255  005C  3E01               	addlw	1
  4256  005D  00C7               	movwf	??_ajustes+2
  4257  005E  0846               	movf	??_ajustes+1,w
  4258  005F  1803               	skipnc
  4259  0060  3E01               	addlw	1
  4260  0061  3E00               	addlw	0
  4261  0062  00C8               	movwf	??_ajustes+3
  4262  0063  0849               	movf	ajustes@temp,w
  4263  0064  0084               	movwf	4
  4264  0065  0847               	movf	??_ajustes+2,w
  4265  0066  0080               	movwf	0
  4266  0067  0A84               	incf	4,f
  4267  0068  0848               	movf	??_ajustes+3,w
  4268  0069  0080               	movwf	0
  4269  006A                     l3634:
  4270                           
  4271                           ;main.c: 156:             if (*temp>99)
  4272  006A  0849               	movf	ajustes@temp,w
  4273  006B  0084               	movwf	4
  4274  006C  0800               	movf	0,w
  4275  006D  00C5               	movwf	??_ajustes
  4276  006E  0A84               	incf	4,f
  4277  006F  0800               	movf	0,w
  4278  0070  00C6               	movwf	??_ajustes+1
  4279  0071  0846               	movf	??_ajustes+1,w
  4280  0072  3A80               	xorlw	128
  4281  0073  00FF               	movwf	btemp+1
  4282  0074  3080               	movlw	128
  4283  0075  027F               	subwf	btemp+1,w
  4284  0076  1D03               	skipz
  4285  0077  287A               	goto	u4585
  4286  0078  3064               	movlw	100
  4287  0079  0245               	subwf	??_ajustes,w
  4288  007A                     u4585:
  4289  007A  1C03               	skipc
  4290  007B  287D               	goto	u4581
  4291  007C  287E               	goto	u4580
  4292  007D                     u4581:
  4293  007D  2886               	goto	l3638
  4294  007E                     u4580:
  4295  007E                     l3636:
  4296                           
  4297                           ;main.c: 157:             {;main.c: 158:                 *temp=0;
  4298  007E  1283               	bcf	3,5	;RP0=0, select bank0
  4299  007F  1303               	bcf	3,6	;RP1=0, select bank0
  4300  0080  0849               	movf	ajustes@temp,w
  4301  0081  0084               	movwf	4
  4302  0082  1383               	bcf	3,7	;select IRP bank0
  4303  0083  0180               	clrf	0
  4304  0084  0A84               	incf	4,f
  4305  0085  0180               	clrf	0
  4306  0086                     l3638:
  4307                           
  4308                           ;main.c: 160:             imprime_tela_ajuste1(*temp);
  4309  0086  1283               	bcf	3,5	;RP0=0, select bank0
  4310  0087  1303               	bcf	3,6	;RP1=0, select bank0
  4311  0088  0849               	movf	ajustes@temp,w
  4312  0089  0084               	movwf	4
  4313  008A  1383               	bcf	3,7	;select IRP bank0
  4314  008B  0800               	movf	0,w
  4315  008C  00BC               	movwf	imprime_tela_ajuste1@temp
  4316  008D  0A84               	incf	4,f
  4317  008E  0800               	movf	0,w
  4318  008F  00BD               	movwf	imprime_tela_ajuste1@temp+1
  4319  0090  160A  118A  2424  120A  118A  	fcall	_imprime_tela_ajuste1
  4320  0095                     l3640:
  4321                           
  4322                           ;main.c: 161:             _delay((unsigned long)((250)*(4000000/4000.0)));
  4323  0095  3002               	movlw	2
  4324  0096  1283               	bcf	3,5	;RP0=0, select bank0
  4325  0097  1303               	bcf	3,6	;RP1=0, select bank0
  4326  0098  00C7               	movwf	??_ajustes+2
  4327  0099  3045               	movlw	69
  4328  009A  00C6               	movwf	??_ajustes+1
  4329  009B  30A9               	movlw	169
  4330  009C  00C5               	movwf	??_ajustes
  4331  009D                     u4857:
  4332  009D  0BC5               	decfsz	??_ajustes,f
  4333  009E  289D               	goto	u4857
  4334  009F  0BC6               	decfsz	??_ajustes+1,f
  4335  00A0  289D               	goto	u4857
  4336  00A1  0BC7               	decfsz	??_ajustes+2,f
  4337  00A2  289D               	goto	u4857
  4338  00A3                     l3642:
  4339                           
  4340                           ;main.c: 151:     while(PORTBbits.RB0!=0)
  4341  00A3  1283               	bcf	3,5	;RP0=0, select bank0
  4342  00A4  1303               	bcf	3,6	;RP1=0, select bank0
  4343  00A5  1806               	btfsc	6,0	;volatile
  4344  00A6  28A8               	goto	u4591
  4345  00A7  28A9               	goto	u4590
  4346  00A8                     u4591:
  4347  00A8  284F               	goto	l121
  4348  00A9                     u4590:
  4349  00A9                     l3644:
  4350                           
  4351                           ;main.c: 164:     LCD_Cmd(0x01);
  4352  00A9  3001               	movlw	1
  4353  00AA  160A  118A  2470  120A  118A  	fcall	_LCD_Cmd
  4354  00AF                     l3646:
  4355                           
  4356                           ;main.c: 165:     imprime_tela_ajuste2();
  4357  00AF  160A  118A  254E  120A  118A  	fcall	_imprime_tela_ajuste2
  4358  00B4                     l3648:
  4359                           
  4360                           ;main.c: 166:     _delay((unsigned long)((300)*(4000000/4000.0)));
  4361  00B4  3002               	movlw	2
  4362  00B5  1283               	bcf	3,5	;RP0=0, select bank0
  4363  00B6  1303               	bcf	3,6	;RP1=0, select bank0
  4364  00B7  00C7               	movwf	??_ajustes+2
  4365  00B8  3086               	movlw	134
  4366  00B9  00C6               	movwf	??_ajustes+1
  4367  00BA  3098               	movlw	152
  4368  00BB  00C5               	movwf	??_ajustes
  4369  00BC                     u4867:
  4370  00BC  0BC5               	decfsz	??_ajustes,f
  4371  00BD  28BC               	goto	u4867
  4372  00BE  0BC6               	decfsz	??_ajustes+1,f
  4373  00BF  28BC               	goto	u4867
  4374  00C0  0BC7               	decfsz	??_ajustes+2,f
  4375  00C1  28BC               	goto	u4867
  4376  00C2  0000               	nop
  4377                           
  4378                           ;main.c: 167:     while(PORTBbits.RB0!=0)
  4379  00C3  28F4               	goto	l3660
  4380  00C4                     l126:
  4381                           
  4382                           ;main.c: 168:     {;main.c: 169:         if(PORTBbits.RB1==0)
  4383  00C4  1886               	btfsc	6,1	;volatile
  4384  00C5  28C7               	goto	u4601
  4385  00C6  28C8               	goto	u4600
  4386  00C7                     u4601:
  4387  00C7  28F4               	goto	l3660
  4388  00C8                     u4600:
  4389  00C8                     l3650:
  4390                           
  4391                           ;main.c: 170:         {;main.c: 171:             Horas=Horas+1;
  4392  00C8  086D               	movf	_Horas,w
  4393  00C9  3E01               	addlw	1
  4394  00CA  00ED               	movwf	_Horas
  4395  00CB  086E               	movf	_Horas+1,w
  4396  00CC  1803               	skipnc
  4397  00CD  3E01               	addlw	1
  4398  00CE  3E00               	addlw	0
  4399  00CF  00EE               	movwf	_Horas+1
  4400  00D0                     l3652:
  4401                           
  4402                           ;main.c: 172:             if (Horas>23)
  4403  00D0  086E               	movf	_Horas+1,w
  4404  00D1  3A80               	xorlw	128
  4405  00D2  00FF               	movwf	btemp+1
  4406  00D3  3080               	movlw	128
  4407  00D4  027F               	subwf	btemp+1,w
  4408  00D5  1D03               	skipz
  4409  00D6  28D9               	goto	u4615
  4410  00D7  3018               	movlw	24
  4411  00D8  026D               	subwf	_Horas,w
  4412  00D9                     u4615:
  4413  00D9  1C03               	skipc
  4414  00DA  28DC               	goto	u4611
  4415  00DB  28DD               	goto	u4610
  4416  00DC                     u4611:
  4417  00DC  28E1               	goto	l3656
  4418  00DD                     u4610:
  4419  00DD                     l3654:
  4420                           
  4421                           ;main.c: 173:             {;main.c: 174:                 Horas=0;
  4422  00DD  1283               	bcf	3,5	;RP0=0, select bank0
  4423  00DE  1303               	bcf	3,6	;RP1=0, select bank0
  4424  00DF  01ED               	clrf	_Horas
  4425  00E0  01EE               	clrf	_Horas+1
  4426  00E1                     l3656:
  4427                           
  4428                           ;main.c: 176:             imprime_tela_ajuste2();
  4429  00E1  160A  118A  254E  120A  118A  	fcall	_imprime_tela_ajuste2
  4430  00E6                     l3658:
  4431                           
  4432                           ;main.c: 177:             _delay((unsigned long)((250)*(4000000/4000.0)));
  4433  00E6  3002               	movlw	2
  4434  00E7  1283               	bcf	3,5	;RP0=0, select bank0
  4435  00E8  1303               	bcf	3,6	;RP1=0, select bank0
  4436  00E9  00C7               	movwf	??_ajustes+2
  4437  00EA  3045               	movlw	69
  4438  00EB  00C6               	movwf	??_ajustes+1
  4439  00EC  30A9               	movlw	169
  4440  00ED  00C5               	movwf	??_ajustes
  4441  00EE                     u4877:
  4442  00EE  0BC5               	decfsz	??_ajustes,f
  4443  00EF  28EE               	goto	u4877
  4444  00F0  0BC6               	decfsz	??_ajustes+1,f
  4445  00F1  28EE               	goto	u4877
  4446  00F2  0BC7               	decfsz	??_ajustes+2,f
  4447  00F3  28EE               	goto	u4877
  4448  00F4                     l3660:
  4449                           
  4450                           ;main.c: 167:     while(PORTBbits.RB0!=0)
  4451  00F4  1283               	bcf	3,5	;RP0=0, select bank0
  4452  00F5  1303               	bcf	3,6	;RP1=0, select bank0
  4453  00F6  1806               	btfsc	6,0	;volatile
  4454  00F7  28F9               	goto	u4621
  4455  00F8  28FA               	goto	u4620
  4456  00F9                     u4621:
  4457  00F9  28C4               	goto	l126
  4458  00FA                     u4620:
  4459  00FA                     l3662:
  4460                           
  4461                           ;main.c: 180:     _delay((unsigned long)((300)*(4000000/4000.0)));
  4462  00FA  3002               	movlw	2
  4463  00FB  1283               	bcf	3,5	;RP0=0, select bank0
  4464  00FC  1303               	bcf	3,6	;RP1=0, select bank0
  4465  00FD  00C7               	movwf	??_ajustes+2
  4466  00FE  3086               	movlw	134
  4467  00FF  00C6               	movwf	??_ajustes+1
  4468  0100  3098               	movlw	152
  4469  0101  00C5               	movwf	??_ajustes
  4470  0102                     u4887:
  4471  0102  0BC5               	decfsz	??_ajustes,f
  4472  0103  2902               	goto	u4887
  4473  0104  0BC6               	decfsz	??_ajustes+1,f
  4474  0105  2902               	goto	u4887
  4475  0106  0BC7               	decfsz	??_ajustes+2,f
  4476  0107  2902               	goto	u4887
  4477  0108  0000               	nop
  4478                           
  4479                           ;main.c: 181:     while(PORTBbits.RB0!=0)
  4480  0109  2938               	goto	l3674
  4481  010A                     l131:
  4482                           
  4483                           ;main.c: 182:     {;main.c: 183:         if(PORTBbits.RB1==0)
  4484  010A  1886               	btfsc	6,1	;volatile
  4485  010B  290D               	goto	u4631
  4486  010C  290E               	goto	u4630
  4487  010D                     u4631:
  4488  010D  2938               	goto	l3674
  4489  010E                     u4630:
  4490  010E                     l3664:
  4491                           
  4492                           ;main.c: 184:         {;main.c: 185:             Minutos=Minutos+1;
  4493  010E  0878               	movf	_Minutos,w
  4494  010F  3E01               	addlw	1
  4495  0110  00F8               	movwf	_Minutos
  4496  0111  0879               	movf	_Minutos+1,w
  4497  0112  1803               	skipnc
  4498  0113  3E01               	addlw	1
  4499  0114  3E00               	addlw	0
  4500  0115  00F9               	movwf	_Minutos+1
  4501  0116                     l3666:
  4502                           
  4503                           ;main.c: 186:             if (Minutos>59)
  4504  0116  0879               	movf	_Minutos+1,w
  4505  0117  3A80               	xorlw	128
  4506  0118  00FF               	movwf	btemp+1
  4507  0119  3080               	movlw	128
  4508  011A  027F               	subwf	btemp+1,w
  4509  011B  1D03               	skipz
  4510  011C  291F               	goto	u4645
  4511  011D  303C               	movlw	60
  4512  011E  0278               	subwf	_Minutos,w
  4513  011F                     u4645:
  4514  011F  1C03               	skipc
  4515  0120  2922               	goto	u4641
  4516  0121  2923               	goto	u4640
  4517  0122                     u4641:
  4518  0122  2925               	goto	l3670
  4519  0123                     u4640:
  4520  0123                     l3668:
  4521                           
  4522                           ;main.c: 187:             {;main.c: 188:                 Minutos=0;
  4523  0123  01F8               	clrf	_Minutos
  4524  0124  01F9               	clrf	_Minutos+1
  4525  0125                     l3670:
  4526                           
  4527                           ;main.c: 190:             imprime_tela_ajuste2();
  4528  0125  160A  118A  254E  120A  118A  	fcall	_imprime_tela_ajuste2
  4529  012A                     l3672:
  4530                           
  4531                           ;main.c: 191:             _delay((unsigned long)((250)*(4000000/4000.0)));
  4532  012A  3002               	movlw	2
  4533  012B  1283               	bcf	3,5	;RP0=0, select bank0
  4534  012C  1303               	bcf	3,6	;RP1=0, select bank0
  4535  012D  00C7               	movwf	??_ajustes+2
  4536  012E  3045               	movlw	69
  4537  012F  00C6               	movwf	??_ajustes+1
  4538  0130  30A9               	movlw	169
  4539  0131  00C5               	movwf	??_ajustes
  4540  0132                     u4897:
  4541  0132  0BC5               	decfsz	??_ajustes,f
  4542  0133  2932               	goto	u4897
  4543  0134  0BC6               	decfsz	??_ajustes+1,f
  4544  0135  2932               	goto	u4897
  4545  0136  0BC7               	decfsz	??_ajustes+2,f
  4546  0137  2932               	goto	u4897
  4547  0138                     l3674:
  4548                           
  4549                           ;main.c: 181:     while(PORTBbits.RB0!=0)
  4550  0138  1283               	bcf	3,5	;RP0=0, select bank0
  4551  0139  1303               	bcf	3,6	;RP1=0, select bank0
  4552  013A  1806               	btfsc	6,0	;volatile
  4553  013B  293D               	goto	u4651
  4554  013C  293E               	goto	u4650
  4555  013D                     u4651:
  4556  013D  290A               	goto	l131
  4557  013E                     u4650:
  4558  013E                     l3676:
  4559                           
  4560                           ;main.c: 194:     LCD_Cmd(0x01);
  4561  013E  3001               	movlw	1
  4562  013F  160A  118A  2470  120A  118A  	fcall	_LCD_Cmd
  4563  0144                     l3678:
  4564                           
  4565                           ;main.c: 195:     imprime_tela_ajuste3(*hora_min,*min_min);
  4566  0144  1283               	bcf	3,5	;RP0=0, select bank0
  4567  0145  1303               	bcf	3,6	;RP1=0, select bank0
  4568  0146  0841               	movf	ajustes@hora_min,w
  4569  0147  0084               	movwf	4
  4570  0148  1383               	bcf	3,7	;select IRP bank0
  4571  0149  0800               	movf	0,w
  4572  014A  00BC               	movwf	imprime_tela_ajuste3@horas_min
  4573  014B  0A84               	incf	4,f
  4574  014C  0800               	movf	0,w
  4575  014D  00BD               	movwf	imprime_tela_ajuste3@horas_min+1
  4576  014E  0842               	movf	ajustes@min_min,w
  4577  014F  0084               	movwf	4
  4578  0150  0800               	movf	0,w
  4579  0151  00BE               	movwf	imprime_tela_ajuste3@minutos_min
  4580  0152  0A84               	incf	4,f
  4581  0153  0800               	movf	0,w
  4582  0154  00BF               	movwf	imprime_tela_ajuste3@minutos_min+1
  4583  0155  160A  118A  2591  120A  118A  	fcall	_imprime_tela_ajuste3
  4584  015A                     l3680:
  4585                           
  4586                           ;main.c: 196:     _delay((unsigned long)((300)*(4000000/4000.0)));
  4587  015A  3002               	movlw	2
  4588  015B  1283               	bcf	3,5	;RP0=0, select bank0
  4589  015C  1303               	bcf	3,6	;RP1=0, select bank0
  4590  015D  00C7               	movwf	??_ajustes+2
  4591  015E  3086               	movlw	134
  4592  015F  00C6               	movwf	??_ajustes+1
  4593  0160  3098               	movlw	152
  4594  0161  00C5               	movwf	??_ajustes
  4595  0162                     u4907:
  4596  0162  0BC5               	decfsz	??_ajustes,f
  4597  0163  2962               	goto	u4907
  4598  0164  0BC6               	decfsz	??_ajustes+1,f
  4599  0165  2962               	goto	u4907
  4600  0166  0BC7               	decfsz	??_ajustes+2,f
  4601  0167  2962               	goto	u4907
  4602  0168  0000               	nop
  4603                           
  4604                           ;main.c: 197:     while(PORTBbits.RB0!=0)
  4605  0169  29C5               	goto	l3692
  4606  016A                     l136:
  4607                           
  4608                           ;main.c: 198:     {;main.c: 201:         if(PORTBbits.RB1==0)
  4609  016A  1886               	btfsc	6,1	;volatile
  4610  016B  296D               	goto	u4661
  4611  016C  296E               	goto	u4660
  4612  016D                     u4661:
  4613  016D  29C5               	goto	l3692
  4614  016E                     u4660:
  4615  016E                     l3682:
  4616                           
  4617                           ;main.c: 202:         {;main.c: 203:             *hora_min=*hora_min+1;
  4618  016E  0841               	movf	ajustes@hora_min,w
  4619  016F  0084               	movwf	4
  4620  0170  1383               	bcf	3,7	;select IRP bank0
  4621  0171  0800               	movf	0,w
  4622  0172  00C5               	movwf	??_ajustes
  4623  0173  0A84               	incf	4,f
  4624  0174  0800               	movf	0,w
  4625  0175  00C6               	movwf	??_ajustes+1
  4626  0176  0845               	movf	??_ajustes,w
  4627  0177  3E01               	addlw	1
  4628  0178  00C7               	movwf	??_ajustes+2
  4629  0179  0846               	movf	??_ajustes+1,w
  4630  017A  1803               	skipnc
  4631  017B  3E01               	addlw	1
  4632  017C  3E00               	addlw	0
  4633  017D  00C8               	movwf	??_ajustes+3
  4634  017E  0841               	movf	ajustes@hora_min,w
  4635  017F  0084               	movwf	4
  4636  0180  0847               	movf	??_ajustes+2,w
  4637  0181  0080               	movwf	0
  4638  0182  0A84               	incf	4,f
  4639  0183  0848               	movf	??_ajustes+3,w
  4640  0184  0080               	movwf	0
  4641  0185                     l3684:
  4642                           
  4643                           ;main.c: 204:             if (*hora_min>23)
  4644  0185  0841               	movf	ajustes@hora_min,w
  4645  0186  0084               	movwf	4
  4646  0187  0800               	movf	0,w
  4647  0188  00C5               	movwf	??_ajustes
  4648  0189  0A84               	incf	4,f
  4649  018A  0800               	movf	0,w
  4650  018B  00C6               	movwf	??_ajustes+1
  4651  018C  0846               	movf	??_ajustes+1,w
  4652  018D  3A80               	xorlw	128
  4653  018E  00FF               	movwf	btemp+1
  4654  018F  3080               	movlw	128
  4655  0190  027F               	subwf	btemp+1,w
  4656  0191  1D03               	skipz
  4657  0192  2995               	goto	u4675
  4658  0193  3018               	movlw	24
  4659  0194  0245               	subwf	??_ajustes,w
  4660  0195                     u4675:
  4661  0195  1C03               	skipc
  4662  0196  2998               	goto	u4671
  4663  0197  2999               	goto	u4670
  4664  0198                     u4671:
  4665  0198  29A1               	goto	l3688
  4666  0199                     u4670:
  4667  0199                     l3686:
  4668                           
  4669                           ;main.c: 205:             {;main.c: 206:                 *hora_min=0;
  4670  0199  1283               	bcf	3,5	;RP0=0, select bank0
  4671  019A  1303               	bcf	3,6	;RP1=0, select bank0
  4672  019B  0841               	movf	ajustes@hora_min,w
  4673  019C  0084               	movwf	4
  4674  019D  1383               	bcf	3,7	;select IRP bank0
  4675  019E  0180               	clrf	0
  4676  019F  0A84               	incf	4,f
  4677  01A0  0180               	clrf	0
  4678  01A1                     l3688:
  4679                           
  4680                           ;main.c: 208:             imprime_tela_ajuste3(*hora_min,*min_min);
  4681  01A1  1283               	bcf	3,5	;RP0=0, select bank0
  4682  01A2  1303               	bcf	3,6	;RP1=0, select bank0
  4683  01A3  0841               	movf	ajustes@hora_min,w
  4684  01A4  0084               	movwf	4
  4685  01A5  1383               	bcf	3,7	;select IRP bank0
  4686  01A6  0800               	movf	0,w
  4687  01A7  00BC               	movwf	imprime_tela_ajuste3@horas_min
  4688  01A8  0A84               	incf	4,f
  4689  01A9  0800               	movf	0,w
  4690  01AA  00BD               	movwf	imprime_tela_ajuste3@horas_min+1
  4691  01AB  0842               	movf	ajustes@min_min,w
  4692  01AC  0084               	movwf	4
  4693  01AD  0800               	movf	0,w
  4694  01AE  00BE               	movwf	imprime_tela_ajuste3@minutos_min
  4695  01AF  0A84               	incf	4,f
  4696  01B0  0800               	movf	0,w
  4697  01B1  00BF               	movwf	imprime_tela_ajuste3@minutos_min+1
  4698  01B2  160A  118A  2591  120A  118A  	fcall	_imprime_tela_ajuste3
  4699  01B7                     l3690:
  4700                           
  4701                           ;main.c: 209:             _delay((unsigned long)((250)*(4000000/4000.0)));
  4702  01B7  3002               	movlw	2
  4703  01B8  1283               	bcf	3,5	;RP0=0, select bank0
  4704  01B9  1303               	bcf	3,6	;RP1=0, select bank0
  4705  01BA  00C7               	movwf	??_ajustes+2
  4706  01BB  3045               	movlw	69
  4707  01BC  00C6               	movwf	??_ajustes+1
  4708  01BD  30A9               	movlw	169
  4709  01BE  00C5               	movwf	??_ajustes
  4710  01BF                     u4917:
  4711  01BF  0BC5               	decfsz	??_ajustes,f
  4712  01C0  29BF               	goto	u4917
  4713  01C1  0BC6               	decfsz	??_ajustes+1,f
  4714  01C2  29BF               	goto	u4917
  4715  01C3  0BC7               	decfsz	??_ajustes+2,f
  4716  01C4  29BF               	goto	u4917
  4717  01C5                     l3692:
  4718                           
  4719                           ;main.c: 197:     while(PORTBbits.RB0!=0)
  4720  01C5  1283               	bcf	3,5	;RP0=0, select bank0
  4721  01C6  1303               	bcf	3,6	;RP1=0, select bank0
  4722  01C7  1806               	btfsc	6,0	;volatile
  4723  01C8  29CA               	goto	u4681
  4724  01C9  29CB               	goto	u4680
  4725  01CA                     u4681:
  4726  01CA  296A               	goto	l136
  4727  01CB                     u4680:
  4728  01CB                     l3694:
  4729                           
  4730                           ;main.c: 213:     _delay((unsigned long)((300)*(4000000/4000.0)));
  4731  01CB  3002               	movlw	2
  4732  01CC  1283               	bcf	3,5	;RP0=0, select bank0
  4733  01CD  1303               	bcf	3,6	;RP1=0, select bank0
  4734  01CE  00C7               	movwf	??_ajustes+2
  4735  01CF  3086               	movlw	134
  4736  01D0  00C6               	movwf	??_ajustes+1
  4737  01D1  3098               	movlw	152
  4738  01D2  00C5               	movwf	??_ajustes
  4739  01D3                     u4927:
  4740  01D3  0BC5               	decfsz	??_ajustes,f
  4741  01D4  29D3               	goto	u4927
  4742  01D5  0BC6               	decfsz	??_ajustes+1,f
  4743  01D6  29D3               	goto	u4927
  4744  01D7  0BC7               	decfsz	??_ajustes+2,f
  4745  01D8  29D3               	goto	u4927
  4746  01D9  0000               	nop
  4747                           
  4748                           ;main.c: 214:     while(PORTBbits.RB0!=0)
  4749  01DA  2A36               	goto	l3706
  4750  01DB                     l141:
  4751                           
  4752                           ;main.c: 215:     {;main.c: 217:         if(PORTBbits.RB1==0)
  4753  01DB  1886               	btfsc	6,1	;volatile
  4754  01DC  29DE               	goto	u4691
  4755  01DD  29DF               	goto	u4690
  4756  01DE                     u4691:
  4757  01DE  2A36               	goto	l3706
  4758  01DF                     u4690:
  4759  01DF                     l3696:
  4760                           
  4761                           ;main.c: 218:         {;main.c: 219:             *min_min=*min_min+1;
  4762  01DF  0842               	movf	ajustes@min_min,w
  4763  01E0  0084               	movwf	4
  4764  01E1  1383               	bcf	3,7	;select IRP bank0
  4765  01E2  0800               	movf	0,w
  4766  01E3  00C5               	movwf	??_ajustes
  4767  01E4  0A84               	incf	4,f
  4768  01E5  0800               	movf	0,w
  4769  01E6  00C6               	movwf	??_ajustes+1
  4770  01E7  0845               	movf	??_ajustes,w
  4771  01E8  3E01               	addlw	1
  4772  01E9  00C7               	movwf	??_ajustes+2
  4773  01EA  0846               	movf	??_ajustes+1,w
  4774  01EB  1803               	skipnc
  4775  01EC  3E01               	addlw	1
  4776  01ED  3E00               	addlw	0
  4777  01EE  00C8               	movwf	??_ajustes+3
  4778  01EF  0842               	movf	ajustes@min_min,w
  4779  01F0  0084               	movwf	4
  4780  01F1  0847               	movf	??_ajustes+2,w
  4781  01F2  0080               	movwf	0
  4782  01F3  0A84               	incf	4,f
  4783  01F4  0848               	movf	??_ajustes+3,w
  4784  01F5  0080               	movwf	0
  4785  01F6                     l3698:
  4786                           
  4787                           ;main.c: 220:             if (*min_min>59)
  4788  01F6  0842               	movf	ajustes@min_min,w
  4789  01F7  0084               	movwf	4
  4790  01F8  0800               	movf	0,w
  4791  01F9  00C5               	movwf	??_ajustes
  4792  01FA  0A84               	incf	4,f
  4793  01FB  0800               	movf	0,w
  4794  01FC  00C6               	movwf	??_ajustes+1
  4795  01FD  0846               	movf	??_ajustes+1,w
  4796  01FE  3A80               	xorlw	128
  4797  01FF  00FF               	movwf	btemp+1
  4798  0200  3080               	movlw	128
  4799  0201  027F               	subwf	btemp+1,w
  4800  0202  1D03               	skipz
  4801  0203  2A06               	goto	u4705
  4802  0204  303C               	movlw	60
  4803  0205  0245               	subwf	??_ajustes,w
  4804  0206                     u4705:
  4805  0206  1C03               	skipc
  4806  0207  2A09               	goto	u4701
  4807  0208  2A0A               	goto	u4700
  4808  0209                     u4701:
  4809  0209  2A12               	goto	l3702
  4810  020A                     u4700:
  4811  020A                     l3700:
  4812                           
  4813                           ;main.c: 221:             {;main.c: 222:                 *min_min=0;
  4814  020A  1283               	bcf	3,5	;RP0=0, select bank0
  4815  020B  1303               	bcf	3,6	;RP1=0, select bank0
  4816  020C  0842               	movf	ajustes@min_min,w
  4817  020D  0084               	movwf	4
  4818  020E  1383               	bcf	3,7	;select IRP bank0
  4819  020F  0180               	clrf	0
  4820  0210  0A84               	incf	4,f
  4821  0211  0180               	clrf	0
  4822  0212                     l3702:
  4823                           
  4824                           ;main.c: 224:             imprime_tela_ajuste3(*hora_min,*min_min);
  4825  0212  1283               	bcf	3,5	;RP0=0, select bank0
  4826  0213  1303               	bcf	3,6	;RP1=0, select bank0
  4827  0214  0841               	movf	ajustes@hora_min,w
  4828  0215  0084               	movwf	4
  4829  0216  1383               	bcf	3,7	;select IRP bank0
  4830  0217  0800               	movf	0,w
  4831  0218  00BC               	movwf	imprime_tela_ajuste3@horas_min
  4832  0219  0A84               	incf	4,f
  4833  021A  0800               	movf	0,w
  4834  021B  00BD               	movwf	imprime_tela_ajuste3@horas_min+1
  4835  021C  0842               	movf	ajustes@min_min,w
  4836  021D  0084               	movwf	4
  4837  021E  0800               	movf	0,w
  4838  021F  00BE               	movwf	imprime_tela_ajuste3@minutos_min
  4839  0220  0A84               	incf	4,f
  4840  0221  0800               	movf	0,w
  4841  0222  00BF               	movwf	imprime_tela_ajuste3@minutos_min+1
  4842  0223  160A  118A  2591  120A  118A  	fcall	_imprime_tela_ajuste3
  4843  0228                     l3704:
  4844                           
  4845                           ;main.c: 225:             _delay((unsigned long)((250)*(4000000/4000.0)));
  4846  0228  3002               	movlw	2
  4847  0229  1283               	bcf	3,5	;RP0=0, select bank0
  4848  022A  1303               	bcf	3,6	;RP1=0, select bank0
  4849  022B  00C7               	movwf	??_ajustes+2
  4850  022C  3045               	movlw	69
  4851  022D  00C6               	movwf	??_ajustes+1
  4852  022E  30A9               	movlw	169
  4853  022F  00C5               	movwf	??_ajustes
  4854  0230                     u4937:
  4855  0230  0BC5               	decfsz	??_ajustes,f
  4856  0231  2A30               	goto	u4937
  4857  0232  0BC6               	decfsz	??_ajustes+1,f
  4858  0233  2A30               	goto	u4937
  4859  0234  0BC7               	decfsz	??_ajustes+2,f
  4860  0235  2A30               	goto	u4937
  4861  0236                     l3706:
  4862                           
  4863                           ;main.c: 214:     while(PORTBbits.RB0!=0)
  4864  0236  1283               	bcf	3,5	;RP0=0, select bank0
  4865  0237  1303               	bcf	3,6	;RP1=0, select bank0
  4866  0238  1806               	btfsc	6,0	;volatile
  4867  0239  2A3B               	goto	u4711
  4868  023A  2A3C               	goto	u4710
  4869  023B                     u4711:
  4870  023B  29DB               	goto	l141
  4871  023C                     u4710:
  4872  023C                     l3708:
  4873                           
  4874                           ;main.c: 228:     LCD_Cmd(0x01);
  4875  023C  3001               	movlw	1
  4876  023D  160A  118A  2470  120A  118A  	fcall	_LCD_Cmd
  4877  0242                     l3710:
  4878                           
  4879                           ;main.c: 229:     imprime_tela_ajuste4(*hora_max,*min_max);
  4880  0242  1283               	bcf	3,5	;RP0=0, select bank0
  4881  0243  1303               	bcf	3,6	;RP1=0, select bank0
  4882  0244  0843               	movf	ajustes@hora_max,w
  4883  0245  0084               	movwf	4
  4884  0246  1383               	bcf	3,7	;select IRP bank0
  4885  0247  0800               	movf	0,w
  4886  0248  00BC               	movwf	imprime_tela_ajuste4@horas_max
  4887  0249  0A84               	incf	4,f
  4888  024A  0800               	movf	0,w
  4889  024B  00BD               	movwf	imprime_tela_ajuste4@horas_max+1
  4890  024C  0844               	movf	ajustes@min_max,w
  4891  024D  0084               	movwf	4
  4892  024E  0800               	movf	0,w
  4893  024F  00BE               	movwf	imprime_tela_ajuste4@minutos_max
  4894  0250  0A84               	incf	4,f
  4895  0251  0800               	movf	0,w
  4896  0252  00BF               	movwf	imprime_tela_ajuste4@minutos_max+1
  4897  0253  160A  118A  25D4  120A  118A  	fcall	_imprime_tela_ajuste4
  4898  0258                     l3712:
  4899                           
  4900                           ;main.c: 230:     _delay((unsigned long)((250)*(4000000/4000.0)));
  4901  0258  3002               	movlw	2
  4902  0259  1283               	bcf	3,5	;RP0=0, select bank0
  4903  025A  1303               	bcf	3,6	;RP1=0, select bank0
  4904  025B  00C7               	movwf	??_ajustes+2
  4905  025C  3045               	movlw	69
  4906  025D  00C6               	movwf	??_ajustes+1
  4907  025E  30A9               	movlw	169
  4908  025F  00C5               	movwf	??_ajustes
  4909  0260                     u4947:
  4910  0260  0BC5               	decfsz	??_ajustes,f
  4911  0261  2A60               	goto	u4947
  4912  0262  0BC6               	decfsz	??_ajustes+1,f
  4913  0263  2A60               	goto	u4947
  4914  0264  0BC7               	decfsz	??_ajustes+2,f
  4915  0265  2A60               	goto	u4947
  4916                           
  4917                           ;main.c: 231:     while(PORTBbits.RB0!=0)
  4918  0266  2A9F               	goto	l3724
  4919  0267                     l146:
  4920                           
  4921                           ;main.c: 232:     {;main.c: 235:         if(PORTBbits.RB1==0)
  4922  0267  1886               	btfsc	6,1	;volatile
  4923  0268  2A6A               	goto	u4721
  4924  0269  2A6B               	goto	u4720
  4925  026A                     u4721:
  4926  026A  2A9F               	goto	l3724
  4927  026B                     u4720:
  4928  026B                     l3714:
  4929                           
  4930                           ;main.c: 236:         {;main.c: 237:             *hora_max=*hora_max+1;
  4931  026B  0843               	movf	ajustes@hora_max,w
  4932  026C  0084               	movwf	4
  4933  026D  1383               	bcf	3,7	;select IRP bank0
  4934  026E  0800               	movf	0,w
  4935  026F  00C5               	movwf	??_ajustes
  4936  0270  0A84               	incf	4,f
  4937  0271  0800               	movf	0,w
  4938  0272  00C6               	movwf	??_ajustes+1
  4939  0273  0845               	movf	??_ajustes,w
  4940  0274  3E01               	addlw	1
  4941  0275  00C7               	movwf	??_ajustes+2
  4942  0276  0846               	movf	??_ajustes+1,w
  4943  0277  1803               	skipnc
  4944  0278  3E01               	addlw	1
  4945  0279  3E00               	addlw	0
  4946  027A  00C8               	movwf	??_ajustes+3
  4947  027B  0843               	movf	ajustes@hora_max,w
  4948  027C  0084               	movwf	4
  4949  027D  0847               	movf	??_ajustes+2,w
  4950  027E  0080               	movwf	0
  4951  027F  0A84               	incf	4,f
  4952  0280  0848               	movf	??_ajustes+3,w
  4953  0281  0080               	movwf	0
  4954  0282                     l3716:
  4955                           
  4956                           ;main.c: 238:             if (*hora_max>23)
  4957  0282  0843               	movf	ajustes@hora_max,w
  4958  0283  0084               	movwf	4
  4959  0284  0800               	movf	0,w
  4960  0285  00C5               	movwf	??_ajustes
  4961  0286  0A84               	incf	4,f
  4962  0287  0800               	movf	0,w
  4963  0288  00C6               	movwf	??_ajustes+1
  4964  0289  0846               	movf	??_ajustes+1,w
  4965  028A  3A80               	xorlw	128
  4966  028B  00FF               	movwf	btemp+1
  4967  028C  3080               	movlw	128
  4968  028D  027F               	subwf	btemp+1,w
  4969  028E  1D03               	skipz
  4970  028F  2A92               	goto	u4735
  4971  0290  3018               	movlw	24
  4972  0291  0245               	subwf	??_ajustes,w
  4973  0292                     u4735:
  4974  0292  1C03               	skipc
  4975  0293  2A95               	goto	u4731
  4976  0294  2A96               	goto	u4730
  4977  0295                     u4731:
  4978  0295  2A42               	goto	l3710
  4979  0296                     u4730:
  4980  0296                     l3718:
  4981                           
  4982                           ;main.c: 239:             {;main.c: 240:                 *hora_max=0;
  4983  0296  1283               	bcf	3,5	;RP0=0, select bank0
  4984  0297  1303               	bcf	3,6	;RP1=0, select bank0
  4985  0298  0843               	movf	ajustes@hora_max,w
  4986  0299  0084               	movwf	4
  4987  029A  1383               	bcf	3,7	;select IRP bank0
  4988  029B  0180               	clrf	0
  4989  029C  0A84               	incf	4,f
  4990  029D  0180               	clrf	0
  4991  029E  2A42               	goto	l3710
  4992  029F                     l3724:
  4993                           
  4994                           ;main.c: 231:     while(PORTBbits.RB0!=0)
  4995  029F  1283               	bcf	3,5	;RP0=0, select bank0
  4996  02A0  1303               	bcf	3,6	;RP1=0, select bank0
  4997  02A1  1806               	btfsc	6,0	;volatile
  4998  02A2  2AA4               	goto	u4741
  4999  02A3  2AA5               	goto	u4740
  5000  02A4                     u4741:
  5001  02A4  2A67               	goto	l146
  5002  02A5                     u4740:
  5003  02A5                     l3726:
  5004                           
  5005                           ;main.c: 246:     _delay((unsigned long)((300)*(4000000/4000.0)));
  5006  02A5  3002               	movlw	2
  5007  02A6  1283               	bcf	3,5	;RP0=0, select bank0
  5008  02A7  1303               	bcf	3,6	;RP1=0, select bank0
  5009  02A8  00C7               	movwf	??_ajustes+2
  5010  02A9  3086               	movlw	134
  5011  02AA  00C6               	movwf	??_ajustes+1
  5012  02AB  3098               	movlw	152
  5013  02AC  00C5               	movwf	??_ajustes
  5014  02AD                     u4957:
  5015  02AD  0BC5               	decfsz	??_ajustes,f
  5016  02AE  2AAD               	goto	u4957
  5017  02AF  0BC6               	decfsz	??_ajustes+1,f
  5018  02B0  2AAD               	goto	u4957
  5019  02B1  0BC7               	decfsz	??_ajustes+2,f
  5020  02B2  2AAD               	goto	u4957
  5021  02B3  0000               	nop
  5022                           
  5023                           ;main.c: 247:     while(PORTBbits.RB0!=0)
  5024  02B4  2B10               	goto	l3738
  5025  02B5                     l151:
  5026                           
  5027                           ;main.c: 248:     {;main.c: 249:         if(PORTBbits.RB1==0)
  5028  02B5  1886               	btfsc	6,1	;volatile
  5029  02B6  2AB8               	goto	u4751
  5030  02B7  2AB9               	goto	u4750
  5031  02B8                     u4751:
  5032  02B8  2B10               	goto	l3738
  5033  02B9                     u4750:
  5034  02B9                     l3728:
  5035                           
  5036                           ;main.c: 250:         {;main.c: 251:             *min_max=*min_max+1;
  5037  02B9  0844               	movf	ajustes@min_max,w
  5038  02BA  0084               	movwf	4
  5039  02BB  1383               	bcf	3,7	;select IRP bank0
  5040  02BC  0800               	movf	0,w
  5041  02BD  00C5               	movwf	??_ajustes
  5042  02BE  0A84               	incf	4,f
  5043  02BF  0800               	movf	0,w
  5044  02C0  00C6               	movwf	??_ajustes+1
  5045  02C1  0845               	movf	??_ajustes,w
  5046  02C2  3E01               	addlw	1
  5047  02C3  00C7               	movwf	??_ajustes+2
  5048  02C4  0846               	movf	??_ajustes+1,w
  5049  02C5  1803               	skipnc
  5050  02C6  3E01               	addlw	1
  5051  02C7  3E00               	addlw	0
  5052  02C8  00C8               	movwf	??_ajustes+3
  5053  02C9  0844               	movf	ajustes@min_max,w
  5054  02CA  0084               	movwf	4
  5055  02CB  0847               	movf	??_ajustes+2,w
  5056  02CC  0080               	movwf	0
  5057  02CD  0A84               	incf	4,f
  5058  02CE  0848               	movf	??_ajustes+3,w
  5059  02CF  0080               	movwf	0
  5060  02D0                     l3730:
  5061                           
  5062                           ;main.c: 252:             if (*min_max>59)
  5063  02D0  0844               	movf	ajustes@min_max,w
  5064  02D1  0084               	movwf	4
  5065  02D2  0800               	movf	0,w
  5066  02D3  00C5               	movwf	??_ajustes
  5067  02D4  0A84               	incf	4,f
  5068  02D5  0800               	movf	0,w
  5069  02D6  00C6               	movwf	??_ajustes+1
  5070  02D7  0846               	movf	??_ajustes+1,w
  5071  02D8  3A80               	xorlw	128
  5072  02D9  00FF               	movwf	btemp+1
  5073  02DA  3080               	movlw	128
  5074  02DB  027F               	subwf	btemp+1,w
  5075  02DC  1D03               	skipz
  5076  02DD  2AE0               	goto	u4765
  5077  02DE  303C               	movlw	60
  5078  02DF  0245               	subwf	??_ajustes,w
  5079  02E0                     u4765:
  5080  02E0  1C03               	skipc
  5081  02E1  2AE3               	goto	u4761
  5082  02E2  2AE4               	goto	u4760
  5083  02E3                     u4761:
  5084  02E3  2AEC               	goto	l3734
  5085  02E4                     u4760:
  5086  02E4                     l3732:
  5087                           
  5088                           ;main.c: 253:             {;main.c: 254:                 *min_max=0;
  5089  02E4  1283               	bcf	3,5	;RP0=0, select bank0
  5090  02E5  1303               	bcf	3,6	;RP1=0, select bank0
  5091  02E6  0844               	movf	ajustes@min_max,w
  5092  02E7  0084               	movwf	4
  5093  02E8  1383               	bcf	3,7	;select IRP bank0
  5094  02E9  0180               	clrf	0
  5095  02EA  0A84               	incf	4,f
  5096  02EB  0180               	clrf	0
  5097  02EC                     l3734:
  5098                           
  5099                           ;main.c: 256:             imprime_tela_ajuste4(*hora_max,*min_max);
  5100  02EC  1283               	bcf	3,5	;RP0=0, select bank0
  5101  02ED  1303               	bcf	3,6	;RP1=0, select bank0
  5102  02EE  0843               	movf	ajustes@hora_max,w
  5103  02EF  0084               	movwf	4
  5104  02F0  1383               	bcf	3,7	;select IRP bank0
  5105  02F1  0800               	movf	0,w
  5106  02F2  00BC               	movwf	imprime_tela_ajuste4@horas_max
  5107  02F3  0A84               	incf	4,f
  5108  02F4  0800               	movf	0,w
  5109  02F5  00BD               	movwf	imprime_tela_ajuste4@horas_max+1
  5110  02F6  0844               	movf	ajustes@min_max,w
  5111  02F7  0084               	movwf	4
  5112  02F8  0800               	movf	0,w
  5113  02F9  00BE               	movwf	imprime_tela_ajuste4@minutos_max
  5114  02FA  0A84               	incf	4,f
  5115  02FB  0800               	movf	0,w
  5116  02FC  00BF               	movwf	imprime_tela_ajuste4@minutos_max+1
  5117  02FD  160A  118A  25D4  120A  118A  	fcall	_imprime_tela_ajuste4
  5118  0302                     l3736:
  5119                           
  5120                           ;main.c: 257:             _delay((unsigned long)((250)*(4000000/4000.0)));
  5121  0302  3002               	movlw	2
  5122  0303  1283               	bcf	3,5	;RP0=0, select bank0
  5123  0304  1303               	bcf	3,6	;RP1=0, select bank0
  5124  0305  00C7               	movwf	??_ajustes+2
  5125  0306  3045               	movlw	69
  5126  0307  00C6               	movwf	??_ajustes+1
  5127  0308  30A9               	movlw	169
  5128  0309  00C5               	movwf	??_ajustes
  5129  030A                     u4967:
  5130  030A  0BC5               	decfsz	??_ajustes,f
  5131  030B  2B0A               	goto	u4967
  5132  030C  0BC6               	decfsz	??_ajustes+1,f
  5133  030D  2B0A               	goto	u4967
  5134  030E  0BC7               	decfsz	??_ajustes+2,f
  5135  030F  2B0A               	goto	u4967
  5136  0310                     l3738:
  5137                           
  5138                           ;main.c: 247:     while(PORTBbits.RB0!=0)
  5139  0310  1283               	bcf	3,5	;RP0=0, select bank0
  5140  0311  1303               	bcf	3,6	;RP1=0, select bank0
  5141  0312  1806               	btfsc	6,0	;volatile
  5142  0313  2B15               	goto	u4771
  5143  0314  2B16               	goto	u4770
  5144  0315                     u4771:
  5145  0315  2AB5               	goto	l151
  5146  0316                     u4770:
  5147  0316                     l3740:
  5148                           
  5149                           ;main.c: 260:     _delay((unsigned long)((250)*(4000000/4000.0)));
  5150  0316  3002               	movlw	2
  5151  0317  1283               	bcf	3,5	;RP0=0, select bank0
  5152  0318  1303               	bcf	3,6	;RP1=0, select bank0
  5153  0319  00C7               	movwf	??_ajustes+2
  5154  031A  3045               	movlw	69
  5155  031B  00C6               	movwf	??_ajustes+1
  5156  031C  30A9               	movlw	169
  5157  031D  00C5               	movwf	??_ajustes
  5158  031E                     u4977:
  5159  031E  0BC5               	decfsz	??_ajustes,f
  5160  031F  2B1E               	goto	u4977
  5161  0320  0BC6               	decfsz	??_ajustes+1,f
  5162  0321  2B1E               	goto	u4977
  5163  0322  0BC7               	decfsz	??_ajustes+2,f
  5164  0323  2B1E               	goto	u4977
  5165  0324                     l3742:
  5166                           
  5167                           ;main.c: 262:     LCD_Cmd(0x01);
  5168  0324  3001               	movlw	1
  5169  0325  160A  118A  2470  120A  118A  	fcall	_LCD_Cmd
  5170  032A                     l155:
  5171  032A  0008               	return
  5172  032B                     __end_of_ajustes:
  5173                           
  5174                           	psect	text13
  5175  15D4                     __ptext13:	
  5176 ;; *************** function _imprime_tela_ajuste4 *****************
  5177 ;; Defined at:
  5178 ;;		line 134 in file "main.c"
  5179 ;; Parameters:    Size  Location     Type
  5180 ;;  horas_max       2   28[BANK0 ] int 
  5181 ;;  minutos_max     2   30[BANK0 ] int 
  5182 ;; Auto vars:     Size  Location     Type
  5183 ;;		None
  5184 ;; Return value:  Size  Location     Type
  5185 ;;                  1    wreg      void 
  5186 ;; Registers used:
  5187 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5188 ;; Tracked objects:
  5189 ;;		On entry : 0/0
  5190 ;;		On exit  : 0/0
  5191 ;;		Unchanged: 0/0
  5192 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5193 ;;      Params:         0       4       0       0       0
  5194 ;;      Locals:         0       0       0       0       0
  5195 ;;      Temps:          0       1       0       0       0
  5196 ;;      Totals:         0       5       0       0       0
  5197 ;;Total ram usage:        5 bytes
  5198 ;; Hardware stack levels used: 1
  5199 ;; Hardware stack levels required when called: 4
  5200 ;; This function calls:
  5201 ;;		_LCD_Goto
  5202 ;;		_LCD_Print
  5203 ;;		_sprintf
  5204 ;; This function is called by:
  5205 ;;		_ajustes
  5206 ;; This function uses a non-reentrant model
  5207 ;;
  5208                           
  5209                           
  5210                           ;psect for function _imprime_tela_ajuste4
  5211  15D4                     _imprime_tela_ajuste4:
  5212  15D4                     l3562:	
  5213                           ;incstack = 0
  5214                           ; Regs used in _imprime_tela_ajuste4: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstac
      +                          k]
  5215                           
  5216                           
  5217                           ;main.c: 134: void imprime_tela_ajuste4(int horas_max,int minutos_max);main.c: 135: {;ma
      +                          in.c: 136:    LCD_Goto(1, 1);
  5218  15D4  1283               	bcf	3,5	;RP0=0, select bank0
  5219  15D5  1303               	bcf	3,6	;RP1=0, select bank0
  5220  15D6  01A1               	clrf	LCD_Goto@row
  5221  15D7  0AA1               	incf	LCD_Goto@row,f
  5222  15D8  3001               	movlw	1
  5223  15D9  160A  118A  24A1  160A  118A  	fcall	_LCD_Goto
  5224  15DE                     l3564:
  5225                           
  5226                           ;main.c: 137:    sprintf(LCD_Cstring,"Stop time:");
  5227  15DE  3071               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  5228  15DF  1283               	bcf	3,5	;RP0=0, select bank0
  5229  15E0  1303               	bcf	3,6	;RP1=0, select bank0
  5230  15E1  00C0               	movwf	??_imprime_tela_ajuste4
  5231  15E2  0840               	movf	??_imprime_tela_ajuste4,w
  5232  15E3  00A9               	movwf	sprintf@f
  5233  15E4  30CE               	movlw	(low (_LCD_Cstring| 0))& (0+255)
  5234  15E5  120A  158A  262C  160A  118A  	fcall	_sprintf
  5235  15EA                     l3566:
  5236                           
  5237                           ;main.c: 138:    LCD_Print(LCD_Cstring);
  5238  15EA  30CE               	movlw	(low (_LCD_Cstring| 0))& (0+255)
  5239  15EB  160A  118A  24D9  160A  118A  	fcall	_LCD_Print
  5240  15F0                     l3568:
  5241                           
  5242                           ;main.c: 140:       LCD_Goto(1, 2);
  5243  15F0  3002               	movlw	2
  5244  15F1  1283               	bcf	3,5	;RP0=0, select bank0
  5245  15F2  1303               	bcf	3,6	;RP1=0, select bank0
  5246  15F3  00C0               	movwf	??_imprime_tela_ajuste4
  5247  15F4  0840               	movf	??_imprime_tela_ajuste4,w
  5248  15F5  00A1               	movwf	LCD_Goto@row
  5249  15F6  3001               	movlw	1
  5250  15F7  160A  118A  24A1  160A  118A  	fcall	_LCD_Goto
  5251  15FC                     l3570:
  5252                           
  5253                           ;main.c: 141:    sprintf(LCD_Cstring,"     %02d:%02d     ",horas_max,minutos_max);
  5254  15FC  3022               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  5255  15FD  1283               	bcf	3,5	;RP0=0, select bank0
  5256  15FE  1303               	bcf	3,6	;RP1=0, select bank0
  5257  15FF  00C0               	movwf	??_imprime_tela_ajuste4
  5258  1600  0840               	movf	??_imprime_tela_ajuste4,w
  5259  1601  00A9               	movwf	sprintf@f
  5260  1602  083D               	movf	imprime_tela_ajuste4@horas_max+1,w
  5261  1603  00AB               	movwf	?_sprintf+2
  5262  1604  083C               	movf	imprime_tela_ajuste4@horas_max,w
  5263  1605  00AA               	movwf	?_sprintf+1
  5264  1606  083F               	movf	imprime_tela_ajuste4@minutos_max+1,w
  5265  1607  00AD               	movwf	?_sprintf+4
  5266  1608  083E               	movf	imprime_tela_ajuste4@minutos_max,w
  5267  1609  00AC               	movwf	?_sprintf+3
  5268  160A  30CE               	movlw	(low (_LCD_Cstring| 0))& (0+255)
  5269  160B  120A  158A  262C  160A  118A  	fcall	_sprintf
  5270                           
  5271                           ;main.c: 142:    LCD_Print(LCD_Cstring);
  5272  1610  30CE               	movlw	(low (_LCD_Cstring| 0))& (0+255)
  5273  1611  160A  118A  24D9  160A  118A  	fcall	_LCD_Print
  5274  1616                     l117:
  5275  1616  0008               	return
  5276  1617                     __end_of_imprime_tela_ajuste4:
  5277                           
  5278                           	psect	text14
  5279  1591                     __ptext14:	
  5280 ;; *************** function _imprime_tela_ajuste3 *****************
  5281 ;; Defined at:
  5282 ;;		line 123 in file "main.c"
  5283 ;; Parameters:    Size  Location     Type
  5284 ;;  horas_min       2   28[BANK0 ] int 
  5285 ;;  minutos_min     2   30[BANK0 ] int 
  5286 ;; Auto vars:     Size  Location     Type
  5287 ;;		None
  5288 ;; Return value:  Size  Location     Type
  5289 ;;                  1    wreg      void 
  5290 ;; Registers used:
  5291 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5292 ;; Tracked objects:
  5293 ;;		On entry : 0/0
  5294 ;;		On exit  : 0/0
  5295 ;;		Unchanged: 0/0
  5296 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5297 ;;      Params:         0       4       0       0       0
  5298 ;;      Locals:         0       0       0       0       0
  5299 ;;      Temps:          0       1       0       0       0
  5300 ;;      Totals:         0       5       0       0       0
  5301 ;;Total ram usage:        5 bytes
  5302 ;; Hardware stack levels used: 1
  5303 ;; Hardware stack levels required when called: 4
  5304 ;; This function calls:
  5305 ;;		_LCD_Goto
  5306 ;;		_LCD_Print
  5307 ;;		_sprintf
  5308 ;; This function is called by:
  5309 ;;		_ajustes
  5310 ;; This function uses a non-reentrant model
  5311 ;;
  5312                           
  5313                           
  5314                           ;psect for function _imprime_tela_ajuste3
  5315  1591                     _imprime_tela_ajuste3:
  5316  1591                     l3552:	
  5317                           ;incstack = 0
  5318                           ; Regs used in _imprime_tela_ajuste3: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstac
      +                          k]
  5319                           
  5320                           
  5321                           ;main.c: 123: void imprime_tela_ajuste3(int horas_min,int minutos_min);main.c: 124: {;ma
      +                          in.c: 125:    LCD_Goto(1, 1);
  5322  1591  1283               	bcf	3,5	;RP0=0, select bank0
  5323  1592  1303               	bcf	3,6	;RP1=0, select bank0
  5324  1593  01A1               	clrf	LCD_Goto@row
  5325  1594  0AA1               	incf	LCD_Goto@row,f
  5326  1595  3001               	movlw	1
  5327  1596  160A  118A  24A1  160A  118A  	fcall	_LCD_Goto
  5328  159B                     l3554:
  5329                           
  5330                           ;main.c: 126:    sprintf(LCD_Cstring,"Start time:");
  5331  159B  3059               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  5332  159C  1283               	bcf	3,5	;RP0=0, select bank0
  5333  159D  1303               	bcf	3,6	;RP1=0, select bank0
  5334  159E  00C0               	movwf	??_imprime_tela_ajuste3
  5335  159F  0840               	movf	??_imprime_tela_ajuste3,w
  5336  15A0  00A9               	movwf	sprintf@f
  5337  15A1  30CE               	movlw	(low (_LCD_Cstring| 0))& (0+255)
  5338  15A2  120A  158A  262C  160A  118A  	fcall	_sprintf
  5339  15A7                     l3556:
  5340                           
  5341                           ;main.c: 127:    LCD_Print(LCD_Cstring);
  5342  15A7  30CE               	movlw	(low (_LCD_Cstring| 0))& (0+255)
  5343  15A8  160A  118A  24D9  160A  118A  	fcall	_LCD_Print
  5344  15AD                     l3558:
  5345                           
  5346                           ;main.c: 129:       LCD_Goto(1, 2);
  5347  15AD  3002               	movlw	2
  5348  15AE  1283               	bcf	3,5	;RP0=0, select bank0
  5349  15AF  1303               	bcf	3,6	;RP1=0, select bank0
  5350  15B0  00C0               	movwf	??_imprime_tela_ajuste3
  5351  15B1  0840               	movf	??_imprime_tela_ajuste3,w
  5352  15B2  00A1               	movwf	LCD_Goto@row
  5353  15B3  3001               	movlw	1
  5354  15B4  160A  118A  24A1  160A  118A  	fcall	_LCD_Goto
  5355  15B9                     l3560:
  5356                           
  5357                           ;main.c: 130:    sprintf(LCD_Cstring,"     %02d:%02d     ",horas_min,minutos_min);
  5358  15B9  3022               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  5359  15BA  1283               	bcf	3,5	;RP0=0, select bank0
  5360  15BB  1303               	bcf	3,6	;RP1=0, select bank0
  5361  15BC  00C0               	movwf	??_imprime_tela_ajuste3
  5362  15BD  0840               	movf	??_imprime_tela_ajuste3,w
  5363  15BE  00A9               	movwf	sprintf@f
  5364  15BF  083D               	movf	imprime_tela_ajuste3@horas_min+1,w
  5365  15C0  00AB               	movwf	?_sprintf+2
  5366  15C1  083C               	movf	imprime_tela_ajuste3@horas_min,w
  5367  15C2  00AA               	movwf	?_sprintf+1
  5368  15C3  083F               	movf	imprime_tela_ajuste3@minutos_min+1,w
  5369  15C4  00AD               	movwf	?_sprintf+4
  5370  15C5  083E               	movf	imprime_tela_ajuste3@minutos_min,w
  5371  15C6  00AC               	movwf	?_sprintf+3
  5372  15C7  30CE               	movlw	(low (_LCD_Cstring| 0))& (0+255)
  5373  15C8  120A  158A  262C  160A  118A  	fcall	_sprintf
  5374                           
  5375                           ;main.c: 131:    LCD_Print(LCD_Cstring);
  5376  15CD  30CE               	movlw	(low (_LCD_Cstring| 0))& (0+255)
  5377  15CE  160A  118A  24D9  160A  118A  	fcall	_LCD_Print
  5378  15D3                     l114:
  5379  15D3  0008               	return
  5380  15D4                     __end_of_imprime_tela_ajuste3:
  5381                           
  5382                           	psect	text15
  5383  154E                     __ptext15:	
  5384 ;; *************** function _imprime_tela_ajuste2 *****************
  5385 ;; Defined at:
  5386 ;;		line 109 in file "main.c"
  5387 ;; Parameters:    Size  Location     Type
  5388 ;;		None
  5389 ;; Auto vars:     Size  Location     Type
  5390 ;;		None
  5391 ;; Return value:  Size  Location     Type
  5392 ;;                  1    wreg      void 
  5393 ;; Registers used:
  5394 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5395 ;; Tracked objects:
  5396 ;;		On entry : 0/0
  5397 ;;		On exit  : 0/0
  5398 ;;		Unchanged: 0/0
  5399 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5400 ;;      Params:         0       0       0       0       0
  5401 ;;      Locals:         0       0       0       0       0
  5402 ;;      Temps:          0       1       0       0       0
  5403 ;;      Totals:         0       1       0       0       0
  5404 ;;Total ram usage:        1 bytes
  5405 ;; Hardware stack levels used: 1
  5406 ;; Hardware stack levels required when called: 4
  5407 ;; This function calls:
  5408 ;;		_LCD_Goto
  5409 ;;		_LCD_Print
  5410 ;;		_sprintf
  5411 ;; This function is called by:
  5412 ;;		_ajustes
  5413 ;; This function uses a non-reentrant model
  5414 ;;
  5415                           
  5416                           
  5417                           ;psect for function _imprime_tela_ajuste2
  5418  154E                     _imprime_tela_ajuste2:
  5419  154E                     l3542:	
  5420                           ;incstack = 0
  5421                           ; Regs used in _imprime_tela_ajuste2: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstac
      +                          k]
  5422                           
  5423                           
  5424                           ;main.c: 112:    LCD_Goto(1, 1);
  5425  154E  1283               	bcf	3,5	;RP0=0, select bank0
  5426  154F  1303               	bcf	3,6	;RP1=0, select bank0
  5427  1550  01A1               	clrf	LCD_Goto@row
  5428  1551  0AA1               	incf	LCD_Goto@row,f
  5429  1552  3001               	movlw	1
  5430  1553  160A  118A  24A1  160A  118A  	fcall	_LCD_Goto
  5431  1558                     l3544:
  5432                           
  5433                           ;main.c: 113:    sprintf(LCD_Cstring,"Horario Atual:");
  5434  1558  304A               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  5435  1559  1283               	bcf	3,5	;RP0=0, select bank0
  5436  155A  1303               	bcf	3,6	;RP1=0, select bank0
  5437  155B  00BC               	movwf	??_imprime_tela_ajuste2
  5438  155C  083C               	movf	??_imprime_tela_ajuste2,w
  5439  155D  00A9               	movwf	sprintf@f
  5440  155E  30CE               	movlw	(low (_LCD_Cstring| 0))& (0+255)
  5441  155F  120A  158A  262C  160A  118A  	fcall	_sprintf
  5442  1564                     l3546:
  5443                           
  5444                           ;main.c: 114:    LCD_Print(LCD_Cstring);
  5445  1564  30CE               	movlw	(low (_LCD_Cstring| 0))& (0+255)
  5446  1565  160A  118A  24D9  160A  118A  	fcall	_LCD_Print
  5447  156A                     l3548:
  5448                           
  5449                           ;main.c: 116:    LCD_Goto(1, 2);
  5450  156A  3002               	movlw	2
  5451  156B  1283               	bcf	3,5	;RP0=0, select bank0
  5452  156C  1303               	bcf	3,6	;RP1=0, select bank0
  5453  156D  00BC               	movwf	??_imprime_tela_ajuste2
  5454  156E  083C               	movf	??_imprime_tela_ajuste2,w
  5455  156F  00A1               	movwf	LCD_Goto@row
  5456  1570  3001               	movlw	1
  5457  1571  160A  118A  24A1  160A  118A  	fcall	_LCD_Goto
  5458  1576                     l3550:
  5459                           
  5460                           ;main.c: 117:    sprintf(LCD_Cstring,"     %02d:%02d     ",Horas,Minutos);
  5461  1576  3022               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  5462  1577  1283               	bcf	3,5	;RP0=0, select bank0
  5463  1578  1303               	bcf	3,6	;RP1=0, select bank0
  5464  1579  00BC               	movwf	??_imprime_tela_ajuste2
  5465  157A  083C               	movf	??_imprime_tela_ajuste2,w
  5466  157B  00A9               	movwf	sprintf@f
  5467  157C  086E               	movf	_Horas+1,w
  5468  157D  00AB               	movwf	?_sprintf+2
  5469  157E  086D               	movf	_Horas,w
  5470  157F  00AA               	movwf	?_sprintf+1
  5471  1580  0879               	movf	_Minutos+1,w
  5472  1581  00AD               	movwf	?_sprintf+4
  5473  1582  0878               	movf	_Minutos,w
  5474  1583  00AC               	movwf	?_sprintf+3
  5475  1584  30CE               	movlw	(low (_LCD_Cstring| 0))& (0+255)
  5476  1585  120A  158A  262C  160A  118A  	fcall	_sprintf
  5477                           
  5478                           ;main.c: 118:    LCD_Print(LCD_Cstring);
  5479  158A  30CE               	movlw	(low (_LCD_Cstring| 0))& (0+255)
  5480  158B  160A  118A  24D9  160A  118A  	fcall	_LCD_Print
  5481  1590                     l111:
  5482  1590  0008               	return
  5483  1591                     __end_of_imprime_tela_ajuste2:
  5484                           
  5485                           	psect	text16
  5486  1424                     __ptext16:	
  5487 ;; *************** function _imprime_tela_ajuste1 *****************
  5488 ;; Defined at:
  5489 ;;		line 101 in file "main.c"
  5490 ;; Parameters:    Size  Location     Type
  5491 ;;  temp            2   28[BANK0 ] int 
  5492 ;; Auto vars:     Size  Location     Type
  5493 ;;		None
  5494 ;; Return value:  Size  Location     Type
  5495 ;;                  1    wreg      void 
  5496 ;; Registers used:
  5497 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5498 ;; Tracked objects:
  5499 ;;		On entry : 0/0
  5500 ;;		On exit  : 0/0
  5501 ;;		Unchanged: 0/0
  5502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5503 ;;      Params:         0       2       0       0       0
  5504 ;;      Locals:         0       0       0       0       0
  5505 ;;      Temps:          0       1       0       0       0
  5506 ;;      Totals:         0       3       0       0       0
  5507 ;;Total ram usage:        3 bytes
  5508 ;; Hardware stack levels used: 1
  5509 ;; Hardware stack levels required when called: 4
  5510 ;; This function calls:
  5511 ;;		_LCD_Goto
  5512 ;;		_LCD_Print
  5513 ;;		_sprintf
  5514 ;; This function is called by:
  5515 ;;		_ajustes
  5516 ;; This function uses a non-reentrant model
  5517 ;;
  5518                           
  5519                           
  5520                           ;psect for function _imprime_tela_ajuste1
  5521  1424                     _imprime_tela_ajuste1:
  5522  1424                     l3536:	
  5523                           ;incstack = 0
  5524                           ; Regs used in _imprime_tela_ajuste1: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstac
      +                          k]
  5525                           
  5526                           
  5527                           ;main.c: 101: void imprime_tela_ajuste1(int temp);main.c: 102: {;main.c: 103:    LCD_Got
      +                          o(1, 1);
  5528  1424  1283               	bcf	3,5	;RP0=0, select bank0
  5529  1425  1303               	bcf	3,6	;RP1=0, select bank0
  5530  1426  01A1               	clrf	LCD_Goto@row
  5531  1427  0AA1               	incf	LCD_Goto@row,f
  5532  1428  3001               	movlw	1
  5533  1429  160A  118A  24A1  160A  118A  	fcall	_LCD_Goto
  5534  142E                     l3538:
  5535                           
  5536                           ;main.c: 104:    sprintf(LCD_Cstring,"Temp. Des: %02d\337c  ",temp);
  5537  142E  3036               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  5538  142F  1283               	bcf	3,5	;RP0=0, select bank0
  5539  1430  1303               	bcf	3,6	;RP1=0, select bank0
  5540  1431  00BE               	movwf	??_imprime_tela_ajuste1
  5541  1432  083E               	movf	??_imprime_tela_ajuste1,w
  5542  1433  00A9               	movwf	sprintf@f
  5543  1434  083D               	movf	imprime_tela_ajuste1@temp+1,w
  5544  1435  00AB               	movwf	?_sprintf+2
  5545  1436  083C               	movf	imprime_tela_ajuste1@temp,w
  5546  1437  00AA               	movwf	?_sprintf+1
  5547  1438  30CE               	movlw	(low (_LCD_Cstring| 0))& (0+255)
  5548  1439  120A  158A  262C  160A  118A  	fcall	_sprintf
  5549  143E                     l3540:
  5550                           
  5551                           ;main.c: 105:    LCD_Print(LCD_Cstring);
  5552  143E  30CE               	movlw	(low (_LCD_Cstring| 0))& (0+255)
  5553  143F  160A  118A  24D9  160A  118A  	fcall	_LCD_Print
  5554  1444                     l108:
  5555  1444  0008               	return
  5556  1445                     __end_of_imprime_tela_ajuste1:
  5557                           
  5558                           	psect	text17
  5559  0E2C                     __ptext17:	
  5560 ;; *************** function _sprintf *****************
  5561 ;; Defined at:
  5562 ;;		line 505 in file "D:\Programas\XC8 compiler\pic\sources\c90\common\doprnt.c"
  5563 ;; Parameters:    Size  Location     Type
  5564 ;;  sp              1    wreg     PTR unsigned char 
  5565 ;;		 -> LCD_Cstring(16), 
  5566 ;;  f               1    9[BANK0 ] PTR const unsigned char 
  5567 ;;		 -> STR_9(20), STR_8(11), STR_7(20), STR_6(12), 
  5568 ;;		 -> STR_5(20), STR_4(15), STR_3(20), STR_2(12), 
  5569 ;;		 -> STR_1(23), 
  5570 ;; Auto vars:     Size  Location     Type
  5571 ;;  sp              1   27[BANK0 ] PTR unsigned char 
  5572 ;;		 -> LCD_Cstring(16), 
  5573 ;;  tmpval          4    0        struct .
  5574 ;;  width           2   24[BANK0 ] int 
  5575 ;;  val             2   21[BANK0 ] unsigned int 
  5576 ;;  cp              2    0        PTR const unsigned char 
  5577 ;;  len             2    0        unsigned int 
  5578 ;;  c               1   26[BANK0 ] unsigned char 
  5579 ;;  flag            1   23[BANK0 ] unsigned char 
  5580 ;;  prec            1   20[BANK0 ] char 
  5581 ;;  ap              1   19[BANK0 ] PTR void [1]
  5582 ;;		 -> ?_sprintf(2), 
  5583 ;; Return value:  Size  Location     Type
  5584 ;;                  2    9[BANK0 ] int 
  5585 ;; Registers used:
  5586 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5587 ;; Tracked objects:
  5588 ;;		On entry : 0/0
  5589 ;;		On exit  : 0/0
  5590 ;;		Unchanged: 0/0
  5591 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5592 ;;      Params:         0       7       0       0       0
  5593 ;;      Locals:         0       9       0       0       0
  5594 ;;      Temps:          0       3       0       0       0
  5595 ;;      Totals:         0      19       0       0       0
  5596 ;;Total ram usage:       19 bytes
  5597 ;; Hardware stack levels used: 1
  5598 ;; Hardware stack levels required when called: 2
  5599 ;; This function calls:
  5600 ;;		___lwdiv
  5601 ;;		___lwmod
  5602 ;;		___wmul
  5603 ;;		_isdigit
  5604 ;; This function is called by:
  5605 ;;		_imprime_tela_main
  5606 ;;		_imprime_tela_ajuste1
  5607 ;;		_imprime_tela_ajuste2
  5608 ;;		_imprime_tela_ajuste3
  5609 ;;		_imprime_tela_ajuste4
  5610 ;; This function uses a non-reentrant model
  5611 ;;
  5612                           
  5613                           
  5614                           ;psect for function _sprintf
  5615  0E2C                     _sprintf:
  5616                           
  5617                           ;incstack = 0
  5618                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5619                           ;sprintf@sp stored from wreg
  5620  0E2C  1283               	bcf	3,5	;RP0=0, select bank0
  5621  0E2D  1303               	bcf	3,6	;RP1=0, select bank0
  5622  0E2E  00BB               	movwf	sprintf@sp
  5623  0E2F                     l3358:
  5624                           
  5625                           ;D:\Programas\XC8 compiler\pic\sources\c90\common\doprnt.c: 505: sprintf(char * sp, cons
      +                          t char * f, ...);D:\Programas\XC8 compiler\pic\sources\c90\common\doprnt.c: 506: {;D:\Pr
      +                          ogramas\XC8 compiler\pic\sources\c90\common\doprnt.c: 507:  va_list ap;;D:\Programas\XC8
      +                           compiler\pic\sources\c90\common\doprnt.c: 512:  char c;;D:\Programas\XC8 compiler\pic\s
      +                          ources\c90\common\doprnt.c: 514:  int width;;D:\Programas\XC8 compiler\pic\sources\c90\c
      +                          ommon\doprnt.c: 521:  signed char prec;;D:\Programas\XC8 compiler\pic\sources\c90\common
      +                          \doprnt.c: 525:  unsigned char flag;
  5626  0E2F  302A               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  5627  0E30  00B0               	movwf	??_sprintf
  5628  0E31  0830               	movf	??_sprintf,w
  5629  0E32  00B3               	movwf	sprintf@ap
  5630                           
  5631                           ;D:\Programas\XC8 compiler\pic\sources\c90\common\doprnt.c: 553:  while((c = *f++)) {
  5632  0E33  2FE9               	goto	l3462
  5633  0E34                     l3360:
  5634                           
  5635                           ;D:\Programas\XC8 compiler\pic\sources\c90\common\doprnt.c: 555:   if(c != '%')
  5636  0E34  3025               	movlw	37
  5637  0E35  063A               	xorwf	sprintf@c,w
  5638  0E36  1903               	btfsc	3,2
  5639  0E37  2E39               	goto	u4221
  5640  0E38  2E3A               	goto	u4220
  5641  0E39                     u4221:
  5642  0E39  2E46               	goto	l3366
  5643  0E3A                     u4220:
  5644  0E3A                     l3362:
  5645                           
  5646                           ;D:\Programas\XC8 compiler\pic\sources\c90\common\doprnt.c: 557:   {;D:\Programas\XC8 co
      +                          mpiler\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  5647  0E3A  083A               	movf	sprintf@c,w
  5648  0E3B  00B0               	movwf	??_sprintf
  5649  0E3C  083B               	movf	sprintf@sp,w
  5650  0E3D  0084               	movwf	4
  5651  0E3E  0830               	movf	??_sprintf,w
  5652  0E3F  1383               	bcf	3,7	;select IRP bank0
  5653  0E40  0080               	movwf	0
  5654  0E41                     l3364:
  5655  0E41  3001               	movlw	1
  5656  0E42  00B0               	movwf	??_sprintf
  5657  0E43  0830               	movf	??_sprintf,w
  5658  0E44  07BB               	addwf	sprintf@sp,f
  5659                           
  5660                           ;D:\Programas\XC8 compiler\pic\sources\c90\common\doprnt.c: 559:    continue;
  5661  0E45  2FE9               	goto	l3462
  5662  0E46                     l3366:
  5663                           
  5664                           ;D:\Programas\XC8 compiler\pic\sources\c90\common\doprnt.c: 563:   width = 0;
  5665  0E46  01B8               	clrf	sprintf@width
  5666  0E47  01B9               	clrf	sprintf@width+1
  5667                           
  5668                           ;D:\Programas\XC8 compiler\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  5669  0E48  01B7               	clrf	sprintf@flag
  5670  0E49  2E4F               	goto	l3372
  5671  0E4A                     l308:	
  5672                           ;D:\Programas\XC8 compiler\pic\sources\c90\common\doprnt.c: 596:    case '0':
  5673                           
  5674                           
  5675                           ;D:\Programas\XC8 compiler\pic\sources\c90\common\doprnt.c: 597:     flag |= 0x04;
  5676  0E4A  1537               	bsf	sprintf@flag,2
  5677  0E4B                     l3368:
  5678                           
  5679                           ;D:\Programas\XC8 compiler\pic\sources\c90\common\doprnt.c: 598:     f++;
  5680  0E4B  3001               	movlw	1
  5681  0E4C  00B0               	movwf	??_sprintf
  5682  0E4D  0830               	movf	??_sprintf,w
  5683  0E4E  07A9               	addwf	sprintf@f,f
  5684  0E4F                     l3372:	
  5685                           ;D:\Programas\XC8 compiler\pic\sources\c90\common\doprnt.c: 599:     continue;
  5686                           
  5687  0E4F  0829               	movf	sprintf@f,w
  5688  0E50  0084               	movwf	4
  5689  0E51  120A  158A  2000  120A  158A  	fcall	stringdir
  5690  0E56  00B0               	movwf	??_sprintf
  5691  0E57  01B1               	clrf	??_sprintf+1
  5692                           
  5693                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5694                           ; Switch size 1, requested type "simple"
  5695                           ; Number of cases is 1, Range of values is 0 to 0
  5696                           ; switch strategies available:
  5697                           ; Name         Instructions Cycles
  5698                           ; simple_byte            4     3 (average)
  5699                           ; direct_byte           11     8 (fixed)
  5700                           ; jumptable            260     6 (fixed)
  5701                           ;	Chosen strategy is simple_byte
  5702  0E58  0831               	movf	??_sprintf+1,w
  5703  0E59  3A00               	xorlw	0	; case 0
  5704  0E5A  1903               	skipnz
  5705  0E5B  2E5D               	goto	l3876
  5706  0E5C  2E62               	goto	l3374
  5707  0E5D                     l3876:
  5708                           
  5709                           ; Switch size 1, requested type "simple"
  5710                           ; Number of cases is 1, Range of values is 48 to 48
  5711                           ; switch strategies available:
  5712                           ; Name         Instructions Cycles
  5713                           ; simple_byte            4     3 (average)
  5714                           ; direct_byte           14    11 (fixed)
  5715                           ; jumptable            263     9 (fixed)
  5716                           ;	Chosen strategy is simple_byte
  5717  0E5D  0830               	movf	??_sprintf,w
  5718  0E5E  3A30               	xorlw	48	; case 48
  5719  0E5F  1903               	skipnz
  5720  0E60  2E4A               	goto	l308
  5721  0E61  2E62               	goto	l3374
  5722  0E62                     l3374:
  5723                           
  5724                           ;D:\Programas\XC8 compiler\pic\sources\c90\common\doprnt.c: 614:   if(isdigit((unsigned)
      +                          *f)) {
  5725  0E62  0829               	movf	sprintf@f,w
  5726  0E63  0084               	movwf	4
  5727  0E64  120A  158A  2000  120A  158A  	fcall	stringdir
  5728  0E69  120A  118A  27EC  120A  158A  	fcall	_isdigit
  5729  0E6E  1C03               	btfss	3,0
  5730  0E6F  2E71               	goto	u4231
  5731  0E70  2E72               	goto	u4230
  5732  0E71                     u4231:
  5733  0E71  2EB2               	goto	l3388
  5734  0E72                     u4230:
  5735  0E72                     l3376:
  5736                           
  5737                           ;D:\Programas\XC8 compiler\pic\sources\c90\common\doprnt.c: 615:    width = 0;
  5738  0E72  1283               	bcf	3,5	;RP0=0, select bank0
  5739  0E73  1303               	bcf	3,6	;RP1=0, select bank0
  5740  0E74  01B8               	clrf	sprintf@width
  5741  0E75  01B9               	clrf	sprintf@width+1
  5742  0E76                     l3378:
  5743                           
  5744                           ;D:\Programas\XC8 compiler\pic\sources\c90\common\doprnt.c: 617:     width *= 10;
  5745  0E76  300A               	movlw	10
  5746  0E77  00F3               	movwf	___wmul@multiplier
  5747  0E78  3000               	movlw	0
  5748  0E79  00F4               	movwf	___wmul@multiplier+1
  5749  0E7A  1283               	bcf	3,5	;RP0=0, select bank0
  5750  0E7B  1303               	bcf	3,6	;RP1=0, select bank0
  5751  0E7C  0839               	movf	sprintf@width+1,w
  5752  0E7D  00F6               	movwf	___wmul@multiplicand+1
  5753  0E7E  0838               	movf	sprintf@width,w
  5754  0E7F  00F5               	movwf	___wmul@multiplicand
  5755  0E80  160A  118A  2445  120A  158A  	fcall	___wmul
  5756  0E85  0874               	movf	?___wmul+1,w
  5757  0E86  1283               	bcf	3,5	;RP0=0, select bank0
  5758  0E87  1303               	bcf	3,6	;RP1=0, select bank0
  5759  0E88  00B9               	movwf	sprintf@width+1
  5760  0E89  0873               	movf	?___wmul,w
  5761  0E8A  00B8               	movwf	sprintf@width
  5762  0E8B                     l3380:
  5763                           
  5764                           ;D:\Programas\XC8 compiler\pic\sources\c90\common\doprnt.c: 618:        width += *f++ - 
      +                          '0';
  5765  0E8B  0829               	movf	sprintf@f,w
  5766  0E8C  0084               	movwf	4
  5767  0E8D  120A  158A  2000  120A  158A  	fcall	stringdir
  5768  0E92  3ED0               	addlw	208
  5769  0E93  00B0               	movwf	??_sprintf
  5770  0E94  30FF               	movlw	255
  5771  0E95  1803               	skipnc
  5772  0E96  3000               	movlw	0
  5773  0E97  00B1               	movwf	??_sprintf+1
  5774  0E98  0830               	movf	??_sprintf,w
  5775  0E99  07B8               	addwf	sprintf@width,f
  5776  0E9A  1803               	skipnc
  5777  0E9B  0AB9               	incf	sprintf@width+1,f
  5778  0E9C  0831               	movf	??_sprintf+1,w
  5779  0E9D  07B9               	addwf	sprintf@width+1,f
  5780  0E9E                     l3382:
  5781  0E9E  3001               	movlw	1
  5782  0E9F  00B0               	movwf	??_sprintf
  5783  0EA0  0830               	movf	??_sprintf,w
  5784  0EA1  07A9               	addwf	sprintf@f,f
  5785  0EA2                     l3384:
  5786                           
  5787                           ;D:\Programas\XC8 compiler\pic\sources\c90\common\doprnt.c: 619:    } while(isdigit((uns
      +                          igned)*f));
  5788  0EA2  0829               	movf	sprintf@f,w
  5789  0EA3  0084               	movwf	4
  5790  0EA4  120A  158A  2000  120A  158A  	fcall	stringdir
  5791  0EA9  120A  118A  27EC  120A  158A  	fcall	_isdigit
  5792  0EAE  1803               	btfsc	3,0
  5793  0EAF  2EB1               	goto	u4241
  5794  0EB0  2EB2               	goto	u4240
  5795  0EB1                     u4241:
  5796  0EB1  2E76               	goto	l3378
  5797  0EB2                     u4240:
  5798  0EB2                     l3388:
  5799  0EB2  3001               	movlw	1
  5800  0EB3  1283               	bcf	3,5	;RP0=0, select bank0
  5801  0EB4  1303               	bcf	3,6	;RP1=0, select bank0
  5802  0EB5  07A9               	addwf	sprintf@f,f
  5803  0EB6  30FF               	movlw	-1
  5804  0EB7  0729               	addwf	sprintf@f,w
  5805  0EB8  0084               	movwf	4
  5806  0EB9  120A  158A  2000  120A  158A  	fcall	stringdir
  5807  0EBE  00BA               	movwf	sprintf@c
  5808  0EBF  00B0               	movwf	??_sprintf
  5809  0EC0  01B1               	clrf	??_sprintf+1
  5810                           
  5811                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5812                           ; Switch size 1, requested type "simple"
  5813                           ; Number of cases is 1, Range of values is 0 to 0
  5814                           ; switch strategies available:
  5815                           ; Name         Instructions Cycles
  5816                           ; simple_byte            4     3 (average)
  5817                           ; direct_byte           11     8 (fixed)
  5818                           ; jumptable            260     6 (fixed)
  5819                           ;	Chosen strategy is simple_byte
  5820  0EC1  0831               	movf	??_sprintf+1,w
  5821  0EC2  3A00               	xorlw	0	; case 0
  5822  0EC3  1903               	skipnz
  5823  0EC4  2EC6               	goto	l3878
  5824  0EC5  2FE9               	goto	l3462
  5825  0EC6                     l3878:
  5826                           
  5827                           ; Switch size 1, requested type "simple"
  5828                           ; Number of cases is 3, Range of values is 0 to 105
  5829                           ; switch strategies available:
  5830                           ; Name         Instructions Cycles
  5831                           ; simple_byte           10     6 (average)
  5832                           ; jumptable            260     6 (fixed)
  5833                           ;	Chosen strategy is simple_byte
  5834  0EC6  0830               	movf	??_sprintf,w
  5835  0EC7  3A00               	xorlw	0	; case 0
  5836  0EC8  1903               	skipnz
  5837  0EC9  2FFB               	goto	l3464
  5838  0ECA  3A64               	xorlw	100	; case 100
  5839  0ECB  1903               	skipnz
  5840  0ECC  2ED1               	goto	l3390
  5841  0ECD  3A0D               	xorlw	13	; case 105
  5842  0ECE  1903               	skipnz
  5843  0ECF  2ED1               	goto	l3390
  5844  0ED0  2FE9               	goto	l3462
  5845  0ED1                     l3390:
  5846                           
  5847                           ;D:\Programas\XC8 compiler\pic\sources\c90\common\doprnt.c: 1279:   {;D:\Programas\XC8 c
      +                          ompiler\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned int)(*(int *)__va_arg
      +                          ((*(int **)ap), (int)0));
  5848  0ED1  0833               	movf	sprintf@ap,w
  5849  0ED2  0084               	movwf	4
  5850  0ED3  1383               	bcf	3,7	;select IRP bank0
  5851  0ED4  0800               	movf	0,w
  5852  0ED5  00B5               	movwf	sprintf@val
  5853  0ED6  0A84               	incf	4,f
  5854  0ED7  0800               	movf	0,w
  5855  0ED8  00B6               	movwf	sprintf@val+1
  5856  0ED9                     l3392:
  5857  0ED9  3002               	movlw	2
  5858  0EDA  00B0               	movwf	??_sprintf
  5859  0EDB  0830               	movf	??_sprintf,w
  5860  0EDC  07B3               	addwf	sprintf@ap,f
  5861  0EDD                     l3394:
  5862                           
  5863                           ;D:\Programas\XC8 compiler\pic\sources\c90\common\doprnt.c: 1287:    if((int)val < 0) {
  5864  0EDD  1FB6               	btfss	sprintf@val+1,7
  5865  0EDE  2EE0               	goto	u4251
  5866  0EDF  2EE1               	goto	u4250
  5867  0EE0                     u4251:
  5868  0EE0  2EEA               	goto	l3400
  5869  0EE1                     u4250:
  5870  0EE1                     l3396:
  5871                           
  5872                           ;D:\Programas\XC8 compiler\pic\sources\c90\common\doprnt.c: 1288:     flag |= 0x03;
  5873  0EE1  3003               	movlw	3
  5874  0EE2  00B0               	movwf	??_sprintf
  5875  0EE3  0830               	movf	??_sprintf,w
  5876  0EE4  04B7               	iorwf	sprintf@flag,f
  5877  0EE5                     l3398:
  5878                           
  5879                           ;D:\Programas\XC8 compiler\pic\sources\c90\common\doprnt.c: 1289:     val = -val;
  5880  0EE5  09B5               	comf	sprintf@val,f
  5881  0EE6  09B6               	comf	sprintf@val+1,f
  5882  0EE7  0AB5               	incf	sprintf@val,f
  5883  0EE8  1903               	skipnz
  5884  0EE9  0AB6               	incf	sprintf@val+1,f
  5885  0EEA                     l3400:
  5886                           
  5887                           ;D:\Programas\XC8 compiler\pic\sources\c90\common\doprnt.c: 1292:   };D:\Programas\XC8 c
      +                          ompiler\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c != sizeof dpowers/sizeof
      +                           dpowers[0] ; c++)
  5888  0EEA  01BA               	clrf	sprintf@c
  5889  0EEB  0ABA               	incf	sprintf@c,f
  5890  0EEC                     l3406:
  5891                           
  5892                           ;D:\Programas\XC8 compiler\pic\sources\c90\common\doprnt.c: 1332:     if(val < dpowers[c
      +                          ])
  5893  0EEC  083A               	movf	sprintf@c,w
  5894  0EED  00B0               	movwf	??_sprintf
  5895  0EEE  0730               	addwf	??_sprintf,w
  5896  0EEF  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  5897  0EF0  0084               	movwf	4
  5898  0EF1  120A  158A  2000  120A  158A  	fcall	stringdir
  5899  0EF6  00B1               	movwf	??_sprintf+1
  5900  0EF7  120A  158A  2000  120A  158A  	fcall	stringdir
  5901  0EFC  00B2               	movwf	??_sprintf+2
  5902  0EFD  0832               	movf	??_sprintf+2,w
  5903  0EFE  0236               	subwf	sprintf@val+1,w
  5904  0EFF  1D03               	skipz
  5905  0F00  2F03               	goto	u4265
  5906  0F01  0831               	movf	??_sprintf+1,w
  5907  0F02  0235               	subwf	sprintf@val,w
  5908  0F03                     u4265:
  5909  0F03  1803               	skipnc
  5910  0F04  2F06               	goto	u4261
  5911  0F05  2F07               	goto	u4260
  5912  0F06                     u4261:
  5913  0F06  2F08               	goto	l3410
  5914  0F07                     u4260:
  5915  0F07  2F12               	goto	l3412
  5916  0F08                     l3410:
  5917  0F08  3001               	movlw	1
  5918  0F09  00B0               	movwf	??_sprintf
  5919  0F0A  0830               	movf	??_sprintf,w
  5920  0F0B  07BA               	addwf	sprintf@c,f
  5921  0F0C  3005               	movlw	5
  5922  0F0D  063A               	xorwf	sprintf@c,w
  5923  0F0E  1D03               	btfss	3,2
  5924  0F0F  2F11               	goto	u4271
  5925  0F10  2F12               	goto	u4270
  5926  0F11                     u4271:
  5927  0F11  2EEC               	goto	l3406
  5928  0F12                     u4270:
  5929  0F12                     l3412:
  5930                           
  5931                           ;D:\Programas\XC8 compiler\pic\sources\c90\common\doprnt.c: 1371:   if(width && flag & 0
      +                          x03)
  5932  0F12  0838               	movf	sprintf@width,w
  5933  0F13  0439               	iorwf	sprintf@width+1,w
  5934  0F14  1903               	btfsc	3,2
  5935  0F15  2F17               	goto	u4281
  5936  0F16  2F18               	goto	u4280
  5937  0F17                     u4281:
  5938  0F17  2F24               	goto	l326
  5939  0F18                     u4280:
  5940  0F18                     l3414:
  5941  0F18  0837               	movf	sprintf@flag,w
  5942  0F19  3903               	andlw	3
  5943  0F1A  1903               	btfsc	3,2
  5944  0F1B  2F1D               	goto	u4291
  5945  0F1C  2F1E               	goto	u4290
  5946  0F1D                     u4291:
  5947  0F1D  2F24               	goto	l326
  5948  0F1E                     u4290:
  5949  0F1E                     l3416:
  5950                           
  5951                           ;D:\Programas\XC8 compiler\pic\sources\c90\common\doprnt.c: 1372:    width--;
  5952  0F1E  30FF               	movlw	255
  5953  0F1F  07B8               	addwf	sprintf@width,f
  5954  0F20  1803               	skipnc
  5955  0F21  0AB9               	incf	sprintf@width+1,f
  5956  0F22  30FF               	movlw	255
  5957  0F23  07B9               	addwf	sprintf@width+1,f
  5958  0F24                     l326:
  5959                           
  5960                           ;D:\Programas\XC8 compiler\pic\sources\c90\common\doprnt.c: 1407:   if(width > c)
  5961  0F24  0839               	movf	sprintf@width+1,w
  5962  0F25  3A80               	xorlw	128
  5963  0F26  3C80               	sublw	128
  5964  0F27  1D03               	skipz
  5965  0F28  2F2B               	goto	u4305
  5966  0F29  0838               	movf	sprintf@width,w
  5967  0F2A  023A               	subwf	sprintf@c,w
  5968  0F2B                     u4305:
  5969  0F2B  1803               	skipnc
  5970  0F2C  2F2E               	goto	u4301
  5971  0F2D  2F2F               	goto	u4300
  5972  0F2E                     u4301:
  5973  0F2E  2F3B               	goto	l3420
  5974  0F2F                     u4300:
  5975  0F2F                     l3418:
  5976                           
  5977                           ;D:\Programas\XC8 compiler\pic\sources\c90\common\doprnt.c: 1408:    width -= c;
  5978  0F2F  1283               	bcf	3,5	;RP0=0, select bank0
  5979  0F30  1303               	bcf	3,6	;RP1=0, select bank0
  5980  0F31  083A               	movf	sprintf@c,w
  5981  0F32  00B0               	movwf	??_sprintf
  5982  0F33  01B1               	clrf	??_sprintf+1
  5983  0F34  0830               	movf	??_sprintf,w
  5984  0F35  02B8               	subwf	sprintf@width,f
  5985  0F36  0831               	movf	??_sprintf+1,w
  5986  0F37  1C03               	skipc
  5987  0F38  03B9               	decf	sprintf@width+1,f
  5988  0F39  02B9               	subwf	sprintf@width+1,f
  5989  0F3A  2F3F               	goto	l3422
  5990  0F3B                     l3420:
  5991                           
  5992                           ;D:\Programas\XC8 compiler\pic\sources\c90\common\doprnt.c: 1410:    width = 0;
  5993  0F3B  1283               	bcf	3,5	;RP0=0, select bank0
  5994  0F3C  1303               	bcf	3,6	;RP1=0, select bank0
  5995  0F3D  01B8               	clrf	sprintf@width
  5996  0F3E  01B9               	clrf	sprintf@width+1
  5997  0F3F                     l3422:
  5998                           
  5999                           ;D:\Programas\XC8 compiler\pic\sources\c90\common\doprnt.c: 1413:   if(flag & 0x04) {
  6000  0F3F  1D37               	btfss	sprintf@flag,2
  6001  0F40  2F42               	goto	u4311
  6002  0F41  2F43               	goto	u4310
  6003  0F42                     u4311:
  6004  0F42  2F72               	goto	l3438
  6005  0F43                     u4310:
  6006  0F43                     l3424:
  6007                           
  6008                           ;D:\Programas\XC8 compiler\pic\sources\c90\common\doprnt.c: 1418:    if(flag & 0x03)
  6009  0F43  0837               	movf	sprintf@flag,w
  6010  0F44  3903               	andlw	3
  6011  0F45  1903               	btfsc	3,2
  6012  0F46  2F48               	goto	u4321
  6013  0F47  2F49               	goto	u4320
  6014  0F48                     u4321:
  6015  0F48  2F54               	goto	l3430
  6016  0F49                     u4320:
  6017  0F49                     l3426:
  6018                           
  6019                           ;D:\Programas\XC8 compiler\pic\sources\c90\common\doprnt.c: 1419:     ((*sp++ = ('-')));
  6020  0F49  302D               	movlw	45
  6021  0F4A  00B0               	movwf	??_sprintf
  6022  0F4B  083B               	movf	sprintf@sp,w
  6023  0F4C  0084               	movwf	4
  6024  0F4D  0830               	movf	??_sprintf,w
  6025  0F4E  1383               	bcf	3,7	;select IRP bank0
  6026  0F4F  0080               	movwf	0
  6027  0F50                     l3428:
  6028  0F50  3001               	movlw	1
  6029  0F51  00B0               	movwf	??_sprintf
  6030  0F52  0830               	movf	??_sprintf,w
  6031  0F53  07BB               	addwf	sprintf@sp,f
  6032  0F54                     l3430:
  6033                           
  6034                           ;D:\Programas\XC8 compiler\pic\sources\c90\common\doprnt.c: 1441:    if(width)
  6035  0F54  0838               	movf	sprintf@width,w
  6036  0F55  0439               	iorwf	sprintf@width+1,w
  6037  0F56  1903               	btfsc	3,2
  6038  0F57  2F59               	goto	u4331
  6039  0F58  2F5A               	goto	u4330
  6040  0F59                     u4331:
  6041  0F59  2FA0               	goto	l3452
  6042  0F5A                     u4330:
  6043  0F5A                     l3432:
  6044                           
  6045                           ;D:\Programas\XC8 compiler\pic\sources\c90\common\doprnt.c: 1443:      ((*sp++ = ('0')))
      +                          ;
  6046  0F5A  3030               	movlw	48
  6047  0F5B  00B0               	movwf	??_sprintf
  6048  0F5C  083B               	movf	sprintf@sp,w
  6049  0F5D  0084               	movwf	4
  6050  0F5E  0830               	movf	??_sprintf,w
  6051  0F5F  1383               	bcf	3,7	;select IRP bank0
  6052  0F60  0080               	movwf	0
  6053  0F61                     l3434:
  6054  0F61  3001               	movlw	1
  6055  0F62  00B0               	movwf	??_sprintf
  6056  0F63  0830               	movf	??_sprintf,w
  6057  0F64  07BB               	addwf	sprintf@sp,f
  6058  0F65                     l3436:
  6059  0F65  30FF               	movlw	255
  6060  0F66  07B8               	addwf	sprintf@width,f
  6061  0F67  1803               	skipnc
  6062  0F68  0AB9               	incf	sprintf@width+1,f
  6063  0F69  30FF               	movlw	255
  6064  0F6A  07B9               	addwf	sprintf@width+1,f
  6065  0F6B  0838               	movf	sprintf@width,w
  6066  0F6C  0439               	iorwf	sprintf@width+1,w
  6067  0F6D  1D03               	btfss	3,2
  6068  0F6E  2F70               	goto	u4341
  6069  0F6F  2F71               	goto	u4340
  6070  0F70                     u4341:
  6071  0F70  2F5A               	goto	l3432
  6072  0F71                     u4340:
  6073  0F71  2FA0               	goto	l3452
  6074  0F72                     l3438:
  6075                           
  6076                           ;D:\Programas\XC8 compiler\pic\sources\c90\common\doprnt.c: 1448:   {;D:\Programas\XC8 c
      +                          ompiler\pic\sources\c90\common\doprnt.c: 1450:    if(width
  6077  0F72  0838               	movf	sprintf@width,w
  6078  0F73  0439               	iorwf	sprintf@width+1,w
  6079  0F74  1903               	btfsc	3,2
  6080  0F75  2F77               	goto	u4351
  6081  0F76  2F78               	goto	u4350
  6082  0F77                     u4351:
  6083  0F77  2F8F               	goto	l3446
  6084  0F78                     u4350:
  6085  0F78                     l3440:
  6086                           
  6087                           ;D:\Programas\XC8 compiler\pic\sources\c90\common\doprnt.c: 1456:      ((*sp++ = (' ')))
      +                          ;
  6088  0F78  3020               	movlw	32
  6089  0F79  00B0               	movwf	??_sprintf
  6090  0F7A  083B               	movf	sprintf@sp,w
  6091  0F7B  0084               	movwf	4
  6092  0F7C  0830               	movf	??_sprintf,w
  6093  0F7D  1383               	bcf	3,7	;select IRP bank0
  6094  0F7E  0080               	movwf	0
  6095  0F7F                     l3442:
  6096  0F7F  3001               	movlw	1
  6097  0F80  00B0               	movwf	??_sprintf
  6098  0F81  0830               	movf	??_sprintf,w
  6099  0F82  07BB               	addwf	sprintf@sp,f
  6100  0F83                     l3444:
  6101  0F83  30FF               	movlw	255
  6102  0F84  07B8               	addwf	sprintf@width,f
  6103  0F85  1803               	skipnc
  6104  0F86  0AB9               	incf	sprintf@width+1,f
  6105  0F87  30FF               	movlw	255
  6106  0F88  07B9               	addwf	sprintf@width+1,f
  6107  0F89  0838               	movf	sprintf@width,w
  6108  0F8A  0439               	iorwf	sprintf@width+1,w
  6109  0F8B  1D03               	btfss	3,2
  6110  0F8C  2F8E               	goto	u4361
  6111  0F8D  2F8F               	goto	u4360
  6112  0F8E                     u4361:
  6113  0F8E  2F78               	goto	l3440
  6114  0F8F                     u4360:
  6115  0F8F                     l3446:
  6116                           
  6117                           ;D:\Programas\XC8 compiler\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  6118  0F8F  0837               	movf	sprintf@flag,w
  6119  0F90  3903               	andlw	3
  6120  0F91  1903               	btfsc	3,2
  6121  0F92  2F94               	goto	u4371
  6122  0F93  2F95               	goto	u4370
  6123  0F94                     u4371:
  6124  0F94  2FA0               	goto	l3452
  6125  0F95                     u4370:
  6126  0F95                     l3448:
  6127                           
  6128                           ;D:\Programas\XC8 compiler\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++ = ('-')));
  6129  0F95  302D               	movlw	45
  6130  0F96  00B0               	movwf	??_sprintf
  6131  0F97  083B               	movf	sprintf@sp,w
  6132  0F98  0084               	movwf	4
  6133  0F99  0830               	movf	??_sprintf,w
  6134  0F9A  1383               	bcf	3,7	;select IRP bank0
  6135  0F9B  0080               	movwf	0
  6136  0F9C                     l3450:
  6137  0F9C  3001               	movlw	1
  6138  0F9D  00B0               	movwf	??_sprintf
  6139  0F9E  0830               	movf	??_sprintf,w
  6140  0F9F  07BB               	addwf	sprintf@sp,f
  6141  0FA0                     l3452:
  6142                           
  6143                           ;D:\Programas\XC8 compiler\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  6144  0FA0  083A               	movf	sprintf@c,w
  6145  0FA1  00B0               	movwf	??_sprintf
  6146  0FA2  0830               	movf	??_sprintf,w
  6147  0FA3  00B4               	movwf	sprintf@prec
  6148                           
  6149                           ;D:\Programas\XC8 compiler\pic\sources\c90\common\doprnt.c: 1500:   while(prec--) {
  6150  0FA4  2FE0               	goto	l3460
  6151  0FA5                     l3454:
  6152                           
  6153                           ;D:\Programas\XC8 compiler\pic\sources\c90\common\doprnt.c: 1504:    {;D:\Programas\XC8 
      +                          compiler\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpowers[(unsigned char)pr
      +                          ec]) % 10 + '0';
  6154  0FA5  300A               	movlw	10
  6155  0FA6  00A3               	movwf	___lwmod@divisor
  6156  0FA7  3000               	movlw	0
  6157  0FA8  00A4               	movwf	___lwmod@divisor+1
  6158  0FA9  0834               	movf	sprintf@prec,w
  6159  0FAA  00B0               	movwf	??_sprintf
  6160  0FAB  0730               	addwf	??_sprintf,w
  6161  0FAC  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  6162  0FAD  0084               	movwf	4
  6163  0FAE  120A  158A  2000  120A  158A  	fcall	stringdir
  6164  0FB3  00F3               	movwf	___lwdiv@divisor
  6165  0FB4  120A  158A  2000  120A  158A  	fcall	stringdir
  6166  0FB9  00F4               	movwf	___lwdiv@divisor+1
  6167  0FBA  0836               	movf	sprintf@val+1,w
  6168  0FBB  00F6               	movwf	___lwdiv@dividend+1
  6169  0FBC  0835               	movf	sprintf@val,w
  6170  0FBD  00F5               	movwf	___lwdiv@dividend
  6171  0FBE  160A  118A  2617  120A  158A  	fcall	___lwdiv
  6172  0FC3  0874               	movf	?___lwdiv+1,w
  6173  0FC4  1283               	bcf	3,5	;RP0=0, select bank0
  6174  0FC5  1303               	bcf	3,6	;RP1=0, select bank0
  6175  0FC6  00A6               	movwf	___lwmod@dividend+1
  6176  0FC7  0873               	movf	?___lwdiv,w
  6177  0FC8  00A5               	movwf	___lwmod@dividend
  6178  0FC9  160A  118A  2512  120A  158A  	fcall	___lwmod
  6179  0FCE  1283               	bcf	3,5	;RP0=0, select bank0
  6180  0FCF  1303               	bcf	3,6	;RP1=0, select bank0
  6181  0FD0  0823               	movf	?___lwmod,w
  6182  0FD1  3E30               	addlw	48
  6183  0FD2  00B1               	movwf	??_sprintf+1
  6184  0FD3  0831               	movf	??_sprintf+1,w
  6185  0FD4  00BA               	movwf	sprintf@c
  6186  0FD5                     l3456:
  6187                           
  6188                           ;D:\Programas\XC8 compiler\pic\sources\c90\common\doprnt.c: 1549:    };D:\Programas\XC8 
      +                          compiler\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)));
  6189  0FD5  083A               	movf	sprintf@c,w
  6190  0FD6  00B0               	movwf	??_sprintf
  6191  0FD7  083B               	movf	sprintf@sp,w
  6192  0FD8  0084               	movwf	4
  6193  0FD9  0830               	movf	??_sprintf,w
  6194  0FDA  1383               	bcf	3,7	;select IRP bank0
  6195  0FDB  0080               	movwf	0
  6196  0FDC                     l3458:
  6197  0FDC  3001               	movlw	1
  6198  0FDD  00B0               	movwf	??_sprintf
  6199  0FDE  0830               	movf	??_sprintf,w
  6200  0FDF  07BB               	addwf	sprintf@sp,f
  6201  0FE0                     l3460:
  6202                           
  6203                           ;D:\Programas\XC8 compiler\pic\sources\c90\common\doprnt.c: 1500:   while(prec--) {
  6204  0FE0  30FF               	movlw	255
  6205  0FE1  00B0               	movwf	??_sprintf
  6206  0FE2  0830               	movf	??_sprintf,w
  6207  0FE3  07B4               	addwf	sprintf@prec,f
  6208  0FE4  0A34               	incf	sprintf@prec,w
  6209  0FE5  1D03               	btfss	3,2
  6210  0FE6  2FE8               	goto	u4381
  6211  0FE7  2FE9               	goto	u4380
  6212  0FE8                     u4381:
  6213  0FE8  2FA5               	goto	l3454
  6214  0FE9                     u4380:
  6215  0FE9                     l3462:
  6216                           
  6217                           ;D:\Programas\XC8 compiler\pic\sources\c90\common\doprnt.c: 553:  while((c = *f++)) {
  6218  0FE9  3001               	movlw	1
  6219  0FEA  07A9               	addwf	sprintf@f,f
  6220  0FEB  30FF               	movlw	-1
  6221  0FEC  0729               	addwf	sprintf@f,w
  6222  0FED  0084               	movwf	4
  6223  0FEE  120A  158A  2000  120A  158A  	fcall	stringdir
  6224  0FF3  00B0               	movwf	??_sprintf
  6225  0FF4  0830               	movf	??_sprintf,w
  6226  0FF5  00BA               	movwf	sprintf@c
  6227  0FF6  083A               	movf	sprintf@c,w
  6228  0FF7  1D03               	btfss	3,2
  6229  0FF8  2FFA               	goto	u4391
  6230  0FF9  2FFB               	goto	u4390
  6231  0FFA                     u4391:
  6232  0FFA  2E34               	goto	l3360
  6233  0FFB                     u4390:
  6234  0FFB                     l3464:
  6235                           
  6236                           ;D:\Programas\XC8 compiler\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  6237  0FFB  083B               	movf	sprintf@sp,w
  6238  0FFC  0084               	movwf	4
  6239  0FFD  1383               	bcf	3,7	;select IRP bank0
  6240  0FFE  0180               	clrf	0
  6241  0FFF                     l343:
  6242  0FFF  0008               	return
  6243  1000                     __end_of_sprintf:
  6244                           
  6245                           	psect	text18
  6246  07EC                     __ptext18:	
  6247 ;; *************** function _isdigit *****************
  6248 ;; Defined at:
  6249 ;;		line 8 in file "D:\Programas\XC8 compiler\pic\sources\c90\common\isdigit.c"
  6250 ;; Parameters:    Size  Location     Type
  6251 ;;  c               1    wreg     unsigned char 
  6252 ;; Auto vars:     Size  Location     Type
  6253 ;;  c               1    4[COMMON] unsigned char 
  6254 ;; Return value:  Size  Location     Type
  6255 ;;		None               void
  6256 ;; Registers used:
  6257 ;;		wreg, status,2, status,0
  6258 ;; Tracked objects:
  6259 ;;		On entry : 0/0
  6260 ;;		On exit  : 0/0
  6261 ;;		Unchanged: 0/0
  6262 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6263 ;;      Params:         0       0       0       0       0
  6264 ;;      Locals:         2       0       0       0       0
  6265 ;;      Temps:          0       0       0       0       0
  6266 ;;      Totals:         2       0       0       0       0
  6267 ;;Total ram usage:        2 bytes
  6268 ;; Hardware stack levels used: 1
  6269 ;; Hardware stack levels required when called: 1
  6270 ;; This function calls:
  6271 ;;		Nothing
  6272 ;; This function is called by:
  6273 ;;		_sprintf
  6274 ;; This function uses a non-reentrant model
  6275 ;;
  6276                           
  6277                           
  6278                           ;psect for function _isdigit
  6279  07EC                     _isdigit:
  6280                           
  6281                           ;incstack = 0
  6282                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  6283                           ;isdigit@c stored from wreg
  6284  07EC  00F4               	movwf	isdigit@c
  6285  07ED                     l2102:
  6286  07ED  01F3               	clrf	_isdigit$768
  6287  07EE                     l2104:
  6288  07EE  303A               	movlw	58
  6289  07EF  0274               	subwf	isdigit@c,w
  6290  07F0  1803               	skipnc
  6291  07F1  2FF3               	goto	u2071
  6292  07F2  2FF4               	goto	u2070
  6293  07F3                     u2071:
  6294  07F3  2FFC               	goto	l2110
  6295  07F4                     u2070:
  6296  07F4                     l2106:
  6297  07F4  3030               	movlw	48
  6298  07F5  0274               	subwf	isdigit@c,w
  6299  07F6  1C03               	skipc
  6300  07F7  2FF9               	goto	u2081
  6301  07F8  2FFA               	goto	u2080
  6302  07F9                     u2081:
  6303  07F9  2FFC               	goto	l2110
  6304  07FA                     u2080:
  6305  07FA                     l2108:
  6306  07FA  01F3               	clrf	_isdigit$768
  6307  07FB  0AF3               	incf	_isdigit$768,f
  6308  07FC                     l2110:
  6309  07FC  0C73               	rrf	_isdigit$768,w
  6310  07FD                     l800:
  6311  07FD  0008               	return
  6312  07FE                     __end_of_isdigit:
  6313                           
  6314                           	psect	text19
  6315  1445                     __ptext19:	
  6316 ;; *************** function ___wmul *****************
  6317 ;; Defined at:
  6318 ;;		line 15 in file "D:\Programas\XC8 compiler\pic\sources\c90\common\Umul16.c"
  6319 ;; Parameters:    Size  Location     Type
  6320 ;;  multiplier      2    3[COMMON] unsigned int 
  6321 ;;  multiplicand    2    5[COMMON] unsigned int 
  6322 ;; Auto vars:     Size  Location     Type
  6323 ;;  product         2    0[BANK0 ] unsigned int 
  6324 ;; Return value:  Size  Location     Type
  6325 ;;                  2    3[COMMON] unsigned int 
  6326 ;; Registers used:
  6327 ;;		wreg, status,2, status,0
  6328 ;; Tracked objects:
  6329 ;;		On entry : 0/0
  6330 ;;		On exit  : 0/0
  6331 ;;		Unchanged: 0/0
  6332 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6333 ;;      Params:         4       0       0       0       0
  6334 ;;      Locals:         0       2       0       0       0
  6335 ;;      Temps:          0       0       0       0       0
  6336 ;;      Totals:         4       2       0       0       0
  6337 ;;Total ram usage:        6 bytes
  6338 ;; Hardware stack levels used: 1
  6339 ;; Hardware stack levels required when called: 1
  6340 ;; This function calls:
  6341 ;;		Nothing
  6342 ;; This function is called by:
  6343 ;;		_sprintf
  6344 ;; This function uses a non-reentrant model
  6345 ;;
  6346                           
  6347                           
  6348                           ;psect for function ___wmul
  6349  1445                     ___wmul:
  6350  1445                     l3278:	
  6351                           ;incstack = 0
  6352                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  6353                           
  6354  1445  1283               	bcf	3,5	;RP0=0, select bank0
  6355  1446  1303               	bcf	3,6	;RP1=0, select bank0
  6356  1447  01A0               	clrf	___wmul@product
  6357  1448  01A1               	clrf	___wmul@product+1
  6358  1449                     l3280:
  6359  1449  1C73               	btfss	___wmul@multiplier,0
  6360  144A  2C4C               	goto	u4061
  6361  144B  2C4D               	goto	u4060
  6362  144C                     u4061:
  6363  144C  2C55               	goto	l347
  6364  144D                     u4060:
  6365  144D                     l3282:
  6366  144D  0875               	movf	___wmul@multiplicand,w
  6367  144E  1283               	bcf	3,5	;RP0=0, select bank0
  6368  144F  1303               	bcf	3,6	;RP1=0, select bank0
  6369  1450  07A0               	addwf	___wmul@product,f
  6370  1451  1803               	skipnc
  6371  1452  0AA1               	incf	___wmul@product+1,f
  6372  1453  0876               	movf	___wmul@multiplicand+1,w
  6373  1454  07A1               	addwf	___wmul@product+1,f
  6374  1455                     l347:
  6375  1455  3001               	movlw	1
  6376  1456                     u4075:
  6377  1456  1003               	clrc
  6378  1457  0DF5               	rlf	___wmul@multiplicand,f
  6379  1458  0DF6               	rlf	___wmul@multiplicand+1,f
  6380  1459  3EFF               	addlw	-1
  6381  145A  1D03               	skipz
  6382  145B  2C56               	goto	u4075
  6383  145C                     l3284:
  6384  145C  3001               	movlw	1
  6385  145D                     u4085:
  6386  145D  1003               	clrc
  6387  145E  0CF4               	rrf	___wmul@multiplier+1,f
  6388  145F  0CF3               	rrf	___wmul@multiplier,f
  6389  1460  3EFF               	addlw	-1
  6390  1461  1D03               	skipz
  6391  1462  2C5D               	goto	u4085
  6392  1463                     l3286:
  6393  1463  0873               	movf	___wmul@multiplier,w
  6394  1464  0474               	iorwf	___wmul@multiplier+1,w
  6395  1465  1D03               	btfss	3,2
  6396  1466  2C68               	goto	u4091
  6397  1467  2C69               	goto	u4090
  6398  1468                     u4091:
  6399  1468  2C49               	goto	l3280
  6400  1469                     u4090:
  6401  1469                     l3288:
  6402  1469  1283               	bcf	3,5	;RP0=0, select bank0
  6403  146A  1303               	bcf	3,6	;RP1=0, select bank0
  6404  146B  0821               	movf	___wmul@product+1,w
  6405  146C  00F4               	movwf	?___wmul+1
  6406  146D  0820               	movf	___wmul@product,w
  6407  146E  00F3               	movwf	?___wmul
  6408  146F                     l349:
  6409  146F  0008               	return
  6410  1470                     __end_of___wmul:
  6411                           
  6412                           	psect	text20
  6413  1512                     __ptext20:	
  6414 ;; *************** function ___lwmod *****************
  6415 ;; Defined at:
  6416 ;;		line 5 in file "D:\Programas\XC8 compiler\pic\sources\c90\common\lwmod.c"
  6417 ;; Parameters:    Size  Location     Type
  6418 ;;  divisor         2    3[BANK0 ] unsigned int 
  6419 ;;  dividend        2    5[BANK0 ] unsigned int 
  6420 ;; Auto vars:     Size  Location     Type
  6421 ;;  counter         1    8[BANK0 ] unsigned char 
  6422 ;; Return value:  Size  Location     Type
  6423 ;;                  2    3[BANK0 ] unsigned int 
  6424 ;; Registers used:
  6425 ;;		wreg, status,2, status,0
  6426 ;; Tracked objects:
  6427 ;;		On entry : 0/0
  6428 ;;		On exit  : 0/0
  6429 ;;		Unchanged: 0/0
  6430 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6431 ;;      Params:         0       4       0       0       0
  6432 ;;      Locals:         0       1       0       0       0
  6433 ;;      Temps:          0       1       0       0       0
  6434 ;;      Totals:         0       6       0       0       0
  6435 ;;Total ram usage:        6 bytes
  6436 ;; Hardware stack levels used: 1
  6437 ;; Hardware stack levels required when called: 1
  6438 ;; This function calls:
  6439 ;;		Nothing
  6440 ;; This function is called by:
  6441 ;;		_sprintf
  6442 ;; This function uses a non-reentrant model
  6443 ;;
  6444                           
  6445                           
  6446                           ;psect for function ___lwmod
  6447  1512                     ___lwmod:
  6448  1512                     l2166:	
  6449                           ;incstack = 0
  6450                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  6451                           
  6452  1512  1283               	bcf	3,5	;RP0=0, select bank0
  6453  1513  1303               	bcf	3,6	;RP1=0, select bank0
  6454  1514  0823               	movf	___lwmod@divisor,w
  6455  1515  0424               	iorwf	___lwmod@divisor+1,w
  6456  1516  1903               	btfsc	3,2
  6457  1517  2D19               	goto	u2231
  6458  1518  2D1A               	goto	u2230
  6459  1519                     u2231:
  6460  1519  2D49               	goto	l2184
  6461  151A                     u2230:
  6462  151A                     l2168:
  6463  151A  01A8               	clrf	___lwmod@counter
  6464  151B  0AA8               	incf	___lwmod@counter,f
  6465  151C  2D28               	goto	l2174
  6466  151D                     l2170:
  6467  151D  3001               	movlw	1
  6468  151E                     u2245:
  6469  151E  1003               	clrc
  6470  151F  0DA3               	rlf	___lwmod@divisor,f
  6471  1520  0DA4               	rlf	___lwmod@divisor+1,f
  6472  1521  3EFF               	addlw	-1
  6473  1522  1D03               	skipz
  6474  1523  2D1E               	goto	u2245
  6475  1524                     l2172:
  6476  1524  3001               	movlw	1
  6477  1525  00A7               	movwf	??___lwmod
  6478  1526  0827               	movf	??___lwmod,w
  6479  1527  07A8               	addwf	___lwmod@counter,f
  6480  1528                     l2174:
  6481  1528  1FA4               	btfss	___lwmod@divisor+1,7
  6482  1529  2D2B               	goto	u2251
  6483  152A  2D2C               	goto	u2250
  6484  152B                     u2251:
  6485  152B  2D1D               	goto	l2170
  6486  152C                     u2250:
  6487  152C                     l2176:
  6488  152C  0824               	movf	___lwmod@divisor+1,w
  6489  152D  0226               	subwf	___lwmod@dividend+1,w
  6490  152E  1D03               	skipz
  6491  152F  2D32               	goto	u2265
  6492  1530  0823               	movf	___lwmod@divisor,w
  6493  1531  0225               	subwf	___lwmod@dividend,w
  6494  1532                     u2265:
  6495  1532  1C03               	skipc
  6496  1533  2D35               	goto	u2261
  6497  1534  2D36               	goto	u2260
  6498  1535                     u2261:
  6499  1535  2D3C               	goto	l2180
  6500  1536                     u2260:
  6501  1536                     l2178:
  6502  1536  0823               	movf	___lwmod@divisor,w
  6503  1537  02A5               	subwf	___lwmod@dividend,f
  6504  1538  0824               	movf	___lwmod@divisor+1,w
  6505  1539  1C03               	skipc
  6506  153A  03A6               	decf	___lwmod@dividend+1,f
  6507  153B  02A6               	subwf	___lwmod@dividend+1,f
  6508  153C                     l2180:
  6509  153C  3001               	movlw	1
  6510  153D                     u2275:
  6511  153D  1003               	clrc
  6512  153E  0CA4               	rrf	___lwmod@divisor+1,f
  6513  153F  0CA3               	rrf	___lwmod@divisor,f
  6514  1540  3EFF               	addlw	-1
  6515  1541  1D03               	skipz
  6516  1542  2D3D               	goto	u2275
  6517  1543                     l2182:
  6518  1543  3001               	movlw	1
  6519  1544  02A8               	subwf	___lwmod@counter,f
  6520  1545  1D03               	btfss	3,2
  6521  1546  2D48               	goto	u2281
  6522  1547  2D49               	goto	u2280
  6523  1548                     u2281:
  6524  1548  2D2C               	goto	l2176
  6525  1549                     u2280:
  6526  1549                     l2184:
  6527  1549  0826               	movf	___lwmod@dividend+1,w
  6528  154A  00A4               	movwf	?___lwmod+1
  6529  154B  0825               	movf	___lwmod@dividend,w
  6530  154C  00A3               	movwf	?___lwmod
  6531  154D                     l629:
  6532  154D  0008               	return
  6533  154E                     __end_of___lwmod:
  6534                           
  6535                           	psect	text21
  6536  1617                     __ptext21:	
  6537 ;; *************** function ___lwdiv *****************
  6538 ;; Defined at:
  6539 ;;		line 5 in file "D:\Programas\XC8 compiler\pic\sources\c90\common\lwdiv.c"
  6540 ;; Parameters:    Size  Location     Type
  6541 ;;  divisor         2    3[COMMON] unsigned int 
  6542 ;;  dividend        2    5[COMMON] unsigned int 
  6543 ;; Auto vars:     Size  Location     Type
  6544 ;;  quotient        2    1[BANK0 ] unsigned int 
  6545 ;;  counter         1    0[BANK0 ] unsigned char 
  6546 ;; Return value:  Size  Location     Type
  6547 ;;                  2    3[COMMON] unsigned int 
  6548 ;; Registers used:
  6549 ;;		wreg, status,2, status,0
  6550 ;; Tracked objects:
  6551 ;;		On entry : 0/0
  6552 ;;		On exit  : 0/0
  6553 ;;		Unchanged: 0/0
  6554 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6555 ;;      Params:         4       0       0       0       0
  6556 ;;      Locals:         0       3       0       0       0
  6557 ;;      Temps:          1       0       0       0       0
  6558 ;;      Totals:         5       3       0       0       0
  6559 ;;Total ram usage:        8 bytes
  6560 ;; Hardware stack levels used: 1
  6561 ;; Hardware stack levels required when called: 1
  6562 ;; This function calls:
  6563 ;;		Nothing
  6564 ;; This function is called by:
  6565 ;;		_sprintf
  6566 ;; This function uses a non-reentrant model
  6567 ;;
  6568                           
  6569                           
  6570                           ;psect for function ___lwdiv
  6571  1617                     ___lwdiv:
  6572  1617                     l3304:	
  6573                           ;incstack = 0
  6574                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  6575                           
  6576  1617  1283               	bcf	3,5	;RP0=0, select bank0
  6577  1618  1303               	bcf	3,6	;RP1=0, select bank0
  6578  1619  01A1               	clrf	___lwdiv@quotient
  6579  161A  01A2               	clrf	___lwdiv@quotient+1
  6580  161B                     l3306:
  6581  161B  0873               	movf	___lwdiv@divisor,w
  6582  161C  0474               	iorwf	___lwdiv@divisor+1,w
  6583  161D  1903               	btfsc	3,2
  6584  161E  2E20               	goto	u4131
  6585  161F  2E21               	goto	u4130
  6586  1620                     u4131:
  6587  1620  2E58               	goto	l3326
  6588  1621                     u4130:
  6589  1621                     l3308:
  6590  1621  01A0               	clrf	___lwdiv@counter
  6591  1622  0AA0               	incf	___lwdiv@counter,f
  6592  1623  2E2F               	goto	l3314
  6593  1624                     l3310:
  6594  1624  3001               	movlw	1
  6595  1625                     u4145:
  6596  1625  1003               	clrc
  6597  1626  0DF3               	rlf	___lwdiv@divisor,f
  6598  1627  0DF4               	rlf	___lwdiv@divisor+1,f
  6599  1628  3EFF               	addlw	-1
  6600  1629  1D03               	skipz
  6601  162A  2E25               	goto	u4145
  6602  162B                     l3312:
  6603  162B  3001               	movlw	1
  6604  162C  00F7               	movwf	??___lwdiv
  6605  162D  0877               	movf	??___lwdiv,w
  6606  162E  07A0               	addwf	___lwdiv@counter,f
  6607  162F                     l3314:
  6608  162F  1FF4               	btfss	___lwdiv@divisor+1,7
  6609  1630  2E32               	goto	u4151
  6610  1631  2E33               	goto	u4150
  6611  1632                     u4151:
  6612  1632  2E24               	goto	l3310
  6613  1633                     u4150:
  6614  1633                     l3316:
  6615  1633  3001               	movlw	1
  6616  1634                     u4165:
  6617  1634  1003               	clrc
  6618  1635  0DA1               	rlf	___lwdiv@quotient,f
  6619  1636  0DA2               	rlf	___lwdiv@quotient+1,f
  6620  1637  3EFF               	addlw	-1
  6621  1638  1D03               	skipz
  6622  1639  2E34               	goto	u4165
  6623  163A  0874               	movf	___lwdiv@divisor+1,w
  6624  163B  0276               	subwf	___lwdiv@dividend+1,w
  6625  163C  1D03               	skipz
  6626  163D  2E40               	goto	u4175
  6627  163E  0873               	movf	___lwdiv@divisor,w
  6628  163F  0275               	subwf	___lwdiv@dividend,w
  6629  1640                     u4175:
  6630  1640  1C03               	skipc
  6631  1641  2E43               	goto	u4171
  6632  1642  2E44               	goto	u4170
  6633  1643                     u4171:
  6634  1643  2E4B               	goto	l3322
  6635  1644                     u4170:
  6636  1644                     l3318:
  6637  1644  0873               	movf	___lwdiv@divisor,w
  6638  1645  02F5               	subwf	___lwdiv@dividend,f
  6639  1646  0874               	movf	___lwdiv@divisor+1,w
  6640  1647  1C03               	skipc
  6641  1648  03F6               	decf	___lwdiv@dividend+1,f
  6642  1649  02F6               	subwf	___lwdiv@dividend+1,f
  6643  164A                     l3320:
  6644  164A  1421               	bsf	___lwdiv@quotient,0
  6645  164B                     l3322:
  6646  164B  3001               	movlw	1
  6647  164C                     u4185:
  6648  164C  1003               	clrc
  6649  164D  0CF4               	rrf	___lwdiv@divisor+1,f
  6650  164E  0CF3               	rrf	___lwdiv@divisor,f
  6651  164F  3EFF               	addlw	-1
  6652  1650  1D03               	skipz
  6653  1651  2E4C               	goto	u4185
  6654  1652                     l3324:
  6655  1652  3001               	movlw	1
  6656  1653  02A0               	subwf	___lwdiv@counter,f
  6657  1654  1D03               	btfss	3,2
  6658  1655  2E57               	goto	u4191
  6659  1656  2E58               	goto	u4190
  6660  1657                     u4191:
  6661  1657  2E33               	goto	l3316
  6662  1658                     u4190:
  6663  1658                     l3326:
  6664  1658  0822               	movf	___lwdiv@quotient+1,w
  6665  1659  00F4               	movwf	?___lwdiv+1
  6666  165A  0821               	movf	___lwdiv@quotient,w
  6667  165B  00F3               	movwf	?___lwdiv
  6668  165C                     l619:
  6669  165C  0008               	return
  6670  165D                     __end_of___lwdiv:
  6671                           
  6672                           	psect	text22
  6673  14D9                     __ptext22:	
  6674 ;; *************** function _LCD_Print *****************
  6675 ;; Defined at:
  6676 ;;		line 95 in file "./LCD_Lib.c"
  6677 ;; Parameters:    Size  Location     Type
  6678 ;;  LCD_Str         1    wreg     PTR unsigned char 
  6679 ;;		 -> LCD_Cstring(16), 
  6680 ;; Auto vars:     Size  Location     Type
  6681 ;;  LCD_Str         1    1[BANK0 ] PTR unsigned char 
  6682 ;;		 -> LCD_Cstring(16), 
  6683 ;;  i               1    0[BANK0 ] unsigned char 
  6684 ;; Return value:  Size  Location     Type
  6685 ;;                  1    wreg      void 
  6686 ;; Registers used:
  6687 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6688 ;; Tracked objects:
  6689 ;;		On entry : 0/0
  6690 ;;		On exit  : 0/0
  6691 ;;		Unchanged: 0/0
  6692 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6693 ;;      Params:         0       0       0       0       0
  6694 ;;      Locals:         0       2       0       0       0
  6695 ;;      Temps:          2       0       0       0       0
  6696 ;;      Totals:         2       2       0       0       0
  6697 ;;Total ram usage:        4 bytes
  6698 ;; Hardware stack levels used: 1
  6699 ;; Hardware stack levels required when called: 2
  6700 ;; This function calls:
  6701 ;;		_LCD_Write_Nibble
  6702 ;; This function is called by:
  6703 ;;		_imprime_tela_main
  6704 ;;		_imprime_tela_ajuste1
  6705 ;;		_imprime_tela_ajuste2
  6706 ;;		_imprime_tela_ajuste3
  6707 ;;		_imprime_tela_ajuste4
  6708 ;; This function uses a non-reentrant model
  6709 ;;
  6710                           
  6711                           
  6712                           ;psect for function _LCD_Print
  6713  14D9                     _LCD_Print:
  6714                           
  6715                           ;incstack = 0
  6716                           ; Regs used in _LCD_Print: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6717                           ;LCD_Print@LCD_Str stored from wreg
  6718  14D9  1283               	bcf	3,5	;RP0=0, select bank0
  6719  14DA  1303               	bcf	3,6	;RP1=0, select bank0
  6720  14DB  00A1               	movwf	LCD_Print@LCD_Str
  6721  14DC                     l3348:
  6722                           
  6723                           ;./LCD_Lib.c: 95: void LCD_Print(char* LCD_Str);./LCD_Lib.c: 96: {;./LCD_Lib.c: 97:   ui
      +                          nt8_t i = 0;
  6724  14DC  01A0               	clrf	LCD_Print@i
  6725  14DD                     l3350:
  6726                           
  6727                           ;./LCD_Lib.c: 98:   RS = 1;
  6728  14DD  147A               	bsf	_RS/(0+8),_RS& (0+7)
  6729                           
  6730                           ;./LCD_Lib.c: 99:   while(LCD_Str[i] != '\0')
  6731  14DE  2D06               	goto	l3356
  6732  14DF                     l3352:
  6733                           
  6734                           ;./LCD_Lib.c: 100:   {;./LCD_Lib.c: 101:     LCD_Write_Nibble(LCD_Str[i] >> 4);
  6735  14DF  0820               	movf	LCD_Print@i,w
  6736  14E0  0721               	addwf	LCD_Print@LCD_Str,w
  6737  14E1  00F6               	movwf	??_LCD_Print
  6738  14E2  0876               	movf	??_LCD_Print,w
  6739  14E3  0084               	movwf	4
  6740  14E4  0800               	movf	0,w
  6741  14E5  00F7               	movwf	??_LCD_Print+1
  6742  14E6  3004               	movlw	4
  6743  14E7                     u4205:
  6744  14E7  1003               	clrc
  6745  14E8  0CF7               	rrf	??_LCD_Print+1,f
  6746  14E9  3EFF               	addlw	-1
  6747  14EA  1D03               	skipz
  6748  14EB  2CE7               	goto	u4205
  6749  14EC  0877               	movf	??_LCD_Print+1,w
  6750  14ED  160A  118A  26FD  160A  118A  	fcall	_LCD_Write_Nibble
  6751                           
  6752                           ;./LCD_Lib.c: 102:     LCD_Write_Nibble(LCD_Str[i++] );
  6753  14F2  1283               	bcf	3,5	;RP0=0, select bank0
  6754  14F3  1303               	bcf	3,6	;RP1=0, select bank0
  6755  14F4  0820               	movf	LCD_Print@i,w
  6756  14F5  0721               	addwf	LCD_Print@LCD_Str,w
  6757  14F6  00F6               	movwf	??_LCD_Print
  6758  14F7  0876               	movf	??_LCD_Print,w
  6759  14F8  0084               	movwf	4
  6760  14F9  1383               	bcf	3,7	;select IRP bank0
  6761  14FA  0800               	movf	0,w
  6762  14FB  160A  118A  26FD  160A  118A  	fcall	_LCD_Write_Nibble
  6763  1500                     l3354:
  6764  1500  3001               	movlw	1
  6765  1501  00F6               	movwf	??_LCD_Print
  6766  1502  0876               	movf	??_LCD_Print,w
  6767  1503  1283               	bcf	3,5	;RP0=0, select bank0
  6768  1504  1303               	bcf	3,6	;RP1=0, select bank0
  6769  1505  07A0               	addwf	LCD_Print@i,f
  6770  1506                     l3356:
  6771                           
  6772                           ;./LCD_Lib.c: 99:   while(LCD_Str[i] != '\0')
  6773  1506  0820               	movf	LCD_Print@i,w
  6774  1507  0721               	addwf	LCD_Print@LCD_Str,w
  6775  1508  00F6               	movwf	??_LCD_Print
  6776  1509  0876               	movf	??_LCD_Print,w
  6777  150A  0084               	movwf	4
  6778  150B  1383               	bcf	3,7	;select IRP bank0
  6779  150C  0800               	movf	0,w
  6780  150D  1D03               	btfss	3,2
  6781  150E  2D10               	goto	u4211
  6782  150F  2D11               	goto	u4210
  6783  1510                     u4211:
  6784  1510  2CDF               	goto	l3352
  6785  1511                     u4210:
  6786  1511                     l81:
  6787  1511  0008               	return
  6788  1512                     __end_of_LCD_Print:
  6789                           
  6790                           	psect	text23
  6791  14A1                     __ptext23:	
  6792 ;; *************** function _LCD_Goto *****************
  6793 ;; Defined at:
  6794 ;;		line 69 in file "./LCD_Lib.c"
  6795 ;; Parameters:    Size  Location     Type
  6796 ;;  col             1    wreg     unsigned char 
  6797 ;;  row             1    1[BANK0 ] unsigned char 
  6798 ;; Auto vars:     Size  Location     Type
  6799 ;;  col             1    4[BANK0 ] unsigned char 
  6800 ;; Return value:  Size  Location     Type
  6801 ;;                  1    wreg      void 
  6802 ;; Registers used:
  6803 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6804 ;; Tracked objects:
  6805 ;;		On entry : 0/0
  6806 ;;		On exit  : 0/0
  6807 ;;		Unchanged: 0/0
  6808 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6809 ;;      Params:         0       1       0       0       0
  6810 ;;      Locals:         0       1       0       0       0
  6811 ;;      Temps:          0       2       0       0       0
  6812 ;;      Totals:         0       4       0       0       0
  6813 ;;Total ram usage:        4 bytes
  6814 ;; Hardware stack levels used: 1
  6815 ;; Hardware stack levels required when called: 3
  6816 ;; This function calls:
  6817 ;;		_LCD_Cmd
  6818 ;; This function is called by:
  6819 ;;		_imprime_tela_main
  6820 ;;		_imprime_tela_ajuste1
  6821 ;;		_imprime_tela_ajuste2
  6822 ;;		_imprime_tela_ajuste3
  6823 ;;		_imprime_tela_ajuste4
  6824 ;; This function uses a non-reentrant model
  6825 ;;
  6826                           
  6827                           
  6828                           ;psect for function _LCD_Goto
  6829  14A1                     _LCD_Goto:
  6830                           
  6831                           ;incstack = 0
  6832                           ; Regs used in _LCD_Goto: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6833                           ;LCD_Goto@col stored from wreg
  6834  14A1  1283               	bcf	3,5	;RP0=0, select bank0
  6835  14A2  1303               	bcf	3,6	;RP1=0, select bank0
  6836  14A3  00A4               	movwf	LCD_Goto@col
  6837  14A4                     l3330:
  6838                           
  6839                           ;./LCD_Lib.c: 69: void LCD_Goto(uint8_t col, uint8_t row);./LCD_Lib.c: 70: {;./LCD_Lib.c
      +                          : 71:   switch(row)
  6840  14A4  2CC5               	goto	l3340
  6841  14A5                     l3332:
  6842                           
  6843                           ;./LCD_Lib.c: 74:       LCD_Cmd(0xC0 + col - 1);
  6844  14A5  0824               	movf	LCD_Goto@col,w
  6845  14A6  3EBF               	addlw	191
  6846  14A7  160A  118A  2470  160A  118A  	fcall	_LCD_Cmd
  6847                           
  6848                           ;./LCD_Lib.c: 75:       break;
  6849  14AC  2CD8               	goto	l72
  6850  14AD                     l3334:
  6851                           
  6852                           ;./LCD_Lib.c: 77:       LCD_Cmd(0x94 + col - 1);
  6853  14AD  0824               	movf	LCD_Goto@col,w
  6854  14AE  3E93               	addlw	147
  6855  14AF  160A  118A  2470  160A  118A  	fcall	_LCD_Cmd
  6856                           
  6857                           ;./LCD_Lib.c: 78:       break;
  6858  14B4  2CD8               	goto	l72
  6859  14B5                     l3336:
  6860                           
  6861                           ;./LCD_Lib.c: 80:       LCD_Cmd(0xD4 + col - 1);
  6862  14B5  0824               	movf	LCD_Goto@col,w
  6863  14B6  3ED3               	addlw	211
  6864  14B7  160A  118A  2470  160A  118A  	fcall	_LCD_Cmd
  6865                           
  6866                           ;./LCD_Lib.c: 81:     break;
  6867  14BC  2CD8               	goto	l72
  6868  14BD                     l3338:
  6869                           
  6870                           ;./LCD_Lib.c: 83:       LCD_Cmd(0x80 + col - 1);
  6871  14BD  0824               	movf	LCD_Goto@col,w
  6872  14BE  3E7F               	addlw	127
  6873  14BF  160A  118A  2470  160A  118A  	fcall	_LCD_Cmd
  6874                           
  6875                           ;./LCD_Lib.c: 84:   }
  6876  14C4  2CD8               	goto	l72
  6877  14C5                     l3340:
  6878  14C5  0821               	movf	LCD_Goto@row,w
  6879  14C6  00A2               	movwf	??_LCD_Goto
  6880  14C7  01A3               	clrf	??_LCD_Goto+1
  6881                           
  6882                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6883                           ; Switch size 1, requested type "simple"
  6884                           ; Number of cases is 1, Range of values is 0 to 0
  6885                           ; switch strategies available:
  6886                           ; Name         Instructions Cycles
  6887                           ; simple_byte            4     3 (average)
  6888                           ; direct_byte           11     8 (fixed)
  6889                           ; jumptable            260     6 (fixed)
  6890                           ;	Chosen strategy is simple_byte
  6891  14C8  0823               	movf	??_LCD_Goto+1,w
  6892  14C9  3A00               	xorlw	0	; case 0
  6893  14CA  1903               	skipnz
  6894  14CB  2CCD               	goto	l3880
  6895  14CC  2CBD               	goto	l3338
  6896  14CD                     l3880:
  6897                           
  6898                           ; Switch size 1, requested type "simple"
  6899                           ; Number of cases is 3, Range of values is 2 to 4
  6900                           ; switch strategies available:
  6901                           ; Name         Instructions Cycles
  6902                           ; simple_byte           10     6 (average)
  6903                           ; direct_byte           20    11 (fixed)
  6904                           ; jumptable            263     9 (fixed)
  6905                           ;	Chosen strategy is simple_byte
  6906  14CD  0822               	movf	??_LCD_Goto,w
  6907  14CE  3A02               	xorlw	2	; case 2
  6908  14CF  1903               	skipnz
  6909  14D0  2CA5               	goto	l3332
  6910  14D1  3A01               	xorlw	1	; case 3
  6911  14D2  1903               	skipnz
  6912  14D3  2CAD               	goto	l3334
  6913  14D4  3A07               	xorlw	7	; case 4
  6914  14D5  1903               	skipnz
  6915  14D6  2CB5               	goto	l3336
  6916  14D7  2CBD               	goto	l3338
  6917  14D8                     l72:
  6918  14D8  0008               	return
  6919  14D9                     __end_of_LCD_Goto:
  6920                           
  6921                           	psect	text24
  6922  05B3                     __ptext24:	
  6923 ;; *************** function ___fldiv *****************
  6924 ;; Defined at:
  6925 ;;		line 8 in file "D:\Programas\XC8 compiler\pic\sources\c90\common\sprcdiv.c"
  6926 ;; Parameters:    Size  Location     Type
  6927 ;;  a               4   10[BANK0 ] void 
  6928 ;;  b               4   14[BANK0 ] void 
  6929 ;; Auto vars:     Size  Location     Type
  6930 ;;  grs             4   30[BANK0 ] unsigned long 
  6931 ;;  rem             4   23[BANK0 ] unsigned long 
  6932 ;;  new_exp         2   28[BANK0 ] int 
  6933 ;;  aexp            1   35[BANK0 ] unsigned char 
  6934 ;;  bexp            1   34[BANK0 ] unsigned char 
  6935 ;;  sign            1   27[BANK0 ] unsigned char 
  6936 ;; Return value:  Size  Location     Type
  6937 ;;                  4   10[BANK0 ] unsigned char 
  6938 ;; Registers used:
  6939 ;;		wreg, status,2, status,0, btemp+1
  6940 ;; Tracked objects:
  6941 ;;		On entry : 0/0
  6942 ;;		On exit  : 0/0
  6943 ;;		Unchanged: 0/0
  6944 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6945 ;;      Params:         0       8       0       0       0
  6946 ;;      Locals:         0      13       0       0       0
  6947 ;;      Temps:          0       5       0       0       0
  6948 ;;      Totals:         0      26       0       0       0
  6949 ;;Total ram usage:       26 bytes
  6950 ;; Hardware stack levels used: 1
  6951 ;; Hardware stack levels required when called: 1
  6952 ;; This function calls:
  6953 ;;		Nothing
  6954 ;; This function is called by:
  6955 ;;		_main
  6956 ;; This function uses a non-reentrant model
  6957 ;;
  6958                           
  6959                           
  6960                           ;psect for function ___fldiv
  6961  05B3                     ___fldiv:
  6962  05B3                     l2964:	
  6963                           ;incstack = 0
  6964                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  6965                           
  6966  05B3  1283               	bcf	3,5	;RP0=0, select bank0
  6967  05B4  1303               	bcf	3,6	;RP1=0, select bank0
  6968  05B5  0831               	movf	___fldiv@b+3,w
  6969  05B6  3980               	andlw	128
  6970  05B7  00B2               	movwf	??___fldiv
  6971  05B8  0832               	movf	??___fldiv,w
  6972  05B9  00BB               	movwf	___fldiv@sign
  6973  05BA                     l2966:
  6974  05BA  0831               	movf	___fldiv@b+3,w
  6975  05BB  00B2               	movwf	??___fldiv
  6976  05BC  0732               	addwf	??___fldiv,w
  6977  05BD  00B3               	movwf	??___fldiv+1
  6978  05BE  0833               	movf	??___fldiv+1,w
  6979  05BF  00C2               	movwf	___fldiv@bexp
  6980  05C0                     l2968:
  6981  05C0  1FB0               	btfss	___fldiv@b+2,7
  6982  05C1  2DC3               	goto	u3601
  6983  05C2  2DC4               	goto	u3600
  6984  05C3                     u3601:
  6985  05C3  2DC5               	goto	l2972
  6986  05C4                     u3600:
  6987  05C4                     l2970:
  6988  05C4  1442               	bsf	___fldiv@bexp,0
  6989  05C5                     l2972:
  6990  05C5  0842               	movf	___fldiv@bexp,w
  6991  05C6  1903               	btfsc	3,2
  6992  05C7  2DC9               	goto	u3611
  6993  05C8  2DCA               	goto	u3610
  6994  05C9                     u3611:
  6995  05C9  2DDA               	goto	l2982
  6996  05CA                     u3610:
  6997  05CA                     l2974:
  6998  05CA  0A42               	incf	___fldiv@bexp,w
  6999  05CB  1D03               	btfss	3,2
  7000  05CC  2DCE               	goto	u3621
  7001  05CD  2DCF               	goto	u3620
  7002  05CE                     u3621:
  7003  05CE  2DD7               	goto	l2978
  7004  05CF                     u3620:
  7005  05CF                     l2976:
  7006  05CF  3000               	movlw	0
  7007  05D0  00B1               	movwf	___fldiv@b+3
  7008  05D1  3000               	movlw	0
  7009  05D2  00B0               	movwf	___fldiv@b+2
  7010  05D3  3000               	movlw	0
  7011  05D4  00AF               	movwf	___fldiv@b+1
  7012  05D5  3000               	movlw	0
  7013  05D6  00AE               	movwf	___fldiv@b
  7014  05D7                     l2978:
  7015  05D7  17B0               	bsf	___fldiv@b+2,7
  7016  05D8                     l2980:
  7017  05D8  01B1               	clrf	___fldiv@b+3
  7018  05D9  2DE2               	goto	l2984
  7019  05DA                     l2982:
  7020  05DA  3000               	movlw	0
  7021  05DB  00B1               	movwf	___fldiv@b+3
  7022  05DC  3000               	movlw	0
  7023  05DD  00B0               	movwf	___fldiv@b+2
  7024  05DE  3000               	movlw	0
  7025  05DF  00AF               	movwf	___fldiv@b+1
  7026  05E0  3000               	movlw	0
  7027  05E1  00AE               	movwf	___fldiv@b
  7028  05E2                     l2984:
  7029  05E2  082D               	movf	___fldiv@a+3,w
  7030  05E3  3980               	andlw	128
  7031  05E4  00B2               	movwf	??___fldiv
  7032  05E5  0832               	movf	??___fldiv,w
  7033  05E6  06BB               	xorwf	___fldiv@sign,f
  7034  05E7                     l2986:
  7035  05E7  082D               	movf	___fldiv@a+3,w
  7036  05E8  00B2               	movwf	??___fldiv
  7037  05E9  0732               	addwf	??___fldiv,w
  7038  05EA  00B3               	movwf	??___fldiv+1
  7039  05EB  0833               	movf	??___fldiv+1,w
  7040  05EC  00C3               	movwf	___fldiv@aexp
  7041  05ED                     l2988:
  7042  05ED  1FAC               	btfss	___fldiv@a+2,7
  7043  05EE  2DF0               	goto	u3631
  7044  05EF  2DF1               	goto	u3630
  7045  05F0                     u3631:
  7046  05F0  2DF2               	goto	l2992
  7047  05F1                     u3630:
  7048  05F1                     l2990:
  7049  05F1  1443               	bsf	___fldiv@aexp,0
  7050  05F2                     l2992:
  7051  05F2  0843               	movf	___fldiv@aexp,w
  7052  05F3  1903               	btfsc	3,2
  7053  05F4  2DF6               	goto	u3641
  7054  05F5  2DF7               	goto	u3640
  7055  05F6                     u3641:
  7056  05F6  2E07               	goto	l3002
  7057  05F7                     u3640:
  7058  05F7                     l2994:
  7059  05F7  0A43               	incf	___fldiv@aexp,w
  7060  05F8  1D03               	btfss	3,2
  7061  05F9  2DFB               	goto	u3651
  7062  05FA  2DFC               	goto	u3650
  7063  05FB                     u3651:
  7064  05FB  2E04               	goto	l2998
  7065  05FC                     u3650:
  7066  05FC                     l2996:
  7067  05FC  3000               	movlw	0
  7068  05FD  00AD               	movwf	___fldiv@a+3
  7069  05FE  3000               	movlw	0
  7070  05FF  00AC               	movwf	___fldiv@a+2
  7071  0600  3000               	movlw	0
  7072  0601  00AB               	movwf	___fldiv@a+1
  7073  0602  3000               	movlw	0
  7074  0603  00AA               	movwf	___fldiv@a
  7075  0604                     l2998:
  7076  0604  17AC               	bsf	___fldiv@a+2,7
  7077  0605                     l3000:
  7078  0605  01AD               	clrf	___fldiv@a+3
  7079  0606  2E0F               	goto	l696
  7080  0607                     l3002:
  7081  0607  3000               	movlw	0
  7082  0608  00AD               	movwf	___fldiv@a+3
  7083  0609  3000               	movlw	0
  7084  060A  00AC               	movwf	___fldiv@a+2
  7085  060B  3000               	movlw	0
  7086  060C  00AB               	movwf	___fldiv@a+1
  7087  060D  3000               	movlw	0
  7088  060E  00AA               	movwf	___fldiv@a
  7089  060F                     l696:
  7090  060F  082D               	movf	___fldiv@a+3,w
  7091  0610  042C               	iorwf	___fldiv@a+2,w
  7092  0611  042B               	iorwf	___fldiv@a+1,w
  7093  0612  042A               	iorwf	___fldiv@a,w
  7094  0613  1D03               	skipz
  7095  0614  2E16               	goto	u3661
  7096  0615  2E17               	goto	u3660
  7097  0616                     u3661:
  7098  0616  2E30               	goto	l3012
  7099  0617                     u3660:
  7100  0617                     l3004:
  7101  0617  3000               	movlw	0
  7102  0618  00B1               	movwf	___fldiv@b+3
  7103  0619  3000               	movlw	0
  7104  061A  00B0               	movwf	___fldiv@b+2
  7105  061B  3000               	movlw	0
  7106  061C  00AF               	movwf	___fldiv@b+1
  7107  061D  3000               	movlw	0
  7108  061E  00AE               	movwf	___fldiv@b
  7109  061F  3080               	movlw	128
  7110  0620  04B0               	iorwf	___fldiv@b+2,f
  7111  0621  307F               	movlw	127
  7112  0622  04B1               	iorwf	___fldiv@b+3,f
  7113  0623                     l3006:
  7114  0623  083B               	movf	___fldiv@sign,w
  7115  0624  00B2               	movwf	??___fldiv
  7116  0625  0832               	movf	??___fldiv,w
  7117  0626  04B1               	iorwf	___fldiv@b+3,f
  7118  0627                     l3008:
  7119  0627  0831               	movf	___fldiv@b+3,w
  7120  0628  00AD               	movwf	?___fldiv+3
  7121  0629  0830               	movf	___fldiv@b+2,w
  7122  062A  00AC               	movwf	?___fldiv+2
  7123  062B  082F               	movf	___fldiv@b+1,w
  7124  062C  00AB               	movwf	?___fldiv+1
  7125  062D  082E               	movf	___fldiv@b,w
  7126  062E  00AA               	movwf	?___fldiv
  7127  062F  2F8F               	goto	l698
  7128  0630                     l3012:
  7129  0630  0842               	movf	___fldiv@bexp,w
  7130  0631  1D03               	btfss	3,2
  7131  0632  2E34               	goto	u3671
  7132  0633  2E35               	goto	u3670
  7133  0634                     u3671:
  7134  0634  2E3E               	goto	l3018
  7135  0635                     u3670:
  7136  0635                     l3014:
  7137  0635  3000               	movlw	0
  7138  0636  00AD               	movwf	?___fldiv+3
  7139  0637  3000               	movlw	0
  7140  0638  00AC               	movwf	?___fldiv+2
  7141  0639  3000               	movlw	0
  7142  063A  00AB               	movwf	?___fldiv+1
  7143  063B  3000               	movlw	0
  7144  063C  00AA               	movwf	?___fldiv
  7145  063D  2F8F               	goto	l698
  7146  063E                     l3018:
  7147  063E  0842               	movf	___fldiv@bexp,w
  7148  063F  00B2               	movwf	??___fldiv
  7149  0640  01B3               	clrf	??___fldiv+1
  7150  0641  0833               	movf	??___fldiv+1,w
  7151  0642  00B5               	movwf	??___fldiv+3
  7152  0643  0843               	movf	___fldiv@aexp,w
  7153  0644  0232               	subwf	??___fldiv,w
  7154  0645  00B4               	movwf	??___fldiv+2
  7155  0646  1C03               	skipc
  7156  0647  03B5               	decf	??___fldiv+3,f
  7157  0648  0834               	movf	??___fldiv+2,w
  7158  0649  3E7F               	addlw	127
  7159  064A  00BC               	movwf	___fldiv@new_exp
  7160  064B  0835               	movf	??___fldiv+3,w
  7161  064C  1803               	skipnc
  7162  064D  3E01               	addlw	1
  7163  064E  3E00               	addlw	0
  7164  064F  00BD               	movwf	___fldiv@new_exp+1
  7165  0650                     l3020:
  7166  0650  0831               	movf	___fldiv@b+3,w
  7167  0651  00BA               	movwf	___fldiv@rem+3
  7168  0652  0830               	movf	___fldiv@b+2,w
  7169  0653  00B9               	movwf	___fldiv@rem+2
  7170  0654  082F               	movf	___fldiv@b+1,w
  7171  0655  00B8               	movwf	___fldiv@rem+1
  7172  0656  082E               	movf	___fldiv@b,w
  7173  0657  00B7               	movwf	___fldiv@rem
  7174  0658                     l3022:
  7175  0658  3000               	movlw	0
  7176  0659  00B1               	movwf	___fldiv@b+3
  7177  065A  3000               	movlw	0
  7178  065B  00B0               	movwf	___fldiv@b+2
  7179  065C  3000               	movlw	0
  7180  065D  00AF               	movwf	___fldiv@b+1
  7181  065E  3000               	movlw	0
  7182  065F  00AE               	movwf	___fldiv@b
  7183  0660                     l3024:
  7184  0660  3000               	movlw	0
  7185  0661  00C1               	movwf	___fldiv@grs+3
  7186  0662  3000               	movlw	0
  7187  0663  00C0               	movwf	___fldiv@grs+2
  7188  0664  3000               	movlw	0
  7189  0665  00BF               	movwf	___fldiv@grs+1
  7190  0666  3000               	movlw	0
  7191  0667  00BE               	movwf	___fldiv@grs
  7192  0668                     l3026:
  7193  0668  01C3               	clrf	___fldiv@aexp
  7194  0669  2EB4               	goto	l3046
  7195  066A                     l3028:
  7196  066A  0843               	movf	___fldiv@aexp,w
  7197  066B  1903               	btfsc	3,2
  7198  066C  2E6E               	goto	u3681
  7199  066D  2E6F               	goto	u3680
  7200  066E                     u3681:
  7201  066E  2E8F               	goto	l3038
  7202  066F                     u3680:
  7203  066F                     l3030:
  7204  066F  3001               	movlw	1
  7205  0670  00B2               	movwf	??___fldiv
  7206  0671                     u3695:
  7207  0671  1003               	clrc
  7208  0672  0DB7               	rlf	___fldiv@rem,f
  7209  0673  0DB8               	rlf	___fldiv@rem+1,f
  7210  0674  0DB9               	rlf	___fldiv@rem+2,f
  7211  0675  0DBA               	rlf	___fldiv@rem+3,f
  7212  0676  0BB2               	decfsz	??___fldiv,f
  7213  0677  2E71               	goto	u3695
  7214  0678  3001               	movlw	1
  7215  0679  00B2               	movwf	??___fldiv
  7216  067A                     u3705:
  7217  067A  1003               	clrc
  7218  067B  0DAE               	rlf	___fldiv@b,f
  7219  067C  0DAF               	rlf	___fldiv@b+1,f
  7220  067D  0DB0               	rlf	___fldiv@b+2,f
  7221  067E  0DB1               	rlf	___fldiv@b+3,f
  7222  067F  0BB2               	decfsz	??___fldiv,f
  7223  0680  2E7A               	goto	u3705
  7224  0681                     l3032:
  7225  0681  1FC1               	btfss	___fldiv@grs+3,7
  7226  0682  2E84               	goto	u3711
  7227  0683  2E85               	goto	u3710
  7228  0684                     u3711:
  7229  0684  2E86               	goto	l3036
  7230  0685                     u3710:
  7231  0685                     l3034:
  7232  0685  142E               	bsf	___fldiv@b,0
  7233  0686                     l3036:
  7234  0686  3001               	movlw	1
  7235  0687  00B2               	movwf	??___fldiv
  7236  0688                     u3725:
  7237  0688  1003               	clrc
  7238  0689  0DBE               	rlf	___fldiv@grs,f
  7239  068A  0DBF               	rlf	___fldiv@grs+1,f
  7240  068B  0DC0               	rlf	___fldiv@grs+2,f
  7241  068C  0DC1               	rlf	___fldiv@grs+3,f
  7242  068D  0BB2               	decfsz	??___fldiv,f
  7243  068E  2E88               	goto	u3725
  7244  068F                     l3038:
  7245  068F  082D               	movf	___fldiv@a+3,w
  7246  0690  023A               	subwf	___fldiv@rem+3,w
  7247  0691  1D03               	skipz
  7248  0692  2E9D               	goto	u3735
  7249  0693  082C               	movf	___fldiv@a+2,w
  7250  0694  0239               	subwf	___fldiv@rem+2,w
  7251  0695  1D03               	skipz
  7252  0696  2E9D               	goto	u3735
  7253  0697  082B               	movf	___fldiv@a+1,w
  7254  0698  0238               	subwf	___fldiv@rem+1,w
  7255  0699  1D03               	skipz
  7256  069A  2E9D               	goto	u3735
  7257  069B  082A               	movf	___fldiv@a,w
  7258  069C  0237               	subwf	___fldiv@rem,w
  7259  069D                     u3735:
  7260  069D  1C03               	skipc
  7261  069E  2EA0               	goto	u3731
  7262  069F  2EA1               	goto	u3730
  7263  06A0                     u3731:
  7264  06A0  2EB0               	goto	l3044
  7265  06A1                     u3730:
  7266  06A1                     l3040:
  7267  06A1  1741               	bsf	___fldiv@grs+3,6
  7268  06A2                     l3042:
  7269  06A2  082A               	movf	___fldiv@a,w
  7270  06A3  02B7               	subwf	___fldiv@rem,f
  7271  06A4  082B               	movf	___fldiv@a+1,w
  7272  06A5  1C03               	skipc
  7273  06A6  0F2B               	incfsz	___fldiv@a+1,w
  7274  06A7  02B8               	subwf	___fldiv@rem+1,f
  7275  06A8  082C               	movf	___fldiv@a+2,w
  7276  06A9  1C03               	skipc
  7277  06AA  0F2C               	incfsz	___fldiv@a+2,w
  7278  06AB  02B9               	subwf	___fldiv@rem+2,f
  7279  06AC  082D               	movf	___fldiv@a+3,w
  7280  06AD  1C03               	skipc
  7281  06AE  0F2D               	incfsz	___fldiv@a+3,w
  7282  06AF  02BA               	subwf	___fldiv@rem+3,f
  7283  06B0                     l3044:
  7284  06B0  3001               	movlw	1
  7285  06B1  00B2               	movwf	??___fldiv
  7286  06B2  0832               	movf	??___fldiv,w
  7287  06B3  07C3               	addwf	___fldiv@aexp,f
  7288  06B4                     l3046:
  7289  06B4  301A               	movlw	26
  7290  06B5  0243               	subwf	___fldiv@aexp,w
  7291  06B6  1C03               	skipc
  7292  06B7  2EB9               	goto	u3741
  7293  06B8  2EBA               	goto	u3740
  7294  06B9                     u3741:
  7295  06B9  2E6A               	goto	l3028
  7296  06BA                     u3740:
  7297  06BA                     l3048:
  7298  06BA  083A               	movf	___fldiv@rem+3,w
  7299  06BB  0439               	iorwf	___fldiv@rem+2,w
  7300  06BC  0438               	iorwf	___fldiv@rem+1,w
  7301  06BD  0437               	iorwf	___fldiv@rem,w
  7302  06BE  1903               	skipnz
  7303  06BF  2EC1               	goto	u3751
  7304  06C0  2EC2               	goto	u3750
  7305  06C1                     u3751:
  7306  06C1  2EE1               	goto	l3062
  7307  06C2                     u3750:
  7308  06C2                     l3050:
  7309  06C2  143E               	bsf	___fldiv@grs,0
  7310  06C3  2EE1               	goto	l3062
  7311  06C4                     l3052:
  7312  06C4  3001               	movlw	1
  7313  06C5  00B2               	movwf	??___fldiv
  7314  06C6                     u3765:
  7315  06C6  1003               	clrc
  7316  06C7  0DAE               	rlf	___fldiv@b,f
  7317  06C8  0DAF               	rlf	___fldiv@b+1,f
  7318  06C9  0DB0               	rlf	___fldiv@b+2,f
  7319  06CA  0DB1               	rlf	___fldiv@b+3,f
  7320  06CB  0BB2               	decfsz	??___fldiv,f
  7321  06CC  2EC6               	goto	u3765
  7322  06CD                     l3054:
  7323  06CD  1FC1               	btfss	___fldiv@grs+3,7
  7324  06CE  2ED0               	goto	u3771
  7325  06CF  2ED1               	goto	u3770
  7326  06D0                     u3771:
  7327  06D0  2ED2               	goto	l3058
  7328  06D1                     u3770:
  7329  06D1                     l3056:
  7330  06D1  142E               	bsf	___fldiv@b,0
  7331  06D2                     l3058:
  7332  06D2  3001               	movlw	1
  7333  06D3  00B2               	movwf	??___fldiv
  7334  06D4                     u3785:
  7335  06D4  1003               	clrc
  7336  06D5  0DBE               	rlf	___fldiv@grs,f
  7337  06D6  0DBF               	rlf	___fldiv@grs+1,f
  7338  06D7  0DC0               	rlf	___fldiv@grs+2,f
  7339  06D8  0DC1               	rlf	___fldiv@grs+3,f
  7340  06D9  0BB2               	decfsz	??___fldiv,f
  7341  06DA  2ED4               	goto	u3785
  7342  06DB                     l3060:
  7343  06DB  30FF               	movlw	255
  7344  06DC  07BC               	addwf	___fldiv@new_exp,f
  7345  06DD  1803               	skipnc
  7346  06DE  0ABD               	incf	___fldiv@new_exp+1,f
  7347  06DF  30FF               	movlw	255
  7348  06E0  07BD               	addwf	___fldiv@new_exp+1,f
  7349  06E1                     l3062:
  7350  06E1  1FB0               	btfss	___fldiv@b+2,7
  7351  06E2  2EE4               	goto	u3791
  7352  06E3  2EE5               	goto	u3790
  7353  06E4                     u3791:
  7354  06E4  2EC4               	goto	l3052
  7355  06E5                     u3790:
  7356  06E5                     l3064:
  7357  06E5  01C3               	clrf	___fldiv@aexp
  7358  06E6                     l3066:
  7359  06E6  1FC1               	btfss	___fldiv@grs+3,7
  7360  06E7  2EE9               	goto	u3801
  7361  06E8  2EEA               	goto	u3800
  7362  06E9                     u3801:
  7363  06E9  2F06               	goto	l3074
  7364  06EA                     u3800:
  7365  06EA                     l3068:
  7366  06EA  30FF               	movlw	255
  7367  06EB  053E               	andwf	___fldiv@grs,w
  7368  06EC  00B2               	movwf	??___fldiv
  7369  06ED  30FF               	movlw	255
  7370  06EE  053F               	andwf	___fldiv@grs+1,w
  7371  06EF  00B3               	movwf	??___fldiv+1
  7372  06F0  30FF               	movlw	255
  7373  06F1  0540               	andwf	___fldiv@grs+2,w
  7374  06F2  00B4               	movwf	??___fldiv+2
  7375  06F3  307F               	movlw	127
  7376  06F4  0541               	andwf	___fldiv@grs+3,w
  7377  06F5  00B5               	movwf	??___fldiv+3
  7378  06F6  0835               	movf	??___fldiv+3,w
  7379  06F7  0434               	iorwf	??___fldiv+2,w
  7380  06F8  0433               	iorwf	??___fldiv+1,w
  7381  06F9  0432               	iorwf	??___fldiv,w
  7382  06FA  1903               	skipnz
  7383  06FB  2EFD               	goto	u3811
  7384  06FC  2EFE               	goto	u3810
  7385  06FD                     u3811:
  7386  06FD  2F01               	goto	l712
  7387  06FE                     u3810:
  7388  06FE                     l3070:
  7389  06FE  01C3               	clrf	___fldiv@aexp
  7390  06FF  0AC3               	incf	___fldiv@aexp,f
  7391  0700  2F06               	goto	l3074
  7392  0701                     l712:
  7393  0701  1C2E               	btfss	___fldiv@b,0
  7394  0702  2F04               	goto	u3821
  7395  0703  2F05               	goto	u3820
  7396  0704                     u3821:
  7397  0704  2F06               	goto	l3074
  7398  0705                     u3820:
  7399  0705  2EFE               	goto	l3070
  7400  0706                     l3074:
  7401  0706  0843               	movf	___fldiv@aexp,w
  7402  0707  1903               	btfsc	3,2
  7403  0708  2F0A               	goto	u3831
  7404  0709  2F0B               	goto	u3830
  7405  070A                     u3831:
  7406  070A  2F3C               	goto	l3084
  7407  070B                     u3830:
  7408  070B                     l3076:
  7409  070B  3001               	movlw	1
  7410  070C  07AE               	addwf	___fldiv@b,f
  7411  070D  3000               	movlw	0
  7412  070E  1803               	skipnc
  7413  070F  3001               	movlw	1
  7414  0710  07AF               	addwf	___fldiv@b+1,f
  7415  0711  3000               	movlw	0
  7416  0712  1803               	skipnc
  7417  0713  3001               	movlw	1
  7418  0714  07B0               	addwf	___fldiv@b+2,f
  7419  0715  3000               	movlw	0
  7420  0716  1803               	skipnc
  7421  0717  3001               	movlw	1
  7422  0718  07B1               	addwf	___fldiv@b+3,f
  7423  0719                     l3078:
  7424  0719  1C31               	btfss	___fldiv@b+3,0
  7425  071A  2F1C               	goto	u3841
  7426  071B  2F1D               	goto	u3840
  7427  071C                     u3841:
  7428  071C  2F3C               	goto	l3084
  7429  071D                     u3840:
  7430  071D                     l3080:
  7431  071D  082E               	movf	___fldiv@b,w
  7432  071E  00B2               	movwf	??___fldiv
  7433  071F  082F               	movf	___fldiv@b+1,w
  7434  0720  00B3               	movwf	??___fldiv+1
  7435  0721  0830               	movf	___fldiv@b+2,w
  7436  0722  00B4               	movwf	??___fldiv+2
  7437  0723  0831               	movf	___fldiv@b+3,w
  7438  0724  00B5               	movwf	??___fldiv+3
  7439  0725  3001               	movlw	1
  7440  0726  00B6               	movwf	??___fldiv+4
  7441  0727                     u3855:
  7442  0727  0D35               	rlf	??___fldiv+3,w
  7443  0728  0CB5               	rrf	??___fldiv+3,f
  7444  0729  0CB4               	rrf	??___fldiv+2,f
  7445  072A  0CB3               	rrf	??___fldiv+1,f
  7446  072B  0CB2               	rrf	??___fldiv,f
  7447  072C                     u3850:
  7448  072C  0BB6               	decfsz	??___fldiv+4,f
  7449  072D  2F27               	goto	u3855
  7450  072E  0835               	movf	??___fldiv+3,w
  7451  072F  00B1               	movwf	___fldiv@b+3
  7452  0730  0834               	movf	??___fldiv+2,w
  7453  0731  00B0               	movwf	___fldiv@b+2
  7454  0732  0833               	movf	??___fldiv+1,w
  7455  0733  00AF               	movwf	___fldiv@b+1
  7456  0734  0832               	movf	??___fldiv,w
  7457  0735  00AE               	movwf	___fldiv@b
  7458  0736                     l3082:
  7459  0736  3001               	movlw	1
  7460  0737  07BC               	addwf	___fldiv@new_exp,f
  7461  0738  1803               	skipnc
  7462  0739  0ABD               	incf	___fldiv@new_exp+1,f
  7463  073A  3000               	movlw	0
  7464  073B  07BD               	addwf	___fldiv@new_exp+1,f
  7465  073C                     l3084:
  7466  073C  083D               	movf	___fldiv@new_exp+1,w
  7467  073D  3A80               	xorlw	128
  7468  073E  00FF               	movwf	btemp+1
  7469  073F  3080               	movlw	128
  7470  0740  027F               	subwf	btemp+1,w
  7471  0741  1D03               	skipz
  7472  0742  2F45               	goto	u3865
  7473  0743  30FF               	movlw	255
  7474  0744  023C               	subwf	___fldiv@new_exp,w
  7475  0745                     u3865:
  7476  0745  1C03               	skipc
  7477  0746  2F48               	goto	u3861
  7478  0747  2F49               	goto	u3860
  7479  0748                     u3861:
  7480  0748  2F57               	goto	l3088
  7481  0749                     u3860:
  7482  0749                     l3086:
  7483  0749  30FF               	movlw	255
  7484  074A  1283               	bcf	3,5	;RP0=0, select bank0
  7485  074B  1303               	bcf	3,6	;RP1=0, select bank0
  7486  074C  00BC               	movwf	___fldiv@new_exp
  7487  074D  3000               	movlw	0
  7488  074E  00BD               	movwf	___fldiv@new_exp+1
  7489  074F  3000               	movlw	0
  7490  0750  00B1               	movwf	___fldiv@b+3
  7491  0751  3000               	movlw	0
  7492  0752  00B0               	movwf	___fldiv@b+2
  7493  0753  3000               	movlw	0
  7494  0754  00AF               	movwf	___fldiv@b+1
  7495  0755  3000               	movlw	0
  7496  0756  00AE               	movwf	___fldiv@b
  7497  0757                     l3088:
  7498  0757  1283               	bcf	3,5	;RP0=0, select bank0
  7499  0758  1303               	bcf	3,6	;RP1=0, select bank0
  7500  0759  083D               	movf	___fldiv@new_exp+1,w
  7501  075A  3A80               	xorlw	128
  7502  075B  00FF               	movwf	btemp+1
  7503  075C  3080               	movlw	128
  7504  075D  027F               	subwf	btemp+1,w
  7505  075E  1D03               	skipz
  7506  075F  2F62               	goto	u3875
  7507  0760  3001               	movlw	1
  7508  0761  023C               	subwf	___fldiv@new_exp,w
  7509  0762                     u3875:
  7510  0762  1803               	skipnc
  7511  0763  2F65               	goto	u3871
  7512  0764  2F66               	goto	u3870
  7513  0765                     u3871:
  7514  0765  2F73               	goto	l718
  7515  0766                     u3870:
  7516  0766                     l3090:
  7517  0766  1283               	bcf	3,5	;RP0=0, select bank0
  7518  0767  1303               	bcf	3,6	;RP1=0, select bank0
  7519  0768  01BC               	clrf	___fldiv@new_exp
  7520  0769  01BD               	clrf	___fldiv@new_exp+1
  7521  076A                     l3092:
  7522  076A  3000               	movlw	0
  7523  076B  00B1               	movwf	___fldiv@b+3
  7524  076C  3000               	movlw	0
  7525  076D  00B0               	movwf	___fldiv@b+2
  7526  076E  3000               	movlw	0
  7527  076F  00AF               	movwf	___fldiv@b+1
  7528  0770  3000               	movlw	0
  7529  0771  00AE               	movwf	___fldiv@b
  7530  0772                     l3094:
  7531  0772  01BB               	clrf	___fldiv@sign
  7532  0773                     l718:
  7533  0773  1283               	bcf	3,5	;RP0=0, select bank0
  7534  0774  1303               	bcf	3,6	;RP1=0, select bank0
  7535  0775  083C               	movf	___fldiv@new_exp,w
  7536  0776  00B2               	movwf	??___fldiv
  7537  0777  0832               	movf	??___fldiv,w
  7538  0778  00C2               	movwf	___fldiv@bexp
  7539  0779                     l3096:
  7540  0779  1C42               	btfss	___fldiv@bexp,0
  7541  077A  2F7C               	goto	u3881
  7542  077B  2F7D               	goto	u3880
  7543  077C                     u3881:
  7544  077C  2F7F               	goto	l3100
  7545  077D                     u3880:
  7546  077D                     l3098:
  7547  077D  17B0               	bsf	___fldiv@b+2,7
  7548  077E  2F83               	goto	l720
  7549  077F                     l3100:
  7550  077F  307F               	movlw	127
  7551  0780  00B2               	movwf	??___fldiv
  7552  0781  0832               	movf	??___fldiv,w
  7553  0782  05B0               	andwf	___fldiv@b+2,f
  7554  0783                     l720:
  7555  0783  0842               	movf	___fldiv@bexp,w
  7556  0784  00B2               	movwf	??___fldiv
  7557  0785  1003               	clrc
  7558  0786  0C32               	rrf	??___fldiv,w
  7559  0787  00B3               	movwf	??___fldiv+1
  7560  0788  0833               	movf	??___fldiv+1,w
  7561  0789  00B1               	movwf	___fldiv@b+3
  7562  078A  083B               	movf	___fldiv@sign,w
  7563  078B  00B2               	movwf	??___fldiv
  7564  078C  0832               	movf	??___fldiv,w
  7565  078D  04B1               	iorwf	___fldiv@b+3,f
  7566  078E  2E27               	goto	l3008
  7567  078F                     l698:
  7568  078F  0008               	return
  7569  0790                     __end_of___fldiv:
  7570                           
  7571                           	psect	text25
  7572  0988                     __ptext25:	
  7573 ;; *************** function _LCD_Begin *****************
  7574 ;; Defined at:
  7575 ;;		line 106 in file "./LCD_Lib.c"
  7576 ;; Parameters:    Size  Location     Type
  7577 ;;		None
  7578 ;; Auto vars:     Size  Location     Type
  7579 ;;		None
  7580 ;; Return value:  Size  Location     Type
  7581 ;;                  1    wreg      void 
  7582 ;; Registers used:
  7583 ;;		wreg, status,2, status,0, pclath, cstack
  7584 ;; Tracked objects:
  7585 ;;		On entry : 0/0
  7586 ;;		On exit  : 0/0
  7587 ;;		Unchanged: 0/0
  7588 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7589 ;;      Params:         0       0       0       0       0
  7590 ;;      Locals:         0       0       0       0       0
  7591 ;;      Temps:          0       2       0       0       0
  7592 ;;      Totals:         0       2       0       0       0
  7593 ;;Total ram usage:        2 bytes
  7594 ;; Hardware stack levels used: 1
  7595 ;; Hardware stack levels required when called: 3
  7596 ;; This function calls:
  7597 ;;		_LCD_Cmd
  7598 ;; This function is called by:
  7599 ;;		_main
  7600 ;; This function uses a non-reentrant model
  7601 ;;
  7602                           
  7603                           
  7604                           ;psect for function _LCD_Begin
  7605  0988                     _LCD_Begin:
  7606  0988                     l3590:	
  7607                           ;incstack = 0
  7608                           ; Regs used in _LCD_Begin: [wreg+status,2+status,0+pclath+cstack]
  7609                           
  7610                           
  7611                           ;./LCD_Lib.c: 108:   RS = 0;
  7612  0988  107A               	bcf	_RS/(0+8),_RS& (0+7)
  7613                           
  7614                           ;./LCD_Lib.c: 110:   PORTDbits.RD2 = 0;
  7615  0989  1283               	bcf	3,5	;RP0=0, select bank0
  7616  098A  1303               	bcf	3,6	;RP1=0, select bank0
  7617  098B  1108               	bcf	8,2	;volatile
  7618                           
  7619                           ;./LCD_Lib.c: 111:   PORTDbits.RD3 = 0;
  7620  098C  1188               	bcf	8,3	;volatile
  7621                           
  7622                           ;./LCD_Lib.c: 112:   PORTDbits.RD4 = 0;
  7623  098D  1208               	bcf	8,4	;volatile
  7624                           
  7625                           ;./LCD_Lib.c: 113:   PORTDbits.RD5 = 0;
  7626  098E  1288               	bcf	8,5	;volatile
  7627                           
  7628                           ;./LCD_Lib.c: 114:   PORTDbits.RD6 = 0;
  7629  098F  1308               	bcf	8,6	;volatile
  7630                           
  7631                           ;./LCD_Lib.c: 115:   PORTDbits.RD7 = 0;
  7632  0990  1388               	bcf	8,7	;volatile
  7633                           
  7634                           ;./LCD_Lib.c: 116:   TRISD0 = 0;
  7635  0991  1683               	bsf	3,5	;RP0=1, select bank1
  7636  0992  1303               	bcf	3,6	;RP1=0, select bank1
  7637  0993  1008               	bcf	8,0	;volatile
  7638                           
  7639                           ;./LCD_Lib.c: 117:   TRISD1 = 0;
  7640  0994  1088               	bcf	8,1	;volatile
  7641                           
  7642                           ;./LCD_Lib.c: 118:   TRISD2 = 0;
  7643  0995  1108               	bcf	8,2	;volatile
  7644                           
  7645                           ;./LCD_Lib.c: 119:   TRISD3 = 0;
  7646  0996  1188               	bcf	8,3	;volatile
  7647                           
  7648                           ;./LCD_Lib.c: 120:   TRISD4 = 0;
  7649  0997  1208               	bcf	8,4	;volatile
  7650                           
  7651                           ;./LCD_Lib.c: 121:   TRISD5 = 0;
  7652  0998  1288               	bcf	8,5	;volatile
  7653  0999                     l3592:
  7654                           
  7655                           ;./LCD_Lib.c: 123:   _delay((unsigned long)((40)*(4000000/4000.0)));
  7656  0999  3034               	movlw	52
  7657  099A  1283               	bcf	3,5	;RP0=0, select bank0
  7658  099B  1303               	bcf	3,6	;RP1=0, select bank0
  7659  099C  00A2               	movwf	??_LCD_Begin+1
  7660  099D  30F1               	movlw	241
  7661  099E  00A1               	movwf	??_LCD_Begin
  7662  099F                     u4987:
  7663  099F  0BA1               	decfsz	??_LCD_Begin,f
  7664  09A0  299F               	goto	u4987
  7665  09A1  0BA2               	decfsz	??_LCD_Begin+1,f
  7666  09A2  299F               	goto	u4987
  7667  09A3                     l3594:
  7668                           
  7669                           ;./LCD_Lib.c: 124:   LCD_Cmd(3);
  7670  09A3  3003               	movlw	3
  7671  09A4  160A  118A  2470  120A  158A  	fcall	_LCD_Cmd
  7672  09A9                     l3596:
  7673                           
  7674                           ;./LCD_Lib.c: 125:   _delay((unsigned long)((5)*(4000000/4000.0)));
  7675  09A9  3007               	movlw	7
  7676  09AA  1283               	bcf	3,5	;RP0=0, select bank0
  7677  09AB  1303               	bcf	3,6	;RP1=0, select bank0
  7678  09AC  00A2               	movwf	??_LCD_Begin+1
  7679  09AD  307C               	movlw	124
  7680  09AE  00A1               	movwf	??_LCD_Begin
  7681  09AF                     u4997:
  7682  09AF  0BA1               	decfsz	??_LCD_Begin,f
  7683  09B0  29AF               	goto	u4997
  7684  09B1  0BA2               	decfsz	??_LCD_Begin+1,f
  7685  09B2  29AF               	goto	u4997
  7686  09B3  0000               	nop
  7687                           
  7688                           ;./LCD_Lib.c: 126:   LCD_Cmd(3);
  7689  09B4  3003               	movlw	3
  7690  09B5  160A  118A  2470  120A  158A  	fcall	_LCD_Cmd
  7691  09BA                     l3598:
  7692                           
  7693                           ;./LCD_Lib.c: 127:   _delay((unsigned long)((5)*(4000000/4000.0)));
  7694  09BA  3007               	movlw	7
  7695  09BB  1283               	bcf	3,5	;RP0=0, select bank0
  7696  09BC  1303               	bcf	3,6	;RP1=0, select bank0
  7697  09BD  00A2               	movwf	??_LCD_Begin+1
  7698  09BE  307C               	movlw	124
  7699  09BF  00A1               	movwf	??_LCD_Begin
  7700  09C0                     u5007:
  7701  09C0  0BA1               	decfsz	??_LCD_Begin,f
  7702  09C1  29C0               	goto	u5007
  7703  09C2  0BA2               	decfsz	??_LCD_Begin+1,f
  7704  09C3  29C0               	goto	u5007
  7705  09C4  0000               	nop
  7706  09C5                     l3600:
  7707                           
  7708                           ;./LCD_Lib.c: 128:   LCD_Cmd(3);
  7709  09C5  3003               	movlw	3
  7710  09C6  160A  118A  2470  120A  158A  	fcall	_LCD_Cmd
  7711                           
  7712                           ;./LCD_Lib.c: 129:   _delay((unsigned long)((5)*(4000000/4000.0)));
  7713  09CB  3007               	movlw	7
  7714  09CC  1283               	bcf	3,5	;RP0=0, select bank0
  7715  09CD  1303               	bcf	3,6	;RP1=0, select bank0
  7716  09CE  00A2               	movwf	??_LCD_Begin+1
  7717  09CF  307C               	movlw	124
  7718  09D0  00A1               	movwf	??_LCD_Begin
  7719  09D1                     u5017:
  7720  09D1  0BA1               	decfsz	??_LCD_Begin,f
  7721  09D2  29D1               	goto	u5017
  7722  09D3  0BA2               	decfsz	??_LCD_Begin+1,f
  7723  09D4  29D1               	goto	u5017
  7724  09D5  0000               	nop
  7725  09D6                     l3602:
  7726                           
  7727                           ;./LCD_Lib.c: 130:   LCD_Cmd(0x02);
  7728  09D6  3002               	movlw	2
  7729  09D7  160A  118A  2470  120A  158A  	fcall	_LCD_Cmd
  7730  09DC                     l3604:
  7731                           
  7732                           ;./LCD_Lib.c: 131:   _delay((unsigned long)((5)*(4000000/4000.0)));
  7733  09DC  3007               	movlw	7
  7734  09DD  1283               	bcf	3,5	;RP0=0, select bank0
  7735  09DE  1303               	bcf	3,6	;RP1=0, select bank0
  7736  09DF  00A2               	movwf	??_LCD_Begin+1
  7737  09E0  307C               	movlw	124
  7738  09E1  00A1               	movwf	??_LCD_Begin
  7739  09E2                     u5027:
  7740  09E2  0BA1               	decfsz	??_LCD_Begin,f
  7741  09E3  29E2               	goto	u5027
  7742  09E4  0BA2               	decfsz	??_LCD_Begin+1,f
  7743  09E5  29E2               	goto	u5027
  7744  09E6  0000               	nop
  7745                           
  7746                           ;./LCD_Lib.c: 132:   LCD_Cmd(0x20 | (2 << 2));
  7747  09E7  3028               	movlw	40
  7748  09E8  160A  118A  2470  120A  158A  	fcall	_LCD_Cmd
  7749  09ED                     l3606:
  7750                           
  7751                           ;./LCD_Lib.c: 133:   _delay((unsigned long)((50)*(4000000/4000.0)));
  7752  09ED  3041               	movlw	65
  7753  09EE  1283               	bcf	3,5	;RP0=0, select bank0
  7754  09EF  1303               	bcf	3,6	;RP1=0, select bank0
  7755  09F0  00A2               	movwf	??_LCD_Begin+1
  7756  09F1  30ED               	movlw	237
  7757  09F2  00A1               	movwf	??_LCD_Begin
  7758  09F3                     u5037:
  7759  09F3  0BA1               	decfsz	??_LCD_Begin,f
  7760  09F4  29F3               	goto	u5037
  7761  09F5  0BA2               	decfsz	??_LCD_Begin+1,f
  7762  09F6  29F3               	goto	u5037
  7763  09F7  29F8               	nop2
  7764  09F8                     l3608:
  7765                           
  7766                           ;./LCD_Lib.c: 134:   LCD_Cmd(0x0C);
  7767  09F8  300C               	movlw	12
  7768  09F9  160A  118A  2470  120A  158A  	fcall	_LCD_Cmd
  7769                           
  7770                           ;./LCD_Lib.c: 135:   _delay((unsigned long)((50)*(4000000/4000.0)));
  7771  09FE  3041               	movlw	65
  7772  09FF  1283               	bcf	3,5	;RP0=0, select bank0
  7773  0A00  1303               	bcf	3,6	;RP1=0, select bank0
  7774  0A01  00A2               	movwf	??_LCD_Begin+1
  7775  0A02  30ED               	movlw	237
  7776  0A03  00A1               	movwf	??_LCD_Begin
  7777  0A04                     u5047:
  7778  0A04  0BA1               	decfsz	??_LCD_Begin,f
  7779  0A05  2A04               	goto	u5047
  7780  0A06  0BA2               	decfsz	??_LCD_Begin+1,f
  7781  0A07  2A04               	goto	u5047
  7782  0A08  2A09               	nop2
  7783  0A09                     l3610:
  7784                           
  7785                           ;./LCD_Lib.c: 136:   LCD_Cmd(0x01);
  7786  0A09  3001               	movlw	1
  7787  0A0A  160A  118A  2470  120A  158A  	fcall	_LCD_Cmd
  7788  0A0F                     l3612:
  7789                           
  7790                           ;./LCD_Lib.c: 137:   _delay((unsigned long)((50)*(4000000/4000.0)));
  7791  0A0F  3041               	movlw	65
  7792  0A10  1283               	bcf	3,5	;RP0=0, select bank0
  7793  0A11  1303               	bcf	3,6	;RP1=0, select bank0
  7794  0A12  00A2               	movwf	??_LCD_Begin+1
  7795  0A13  30ED               	movlw	237
  7796  0A14  00A1               	movwf	??_LCD_Begin
  7797  0A15                     u5057:
  7798  0A15  0BA1               	decfsz	??_LCD_Begin,f
  7799  0A16  2A15               	goto	u5057
  7800  0A17  0BA2               	decfsz	??_LCD_Begin+1,f
  7801  0A18  2A15               	goto	u5057
  7802  0A19  2A1A               	nop2
  7803                           
  7804                           ;./LCD_Lib.c: 138:   LCD_Cmd(0x04 | 0x02);
  7805  0A1A  3006               	movlw	6
  7806  0A1B  160A  118A  2470  120A  158A  	fcall	_LCD_Cmd
  7807  0A20                     l3614:
  7808                           
  7809                           ;./LCD_Lib.c: 139:   _delay((unsigned long)((50)*(4000000/4000.0)));
  7810  0A20  3041               	movlw	65
  7811  0A21  1283               	bcf	3,5	;RP0=0, select bank0
  7812  0A22  1303               	bcf	3,6	;RP1=0, select bank0
  7813  0A23  00A2               	movwf	??_LCD_Begin+1
  7814  0A24  30ED               	movlw	237
  7815  0A25  00A1               	movwf	??_LCD_Begin
  7816  0A26                     u5067:
  7817  0A26  0BA1               	decfsz	??_LCD_Begin,f
  7818  0A27  2A26               	goto	u5067
  7819  0A28  0BA2               	decfsz	??_LCD_Begin+1,f
  7820  0A29  2A26               	goto	u5067
  7821  0A2A  2A2B               	nop2
  7822  0A2B                     l84:
  7823  0A2B  0008               	return
  7824  0A2C                     __end_of_LCD_Begin:
  7825                           
  7826                           	psect	text26
  7827  1470                     __ptext26:	
  7828 ;; *************** function _LCD_Cmd *****************
  7829 ;; Defined at:
  7830 ;;		line 60 in file "./LCD_Lib.c"
  7831 ;; Parameters:    Size  Location     Type
  7832 ;;  Command         1    wreg     unsigned char 
  7833 ;; Auto vars:     Size  Location     Type
  7834 ;;  Command         1    0[BANK0 ] unsigned char 
  7835 ;; Return value:  Size  Location     Type
  7836 ;;                  1    wreg      void 
  7837 ;; Registers used:
  7838 ;;		wreg, status,2, status,0, pclath, cstack
  7839 ;; Tracked objects:
  7840 ;;		On entry : 0/0
  7841 ;;		On exit  : 0/0
  7842 ;;		Unchanged: 0/0
  7843 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7844 ;;      Params:         0       0       0       0       0
  7845 ;;      Locals:         0       1       0       0       0
  7846 ;;      Temps:          2       0       0       0       0
  7847 ;;      Totals:         2       1       0       0       0
  7848 ;;Total ram usage:        3 bytes
  7849 ;; Hardware stack levels used: 1
  7850 ;; Hardware stack levels required when called: 2
  7851 ;; This function calls:
  7852 ;;		_LCD_Write_Nibble
  7853 ;; This function is called by:
  7854 ;;		_LCD_Goto
  7855 ;;		_LCD_Begin
  7856 ;;		_ajustes
  7857 ;; This function uses a non-reentrant model
  7858 ;;
  7859                           
  7860                           
  7861                           ;psect for function _LCD_Cmd
  7862  1470                     _LCD_Cmd:
  7863                           
  7864                           ;incstack = 0
  7865                           ; Regs used in _LCD_Cmd: [wreg+status,2+status,0+pclath+cstack]
  7866                           ;LCD_Cmd@Command stored from wreg
  7867  1470  1283               	bcf	3,5	;RP0=0, select bank0
  7868  1471  1303               	bcf	3,6	;RP1=0, select bank0
  7869  1472  00A0               	movwf	LCD_Cmd@Command
  7870  1473                     l3268:
  7871                           
  7872                           ;./LCD_Lib.c: 60: void LCD_Cmd(uint8_t Command);./LCD_Lib.c: 61: {;./LCD_Lib.c: 62:   RS
      +                           = 0;
  7873  1473  107A               	bcf	_RS/(0+8),_RS& (0+7)
  7874  1474                     l3270:
  7875                           
  7876                           ;./LCD_Lib.c: 63:   LCD_Write_Nibble(Command >> 4);
  7877  1474  0820               	movf	LCD_Cmd@Command,w
  7878  1475  00F6               	movwf	??_LCD_Cmd
  7879  1476  3004               	movlw	4
  7880  1477                     u4035:
  7881  1477  1003               	clrc
  7882  1478  0CF6               	rrf	??_LCD_Cmd,f
  7883  1479  3EFF               	addlw	-1
  7884  147A  1D03               	skipz
  7885  147B  2C77               	goto	u4035
  7886  147C  0876               	movf	??_LCD_Cmd,w
  7887  147D  160A  118A  26FD  160A  118A  	fcall	_LCD_Write_Nibble
  7888                           
  7889                           ;./LCD_Lib.c: 64:   LCD_Write_Nibble(Command);
  7890  1482  1283               	bcf	3,5	;RP0=0, select bank0
  7891  1483  1303               	bcf	3,6	;RP1=0, select bank0
  7892  1484  0820               	movf	LCD_Cmd@Command,w
  7893  1485  160A  118A  26FD  160A  118A  	fcall	_LCD_Write_Nibble
  7894  148A                     l3272:
  7895                           
  7896                           ;./LCD_Lib.c: 65:   if((Command == 0x01) || (Command == 0x02))
  7897  148A  1283               	bcf	3,5	;RP0=0, select bank0
  7898  148B  1303               	bcf	3,6	;RP1=0, select bank0
  7899  148C  0320               	decf	LCD_Cmd@Command,w
  7900  148D  1903               	btfsc	3,2
  7901  148E  2C90               	goto	u4041
  7902  148F  2C91               	goto	u4040
  7903  1490                     u4041:
  7904  1490  2C97               	goto	l3276
  7905  1491                     u4040:
  7906  1491                     l3274:
  7907  1491  3002               	movlw	2
  7908  1492  0620               	xorwf	LCD_Cmd@Command,w
  7909  1493  1D03               	btfss	3,2
  7910  1494  2C96               	goto	u4051
  7911  1495  2C97               	goto	u4050
  7912  1496                     u4051:
  7913  1496  2CA0               	goto	l63
  7914  1497                     u4050:
  7915  1497                     l3276:
  7916                           
  7917                           ;./LCD_Lib.c: 66:     _delay((unsigned long)((2)*(4000000/4000.0)));
  7918  1497  3003               	movlw	3
  7919  1498  00F7               	movwf	??_LCD_Cmd+1
  7920  1499  3097               	movlw	151
  7921  149A  00F6               	movwf	??_LCD_Cmd
  7922  149B                     u5077:
  7923  149B  0BF6               	decfsz	??_LCD_Cmd,f
  7924  149C  2C9B               	goto	u5077
  7925  149D  0BF7               	decfsz	??_LCD_Cmd+1,f
  7926  149E  2C9B               	goto	u5077
  7927  149F  2CA0               	nop2
  7928  14A0                     l63:
  7929  14A0  0008               	return
  7930  14A1                     __end_of_LCD_Cmd:
  7931                           
  7932                           	psect	text27
  7933  16FD                     __ptext27:	
  7934 ;; *************** function _LCD_Write_Nibble *****************
  7935 ;; Defined at:
  7936 ;;		line 43 in file "./LCD_Lib.c"
  7937 ;; Parameters:    Size  Location     Type
  7938 ;;  n               1    wreg     unsigned char 
  7939 ;; Auto vars:     Size  Location     Type
  7940 ;;  n               1    5[COMMON] unsigned char 
  7941 ;; Return value:  Size  Location     Type
  7942 ;;                  1    wreg      void 
  7943 ;; Registers used:
  7944 ;;		wreg, status,2, status,0
  7945 ;; Tracked objects:
  7946 ;;		On entry : 0/0
  7947 ;;		On exit  : 0/0
  7948 ;;		Unchanged: 0/0
  7949 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7950 ;;      Params:         0       0       0       0       0
  7951 ;;      Locals:         1       0       0       0       0
  7952 ;;      Temps:          2       0       0       0       0
  7953 ;;      Totals:         3       0       0       0       0
  7954 ;;Total ram usage:        3 bytes
  7955 ;; Hardware stack levels used: 1
  7956 ;; Hardware stack levels required when called: 1
  7957 ;; This function calls:
  7958 ;;		Nothing
  7959 ;; This function is called by:
  7960 ;;		_LCD_Cmd
  7961 ;;		_LCD_Print
  7962 ;;		_LCD_PutC
  7963 ;; This function uses a non-reentrant model
  7964 ;;
  7965                           
  7966                           
  7967                           ;psect for function _LCD_Write_Nibble
  7968  16FD                     _LCD_Write_Nibble:
  7969                           
  7970                           ;incstack = 0
  7971                           ; Regs used in _LCD_Write_Nibble: [wreg+status,2+status,0]
  7972                           ;LCD_Write_Nibble@n stored from wreg
  7973  16FD  00F5               	movwf	LCD_Write_Nibble@n
  7974  16FE                     l3252:
  7975                           
  7976                           ;./LCD_Lib.c: 43: void LCD_Write_Nibble(uint8_t n);./LCD_Lib.c: 44: {;./LCD_Lib.c: 45:  
      +                           PORTDbits.RD2 = RS;
  7977  16FE  187A               	btfsc	_RS/(0+8),_RS& (0+7)
  7978  16FF  2F01               	goto	u3991
  7979  1700  2F05               	goto	u3990
  7980  1701                     u3991:
  7981  1701  1283               	bcf	3,5	;RP0=0, select bank0
  7982  1702  1303               	bcf	3,6	;RP1=0, select bank0
  7983  1703  1508               	bsf	8,2	;volatile
  7984  1704  2F08               	goto	u4004
  7985  1705                     u3990:
  7986  1705  1283               	bcf	3,5	;RP0=0, select bank0
  7987  1706  1303               	bcf	3,6	;RP1=0, select bank0
  7988  1707  1108               	bcf	8,2	;volatile
  7989  1708                     u4004:
  7990  1708                     l3254:
  7991                           
  7992                           ;./LCD_Lib.c: 46:   PORTDbits.RD4 = n & 0x01;
  7993  1708  0875               	movf	LCD_Write_Nibble@n,w
  7994  1709  3901               	andlw	1
  7995  170A  00F3               	movwf	??_LCD_Write_Nibble
  7996  170B  0EF3               	swapf	??_LCD_Write_Nibble,f
  7997  170C  0808               	movf	8,w	;volatile
  7998  170D  0673               	xorwf	??_LCD_Write_Nibble,w
  7999  170E  39EF               	andlw	-17
  8000  170F  0673               	xorwf	??_LCD_Write_Nibble,w
  8001  1710  0088               	movwf	8	;volatile
  8002                           
  8003                           ;./LCD_Lib.c: 47:   PORTDbits.RD5 = (n >> 1) & 0x01;
  8004  1711  0875               	movf	LCD_Write_Nibble@n,w
  8005  1712  00F3               	movwf	??_LCD_Write_Nibble
  8006  1713  1003               	clrc
  8007  1714  0C73               	rrf	??_LCD_Write_Nibble,w
  8008  1715  3901               	andlw	1
  8009  1716  00F4               	movwf	??_LCD_Write_Nibble+1
  8010  1717  0EF4               	swapf	??_LCD_Write_Nibble+1,f
  8011  1718  0DF4               	rlf	??_LCD_Write_Nibble+1,f
  8012  1719  0808               	movf	8,w	;volatile
  8013  171A  0674               	xorwf	??_LCD_Write_Nibble+1,w
  8014  171B  39DF               	andlw	-33
  8015  171C  0674               	xorwf	??_LCD_Write_Nibble+1,w
  8016  171D  0088               	movwf	8	;volatile
  8017                           
  8018                           ;./LCD_Lib.c: 48:   PORTDbits.RD6 = (n >> 2) & 0x01;
  8019  171E  0875               	movf	LCD_Write_Nibble@n,w
  8020  171F  00F3               	movwf	??_LCD_Write_Nibble
  8021  1720  3002               	movlw	2
  8022  1721                     u4015:
  8023  1721  1003               	clrc
  8024  1722  0CF3               	rrf	??_LCD_Write_Nibble,f
  8025  1723  3EFF               	addlw	-1
  8026  1724  1D03               	skipz
  8027  1725  2F21               	goto	u4015
  8028  1726  0873               	movf	??_LCD_Write_Nibble,w
  8029  1727  3901               	andlw	1
  8030  1728  00F4               	movwf	??_LCD_Write_Nibble+1
  8031  1729  0EF4               	swapf	??_LCD_Write_Nibble+1,f
  8032  172A  0DF4               	rlf	??_LCD_Write_Nibble+1,f
  8033  172B  0DF4               	rlf	??_LCD_Write_Nibble+1,f
  8034  172C  0808               	movf	8,w	;volatile
  8035  172D  0674               	xorwf	??_LCD_Write_Nibble+1,w
  8036  172E  39BF               	andlw	-65
  8037  172F  0674               	xorwf	??_LCD_Write_Nibble+1,w
  8038  1730  0088               	movwf	8	;volatile
  8039                           
  8040                           ;./LCD_Lib.c: 49:   PORTDbits.RD7 = (n >> 3) & 0x01;
  8041  1731  0875               	movf	LCD_Write_Nibble@n,w
  8042  1732  00F3               	movwf	??_LCD_Write_Nibble
  8043  1733  3003               	movlw	3
  8044  1734                     u4025:
  8045  1734  1003               	clrc
  8046  1735  0CF3               	rrf	??_LCD_Write_Nibble,f
  8047  1736  3EFF               	addlw	-1
  8048  1737  1D03               	skipz
  8049  1738  2F34               	goto	u4025
  8050  1739  0873               	movf	??_LCD_Write_Nibble,w
  8051  173A  3901               	andlw	1
  8052  173B  00F4               	movwf	??_LCD_Write_Nibble+1
  8053  173C  0CF4               	rrf	??_LCD_Write_Nibble+1,f
  8054  173D  0CF4               	rrf	??_LCD_Write_Nibble+1,f
  8055  173E  0808               	movf	8,w	;volatile
  8056  173F  0674               	xorwf	??_LCD_Write_Nibble+1,w
  8057  1740  397F               	andlw	-129
  8058  1741  0674               	xorwf	??_LCD_Write_Nibble+1,w
  8059  1742  0088               	movwf	8	;volatile
  8060  1743                     l3256:
  8061                           
  8062                           ;./LCD_Lib.c: 52:   PORTDbits.RD3 = 0;
  8063  1743  1188               	bcf	8,3	;volatile
  8064  1744                     l3258:
  8065                           
  8066                           ;./LCD_Lib.c: 53:   _delay((unsigned long)((1)*(4000000/4000000.0)));
  8067  1744  0000               	nop
  8068  1745                     l3260:
  8069                           
  8070                           ;./LCD_Lib.c: 54:   PORTDbits.RD3 = 1;
  8071  1745  1283               	bcf	3,5	;RP0=0, select bank0
  8072  1746  1303               	bcf	3,6	;RP1=0, select bank0
  8073  1747  1588               	bsf	8,3	;volatile
  8074  1748                     l3262:
  8075                           
  8076                           ;./LCD_Lib.c: 55:   _delay((unsigned long)((1)*(4000000/4000000.0)));
  8077  1748  0000               	nop
  8078  1749                     l3264:
  8079                           
  8080                           ;./LCD_Lib.c: 56:   PORTDbits.RD3 = 0;
  8081  1749  1283               	bcf	3,5	;RP0=0, select bank0
  8082  174A  1303               	bcf	3,6	;RP1=0, select bank0
  8083  174B  1188               	bcf	8,3	;volatile
  8084  174C                     l3266:
  8085                           
  8086                           ;./LCD_Lib.c: 57:   _delay((unsigned long)((100)*(4000000/4000000.0)));
  8087  174C  3021               	movlw	33
  8088  174D  00F3               	movwf	??_LCD_Write_Nibble
  8089  174E                     u5087:
  8090  174E  0BF3               	decfsz	??_LCD_Write_Nibble,f
  8091  174F  2F4E               	goto	u5087
  8092  1750                     l57:
  8093  1750  0008               	return
  8094  1751                     __end_of_LCD_Write_Nibble:
  8095                           
  8096                           	psect	text28
  8097  089B                     __ptext28:	
  8098 ;; *************** function _my_isr_routine *****************
  8099 ;; Defined at:
  8100 ;;		line 360 in file "main.c"
  8101 ;; Parameters:    Size  Location     Type
  8102 ;;		None
  8103 ;; Auto vars:     Size  Location     Type
  8104 ;;		None
  8105 ;; Return value:  Size  Location     Type
  8106 ;;                  1    wreg      void 
  8107 ;; Registers used:
  8108 ;;		wreg, status,2, btemp+1
  8109 ;; Tracked objects:
  8110 ;;		On entry : 0/0
  8111 ;;		On exit  : 0/0
  8112 ;;		Unchanged: 0/0
  8113 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8114 ;;      Params:         0       0       0       0       0
  8115 ;;      Locals:         0       0       0       0       0
  8116 ;;      Temps:          3       0       0       0       0
  8117 ;;      Totals:         3       0       0       0       0
  8118 ;;Total ram usage:        3 bytes
  8119 ;; Hardware stack levels used: 1
  8120 ;; This function calls:
  8121 ;;		Nothing
  8122 ;; This function is called by:
  8123 ;;		Interrupt level 1
  8124 ;; This function uses a non-reentrant model
  8125 ;;
  8126                           
  8127                           
  8128                           ;psect for function _my_isr_routine
  8129  089B                     _my_isr_routine:
  8130  089B                     i1l3110:
  8131                           
  8132                           ;main.c: 362:     if (INTCONbits.T0IF)
  8133  089B  1D0B               	btfss	11,2	;volatile
  8134  089C  289E               	goto	u390_21
  8135  089D  289F               	goto	u390_20
  8136  089E                     u390_21:
  8137  089E  2901               	goto	i1l197
  8138  089F                     u390_20:
  8139  089F                     i1l3112:
  8140                           
  8141                           ;main.c: 363:     {;main.c: 365:         TMR0=256-62;
  8142  089F  30C2               	movlw	194
  8143  08A0  0081               	movwf	1	;volatile
  8144                           
  8145                           ;main.c: 366:         TMR0_aux++;
  8146  08A1  3001               	movlw	1
  8147  08A2  1683               	bsf	3,5	;RP0=1, select bank1
  8148  08A3  1303               	bcf	3,6	;RP1=0, select bank1
  8149  08A4  07CC               	addwf	_TMR0_aux^(0+128),f
  8150  08A5  1803               	skipnc
  8151  08A6  0ACD               	incf	(_TMR0_aux+1)^(0+128),f
  8152  08A7  3000               	movlw	0
  8153  08A8  07CD               	addwf	(_TMR0_aux+1)^(0+128),f
  8154  08A9                     i1l3114:
  8155                           
  8156                           ;main.c: 369:         if(TMR0_aux>125)
  8157  08A9  084D               	movf	(_TMR0_aux+1)^(0+128),w
  8158  08AA  3A80               	xorlw	128
  8159  08AB  00FF               	movwf	btemp+1
  8160  08AC  3080               	movlw	128
  8161  08AD  027F               	subwf	btemp+1,w
  8162  08AE  1D03               	skipz
  8163  08AF  28B2               	goto	u391_25
  8164  08B0  307E               	movlw	126
  8165  08B1  024C               	subwf	_TMR0_aux^(0+128),w
  8166  08B2                     u391_25:
  8167  08B2  1C03               	skipc
  8168  08B3  28B5               	goto	u391_21
  8169  08B4  28B6               	goto	u391_20
  8170  08B5                     u391_21:
  8171  08B5  2900               	goto	i1l3136
  8172  08B6                     u391_20:
  8173  08B6                     i1l3116:
  8174                           
  8175                           ;main.c: 370:         {;main.c: 371:             TMR0_aux=0;
  8176  08B6  1683               	bsf	3,5	;RP0=1, select bank1
  8177  08B7  1303               	bcf	3,6	;RP1=0, select bank1
  8178  08B8  01CC               	clrf	_TMR0_aux^(0+128)
  8179  08B9  01CD               	clrf	(_TMR0_aux+1)^(0+128)
  8180  08BA                     i1l3118:
  8181                           
  8182                           ;main.c: 372:             Segundos++;
  8183  08BA  3001               	movlw	1
  8184  08BB  07CA               	addwf	_Segundos^(0+128),f
  8185  08BC  1803               	skipnc
  8186  08BD  0ACB               	incf	(_Segundos+1)^(0+128),f
  8187  08BE  3000               	movlw	0
  8188  08BF  07CB               	addwf	(_Segundos+1)^(0+128),f
  8189  08C0                     i1l3120:
  8190                           
  8191                           ;main.c: 374:             if(Segundos>59)
  8192  08C0  084B               	movf	(_Segundos+1)^(0+128),w
  8193  08C1  3A80               	xorlw	128
  8194  08C2  00FF               	movwf	btemp+1
  8195  08C3  3080               	movlw	128
  8196  08C4  027F               	subwf	btemp+1,w
  8197  08C5  1D03               	skipz
  8198  08C6  28C9               	goto	u392_25
  8199  08C7  303C               	movlw	60
  8200  08C8  024A               	subwf	_Segundos^(0+128),w
  8201  08C9                     u392_25:
  8202  08C9  1C03               	skipc
  8203  08CA  28CC               	goto	u392_21
  8204  08CB  28CD               	goto	u392_20
  8205  08CC                     u392_21:
  8206  08CC  2900               	goto	i1l3136
  8207  08CD                     u392_20:
  8208  08CD                     i1l3122:
  8209                           
  8210                           ;main.c: 375:             {;main.c: 376:                 Segundos=0;
  8211  08CD  1683               	bsf	3,5	;RP0=1, select bank1
  8212  08CE  1303               	bcf	3,6	;RP1=0, select bank1
  8213  08CF  01CA               	clrf	_Segundos^(0+128)
  8214  08D0  01CB               	clrf	(_Segundos+1)^(0+128)
  8215  08D1                     i1l3124:
  8216                           
  8217                           ;main.c: 377:                 Minutos++;
  8218  08D1  3001               	movlw	1
  8219  08D2  07F8               	addwf	_Minutos,f
  8220  08D3  1803               	skipnc
  8221  08D4  0AF9               	incf	_Minutos+1,f
  8222  08D5  3000               	movlw	0
  8223  08D6  07F9               	addwf	_Minutos+1,f
  8224  08D7                     i1l3126:
  8225                           
  8226                           ;main.c: 379:                 if(Minutos>59)
  8227  08D7  0879               	movf	_Minutos+1,w
  8228  08D8  3A80               	xorlw	128
  8229  08D9  00FF               	movwf	btemp+1
  8230  08DA  3080               	movlw	128
  8231  08DB  027F               	subwf	btemp+1,w
  8232  08DC  1D03               	skipz
  8233  08DD  28E0               	goto	u393_25
  8234  08DE  303C               	movlw	60
  8235  08DF  0278               	subwf	_Minutos,w
  8236  08E0                     u393_25:
  8237  08E0  1C03               	skipc
  8238  08E1  28E3               	goto	u393_21
  8239  08E2  28E4               	goto	u393_20
  8240  08E3                     u393_21:
  8241  08E3  2900               	goto	i1l3136
  8242  08E4                     u393_20:
  8243  08E4                     i1l3128:
  8244                           
  8245                           ;main.c: 380:                 {;main.c: 381:                     Minutos=0;
  8246  08E4  01F8               	clrf	_Minutos
  8247  08E5  01F9               	clrf	_Minutos+1
  8248  08E6                     i1l3130:
  8249                           
  8250                           ;main.c: 382:                     Horas++;
  8251  08E6  3001               	movlw	1
  8252  08E7  1283               	bcf	3,5	;RP0=0, select bank0
  8253  08E8  1303               	bcf	3,6	;RP1=0, select bank0
  8254  08E9  07ED               	addwf	_Horas,f
  8255  08EA  1803               	skipnc
  8256  08EB  0AEE               	incf	_Horas+1,f
  8257  08EC  3000               	movlw	0
  8258  08ED  07EE               	addwf	_Horas+1,f
  8259  08EE                     i1l3132:
  8260                           
  8261                           ;main.c: 383:                     if(Horas>23)
  8262  08EE  086E               	movf	_Horas+1,w
  8263  08EF  3A80               	xorlw	128
  8264  08F0  00FF               	movwf	btemp+1
  8265  08F1  3080               	movlw	128
  8266  08F2  027F               	subwf	btemp+1,w
  8267  08F3  1D03               	skipz
  8268  08F4  28F7               	goto	u394_25
  8269  08F5  3018               	movlw	24
  8270  08F6  026D               	subwf	_Horas,w
  8271  08F7                     u394_25:
  8272  08F7  1C03               	skipc
  8273  08F8  28FA               	goto	u394_21
  8274  08F9  28FB               	goto	u394_20
  8275  08FA                     u394_21:
  8276  08FA  2900               	goto	i1l194
  8277  08FB                     u394_20:
  8278  08FB                     i1l3134:
  8279                           
  8280                           ;main.c: 384:                         Horas=0;
  8281  08FB  1283               	bcf	3,5	;RP0=0, select bank0
  8282  08FC  1303               	bcf	3,6	;RP1=0, select bank0
  8283  08FD  01ED               	clrf	_Horas
  8284  08FE  01EE               	clrf	_Horas+1
  8285  08FF  2900               	goto	i1l3136
  8286  0900                     i1l194:	
  8287                           ;main.c: 387:             }
  8288                           
  8289  0900                     i1l3136:
  8290                           
  8291                           ;main.c: 390:     INTCONbits.T0IF=0;
  8292  0900  110B               	bcf	11,2	;volatile
  8293  0901                     i1l197:
  8294  0901  0872               	movf	??_my_isr_routine+2,w
  8295  0902  1283               	bcf	3,5	;RP0=0, select bank0
  8296  0903  1303               	bcf	3,6	;RP1=0, select bank0
  8297  0904  00FF               	movwf	btemp+1
  8298  0905  0871               	movf	??_my_isr_routine+1,w
  8299  0906  008A               	movwf	10
  8300  0907  0E70               	swapf	??_my_isr_routine,w
  8301  0908  0083               	movwf	3
  8302  0909  0EFE               	swapf	btemp,f
  8303  090A  0E7E               	swapf	btemp,w
  8304  090B  0009               	retfie
  8305  090C                     __end_of_my_isr_routine:
  8306  007E                     btemp	set	126	;btemp
  8307  007E                     wtemp0	set	126
  8308                           
  8309                           	psect	intentry
  8310  0004                     __pintentry:	
  8311                           ;incstack = 0
  8312                           ; Regs used in _my_isr_routine: [wreg+status,2+btemp+1]
  8313                           
  8314  0004                     interrupt_function:
  8315  007E                     saved_w	set	btemp
  8316  0004  00FE               	movwf	btemp
  8317  0005  0E03               	swapf	3,w
  8318  0006  00F0               	movwf	??_my_isr_routine
  8319  0007  080A               	movf	10,w
  8320  0008  00F1               	movwf	??_my_isr_routine+1
  8321  0009  1283               	bcf	3,5	;RP0=0, select bank0
  8322  000A  1303               	bcf	3,6	;RP1=0, select bank0
  8323  000B  087F               	movf	btemp+1,w
  8324  000C  00F2               	movwf	??_my_isr_routine+2
  8325  000D  120A  158A  289B   	ljmp	_my_isr_routine
  8326                           
  8327                           	psect	config
  8328                           
  8329                           ;Config register CONFIG @ 0x2007
  8330                           ;	Oscillator Selection bits
  8331                           ;	FOSC = XT, XT oscillator
  8332                           ;	Watchdog Timer Enable bit
  8333                           ;	WDTE = OFF, WDT disabled
  8334                           ;	Power-up Timer Enable bit
  8335                           ;	PWRTE = ON, PWRT enabled
  8336                           ;	FLASH Program Memory Code Protection bits
  8337                           ;	CP = OFF, Code protection off
  8338                           ;	Brown-out Reset Enable bit
  8339                           ;	BOREN = ON, BOR enabled
  8340                           ;	Low Voltage In-Circuit Serial Programming Enable bit
  8341                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
  8342                           ;	Data EE Memory Code Protection
  8343                           ;	CPD = OFF, Code Protection off
  8344                           ;	FLASH Program Memory Write Enable
  8345                           ;	WRT = ON, Unprotected program memory may be written to by EECON control
  8346                           ;	In-Circuit Debugger Mode bit
  8347                           ;	DEBUG = 0x1, unprogrammed default
  8348  2007                     	org	8199
  8349  2007  3FF1               	dw	16369

Data Sizes:
    Strings     113
    Constant    10
    Data        0
    BSS         28
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80     77      79
    BANK1            80     38      62
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    frexp@eptr	PTR int  size(1) Largest target is 2
		 -> trunc@expon(BANK0[2]), 

    sprintf@f	PTR const unsigned char  size(1) Largest target is 23
		 -> STR_9(CODE[20]), STR_8(CODE[11]), STR_7(CODE[20]), STR_6(CODE[12]), 
		 -> STR_5(CODE[20]), STR_4(CODE[15]), STR_3(CODE[20]), STR_2(CODE[12]), 
		 -> STR_1(CODE[23]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 16
		 -> LCD_Cstring(BANK1[16]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    ajustes@min_max	PTR int  size(1) Largest target is 2
		 -> main@min_max(BANK1[2]), 

    ajustes@hora_max	PTR int  size(1) Largest target is 2
		 -> main@hora_max(BANK1[2]), 

    ajustes@min_min	PTR int  size(1) Largest target is 2
		 -> main@min_min(BANK1[2]), 

    ajustes@hora_min	PTR int  size(1) Largest target is 2
		 -> main@hora_min(BANK1[2]), 

    ajustes@temp	PTR int  size(1) Largest target is 2
		 -> main@temp(BANK1[2]), 

    LCD_Print@LCD_Str	PTR unsigned char  size(1) Largest target is 16
		 -> LCD_Cstring(BANK1[16]), 


Critical Paths under _main in COMMON

    _round->_trunc
    _trunc->___xxtofl
    _frexp->___fleq
    ___fltol->___xxtofl
    ___flsub->_trunc
    ___fladd->___xxtofl
    _imprime_tela_main->_LCD_Print
    _ajustes->_LCD_Cmd
    _imprime_tela_ajuste4->_LCD_Print
    _imprime_tela_ajuste3->_LCD_Print
    _imprime_tela_ajuste2->_LCD_Print
    _imprime_tela_ajuste1->_LCD_Print
    _sprintf->___lwdiv
    ___lwmod->___lwdiv
    _LCD_Print->_LCD_Write_Nibble
    _LCD_Goto->_LCD_Cmd
    ___fldiv->___xxtofl
    _LCD_Begin->_LCD_Cmd
    _LCD_Cmd->_LCD_Write_Nibble

Critical Paths under _my_isr_routine in COMMON

    None.

Critical Paths under _main in BANK0

    _round->_trunc
    _trunc->___fltol
    _frexp->___fleq
    ___fltol->___fladd
    ___flsub->_trunc
    ___fladd->___fldiv
    _imprime_tela_main->_sprintf
    _ajustes->_imprime_tela_ajuste3
    _ajustes->_imprime_tela_ajuste4
    _imprime_tela_ajuste4->_sprintf
    _imprime_tela_ajuste3->_sprintf
    _imprime_tela_ajuste2->_sprintf
    _imprime_tela_ajuste1->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _LCD_Goto->_LCD_Cmd
    ___fldiv->___xxtofl
    _LCD_Begin->_LCD_Cmd

Critical Paths under _my_isr_routine in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_round
    _round->___flsub

Critical Paths under _my_isr_routine in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _my_isr_routine in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _my_isr_routine in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                22    22      0   44304
                                             16 BANK1     22    22      0
                          _LCD_Begin
                            ___fladd
                            ___fldiv
                            ___fltol
                           ___xxtofl
                            _ajustes
                       _atualiza_ADC
                 _controle_aquecedor
                  _imprime_tela_main
                              _round
 ---------------------------------------------------------------------------------
 (1) _round                                                8     4      4    7717
                                              8 BANK1      8     4      4
                            ___fladd
                            ___fldiv (ARG)
                            ___flsub
                              _trunc
 ---------------------------------------------------------------------------------
 (2) _trunc                                               11     7      4    2389
                                              7 COMMON     1     1      0
                                             67 BANK0     10     6      4
                            ___fltol
                           ___xxtofl
                              _frexp
 ---------------------------------------------------------------------------------
 (3) _frexp                                                7     2      5     928
                                              8 BANK0      7     2      5
                             ___fleq
 ---------------------------------------------------------------------------------
 (4) ___fleq                                              12     4      8     450
                                              3 COMMON     4     4      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     656
                                              3 COMMON     4     0      4
                                              0 BANK0     10    10      0
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             11     7      4     381
                                             56 BANK0     11     7      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2637
                                              0 BANK1      8     0      8
                            ___fladd
                              _trunc (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    2440
                                             36 BANK0     20    12      8
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _imprime_tela_main                                    1     1      0    5427
                                             28 BANK0      1     1      0
                           _LCD_Goto
                          _LCD_Print
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _controle_aquecedor                                  11     1     10     754
                                              3 COMMON     1     1      0
                                              0 BANK0     10     0     10
 ---------------------------------------------------------------------------------
 (1) _atualiza_ADC                                         1     1      0       0
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ajustes                                              9     5      4   24821
                                             33 BANK0      9     5      4
                            _LCD_Cmd
               _imprime_tela_ajuste1
               _imprime_tela_ajuste2
               _imprime_tela_ajuste3
               _imprime_tela_ajuste4
 ---------------------------------------------------------------------------------
 (2) _imprime_tela_ajuste4                                 5     1      4    6029
                                             28 BANK0      5     1      4
                           _LCD_Goto
                          _LCD_Print
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _imprime_tela_ajuste3                                 5     1      4    6029
                                             28 BANK0      5     1      4
                           _LCD_Goto
                          _LCD_Print
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _imprime_tela_ajuste2                                 1     1      0    5427
                                             28 BANK0      1     1      0
                           _LCD_Goto
                          _LCD_Print
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _imprime_tela_ajuste1                                 3     1      2    5638
                                             28 BANK0      3     1      2
                           _LCD_Goto
                          _LCD_Print
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             27    20      7    3574
                                              9 BANK0     19    12      7
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              2     2      0      68
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     316
                                              3 COMMON     4     0      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     311
                                              3 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     421
                                              3 COMMON     5     1      4
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _LCD_Print                                            4     4      0     640
                                              6 COMMON     2     2      0
                                              0 BANK0      2     2      0
                   _LCD_Write_Nibble
 ---------------------------------------------------------------------------------
 (2) _LCD_Goto                                             4     3      1    1213
                                              1 BANK0      4     3      1
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (1) ___fldiv                                             26    18      8    1273
                                             10 BANK0     26    18      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _LCD_Begin                                            2     2      0     248
                                              1 BANK0      2     2      0
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (3) _LCD_Cmd                                              3     3      0     248
                                              6 COMMON     2     2      0
                                              0 BANK0      1     1      0
                   _LCD_Write_Nibble
 ---------------------------------------------------------------------------------
 (3) _LCD_Write_Nibble                                     3     3      0     124
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _my_isr_routine                                       3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Begin
     _LCD_Cmd
       _LCD_Write_Nibble
   ___fladd
     ___fldiv (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___fldiv
   ___fltol
     ___fladd (ARG)
     ___fldiv (ARG)
     ___xxtofl (ARG)
   ___xxtofl
   _ajustes
     _LCD_Cmd
     _imprime_tela_ajuste1
       _LCD_Goto
         _LCD_Cmd
       _LCD_Print
         _LCD_Write_Nibble
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
         _isdigit
     _imprime_tela_ajuste2
       _LCD_Goto
       _LCD_Print
       _sprintf
     _imprime_tela_ajuste3
       _LCD_Goto
       _LCD_Print
       _sprintf
     _imprime_tela_ajuste4
       _LCD_Goto
       _LCD_Print
       _sprintf
   _atualiza_ADC
   _controle_aquecedor
   _imprime_tela_main
     _LCD_Goto
     _LCD_Print
     _sprintf
   _round
     ___fladd
     ___fldiv (ARG)
     ___flsub (ARG)
       ___fladd
       _trunc (ARG)
         ___fltol
         ___xxtofl
         _frexp
           ___fleq
     _trunc (ARG)

 _my_isr_routine (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       1       0        7.1%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      98       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4D      4F       5       98.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     26      3E       7       77.5%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      98      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Wed Aug 04 15:21:28 2021

                   ___fldiv@aexp 0043                     ___fldiv@bexp 0042                                pc 0002  
                   ___fldiv@sign 003B                               l63 14A0                               l72 14D8  
                             l57 1750                               l81 1511                               l84 0A2B  
                             _RS 03D0                               fsr 0004              ___wmul@multiplicand 0075  
                    ajustes@temp 0049                              l102 089A                              l111 1590  
                            l121 004F                              l105 17FF                              l114 15D3  
                            l131 010A                              l108 1444                              l204 0E27  
                            l117 1616                              l141 01DB                              l126 00C4  
                            l151 02B5                              l136 016A                              l161 0CA6  
                            l146 0267                              l155 032A                              l308 0E4A  
                            l326 0F24                              l343 0FFF                              l347 1455  
                            l540 0972                              l516 16CB                              l349 146F  
                            l533 0987                              l517 16E7                              l518 16FC  
                            l543 0987                              l720 0783                              l712 0701  
                            l800 07FD                              l640 038E                              l619 165C  
                            l811 07EB                              l644 0435                              l629 154D  
                            l661 0500                              l653 05B2                              l805 0BB2  
                            l718 0773                              l646 040C                              l671 0546  
                            l665 0524                              l682 05A6                              l674 0584  
                            l818 17A4                              l683 05B2                              l780 0A50  
                            l686 16AC                              l782 0AE7                              l696 060F  
                            l793 0AB1                              l698 078F                              l794 0ABD  
                            l786 0A95                              fsr0 0004                              indf 0000  
                __end_of_LCD_Cmd 14A1                     ___fltol@exp1 0062                             l2110 07FC  
                           l2102 07ED                             l3000 0605                             l2104 07EE  
                           l3002 0607                             l2106 07F4                             l3100 077F  
                           l3020 0650                             l3004 0617                             l3012 0630  
                           l2108 07FA                             l3030 066F                             l3022 0658  
                           l3014 0635                             l3006 0623                             l3040 06A1  
                           l3032 0681                             l3024 0660                             l3008 0627  
                           l2400 0371                             l3050 06C2                             l3042 06A2  
                           l3034 0685                             l3026 0668                             l3018 063E  
                           l2170 151D                             l2402 0376                             l2410 0386  
                           l3060 06DB                             l3052 06C4                             l3044 06B0  
                           l3036 0686                             l3028 066A                             l2180 153C  
                           l2172 1524                             l2500 04F2                             l2420 03A4  
                           l2412 0394                             l2404 037B                             l2340 0937  
                           l2332 090C                             l3300 16FB                             l3070 06FE  
                           l3054 06CD                             l3062 06E1                             l3038 068F  
                           l3046 06B4                             l3310 1624                             l2182 1543  
                           l2174 1528                             l2166 1512                             l2510 051F  
                           l2502 0508                             l2430 03B8                             l2422 03A8  
                           l2414 0398                             l2406 0383                             l2342 0938  
                           l2334 0919                             l3080 071D                             l3064 06E5  
                           l3056 06D1                             l3048 06BA                             l3320 164A  
                           l3312 162B                             l3304 1617                             l2176 152C  
                           l2168 151A                             l2184 1549                             l3400 0EEA  
                           l2520 0532                             l2512 0523                             l2504 050D  
                           l2440 03CC                             l2432 03BC                             l2424 03AC  
                           l2416 039C                             l2408 0384                             l2344 0940  
                           l3090 0766                             l3082 0736                             l3074 0706  
                           l3066 06E6                             l3058 06D2                             l3330 14A4  
                           l3322 164B                             l3314 162F                             l3306 161B  
                           l2178 1536                             l3410 0F08                             l2530 0543  
                           l2514 0528                             l2522 0534                             l2450 03F0  
                           l2442 03D0                             l2434 03C0                             l2426 03B0  
                           l2418 03A0                             l2370 0332                             l2362 0967  
                           l2354 094E                             l2346 0942                             l2338 0922  
                           l3260 1745                             l3252 16FE                             l3092 076A  
                           l3076 070B                             l3084 073C                             l3068 06EA  
                           l3332 14A5                             l3340 14C5                             l3324 1652  
                           l3316 1633                             l3308 1621                             l3420 0F3B  
                           l3412 0F12                             l2540 0562                             l2516 052B  
                           l2508 0516                             l2524 0538                             l2460 0420  
                           l2452 0410                             l2444 03D4                             l2436 03C4  
                           l2428 03B4                             l2380 0347                             l2372 0338  
                           l2364 0977                             l2348 0946                             l2356 0960  
                           l3500 0A9C                             l3262 1748                             l3254 1708  
                           l3270 1474                             l3094 0772                             l3086 0749  
                           l3078 0719                             l3334 14AD                             l3350 14DD  
                           l3318 1644                             l3326 1658                             l3430 0F54  
                           l3422 0F3F                             l3414 0F18                             l3406 0EEC  
                           l2710 0890                             l2550 059B                             l2542 0580  
                           l2534 054B                             l2526 0539                             l2518 052D  
                           l2462 0429                             l2454 0419                             l2438 03C8  
                           l2446 03D8                             l2390 035F                             l2382 034F  
                           l2374 033C                             l2366 097C                             l3510 0AD5  
                           l3502 0AA7                             l3264 1749                             l3256 1743  
                           l3272 148A                             l3600 09C5                             l3096 0779  
                           l3088 0757                             l3336 14B5                             l3352 14DF  
                           l3280 1449                             l3440 0F78                             l3432 0F5A  
                           l3424 0F43                             l3416 0F1E                             l3360 0E34  
                           l2712 0894                             l2560 05B1                             l2552 059C  
                           l2544 0589                             l2536 0550                             l2528 053D  
                           l2480 046F                             l2472 0447                             l2456 041B  
                           l2464 042D                             l2448 03D9                             l2392 0365  
                           l2384 0350                             l2376 033D                             l2368 032B  
                           l3512 0ADA                             l3504 0AAB                             l3520 1751  
                           l3266 174C                             l3258 1744                             l3274 1491  
                           l3610 0A09                             l3602 09D6                             l3098 077D  
                           l3338 14BD                             l3354 1500                             l3282 144D  
                           l3450 0F9C                             l3442 0F7F                             l3434 0F61  
                           l3426 0F49                             l3418 0F2F                             l3362 0E3A  
                           l2554 05A0                             l2546 058E                             l2538 055E  
                           l2482 0471                             l2474 045E                             l2466 0439  
                           l2490 0484                             l2458 041F                             l2394 0366  
                           l2378 0342                             l2386 0352                             l3514 0ADE  
                           l3506 0AB5                             l3530 179F                             l3522 176C  
                           l3276 1497                             l3268 1473                             l3612 0A0F  
                           l3604 09DC                             l3356 1506                             l3348 14DC  
                           l3284 145C                             l3460 0FE0                             l3444 0F83  
                           l3436 0F65                             l3452 0FA0                             l3428 0F50  
                           l3380 0E8B                             l3372 0E4F                             l3364 0E41  
                           l3540 143E                             l3700 020A                             l2708 088C  
                           l3620 17CF                             l2556 05A2                             l2548 0596  
                           l2492 049A                             l2484 0475                             l2476 0462  
                           l2468 043E                             l2396 036C                             l2388 035A  
                           l2660 1661                             l3516 0ADF                             l3508 0ABF  
                           l3292 16AD                             l3532 17A3                             l3614 0A20  
                           l3606 09ED                             l3286 1463                             l3278 1445  
                           l3454 0FA5                             l3446 0F8F                             l3438 0F72  
                           l3390 0ED1                             l3382 0E9E                             l3374 0E62  
                           l3366 0E46                             l3462 0FE9                             l3358 0E2F  
                           l3550 1576                             l3542 154E                             l3710 0242  
                           l3702 0212                             l3630 003F                             l3622 17D5  
                           l2558 05AD                             l2494 04D8                             l2486 0476  
                           l2478 0466                             l2398 0370                             l3294 16C3  
                           l3526 1775                             l3608 09F8                             l3288 1469  
                           l3456 0FD5                             l3448 0F95                             l3392 0ED9  
                           l3464 0FFB                             l3384 0EA2                             l3376 0E72  
                           l3368 0E4B                             l3536 1424                             l3544 1558  
                           l3560 15B9                             l3552 1591                             l3712 0258  
                           l3704 0228                             l3640 0095                             l3632 0053  
                           l3624 17E1                             l3616 17A5                             l2496 04DE  
                           l2488 047F                             l3480 0A38                             l3296 16DF  
                           l3528 1792                             l3800 0DC3                             l3458 0FDC  
                           l3394 0EDD                             l3378 0E76                             l3538 142E  
                           l3546 1564                             l3554 159B                             l3570 15FC  
                           l3562 15D4                             l3730 02D0                             l3714 026B  
                           l3706 0236                             l3650 00C8                             l3634 006A  
                           l3642 00A3                             l3626 002A                             l2930 0C7C  
                           l2850 0BE3                             l3618 17AF                             l2498 04E3  
                           l2658 165D                             l3490 0A66                             l3482 0A48  
                           l3298 16F9                             l3802 0E0B                             l3396 0EE1  
                           l3388 0EB2                             l3548 156A                             l3556 15A7  
                           l3564 15DE                             l3740 0316                             l3732 02E4  
                           l3716 0282                             l3724 029F                             l3708 023C  
                           l3652 00D0                             l3660 00F4                             l3644 00A9  
                           l3636 007E                             l3628 0030                             l2940 0C97  
                           l2916 0C61                             l2908 0C50                             l2844 0BB3  
                           l3492 0A73                             l3484 0A58                             l3476 0A2F  
                           l3580 07B2                             l3572 0790                             l3804 0E23  
                           l3590 0988                             l3398 0EE5                             l3558 15AD  
                           l3566 15EA                             l3742 0324                             l3734 02EC  
                           l3726 02A5                             l3718 0296                             l3670 0125  
                           l3662 00FA                             l3654 00DD                             l3646 00AF  
                           l3638 0086                             l2918 0C6D                             l2846 0BC3  
                           l3494 0A7A                             l3478 0A34                             l3582 07BB  
                           l3574 07A3                             l3750 0B7F                             l3592 0999  
                           l3568 15F0                             l3736 0302                             l3728 02B9  
                           l3680 015A                             l3672 012A                             l3664 010E  
                           l3656 00E1                             l3648 00B4                             l2864 0C05  
                           l2856 0BEA                             l2848 0BD3                             l3496 0A7E  
                           l3488 0A61                             l3584 07BC                             l3576 07A9  
                           l3760 0CB1                             l3594 09A3                             l2970 05C4  
                           l3738 0310                             l3690 01B7                             l3682 016E  
                           l3666 0116                             l3674 0138                             l3658 00E6  
                           l2938 0C8B                             l2858 0BF6                             l2874 0C0A  
                           l3498 0A8C                             l3586 07E3                             l3746 0AE8  
                           l3770 0CBC                             l3762 0CB2                             l3596 09A9  
                           l2980 05D8                             l2972 05C5                             l2964 05B3  
                           l3684 0185                             l3692 01C5                             l3676 013E  
                           l3668 0123                             l2876 0C16                             l3748 0B34  
                           l3780 0CCD                             l3772 0CC1                             l3764 0CB3  
                           l3598 09BA                             l2990 05F1                             l2974 05CA  
                           l2982 05DA                             l2966 05BA                             l3694 01CB  
                           l3686 0199                             l3678 0144                             l2886 0C35  
                           l2878 0C24                             l3790 0D74                             l3782 0CCF  
                           l3774 0CC7                             l3766 0CB4                             l3758 0CA7  
                           l2992 05F2                             l2984 05E2                             l2976 05CF  
                           l2968 05C0                             l3880 14CD                             l3696 01DF  
                           l3688 01A1                             l2888 0C41                             l3792 0D79  
                           l3784 0CD4                             l3776 0CC9                             l3768 0CB8  
              ?_LCD_Write_Nibble 0070                             l2994 05F7                             l2986 05E7  
                           l2978 05D7                             l3698 01F6                             l3794 0D7F  
                           l3786 0D36                             l3778 0CCB                             l2996 05FC  
                           l2988 05ED                             l3876 0E5D                             l3796 0DA5  
                           l3788 0D4D                             l2998 0604                             l3878 0EC6  
                           l3798 0DAB                             STR_1 0810                             STR_2 086A  
                           STR_3 083B                             STR_4 084F                             STR_5 0827  
                           STR_6 085E                             STR_7 0827                             STR_8 0876  
                           STR_9 0827                             u3000 0589                             u3001 0588  
                           u3010 058E                             u3011 058D                             u3020 059B  
                           u3021 059A                             u2230 151A                             u2070 07F4  
                           u3030 05A0                             u2231 1519                             u2071 07F3  
                           u3031 059F                             u2080 07FA                             u3040 05B1  
                           u2081 07F9                             u3041 05B0                             u2250 152C  
                           u2251 152B                             u4004 1708                             u2260 1536  
                           u3220 089A                             u2500 0930                             u4100 16C3  
                           u2261 1535                             u2245 151E                             u3221 0899  
                           u4101 16C2                             u2510 0946                             u4110 16DF  
                           u4015 1721                             u2511 0945                             u4111 16DE  
                           u4040 1491                             u2280 1549                             u2600 0342  
                           u2520 094D                             u4120 16F9                             u4025 1734  
                           u4041 1490                             u2281 1548                             u2265 1532  
                           u2601 0341                             u2521 094C                             u2505 092B  
                           u4121 16F8                             u4050 1497                             u4210 1511  
                           u4130 1621                             u2610 0347                             u4051 1496  
                           u4035 1477                             u4211 1510                             u4131 1620  
                           u2275 153D                             u2611 0346                             u4060 144D  
                           u4300 0F2F                             u4220 0E3A                             u3500 0C24  
                           u2700 03FC                             u2620 0365                             u2540 095F  
                           u4205 14E7                             u4061 144C                             u4301 0F2E  
                           u4221 0E39                             u3501 0C23                             u2621 0364  
                           u2541 095E                             u4125 16F5                             u4150 1633  
                           u4310 0F43                             u4230 0E72                             u3510 0C34  
                           u2710 0410                             u2630 0370                             u2550 0966  
                           u5007 09C0                             u4151 1632                             u4311 0F42  
                           u4231 0E71                             u3511 0C33                             u2711 040F  
                           u2631 036F                             u2551 0965                             u2535 094F  
                           u3600 05C4                             u4320 0F49                             u4240 0EB2  
                           u3520 0C41                             u3440 0BC3                             u2800 0475  
                           u2720 041F                             u2640 0376                             u4400 0A34  
                           u5017 09D1                             u3601 05C3                             u4145 1625  
                           u4321 0F48                             u4305 0F2B                             u4241 0EB1  
                           u3521 0C40                             u3505 0C20                             u3441 0BC2  
                           u2801 0474                             u2721 041E                             u2641 0375  
                           u4401 0A33                             u3610 05CA                             u4170 1644  
                           u4090 1469                             u4330 0F5A                             u4250 0EE1  
                           u3530 0C4F                             u3450 0BD3                             u2650 037B  
                           u2570 0977                             u2490 0919                             u4410 0A38  
                           u5027 09E2                             u3611 05C9                             u4171 1643  
                           u4091 1468                             u4075 1456                             u4331 0F59  
                           u4251 0EE0                             u3531 0C4E                             u3515 0C30  
                           u3451 0BD2                             u2651 037A                             u2571 0976  
                           u2491 0918                             u4411 0A37                             u3620 05CF  
                           u4340 0F71                             u4260 0F07                             u3540 0C60  
                           u3460 0BE3                             u2900 0528                             u2820 049A  
                           u2740 0435                             u2660 0394                             u2580 097C  
                           u4500 0AB5                             u4420 0A58                             u5037 09F3  
                           u3621 05CE                             u4165 1634                             u4085 145D  
                           u4341 0F70                             u4261 0F06                             u3541 0C5F  
                           u3525 0C3D                             u3461 0BE2                             u3445 0BBF  
                           u2901 0527                             u2821 0499                             u2741 0434  
                           u2661 0393                             u2581 097B                             u2565 0969  
                           u4501 0AB4                             u4421 0A57                             u3710 0685  
                           u3630 05F1                             u4190 1658                             u4350 0F78  
                           u4270 0F12                             u3550 0C6D                             u3470 0BF6  
                           u2910 0532                             u2750 0439                             u2670 0398  
                           u2590 033C                             u4510 0ACA                             u5047 0A04  
                           u3711 0684                             u3631 05F0                             u4191 1657  
                           u4175 1640                             u4351 0F77                             u4271 0F11  
                           u3551 0C6C                             u3535 0C4B                             u3471 0BF5  
                           u3455 0BCF                             u2911 0531                             u2831 04B1  
                           u2823 0496                             u2815 0478                             u2751 0438  
                           u2735 0422                             u2671 0397                             u2591 033B  
                           u3800 06EA                             u3640 05F7                             u4360 0F8F  
                           u4280 0F18                             u4600 00C8                             u3560 0C7B  
                           u3480 0C04                             u2920 0538                             u2840 04C5  
                           u2832 04B2                             u2760 043E                             u2680 03F0  
                           u4520 0ADA                             u4440 0A79                             u5057 0A15  
                           u3801 06E9                             u3705 067A                             u3641 05F6  
                           u4185 164C                             u4361 0F8E                             u4281 0F17  
                           u4265 0F03                             u4601 00C7                             u3561 0C7A  
                           u3545 0C5C                             u3481 0C03                             u3465 0BDF  
                           u2921 0537                             u2841 04C6                             u2833 04B7  
                           u2761 043D                             u2681 03EF                             u4521 0AD9  
                           u4441 0A78                             u3810 06FE                             u3730 06A1  
                           u3650 05FC                             u4370 0F95                             u4290 0F1E  
                           u4610 00DD                             u3570 0C8A                             u3490 0C16  
                           u2930 053D                             u2850 04E3                             u2842 04CB  
                           u2834 04B8                             u2690 03FB                             u4530 0ADE  
                           u5067 0A26                             u3811 06FD                             u3731 06A0  
                           u3651 05FB                             u4371 0F94                             u4291 0F1D  
                           u4611 00DC                             u3571 0C89                             u3555 0C69  
                           u3491 0C15                             u3475 0BF2                             u2931 053C  
                           u2851 04E2                             u2843 04CC                             u2835 04BD  
                           u2771 0450                             u2691 03F9                             u4531 0ADD  
                           u4515 0AC5                             u4435 0A6B                             u3820 0705  
                           u3740 06BA                             u3660 0617                             u4380 0FE9  
                           u4700 020A                             u4620 00FA                             u3580 0C97  
                           u2940 0543                             u2860 0508                             u2836 04BE  
                           u2780 0462                             u2772 0457                             u4460 0A9B  
                           u4540 176C                             u5077 149B                             u3821 0704  
                           u3741 06B9                             u3725 0688                             u3661 0616  
                           u4381 0FE8                             u4701 0209                             u4621 00F9  
                           u3581 0C96                             u3565 0C77                             u3485 0C00  
                           u2941 0542                             u2861 0507                             u2781 0461  
                           u2773 045E                             u2685 03EC                             u4461 0A9A  
                           u4541 176B                             u3830 070B                             u3750 06C2  
                           u3670 0635                             u4390 0FFB                             u4710 023C  
                           u4630 010E                             u3590 0CA5                             u2950 054A  
                           u2870 050D                             u2790 0466                             u4550 07A9  
                           u5087 174E                             u3831 070A                             u3751 06C1  
                           u3735 069D                             u3671 0634                             u4391 0FFA  
                           u4711 023B                             u4631 010D                             u4615 00D9  
                           u3591 0CA4                             u3575 0C86                             u3495 0C12  
                           u2951 0549                             u2871 050C                             u2791 0465  
                           u4455 0A8D                             u4551 07A8                             u3840 071D  
                           u3680 066F                             u4720 026B                             u4640 0123  
                           u2960 0550                             u4480 0AAB                             u4560 07BB  
                           u4800 0DAB                             u3841 071C                             u3681 066E  
                           u4721 026A                             u4705 0206                             u4641 0122  
                           u3585 0C93                             u2961 054F                             u4481 0AAA  
                           u4561 07BA                             u4801 0DAA                             u3850 072C  
                           u3770 06D1                             u4730 0296                             u4650 013E  
                           u4570 0053                             u2970 0562                             u2890 0523  
                           u4490 0AB1                             u4810 0DC3                             u3771 06D0  
                           u4731 0295                             u4651 013D                             u4571 0052  
                           u3595 0CA1                             u2971 0561                             u2891 0522  
                           u4491 0AB0                             u4475 0AA0                             u4811 0DC2  
                           u3860 0749                             u4740 02A5                             u4660 016E  
                           u4580 007E                             u2980 0571                             u4820 0E23  
                           u3861 0748                             u3765 06C6                             u4741 02A4  
                           u4661 016D                             u4645 011F                             u4581 007D  
                           u2885 0518                             u4821 0E22                             u3870 0766  
                           u3790 06E5                             u4750 02B9                             u4670 0199  
                           u4590 00A9                             u2990 0580                             u3871 0765  
                           u3855 0727                             u3791 06E4                             u3695 0671  
                           u4751 02B8                             u4735 0292                             u4671 0198  
                           u4591 00A8                             u2991 057F                             u4815 0DBF  
                           u3880 077D                             u4760 02E4                             u4680 01CB  
                           u3881 077C                             u3865 0745                             u3785 06D4  
                           u4761 02E3                             u4681 01CA                             u4585 007A  
                           u2985 056C                             u4825 0E1F                             u4770 0316  
                           u4690 01DF                             u3875 0762                             u4771 0315  
                           u4691 01DE                             u4675 0195                             u4907 0162  
                           u4765 02E0                             u4917 01BF                             u4837 0892  
                           u3990 1705                             u4790 0D7F                             u3991 1701  
                           u4927 01D3                             u4847 0047                             u4791 0D7E  
                           u4937 0230                             u4857 009D                             u4947 0260  
                           u4867 00BC                             u4957 02AD                             u4877 00EE  
                           u4967 030A                             u4887 0102                             u4977 031E  
                           u4897 0132                             u4987 099F                             u4997 09AF  
                           _TMR0 0001                      main@min_max 00C2                      main@min_min 00BE  
             ??_LCD_Write_Nibble 0073                             _main 0CA7               __size_of_LCD_Begin 00A4  
                           btemp 007E               __size_of_LCD_Print 0039                             start 0010  
                ___fldiv@new_exp 003C                    ?_atualiza_ADC 0070                      LCD_Goto@col 0024  
                    LCD_Goto@row 0021                 __end_of_LCD_Goto 14D9         imprime_tela_ajuste1@temp 003C  
                  ___fltol@sign1 0061                  __end_of___fladd 05B3                            ?_main 0070  
                __end_of___fldiv 0790                  __end_of___flsub 16AD                  __end_of___fltol 0988  
                __end_of___lwdiv 165D                  __end_of___lwmod 154E                            i1l194 0900  
                          i1l197 0901                            _TRISA 0085                            _TRISB 0086  
                          _TRISC 0087                            _TRISD 0088                            _TRISE 0089  
                   main@hora_max 00C0                     main@hora_min 00BC                            _Horas 006D  
                __end_of_ajustes 032B       controle_aquecedor@hora_max 0026       controle_aquecedor@hora_min 0022  
                __end_of_dpowers 0810                            _frexp 1751                            _errno 00C6  
                __end_of_isdigit 07FE                   ajustes@min_max 0044                   ajustes@min_min 0042  
                          _round 0AE8                            _trunc 0790                   __pbitbssCOMMON 03D0  
                          pclath 000A                            status 0003                            wtemp0 007E  
                __end_of_sprintf 1000                   ??_atualiza_ADC 0073                  __initialization 0013  
                   __end_of_main 0E2C       __end_of_controle_aquecedor 0CA7                           ??_main 00B0  
              __end_of_LCD_Begin 0A2C             _imprime_tela_ajuste1 1424             _imprime_tela_ajuste2 154E  
           _imprime_tela_ajuste3 1591             _imprime_tela_ajuste4 15D4                        ??_LCD_Cmd 0076  
              __end_of_LCD_Print 1512                           _ADCON0 001F                           _ADCON1 009F  
                         ?_frexp 0028                           _ADRESH 001E                           _ADRESL 009E  
                         ?_round 00A8                           ?_trunc 0063                           i1l3110 089B  
                         i1l3120 08C0                           i1l3112 089F                           i1l3130 08E6  
                         i1l3122 08CD                           i1l3114 08A9                           i1l3132 08EE  
                         i1l3124 08D1                           i1l3116 08B6                           i1l3134 08FB  
                         i1l3126 08D7                           i1l3118 08BA                           i1l3128 08E4  
                         i1l3136 0900                           _INTCON 000B                           u390_20 089F  
                         u390_21 089E                           u391_20 08B6                           u391_21 08B5  
                         u391_25 08B2                           u392_20 08CD                           u392_21 08CC  
                         u392_25 08C9                           u393_20 08E4                           u393_21 08E3  
                         u393_25 08E0                           u394_20 08FB                           u394_21 08FA  
                         u394_25 08F7                           _TRISD0 0440                           _TRISD1 0441  
                         _TRISD2 0442                           _TRISD3 0443                           _TRISD4 0444  
                         _TRISD5 0445                 __end_of___xxtofl 0AE8                           ___fleq 16AD  
                      ??___fladd 004C                           ___wmul 1445                        ??___fldiv 0032  
                      ??___flsub 0078                        ??___fltol 005C                        ??___lwdiv 0077  
                      ??___lwmod 0027                  ajustes@hora_max 0043                  ajustes@hora_min 0041  
          ?_imprime_tela_ajuste1 003C            ?_imprime_tela_ajuste2 0070            ?_imprime_tela_ajuste3 003C  
          ?_imprime_tela_ajuste4 003C                        ??_ajustes 0045                        ??_isdigit 0073  
                         saved_w 007E                           round@f 00AC                           round@x 00A8  
                      ??_sprintf 0030                           trunc@i 0067                           trunc@x 0063  
                   ___xxtofl@arg 0026                     ___xxtofl@exp 0025                     ___xxtofl@val 0073  
                     ___fleq@ff1 0020                       ___fleq@ff2 0024          __end_of__initialization 0023  
                      ?_LCD_Goto 0021                       ___fltol@f1 0058                   __pcstackCOMMON 0070  
                  __end_of_frexp 17A5                   LCD_Cmd@Command 0020                    __end_of_round 0BB3  
                  __end_of_trunc 07EC             __end_of_atualiza_ADC 089B                          ??_frexp 002D  
                   sprintf@width 0038                          ??_round 0078                          ??_trunc 0077  
                     __pbssBANK0 006D                       __pbssBANK1 00C6                       ??_LCD_Goto 0022  
                     __pmaintext 0CA7                          ?___fleq 0020                          ?___wmul 0073  
      __size_of_LCD_Write_Nibble 0054                       __pintentry 0004           ??_imprime_tela_ajuste1 003E  
         ??_imprime_tela_ajuste2 003C           ??_imprime_tela_ajuste3 0040           ??_imprime_tela_ajuste4 0040  
                        _LCD_Cmd 1470                        ?___xxtofl 0073          __size_of_my_isr_routine 0071  
                     __stringtab 0800                          _Minutos 0078                  __size_of___fleq 0050  
                        ___fladd 032B                          ___fldiv 05B3                          ___flsub 165D  
                        ___fltol 090C                  __size_of___wmul 002B                          ___lwdiv 1617  
                        ___lwmod 1512                      _Temperatura 00C8                          __ptext1 0AE8  
                        __ptext2 0790                          __ptext3 1751                          __ptext4 16AD  
                        __ptext5 0A2C                          __ptext6 090C                          __ptext7 165D  
                        __ptext8 032B                          __ptext9 17A5                          _ajustes 0027  
                        _dpowers 0806                          _isdigit 07EC                       ??___xxtofl 0020  
                      _LCD_Begin 0988                        _LCD_Print 14D9                          _sprintf 0E2C  
                        clrloop0 0885             end_of_initialization 0023               _controle_aquecedor 0BB3  
            ?_controle_aquecedor 0020                LCD_Write_Nibble@n 0075            __size_of_atualiza_ADC 000F  
                      _PORTBbits 0006                        _PORTCbits 0007                        _PORTDbits 0008  
           ??_controle_aquecedor 0073                      ___fladd@grs 0057                    ___xxtofl@sign 0024  
                     ?_LCD_Begin 0070                      ___fldiv@grs 003E                      ___fldiv@rem 0037  
                     ?_LCD_Print 0070           controle_aquecedor@temp 0020                __size_of_LCD_Goto 0038  
                   _atualiza_ADC 088C                 _LCD_Write_Nibble 16FD                       LCD_Print@i 0020  
                 __end_of___fleq 16FD                   __end_of___wmul 1470              start_initialization 0013  
                 _my_isr_routine 089B                       frexp@value 0028                         ??___fleq 0073  
                       ??___wmul 0077                        ___fladd@a 0048                        ___fladd@b 0044  
                       ?_LCD_Cmd 0070                        ___fldiv@a 002A                        ___fldiv@b 002E  
                    __pbssCOMMON 0078                        ___flsub@a 00A0                        ___flsub@b 00A4  
                      ___latbits 0002                    __pcstackBANK0 0020                    __pcstackBANK1 00A0  
         __end_of_my_isr_routine 090C                      ??_LCD_Begin 0021                __size_of___xxtofl 00BC  
                    ??_LCD_Print 0076                _imprime_tela_main 17A5                      sprintf@flag 0037  
             ?_imprime_tela_main 0070                      sprintf@prec 0034                        _main$1008 00B4  
                      _main$1009 00B8                 ___lwdiv@dividend 0075              ??_imprime_tela_main 003C  
                       ?___fladd 0044                         ?___fldiv 002A                         ?___flsub 00A0  
                       ?___fltol 0058                         ?___lwdiv 0073                         ?___lwmod 0023  
               LCD_Print@LCD_Str 0021                        __pstrings 0800                         ?_ajustes 0041  
  __size_of_imprime_tela_ajuste1 0021    __size_of_imprime_tela_ajuste2 0043    __size_of_imprime_tela_ajuste3 0043  
  __size_of_imprime_tela_ajuste4 0043                         ?_isdigit 0070  imprime_tela_ajuste3@minutos_min 003E  
                ?_my_isr_routine 0070        __end_of_imprime_tela_main 1800                 ___lwdiv@quotient 0021  
                       ?_sprintf 0029                   __size_of_frexp 0054                   __size_of_round 00CB  
                 __size_of_trunc 005C                interrupt_function 0004                         _LCD_Goto 14A1  
                 ___wmul@product 0020                        clear_ram0 0884                         _TMR0_aux 00CC  
                    _LCD_Cstring 00CE                       _ADCON0bits 001F                      __stringbase 0805  
              ___wmul@multiplier 0073        controle_aquecedor@min_max 0028        controle_aquecedor@min_min 0024  
               __size_of_LCD_Cmd 0031  imprime_tela_ajuste4@minutos_max 003E         __end_of_LCD_Write_Nibble 1751  
                      frexp@eptr 002C                         _Segundos 00CA                 __size_of___fladd 0288  
               __size_of___fldiv 01DD                 __size_of___flsub 0050                 __size_of___fltol 007C  
               __size_of___lwdiv 0046                 __size_of___lwmod 003C               __end_of__stringtab 0806  
                    _isdigit$768 0073                 __size_of_ajustes 0304                       sprintf@val 0035  
                       ___xxtofl 0A2C      __size_of_controle_aquecedor 00F4                 __size_of_isdigit 0012  
                ___lwdiv@divisor 0073                  ___lwdiv@counter 0020       __size_of_imprime_tela_main 005B  
                       __ptext10 0BB3                         __ptext11 088C                         __ptext20 1512  
                       __ptext12 0027                         __ptext21 1617                         __ptext13 15D4  
                       __ptext22 14D9                         __ptext14 1591                         __ptext23 14A1  
                       __ptext15 154E                         __ptext24 05B3                         __ptext16 1424  
                       __ptext25 0988                         __ptext17 0E2C                         __ptext26 1470  
                       __ptext18 07EC                         __ptext27 16FD                         __ptext19 1445  
                       __ptext28 089B                 __size_of_sprintf 01D4                       trunc@expon 006B  
                  __size_of_main 0185                         main@temp 00C4                       _INTCONbits 000B  
                       isdigit@c 0074                         intlevel1 0000                        sprintf@ap 0033  
                      sprintf@sp 003B                 ___lwmod@dividend 0025                        stringcode 0800  
               ??_my_isr_routine 0070                       _OPTION_REG 0081                         sprintf@c 003A  
                       sprintf@f 0029                  ___lwmod@divisor 0023                  ___lwmod@counter 0028  
                       stringdir 0800    imprime_tela_ajuste3@horas_min 003C                         stringtab 0800  
                  ___fladd@signs 0054    imprime_tela_ajuste4@horas_max 003C     __end_of_imprime_tela_ajuste1 1445  
   __end_of_imprime_tela_ajuste2 1591     __end_of_imprime_tela_ajuste3 15D4     __end_of_imprime_tela_ajuste4 1617  
                   ___fladd@aexp 0055                     ___fladd@bexp 0056  
